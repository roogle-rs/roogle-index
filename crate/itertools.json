{"root":"0:0:1588","crate_version":"0.10.4","includes_private":false,"index":{"0:2605:2239":{"id":"0:2605:2239","crate_id":0,"name":"while_some","span":{"filename":"src/lib.rs","begin":[1406,4],"end":[1410,5]},"visibility":"default","docs":"Return an iterator adaptor that filters `Option<A>` iterator elements\nand produces `A`. Stops on the first `None` encountered.\n\nIterator element type is `A`, the unwrapped element.\n\n```\nuse itertools::Itertools;\n\n// List all hexadecimal digits\nitertools::assert_equal(\n    (0..).map(|i| std::char::from_digit(i, 16)).while_some(),\n    \"0123456789abcdef\".chars());\n\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"WhileSome","id":"0:3036:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:2968:1631":{"id":"b:5:848-0:2968:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InterleaveShortest","id":"0:2968:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3626:384":{"id":"2:3626:384","crate_id":2,"name":"call_mut","span":null,"visibility":"default","docs":"Performs the call operation.","links":{},"attrs":["#[unstable(feature = \"fn_traits\", issue = \"29625\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["args",{"kind":"generic","inner":"Args"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"FnOnce","id":"2:3627:133","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":{"Other":"\"rust-call\""}},"has_body":false}},"0:56":{"id":"0:56","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[89,8],"end":[89,13]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::Dedup","name":"Dedup","id":"0:412:1626","glob":false}},"0:2006:932":{"id":"0:2006:932","crate_id":0,"name":"next","span":{"filename":"src/process_results_impl.rs","begin":[19,4],"end":[28,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:4058:1697":{"id":"b:5:848-0:4058:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4104-0:1158:1732":{"id":"b:2:4104-0:1158:1732","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Diff","id":"0:1158:1732","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3766:1659":{"id":"0:3766:1659","crate_id":0,"name":"FormatWith","span":{"filename":"src/format.rs","begin":[11,0],"end":[15,1]},"visibility":"public","docs":"Format all iterator elements lazily, separated by `sep`.\n\nThe format value can only be formatted once, after that the iterator is\nexhausted.\n\nSee [`.format_with()`](crate::Itertools::format_with) for more information.","links":{"crate::Itertools::format_with":"0:2656:2527"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:3766:1659","a:2:9532:4793-0:3766:1659","a:2:3382:225-0:3766:1659","a:2:3370:216-0:3766:1659","a:2:3411:4706-0:3766:1659","b:2:4104-0:3766:1659","b:2:2865-0:3766:1659","b:2:3203-0:3766:1659","b:2:3207-0:3766:1659","b:2:3218-0:3766:1659","b:2:2868-0:3766:1659","b:2:3213-0:3766:1659","b:5:848-0:3766:1659","b:5:6507-0:3766:1659","0:3772","0:1259"]}},"b:2:2865-0:3777:1658":{"id":"b:2:2865-0:3777:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5570:6525":{"id":"1:5570:6525","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5571:23391"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10409:6539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3482:4738":{"id":"2:3482:4738","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3484:566"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9097:2669":{"id":"2:9097:2669","crate_id":2,"name":"sum","span":null,"visibility":"default","docs":"Sums the elements of an iterator.\n\nTakes each element, adds them together, and returns the result.\n\nAn empty iterator returns the zero value of the type.\n\n# Panics\n\nWhen calling `sum()` and a primitive integer type is being returned, this\nmethod will panic if the computation overflows and debug assertions are\nenabled.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\nlet sum: i32 = a.iter().sum();\n\nassert_eq!(sum, 6);\n```","links":{},"attrs":["#[stable(feature = \"iter_arith\", since = \"1.11.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"S"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sum","id":"2:8631:2668","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4702":{"id":"0:4702","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[128,0],"end":[128,20]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"}]}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8631:2668":{"id":"2:8631:2668","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8633:2669"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:181":{"id":"0:181","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[127,46],"end":[127,61]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::intersperse::IntersperseWith","name":"IntersperseWith","id":"0:3861:1674","glob":false}},"b:2:3207-0:4670:1724":{"id":"b:2:3207-0:4670:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3370:216-0:3407:1748":{"id":"a:2:3370:216-0:3407:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3213-0:4065:1699":{"id":"b:2:3213-0:4065:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:739:3302":{"id":"0:739:3302","crate_id":0,"name":"Combination","span":{"filename":"src/adaptors/mod.rs","begin":[702,4],"end":[702,54]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"1:5579:8505":{"id":"1:5579:8505","crate_id":1,"name":"mode","span":null,"visibility":"default","docs":"Sets the mode to create new directories with. This option defaults to\n0o777.\n\n# Examples\n\n```no_run\nuse std::fs::DirBuilder;\nuse std::os::unix::fs::DirBuilderExt;\n\nlet mut builder = DirBuilder::new();\nbuilder.mode(0o755);\n```","links":{},"attrs":["#[stable(feature = \"dir_builder\", since = \"1.6.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mode",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3026:667":{"id":"0:3026:667","crate_id":0,"name":"fmt","span":{"filename":"src/adaptors/mod.rs","begin":[415,16],"end":[415,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8676-0:4129:1710":{"id":"b:2:8676-0:4129:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tuples","id":"0:4129:1710","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:3618:3915":{"id":"2:3618:3915","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3619:585"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3844:667":{"id":"0:3844:667","crate_id":0,"name":"fmt","span":{"filename":"src/grouping_map.rs","begin":[49,16],"end":[49,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3861:1674":{"id":"0:3861:1674","crate_id":0,"name":"IntersperseWith","span":{"filename":"src/intersperse.rs","begin":[50,0],"end":[56,1]},"visibility":"public","docs":"An iterator adaptor to insert a particular value created by a function\nbetween each element of the adapted iterator.\n\nIterator element type is `I::Item`\n\nThis iterator is *fused*.\n\nSee [`.intersperse_with()`](crate::Itertools::intersperse_with) for more information.","links":{"crate::Itertools::intersperse_with":"0:2526:1864"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"ElemF","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:3861:1674","a:2:9532:4793-0:3861:1674","a:2:3382:225-0:3861:1674","a:2:3370:216-0:3861:1674","a:2:3411:4706-0:3861:1674","b:0:2854-0:3861:1674","b:2:8676-0:3861:1674","b:2:4104-0:3861:1674","b:2:2865-0:3861:1674","b:2:3203-0:3861:1674","b:2:3207-0:3861:1674","b:2:3218-0:3861:1674","b:2:2868-0:3861:1674","b:2:3213-0:3861:1674","b:5:848-0:3861:1674","0:3867","0:3871","0:1580","0:1590"]}},"b:2:2865-0:1054:1651":{"id":"b:2:2865-0:1054:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Combinations","id":"0:1054:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:848-0:4617:1742":{"id":"b:5:848-0:4617:1742","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4344:1713":{"id":"0:4344:1713","crate_id":0,"name":"DuplicatesBy","span":{"filename":"src/duplicates_impl.rs","begin":[10,4],"end":[13,5]},"visibility":"public","docs":null,"links":{},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Key","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"2:8930:5141":{"id":"2:8930:5141","crate_id":2,"name":"inspect","span":null,"visibility":"default","docs":"Does something with each element of an iterator, passing the value on.\n\nWhen using iterators, you'll often chain several of them together.\nWhile working on such code, you might want to check out what's\nhappening at various parts in the pipeline. To do that, insert\na call to `inspect()`.\n\nIt's more common for `inspect()` to be used as a debugging tool than to\nexist in your final code, but applications may find it useful in certain\nsituations when errors need to be logged before being discarded.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 4, 2, 3];\n\n// this iterator sequence is complex.\nlet sum = a.iter()\n    .cloned()\n    .filter(|x| x % 2 == 0)\n    .fold(0, |sum, i| sum + i);\n\nprintln!(\"{sum}\");\n\n// let's add some inspect() calls to investigate what's happening\nlet sum = a.iter()\n    .cloned()\n    .inspect(|x| println!(\"about to filter: {x}\"))\n    .filter(|x| x % 2 == 0)\n    .inspect(|x| println!(\"made it through filter: {x}\"))\n    .fold(0, |sum, i| sum + i);\n\nprintln!(\"{sum}\");\n```\n\nThis will print:\n\n```text\n6\nabout to filter: 1\nabout to filter: 4\nmade it through filter: 4\nabout to filter: 2\nmade it through filter: 2\nabout to filter: 3\n6\n```\n\nLogging errors before discarding them:\n\n```\nlet lines = [\"1\", \"2\", \"a\"];\n\nlet sum: i32 = lines\n    .iter()\n    .map(|line| line.parse::<i32>())\n    .inspect(|num| {\n        if let Err(ref e) = *num {\n            println!(\"Parsing error: {e}\");\n        }\n    })\n    .filter_map(Result::ok)\n    .sum();\n\nprintln!(\"Sum: {sum}\");\n```\n\nThis will print:\n\n```text\nParsing error: invalid digit found in string\nSum: 3\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Inspect","id":"2:46996:4665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2687:2650":{"id":"0:2687:2650","crate_id":0,"name":"fold_while","span":{"filename":"src/lib.rs","begin":[2400,4],"end":[2420,5]},"visibility":"default","docs":"An iterator method that applies a function, producing a single, final value.\n\n`fold_while()` is basically equivalent to [`Iterator::fold`] but with additional support for\nearly exit via short-circuiting.\n\n```\nuse itertools::Itertools;\nuse itertools::FoldWhile::{Continue, Done};\n\nlet numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nlet mut result = 0;\n\n// for loop:\nfor i in &numbers {\n    if *i > 5 {\n        break;\n    }\n    result = result + i;\n}\n\n// fold:\nlet result2 = numbers.iter().fold(0, |acc, x| {\n    if *x > 5 { acc } else { acc + x }\n});\n\n// fold_while:\nlet result3 = numbers.iter().fold_while(0, |acc, x| {\n    if *x > 5 { Done(acc) } else { Continue(acc + x) }\n}).into_inner();\n\n// they're the same\nassert_eq!(result, result2);\nassert_eq!(result2, result3);\n```\n\nThe big difference between the computations of `result2` and `result3` is that while\n`fold()` called the provided closure for every item of the callee iterator,\n`fold_while()` actually stopped iterating as soon as it encountered `Fold::Done(_)`.","links":{"`Iterator::fold`":"2:8980:2582"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["init",{"kind":"generic","inner":"B"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"B"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1019:2321":{"id":"0:1019:2321","crate_id":0,"name":"min","span":{"filename":"src/free.rs","begin":[244,0],"end":[249,1]},"visibility":"public","docs":"Return the minimum value of the iterable.\n\n[`IntoIterator`] enabled version of [`Iterator::min`].\n\n```\nuse itertools::min;\n\nassert_eq!(min(0..10), Some(0));\n```","links":{"`IntoIterator`":"2:8672:152","`Iterator::min`":"2:9043:2321"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3757:1657":{"id":"0:3757:1657","crate_id":0,"name":"ExactlyOneError","span":{"filename":"src/exactly_one_err.rs","begin":[20,0],"end":[26,1]},"visibility":"public","docs":"Iterator returned for the error case of `IterTools::exactly_one()`\nThis iterator yields exactly the same elements as the input iterator.\n\nDuring the execution of `exactly_one` the iterator must be mutated.  This wrapper\neffectively \"restores\" the state of the input iterator when it's handed back.\n\nThis is very similar to `PutBackN` except this iterator only supports 0-2 elements and does not\nuse a `Vec`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:3757:1657","a:2:9532:4793-0:3757:1657","a:2:3382:225-0:3757:1657","a:2:3370:216-0:3757:1657","a:2:3411:4706-0:3757:1657","b:0:2854-0:3757:1657","b:2:8676-0:3757:1657","b:2:4104-0:3757:1657","b:2:2865-0:3757:1657","b:2:3203-0:3757:1657","b:2:3207-0:3757:1657","b:2:3218-0:3757:1657","b:2:2868-0:3757:1657","b:2:3285-0:3757:1657","b:2:3213-0:3757:1657","b:5:848-0:3757:1657","b:5:6507-0:3757:1657","0:3762","0:1136","0:1141","0:1143","0:1146","0:1149"]}},"a:2:9533:4792-0:3836:1663":{"id":"a:2:9533:4792-0:3836:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupingMap","id":"0:3836:1663","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6193:15395":{"id":"5:6193:15395","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13832:15398"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8479:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:4792-0:4119:1707":{"id":"a:2:9533:4792-0:4119:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Buffer","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TupleCollect","id":"0:2245:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleBuffer","id":"0:4119:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3213-0:4112:1705":{"id":"b:2:3213-0:4112:1705","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tee","id":"0:4112:1705","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4652:415":{"id":"0:4652:415","crate_id":0,"name":"clone","span":{"filename":"src/zip_eq_impl.rs","begin":[6,9],"end":[6,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8928:1767":{"id":"2:8928:1767","crate_id":2,"name":"flatten","span":null,"visibility":"default","docs":"Creates an iterator that flattens nested structure.\n\nThis is useful when you have an iterator of iterators or an iterator of\nthings that can be turned into iterators and you want to remove one\nlevel of indirection.\n\n# Examples\n\nBasic usage:\n\n```\nlet data = vec![vec![1, 2, 3, 4], vec![5, 6]];\nlet flattened = data.into_iter().flatten().collect::<Vec<u8>>();\nassert_eq!(flattened, &[1, 2, 3, 4, 5, 6]);\n```\n\nMapping and then flattening:\n\n```\nlet words = [\"alpha\", \"beta\", \"gamma\"];\n\n// chars() returns an iterator\nlet merged: String = words.iter()\n                          .map(|s| s.chars())\n                          .flatten()\n                          .collect();\nassert_eq!(merged, \"alphabetagamma\");\n```\n\nYou can also rewrite this in terms of [`flat_map()`], which is preferable\nin this case since it conveys intent more clearly:\n\n```\nlet words = [\"alpha\", \"beta\", \"gamma\"];\n\n// chars() returns an iterator\nlet merged: String = words.iter()\n                          .flat_map(|s| s.chars())\n                          .collect();\nassert_eq!(merged, \"alphabetagamma\");\n```\n\nFlattening only removes one level of nesting at a time:\n\n```\nlet d3 = [[[1, 2], [3, 4]], [[5, 6], [7, 8]]];\n\nlet d2 = d3.iter().flatten().collect::<Vec<_>>();\nassert_eq!(d2, [&[1, 2], &[3, 4], &[5, 6], &[7, 8]]);\n\nlet d1 = d3.iter().flatten().flatten().collect::<Vec<_>>();\nassert_eq!(d1, [&1, &2, &3, &4, &5, &6, &7, &8]);\n```\n\nHere we see that `flatten()` does not perform a \"deep\" flatten.\nInstead, only one level of nesting is removed. That is, if you\n`flatten()` a three-dimensional array, the result will be\ntwo-dimensional and not one-dimensional. To get a one-dimensional\nstructure, you have to `flatten()` again.\n\n[`flat_map()`]: Iterator::flat_map","links":{"Iterator::flat_map":"2:8925:5140"},"attrs":["#[stable(feature = \"iterator_flatten\", since = \"1.29.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Flatten","id":"2:6716:4656","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1993:1849":{"id":"0:1993:1849","crate_id":0,"name":"Item","span":{"filename":"src/powerset.rs","begin":[50,4],"end":[50,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7898:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8224:4593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:2656:2527":{"id":"0:2656:2527","crate_id":0,"name":"format_with","span":{"filename":"src/lib.rs","begin":[2131,4],"end":[2136,5]},"visibility":"default","docs":"Format all iterator elements, separated by `sep`.\n\nThis is a customizable version of [`.format()`](Itertools::format).\n\nThe supplied closure `format` is called once per iterator element,\nwith two arguments: the element and a callback that takes a\n`&Display` value, i.e. any reference to type that implements `Display`.\n\nUsing `&format_args!(...)` is the most versatile way to apply custom\nelement formatting. The callback can be called multiple times if needed.\n\n**Panics** if the formatter helper is formatted more than once.\n\n```\nuse itertools::Itertools;\n\nlet data = [1.1, 2.71828, -3.];\nlet data_formatter = data.iter().format_with(\", \", |elt, f| f(&format_args!(\"{:.2}\", elt)));\nassert_eq!(format!(\"{}\", data_formatter),\n           \"1.10, 2.72, -3.00\");\n\n// .format_with() is recursively composable\nlet matrix = [[1., 2., 3.],\n              [4., 5., 6.]];\nlet matrix_formatter = matrix.iter().format_with(\"\\n\", |row, f| {\n                                f(&row.iter().format_with(\", \", |elt, g| g(&elt)))\n                             });\nassert_eq!(format!(\"{}\", matrix_formatter),\n           \"1, 2, 3\\n4, 5, 6\");\n\n\n```","links":{"Itertools::format":"0:2655:678"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["sep",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["format",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"FormatWith","id":"0:3766:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"fmt::Display","id":"2:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}}],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[]}],"lifetime":null}}}}],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:915:3001":{"id":"0:915:3001","crate_id":0,"name":"or_default","span":{"filename":"src/either_or_both.rs","begin":[197,4],"end":[207,5]},"visibility":"public","docs":"Returns a tuple consisting of the `l` and `r` in `Both(l, r)`, if present.\nOtherwise, returns the wrapped value for the present element, and the [`default`](Default::default)\nfor the other.","links":{"Default::default":"2:3255:59"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3203-0:2968:1631":{"id":"b:2:3203-0:2968:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InterleaveShortest","id":"0:2968:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5523:9944":{"id":"1:5523:9944","crate_id":1,"name":"dev","span":null,"visibility":"default","docs":"Returns the ID of the device containing the file.\n\n# Examples\n\n```no_run\nuse std::io;\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let dev_id = meta.dev();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2513:1746":{"id":"0:2513:1746","crate_id":0,"name":"multizip","span":{"filename":"src/ziptuple.rs","begin":[40,0],"end":[45,1]},"visibility":"public","docs":"An iterator that generalizes *.zip()* and allows running multiple iterators in lockstep.\n\nThe iterator `Zip<(I, J, ..., M)>` is formed from a tuple of iterators (or values that\nimplement [`IntoIterator`]) and yields elements\nuntil any of the subiterators yields `None`.\n\nThe iterator element type is a tuple like like `(A, B, ..., E)` where `A` to `E` are the\nelement types of the subiterator.\n\n**Note:** The result of this macro is a value of a named type (`Zip<(I, J,\n..)>` of each component iterator `I, J, ...`) if each component iterator is\nnameable.\n\nPrefer [`izip!()`] over `multizip` for the performance benefits of using the\nstandard library `.zip()`. Prefer `multizip` if a nameable type is needed.\n\n```\nuse itertools::multizip;\n\n// iterate over three sequences side-by-side\nlet mut results = [0, 0, 0, 0];\nlet inputs = [3, 7, 9, 6];\n\nfor (r, index, input) in multizip((&mut results, 0..10, &inputs)) {\n    *r = index * 10 + input;\n}\n\nassert_eq!(results, [0 + 3, 10 + 7, 29, 36]);\n```\n[`izip!()`]: crate::izip","links":{"`IntoIterator`":"2:8672:152","crate::izip":"0:2518:1793"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:3218-0:4048:1695":{"id":"b:2:3218-0:4048:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5566:6519":{"id":"1:5566:6519","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5567:23368"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2620:2355":{"id":"0:2620:2355","crate_id":0,"name":"next_tuple","span":{"filename":"src/lib.rs","begin":[1699,4],"end":[1704,5]},"visibility":"default","docs":"Advances the iterator and returns the next items grouped in a tuple of\na specific size (up to 12).\n\nIf there are enough elements to be grouped in a tuple, then the tuple is\nreturned inside `Some`, otherwise `None` is returned.\n\n```\nuse itertools::Itertools;\n\nlet mut iter = 1..5;\n\nassert_eq!(Some((1, 2)), iter.next_tuple());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"traits::HomogeneousTuple","id":"0:2196:1727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4069":{"id":"0:4069","crate_id":0,"name":null,"span":{"filename":"src/repeatn.rs","begin":[7,9],"end":[7,14]},"visibility":{"restricted":{"parent":"0:2074:1698","path":"::repeatn"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"items":["0:4071:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:646":{"id":"0:646","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[395,0],"end":[404,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"I"}}}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Batching","id":"0:3007:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:650:1849","0:651:932"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5069:1849":{"id":"0:5069:1849","crate_id":0,"name":"Item","span":{"filename":"src/ziptuple.rs","begin":[138,0],"end":[138,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"C"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"D"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"E"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"G"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"H"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"K"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"L"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]}}},"2:3531:361":{"id":"2:3531:361","crate_id":2,"name":"bitor_assign","span":null,"visibility":"default","docs":"Performs the `|=` operation.\n\n# Examples\n\n```\nlet mut x = true;\nx |= false;\nassert_eq!(x, true);\n\nlet mut x = false;\nx |= false;\nassert_eq!(x, false);\n\nlet mut x: u8 = 5;\nx |= 1;\nassert_eq!(x, 5);\n\nlet mut x: u8 = 5;\nx |= 2;\nassert_eq!(x, 7);\n```","links":{},"attrs":["#[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3370:216-0:709:1641":{"id":"a:2:3370:216-0:709:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TakeWhileRef","id":"0:709:1641","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:0:2854-0:1527:1668":{"id":"b:0:2854-0:1527:1668","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunks","id":"0:1527:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1164:1565":{"id":"0:1164:1565","crate_id":0,"name":"1","span":{"filename":"src/diff.rs","begin":[21,25],"end":[21,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}},"0:4678:667":{"id":"0:4678:667","crate_id":0,"name":"fmt","span":{"filename":"src/ziptuple.rs","begin":[4,16],"end":[4,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1065":{"id":"0:1065","crate_id":0,"name":null,"span":{"filename":"src/combinations.rs","begin":[45,0],"end":[80,1]},"visibility":{"restricted":{"parent":"0:1041:1650","path":"::combinations"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Combinations","id":"0:1054:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1067:2271","0:1068:2013"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3370:216-0:1651:1677":{"id":"a:2:3370:216-0:1651:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1076":{"id":"0:1076","crate_id":0,"name":null,"span":{"filename":"src/combinations.rs","begin":[125,0],"end":[128,2]},"visibility":{"restricted":{"parent":"0:1041:1650","path":"::combinations"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Combinations","id":"0:1054:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3382:225-0:4644:1720":{"id":"a:2:3382:225-0:4644:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:4905:21714":{"id":"2:4905:21714","crate_id":2,"name":"poll_next","span":null,"visibility":"default","docs":"Attempt to pull out the next value of this async iterator, registering the\ncurrent task for wakeup if the value is not yet available, and returning\n`None` if the async iterator is exhausted.\n\n# Return value\n\nThere are several possible return values, each indicating a distinct\nasync iterator state:\n\n- `Poll::Pending` means that this async iterator's next value is not ready\nyet. Implementations will ensure that the current task will be notified\nwhen the next value may be ready.\n\n- `Poll::Ready(Some(val))` means that the async iterator has successfully\nproduced a value, `val`, and may produce further values on subsequent\n`poll_next` calls.\n\n- `Poll::Ready(None)` means that the async iterator has terminated, and\n`poll_next` should not be invoked again.\n\n# Panics\n\nOnce an async iterator has finished (returned `Ready(None)` from `poll_next`), calling its\n`poll_next` method again may panic, block forever, or cause other kinds of\nproblems; the `AsyncIterator` trait places no requirements on the effects of\nsuch a call. However, as the `poll_next` method is not marked `unsafe`,\nRust's usual rules apply: calls must never cause undefined behavior\n(memory corruption, incorrect use of `unsafe` functions, or the like),\nregardless of the async iterator's state.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47926:191","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}}}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Context","id":"2:14363:5313","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50693:193","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"AsyncIterator","id":"2:4903:5312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13723:3884":{"id":"2:13723:3884","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47811:177"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11209:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11209:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2886:417":{"id":"2:2886:417","crate_id":2,"name":"clone_from","span":null,"visibility":"default","docs":"Performs copy-assignment from `source`.\n\n`a.clone_from(&b)` is equivalent to `a = b.clone()` in functionality,\nbut can be overridden to reuse the resources of `a` to avoid unnecessary\nallocations.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["source",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9532:4793-0:4657:1722":{"id":"a:2:9532:4793-0:4657:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4562":{"id":"0:4562","crate_id":0,"name":null,"span":{"filename":"src/unziptuple.rs","begin":[79,0],"end":[79,148]},"visibility":{"restricted":{"parent":"0:2411:1743","path":"::unziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"IT","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"C"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"D"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"G"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"H"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MultiUnzip","id":"0:2415:1745","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"},{"kind":"generic","inner":"FromC"},{"kind":"generic","inner":"FromD"},{"kind":"generic","inner":"FromE"},{"kind":"generic","inner":"FromF"},{"kind":"generic","inner":"FromG"},{"kind":"generic","inner":"FromH"},{"kind":"generic","inner":"FromI"},{"kind":"generic","inner":"FromJ"},{"kind":"generic","inner":"FromK"}]}}],"bindings":[]}}},"for":{"kind":"generic","inner":"IT"},"items":["0:4586:1744"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23067:16118":{"id":"2:23067:16118","crate_id":2,"name":"is_finite","span":null,"visibility":"default","docs":"Returns true for each lane if its value is neither infinite nor `NaN`.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23053:7076","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:8676-0:1198:1661":{"id":"b:2:8676-0:1198:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FlattenOk","id":"0:1198:1661","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:3410:3433":{"id":"0:3410:3433","crate_id":0,"name":"Both","span":{"filename":"src/either_or_both.rs","begin":[9,4],"end":[9,14]},"visibility":"default","docs":"Both values are present.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:3412:1564","0:3413:1565"]}},"b:5:848-0:674:1640":{"id":"b:5:848-0:674:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeBy","id":"0:674:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:185":{"id":"0:185","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[129,33],"end":[129,39]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::kmerge_impl::KMerge","name":"KMerge","id":"0:1637:1676","glob":false}},"1:6214:6859":{"id":"1:6214:6859","crate_id":1,"name":"gid","span":null,"visibility":"default","docs":"Similar to `uid`, but sets the group ID of the child process. This has\nthe same semantics as the `uid` field.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"1:7477:6730","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3754:2406":{"id":"2:3754:2406","crate_id":2,"name":"contains","span":null,"visibility":"default","docs":"Returns `true` if `item` is contained in the range.\n\n# Examples\n\n```\nassert!( (3..5).contains(&4));\nassert!(!(3..5).contains(&2));\n\nassert!( (0.0..1.0).contains(&0.5));\nassert!(!(0.0..1.0).contains(&f32::NAN));\nassert!(!(0.0..f32::NAN).contains(&0.5));\nassert!(!(f32::NAN..1.0).contains(&0.5));","links":{},"attrs":["#[stable(feature = \"range_contains\", since = \"1.35.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["item",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"U"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6215:11007":{"id":"1:6215:11007","crate_id":1,"name":"groups","span":null,"visibility":"default","docs":"Sets the supplementary group IDs for the calling process. Translates to\na `setgroups` call in the child process.","links":{},"attrs":["#[unstable(feature = \"setgroups\", issue = \"90747\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["groups",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u32"}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"1:7477:6730","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1213":{"id":"0:1213","crate_id":0,"name":null,"span":{"filename":"src/flatten_ok.rs","begin":[94,0],"end":[133,1]},"visibility":{"restricted":{"parent":"0:1179:1660","path":"::flatten_ok"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"2:8672:152","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FlattenOk","id":"0:1198:1661","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:1217:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3446:184":{"id":"2:3446:184","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `-` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"2:10812:2499":{"id":"2:10812:2499","crate_id":2,"name":"write","span":null,"visibility":"default","docs":"Writes some data into this `Hasher`.\n\n# Examples\n\n```\nuse std::collections::hash_map::DefaultHasher;\nuse std::hash::Hasher;\n\nlet mut hasher = DefaultHasher::new();\nlet data = [0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef];\n\nhasher.write(&data);\n\nprintln!(\"Hash is {:x}!\", hasher.finish());\n```\n\n# Note to Implementers\n\nYou generally should not do length-prefixing as part of implementing\nthis method.  It's up to the [`Hash`] implementation to call\n[`Hasher::write_length_prefix`] before sequences that need it.","links":{"`Hasher::write_length_prefix`":"2:10825:22126","`Hash`":"2:10800:143"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["bytes",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:6474:10303":{"id":"1:6474:10303","crate_id":1,"name":"st_ctime","span":null,"visibility":"default","docs":"Returns the last status change time of the file, in seconds since Unix Epoch.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_ctime());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3213-0:791:1632":{"id":"b:2:3213-0:791:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterMapOk","id":"0:791:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2698:2666":{"id":"0:2698:2666","crate_id":0,"name":"sum1","span":{"filename":"src/lib.rs","begin":[2443,4],"end":[2449,5]},"visibility":"default","docs":"Iterate over the entire iterator and add all the elements.\n\nAn empty iterator returns `None`, otherwise `Some(sum)`.\n\n# Panics\n\nWhen calling `sum1()` and a primitive integer type is being returned, this\nmethod will panic if the computation overflows and debug assertions are\nenabled.\n\n# Examples\n\n```\nuse itertools::Itertools;\n\nlet empty_sum = (1..1).sum1::<i32>();\nassert_eq!(empty_sum, None);\n\nlet nonempty_sum = (1..11).sum1::<i32>();\nassert_eq!(nonempty_sum, Some(55));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"std::iter::Sum","id":"2:8631:2668","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5510:23363":{"id":"1:5510:23363","crate_id":1,"name":"set_mode","span":null,"visibility":"default","docs":"Sets the underlying raw bits for this set of permissions.\n\n# Examples\n\n```no_run\nuse std::fs::File;\nuse std::os::unix::fs::PermissionsExt;\n\nfn main() -> std::io::Result<()> {\n    let f = File::create(\"foo.txt\")?;\n    let metadata = f.metadata()?;\n    let mut permissions = metadata.permissions();\n\n    permissions.set_mode(0o644); // Read/write for owner and read for others.\n    assert_eq!(permissions.mode(), 0o644);\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"fs_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mode",{"kind":"primitive","inner":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:8935:2479":{"id":"2:8935:2479","crate_id":2,"name":"try_collect","span":null,"visibility":"default","docs":"Fallibly transforms an iterator into a collection, short circuiting if\na failure is encountered.\n\n`try_collect()` is a variation of [`collect()`][`collect`] that allows fallible\nconversions during collection. Its main use case is simplifying conversions from\niterators yielding [`Option<T>`][`Option`] into `Option<Collection<T>>`, or similarly for other [`Try`]\ntypes (e.g. [`Result`]).\n\nImportantly, `try_collect()` doesn't require that the outer [`Try`] type also implements [`FromIterator`];\nonly the inner type produced on `Try::Output` must implement it. Concretely,\nthis means that collecting into `ControlFlow<_, Vec<i32>>` is valid because `Vec<i32>` implements\n[`FromIterator`], even though [`ControlFlow`] doesn't.\n\nAlso, if a failure is encountered during `try_collect()`, the iterator is still valid and\nmay continue to be used, in which case it will continue iterating starting after the element that\ntriggered the failure. See the last example below for an example of how this works.\n\n# Examples\nSuccessfully collecting an iterator of `Option<i32>` into `Option<Vec<i32>>`:\n```\n#![feature(iterator_try_collect)]\n\nlet u = vec![Some(1), Some(2), Some(3)];\nlet v = u.into_iter().try_collect::<Vec<i32>>();\nassert_eq!(v, Some(vec![1, 2, 3]));\n```\n\nFailing to collect in the same way:\n```\n#![feature(iterator_try_collect)]\n\nlet u = vec![Some(1), Some(2), None, Some(3)];\nlet v = u.into_iter().try_collect::<Vec<i32>>();\nassert_eq!(v, None);\n```\n\nA similar example, but with `Result`:\n```\n#![feature(iterator_try_collect)]\n\nlet u: Vec<Result<i32, ()>> = vec![Ok(1), Ok(2), Ok(3)];\nlet v = u.into_iter().try_collect::<Vec<i32>>();\nassert_eq!(v, Ok(vec![1, 2, 3]));\n\nlet u = vec![Ok(1), Ok(2), Err(()), Ok(3)];\nlet v = u.into_iter().try_collect::<Vec<i32>>();\nassert_eq!(v, Err(()));\n```\n\nFinally, even [`ControlFlow`] works, despite the fact that it\ndoesn't implement [`FromIterator`]. Note also that the iterator can\ncontinue to be used, even if a failure is encountered:\n\n```\n#![feature(iterator_try_collect)]\n\nuse core::ops::ControlFlow::{Break, Continue};\n\nlet u = [Continue(1), Continue(2), Break(3), Continue(4), Continue(5)];\nlet mut it = u.into_iter();\n\nlet v = it.try_collect::<Vec<_>>();\nassert_eq!(v, Break(3));\n\nlet v = it.try_collect::<Vec<_>>();\nassert_eq!(v, Continue(vec![4, 5]));\n```\n\n[`collect`]: Iterator::collect","links":{"`FromIterator`":"2:8668:137","`Option`":"2:47809:179","`Result`":"2:47934:208","`Try`":"2:3831:230","Iterator::collect":"2:8933:2468","`ControlFlow`":"2:46098:4761"},"attrs":["#[unstable(feature = \"iterator_try_collect\", issue = \"94047\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"TryType","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"Residual","id":"2:3842:4755","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"FromIterator","id":"2:8668:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Residual","id":"2:3842:4755","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5529:23370":{"id":"1:5529:23370","crate_id":1,"name":"rdev","span":null,"visibility":"default","docs":"Returns the device ID of this file (if it is a special one).\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let device_id = meta.rdev();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3511:363":{"id":"2:3511:363","crate_id":2,"name":"bitxor","span":null,"visibility":"default","docs":"Performs the `^` operation.\n\n# Examples\n\n```\nassert_eq!(true ^ false, true);\nassert_eq!(true ^ true, false);\nassert_eq!(5u8 ^ 1u8, 4);\nassert_eq!(5u8 ^ 2u8, 7);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"BitXor","id":"2:3508:4744","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3382:225-0:4065:1699":{"id":"a:2:3382:225-0:4065:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3213-0:4142:1708":{"id":"b:2:3213-0:4142:1708","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleWindows","id":"0:4142:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3917":{"id":"0:3917","crate_id":0,"name":null,"span":{"filename":"src/minmax.rs","begin":[5,15],"end":[5,20]},"visibility":{"restricted":{"parent":"0:1748:1734","path":"::minmax"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:3919:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3213-0:1452:1669":{"id":"b:2:3213-0:1452:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupBy","id":"0:1452:1669","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:9107:1008":{"id":"2:9107:1008","crate_id":2,"name":"partial_cmp","span":null,"visibility":"default","docs":"[Lexicographically](Ord#lexicographical-comparison) compares the elements of this [`Iterator`] with those\nof another.\n\n# Examples\n\n```\nuse std::cmp::Ordering;\n\nassert_eq!([1.].iter().partial_cmp([1.].iter()), Some(Ordering::Equal));\nassert_eq!([1.].iter().partial_cmp([1., 2.].iter()), Some(Ordering::Less));\nassert_eq!([1., 2.].iter().partial_cmp([1.].iter()), Some(Ordering::Greater));\n\nassert_eq!([f64::NAN].iter().partial_cmp([1.].iter()), None);\n```","links":{"Ord#lexicographical-comparison":"2:2956:180","`Iterator`":"2:8873:159"},"attrs":["#[stable(feature = \"iter_order\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1025":{"id":"0:1025","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[190,0],"end":[190,23]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::free","name":"free","id":"0:930:1749","glob":true}},"0:3794":{"id":"0:3794","crate_id":0,"name":null,"span":{"filename":"src/format.rs","begin":[112,0],"end":[113,70]},"visibility":{"restricted":{"parent":"0:1247:678","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::UpperExp","id":"2:10583:3705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UpperExp","id":"2:10583:3705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3797:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1730":{"id":"0:1730","crate_id":0,"name":null,"span":{"filename":"src/merge_join.rs","begin":[36,0],"end":[44,1]},"visibility":{"restricted":{"parent":"0:1696:1678","path":"::merge_join"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Fuse","id":"2:46987:3192","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}}],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Fuse","id":"2:46987:3192","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}}}],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeJoinBy","id":"0:1723:1679","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:3902:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1527:1668":{"id":"0:1527:1668","crate_id":0,"name":"Chunks","span":{"filename":"src/groupbylazy.rs","begin":[510,0],"end":[515,1]},"visibility":"public","docs":"An iterator that yields the Chunk iterators.\n\nIterator element type is `Chunk`.\n\nSee [`.chunks()`](crate::Itertools::chunks) for more information.","links":{"crate::Itertools::chunks":"0:2538:1943"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"outlives":"'a"}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:1527:1668","a:2:9532:4793-0:1527:1668","a:2:3382:225-0:1527:1668","a:2:3370:216-0:1527:1668","a:2:3411:4706-0:1527:1668","b:0:2854-0:1527:1668","b:2:8676-0:1527:1668","b:2:4104-0:1527:1668","b:2:2865-0:1527:1668","b:2:3203-0:1527:1668","b:2:3207-0:1527:1668","b:2:3218-0:1527:1668","b:2:2868-0:1527:1668","b:2:3213-0:1527:1668","0:1531"]}},"2:23768:1288":{"id":"2:23768:1288","crate_id":2,"name":"simd_lt","span":null,"visibility":"default","docs":"Test if each lane is less than the corresponding lane in `other`.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdPartialEq","id":"2:23179:7077","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3451:184":{"id":"2:3451:184","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `*` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:2897:3377":{"id":"0:2897:3377","crate_id":0,"name":"MapSpecialCase","span":{"filename":"src/adaptors/map.rs","begin":[6,0],"end":[9,1]},"visibility":"public","docs":null,"links":{},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"1:5528:6859":{"id":"1:5528:6859","crate_id":1,"name":"gid","span":null,"visibility":"default","docs":"Returns the group ID of the owner of this file.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let group_id = meta.gid();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[126,45],"end":[126,50]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::groupbylazy::Chunk","name":"Chunk","id":"0:1537:1667","glob":false}},"0:3975":{"id":"0:3975","crate_id":0,"name":null,"span":{"filename":"src/peeking_take_while.rs","begin":[143,0],"end":[143,53]},"visibility":{"restricted":{"parent":"0:1858:1686","path":"::peeking_take_while"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PeekingNext","id":"0:1868:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"::std::str::Bytes","id":"2:49776:4069","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:3977:4024"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:846:5159":{"id":"5:846:5159","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":"Creates owned data from borrowed data, usually by cloning.\n\n# Examples\n\nBasic usage:\n\n```\nlet s: &str = \"a\";\nlet ss: String = s.to_owned();\n\nlet v: &[i32] = &[1, 2];\nlet vv: Vec<i32> = v.to_owned();\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[must_use =\n\"cloning is often expensive and is not expected to have side effects\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:836":{"id":"0:836","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[1023,0],"end":[1043,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:839:1849","0:840:932","0:841:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23058:16109":{"id":"2:23058:16109","crate_id":2,"name":"from_bits","span":null,"visibility":"default","docs":"Raw transmutation from an unsigned integer vector type with the\nsame size and number of lanes.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23053:7076","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2541:1978":{"id":"0:2541:1978","crate_id":0,"name":"circular_tuple_windows","span":{"filename":"src/lib.rs","begin":[734,4],"end":[740,5]},"visibility":"default","docs":"Return an iterator over all windows, wrapping back to the first\nelements when the window would otherwise exceed the length of the\niterator, producing tuples of a specific size (up to 12).\n\n`circular_tuple_windows` clones the iterator elements so that they can be\npart of successive windows, this makes it most suited for iterators\nof references and other values that are cheap to copy.\n\n```\nuse itertools::Itertools;\nlet mut v = Vec::new();\nfor (a, b) in (1..5).circular_tuple_windows() {\n    v.push((a, b));\n}\nassert_eq!(v, vec![(1, 2), (2, 3), (3, 4), (4, 1)]);\n\nlet mut it = (1..5).circular_tuple_windows();\nassert_eq!(Some((1, 2, 3)), it.next());\nassert_eq!(Some((2, 3, 4)), it.next());\nassert_eq!(Some((3, 4, 1)), it.next());\nassert_eq!(Some((4, 1, 2)), it.next());\nassert_eq!(None, it.next());\n\n// this requires a type hint\nlet it = (1..5).circular_tuple_windows::<(_, _, _)>();\nitertools::assert_equal(it, vec![(1, 2, 3), (2, 3, 4), (3, 4, 1), (4, 1, 2)]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"CircularTupleWindows","id":"0:4155:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"tuple_impl::TupleCollect","id":"0:2245:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4836:1754":{"id":"0:4836:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/ziptuple.rs","begin":[133,0],"end":[133,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4854":{"id":"0:4854","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[134,0],"end":[134,38]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"}]}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"C"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"D"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"E"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"G"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"H"},"trait":{"name":"","id":"2:8672:152","args":null}}}]}}],"bindings":[]}}}},"items":["0:4863:688"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3822:2800":{"id":"0:3822:2800","crate_id":0,"name":"MapForGrouping","span":{"filename":"src/grouping_map.rs","begin":[12,0],"end":[12,38]},"visibility":"public","docs":"A wrapper to allow for an easy [`into_grouping_map_by`](crate::Itertools::into_grouping_map_by)","links":{"crate::Itertools::into_grouping_map_by":"0:2743:2798"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null,null]},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"0:2219":{"id":"0:2219","crate_id":0,"name":null,"span":{"filename":"src/tuple_impl.rs","begin":[112,0],"end":[129,1]},"visibility":{"restricted":{"parent":"0:2180:1706","path":"::tuple_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"HomogeneousTuple","id":"0:2196:1727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Tuples","id":"0:4129:1710","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:2222:4291"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:8676-0:3397:1646":{"id":"b:2:8676-0:3397:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:8680:777":{"id":"2:8680:777","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2005:1849":{"id":"0:2005:1849","crate_id":0,"name":"Item","span":{"filename":"src/process_results_impl.rs","begin":[17,4],"end":[17,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"2:23069:16120":{"id":"2:23069:16120","crate_id":2,"name":"is_normal","span":null,"visibility":"default","docs":"Returns true for each lane if its value is neither zero, infinite,\nsubnormal, nor `NaN`.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23053:7076","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:8676-0:1537:1667":{"id":"b:2:8676-0:1537:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunk","id":"0:1537:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:3741":{"id":"0:3741","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[45,9],"end":[45,14]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"J"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["0:3744:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4536:1744":{"id":"0:4536:1744","crate_id":0,"name":"multiunzip","span":{"filename":"src/unziptuple.rs","begin":[77,0],"end":[77,124]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"},{"kind":"generic","inner":"FromC"},{"kind":"generic","inner":"FromD"},{"kind":"generic","inner":"FromE"},{"kind":"generic","inner":"FromF"},{"kind":"generic","inner":"FromG"},{"kind":"generic","inner":"FromH"},{"kind":"generic","inner":"FromI"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:979":{"id":"0:979","crate_id":0,"name":null,"span":{"filename":"src/free.rs","begin":[33,0],"end":[33,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::zip_eq_impl::zip_eq","name":"zip_eq","id":"0:2454:1885","glob":false}},"0:1855:4024":{"id":"0:1855:4024","crate_id":0,"name":"peeking_next","span":{"filename":"src/peek_nth.rs","begin":[95,4],"end":[101,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["accept",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:1054:1651":{"id":"a:2:3411:4706-0:1054:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Combinations","id":"0:1054:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4137:415":{"id":"0:4137:415","crate_id":0,"name":"clone","span":{"filename":"src/tuple_impl.rs","begin":[80,9],"end":[80,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Tuples","id":"0:4129:1710","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4633":{"id":"0:4633","crate_id":0,"name":null,"span":{"filename":"src/with_position.rs","begin":[37,15],"end":[37,20]},"visibility":{"restricted":{"parent":"0:2419:1717","path":"::with_position"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:4635:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:11":{"id":"0:11","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[60,0],"end":[60,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"either::Either","name":"Either","id":"20:216:1615","glob":false}},"0:3756:667":{"id":"0:3756:667","crate_id":0,"name":"fmt","span":{"filename":"src/combinations_with_replacement.rs","begin":[27,4],"end":[27,57]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"::std::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3203-0:1883:1687":{"id":"b:2:3203-0:1883:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekingTakeWhile","id":"0:1883:1687","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4905:688":{"id":"0:4905:688","crate_id":0,"name":"from","span":{"filename":"src/ziptuple.rs","begin":[135,0],"end":[135,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4104-0:3007:1636":{"id":"b:2:4104-0:3007:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Batching","id":"0:3007:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3569:1754":{"id":"0:3569:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4709":{"id":"0:4709","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[129,0],"end":[129,23]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"}]}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"C"},"trait":{"name":"","id":"2:8672:152","args":null}}}]}}],"bindings":[]}}}},"items":["0:4713:688"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2071":{"id":"0:2071","crate_id":0,"name":null,"span":{"filename":"src/rciter_impl.rs","begin":[97,0],"end":[99,2]},"visibility":{"restricted":{"parent":"0:2038:1696","path":"::rciter_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"A"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3949:415":{"id":"0:3949:415","crate_id":0,"name":"clone","span":{"filename":"src/pad_tail.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:2968:1631":{"id":"b:2:3213-0:2968:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InterleaveShortest","id":"0:2968:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2582:1772":{"id":"0:2582:1772","crate_id":0,"name":"cartesian_product","span":{"filename":"src/lib.rs","begin":[1078,4],"end":[1085,5]},"visibility":"default","docs":"Return an iterator adaptor that iterates over the cartesian product of\nthe element sets of two iterators `self` and `J`.\n\nIterator element type is `(Self::Item, J::Item)`.\n\n```\nuse itertools::Itertools;\n\nlet it = (0..2).cartesian_product(\"αβ\".chars());\nitertools::assert_equal(it, vec![(0, 'α'), (0, 'β'), (1, 'α'), (1, 'β')]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"J"}]],"output":{"kind":"resolved_path","inner":{"name":"Product","id":"0:2992:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:206":{"id":"0:206","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[138,4],"end":[138,46]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::permutations::Permutations","name":"Permutations","id":"0:1917:1689","glob":false}},"a:2:3411:4706-0:4670:1724":{"id":"a:2:3411:4706-0:4670:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4670:1724":{"id":"0:4670:1724","crate_id":0,"name":"Zip","span":{"filename":"src/ziptuple.rs","begin":[6,0],"end":[8,1]},"visibility":"public","docs":"See [`multizip`] for more information.","links":{"`multizip`":"0:2513:1746"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:4670:1724","a:2:9532:4793-0:4670:1724","a:2:3382:225-0:4670:1724","a:2:3370:216-0:4670:1724","a:2:3411:4706-0:4670:1724","b:0:2854-0:4670:1724","b:2:8676-0:4670:1724","b:2:4104-0:4670:1724","b:2:2865-0:4670:1724","b:2:3203-0:4670:1724","b:2:3207-0:4670:1724","b:2:3218-0:4670:1724","b:2:2868-0:4670:1724","b:2:3213-0:4670:1724","b:5:848-0:4670:1724","0:4673","0:4676","0:4679","0:4682","0:4687","0:4689","0:4692","0:4696","0:4702","0:4705","0:4709","0:4714","0:4721","0:4725","0:4730","0:4736","0:4744","0:4749","0:4755","0:4762","0:4771","0:4777","0:4784","0:4792","0:4802","0:4809","0:4817","0:4826","0:4837","0:4845","0:4854","0:4864","0:4876","0:4885","0:4895","0:4906","0:4919","0:4929","0:4940","0:4952","0:4966","0:4977","0:4989","0:5002","0:5017","0:5029","0:5042","0:5056","0:5072","0:5085"]}},"a:2:9533:4792-0:3737:1655":{"id":"a:2:9533:4792-0:3737:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3370:216-0:1917:1689":{"id":"a:2:3370:216-0:1917:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Permutations","id":"0:1917:1689","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5106:1564":{"id":"0:5106:1564","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[3766,9],"end":[3766,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:1850:1754":{"id":"0:1850:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/peek_nth.rs","begin":[84,4],"end":[86,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13763:37957":{"id":"2:13763:37957","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:15876:4439","self::pattern":"2:13336:4565"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:13128:5407","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1845":{"id":"0:1845","crate_id":0,"name":null,"span":{"filename":"src/peek_nth.rs","begin":[74,0],"end":[87,1]},"visibility":{"restricted":{"parent":"0:1826:1682","path":"::peek_nth"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1847:1849","0:1848:932","0:1850:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3533:1849":{"id":"0:3533:1849","crate_id":0,"name":"Item","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"X"}]}}},"b:2:2868-0:3836:1663":{"id":"b:2:2868-0:3836:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupingMap","id":"0:3836:1663","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2222:4291":{"id":"0:2222:4291","crate_id":0,"name":"into_buffer","span":{"filename":"src/tuple_impl.rs","begin":[126,4],"end":[128,5]},"visibility":"public","docs":"Return a buffer with the produced items that was not enough to be grouped in a tuple.\n\n```\nuse itertools::Itertools;\n\nlet mut iter = (0..5).tuples();\nassert_eq!(Some((0, 1, 2)), iter.next());\nassert_eq!(None, iter.next());\nitertools::assert_equal(vec![3, 4], iter.into_buffer());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"TupleBuffer","id":"0:4119:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,4],"end":[134,37]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::peek_nth::PeekNth","name":"PeekNth","id":"0:3951:1683","glob":false}},"a:2:9532:4793-0:1490:1670":{"id":"a:2:9532:4793-0:1490:1670","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Group","id":"0:1490:1670","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:8676-0:3386:1645":{"id":"b:2:8676-0:3386:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:2526:1864":{"id":"0:2526:1864","crate_id":0,"name":"intersperse_with","span":{"filename":"src/lib.rs","begin":[504,4],"end":[509,5]},"visibility":"default","docs":"An iterator adaptor to insert a particular value created by a function\nbetween each element of the adapted iterator.\n\nIterator element type is `Self::Item`.\n\nThis iterator is *fused*.\n\n```\nuse itertools::Itertools;\n\nlet mut i = 10;\nitertools::assert_equal((0..3).intersperse_with(|| { i -= 1; i }), vec![0, 9, 1, 8, 2]);\nassert_eq!(i, 8);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["element",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[],"output":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:651:932":{"id":"0:651:932","crate_id":0,"name":"next","span":{"filename":"src/adaptors/mod.rs","begin":[401,4],"end":[403,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4730":{"id":"0:4730","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[130,0],"end":[130,26]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"}]}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"C"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"D"},"trait":{"name":"","id":"2:8672:152","args":null}}}]}}],"bindings":[]}}}},"items":["0:4735:688"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2865-0:3397:1646":{"id":"b:2:2865-0:3397:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:303":{"id":"0:303","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[177,0],"end":[177,53]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::process_results_impl::process_results","name":"process_results","id":"0:2013:1737","glob":false}},"1:4418:15595":{"id":"1:4418:15595","crate_id":1,"name":"read_buf","span":null,"visibility":"default","docs":"Pull some bytes from this source into the specified buffer.\n\nThis is equivalent to the [`read`](Read::read) method, except that it is passed a [`BorrowedCursor`] rather than `[u8]` to allow use\nwith uninitialized buffers. The new data will be appended to any existing contents of `buf`.\n\nThe default implementation delegates to `read`.","links":{"Read::read":"1:4411:6796","`BorrowedCursor`":"1:10895:6602"},"attrs":["#[unstable(feature = \"read_buf\", issue = \"78485\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"resolved_path","inner":{"name":"BorrowedCursor","id":"1:10895:6602","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:4792-0:4142:1708":{"id":"a:2:9533:4792-0:4142:1708","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleWindows","id":"0:4142:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2593:2187":{"id":"0:2593:2187","crate_id":0,"name":"duplicates","span":{"filename":"src/lib.rs","begin":[1262,4],"end":[1267,5]},"visibility":"default","docs":"Return an iterator adaptor that produces elements that appear more than once during the\niteration. Duplicates are detected using hash and equality.\n\nThe iterator is stable, returning the duplicate items in the order in which they occur in\nthe adapted iterator. Each duplicate item is returned exactly once. If an item appears more\nthan twice, the second item is the item retained and the rest are discarded.\n\n```\nuse itertools::Itertools;\n\nlet data = vec![10, 20, 30, 20, 40, 10, 50];\nitertools::assert_equal(data.into_iter().duplicates(),\n                        vec![20, 10]);\n```","links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Duplicates","id":"0:2346:1712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3747:667":{"id":"0:3747:667","crate_id":0,"name":"fmt","span":{"filename":"src/combinations.rs","begin":[28,4],"end":[28,57]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"::std::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:3737:1655":{"id":"a:2:3411:4706-0:3737:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4641":{"id":"0:4641","crate_id":0,"name":null,"span":{"filename":"src/with_position.rs","begin":[37,29],"end":[37,38]},"visibility":{"restricted":{"parent":"0:2419:1717","path":"::with_position"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:4643:611"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:848-0:1651:1677":{"id":"b:5:848-0:1651:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3411:4706-0:3777:1658":{"id":"a:2:3411:4706-0:3777:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8198:5987":{"id":"2:8198:5987","crate_id":2,"name":"forward_checked","span":null,"visibility":"default","docs":"Returns the value that would be obtained by taking the *successor*\nof `self` `count` times.\n\nIf this would overflow the range of values supported by `Self`, returns `None`.\n\n# Invariants\n\nFor any `a`, `n`, and `m`:\n\n* `Step::forward_checked(a, n).and_then(|x| Step::forward_checked(x, m)) == Step::forward_checked(a, m).and_then(|x| Step::forward_checked(x, n))`\n\nFor any `a`, `n`, and `m` where `n + m` does not overflow:\n\n* `Step::forward_checked(a, n).and_then(|x| Step::forward_checked(x, m)) == Step::forward_checked(a, n + m)`\n\nFor any `a` and `n`:\n\n* `Step::forward_checked(a, n) == (0..n).try_fold(a, |x, _| Step::forward_checked(&x, 1))`\n  * Corollary: `Step::forward_checked(&a, 0) == Some(a)`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["start",{"kind":"generic","inner":"Self"}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:814:1849":{"id":"0:814:1849","crate_id":0,"name":"Item","span":{"filename":"src/adaptors/mod.rs","begin":[949,4],"end":[949,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}},"b:2:2868-0:2968:1631":{"id":"b:2:2868-0:2968:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InterleaveShortest","id":"0:2968:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5109":{"id":"0:5109","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3761,15],"end":[3761,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:5111:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3382:225":{"id":"2:3382:225","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1337:2889":{"id":"0:1337:2889","crate_id":0,"name":"max_by","span":{"filename":"src/grouping_map.rs","begin":[260,4],"end":[267,5]},"visibility":"public","docs":"Groups elements from the `GroupingMap` source by key and finds the maximum of each group\nwith respect to the specified comparison function.\n \nIf several elements are equally maximum, the last element is picked.\n \nReturns a `HashMap` associating the key of each group with the maximum of that group's elements.\n \n```\nuse itertools::Itertools;\n \nlet lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()\n    .into_grouping_map_by(|&n| n % 3)\n    .max_by(|_key, x, y| y.cmp(x));\n \nassert_eq!(lookup[&0], 3);\nassert_eq!(lookup[&1], 1);\nassert_eq!(lookup[&2], 5);\nassert_eq!(lookup.len(), 3);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["compare",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"K"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"V"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"V"}}}],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:791:1632":{"id":"a:2:3411:4706-0:791:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterMapOk","id":"0:791:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:14076:151":{"id":"2:14076:151","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:14077:184","2:14078:151","2:14079:776"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2865-0:4075:1701":{"id":"b:2:2865-0:4075:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatCall","id":"0:4075:1701","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4104-0:3407:1748":{"id":"b:2:4104-0:3407:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8678:1849":{"id":"2:8678:1849","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:3207-0:791:1632":{"id":"b:2:3207-0:791:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterMapOk","id":"0:791:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:599":{"id":"0:599","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[163,0],"end":[166,2]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InterleaveShortest","id":"0:2968:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3207-0:1981:1693":{"id":"b:2:3207-0:1981:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Powerset","id":"0:1981:1693","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:77":{"id":"0:77","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,8],"end":[96,16]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::FilterOk","name":"FilterOk","id":"0:3375:1633","glob":false}},"0:3431":{"id":"0:3431","crate_id":0,"name":null,"span":{"filename":"src/either_or_both.rs","begin":[6,27],"end":[6,29]},"visibility":{"restricted":{"parent":"0:878:1747","path":"::either_or_both"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3379:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4035:415":{"id":"0:4035:415","crate_id":0,"name":"clone","span":{"filename":"src/powerset.rs","begin":[24,4],"end":[24,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5002":{"id":"0:5002","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[137,0],"end":[137,47]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]","#[allow(unused_assignments)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"}]}}],"bindings":[]}}}},"items":["0:5014:1849","0:5015:932","0:5016:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:596:932":{"id":"0:596:932","crate_id":0,"name":"next","span":{"filename":"src/adaptors/mod.rs","begin":[118,4],"end":[124,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4116":{"id":"0:4116","crate_id":0,"name":null,"span":{"filename":"src/tee.rs","begin":[20,9],"end":[20,14]},"visibility":{"restricted":{"parent":"0:2158:1704","path":"::tee"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tee","id":"0:4112:1705","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:4118:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4104-0:3939:1685":{"id":"b:2:4104-0:3939:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3501:358":{"id":"2:3501:358","crate_id":2,"name":"bitand","span":null,"visibility":"default","docs":"Performs the `&` operation.\n\n# Examples\n\n```\nassert_eq!(true & false, false);\nassert_eq!(true & true, true);\nassert_eq!(5u8 & 1u8, 1);\nassert_eq!(5u8 & 2u8, 0);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"BitAnd","id":"2:3498:4742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:0:2854-0:3757:1657":{"id":"b:0:2854-0:3757:1657","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:848-0:4129:1710":{"id":"b:5:848-0:4129:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tuples","id":"0:4129:1710","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8910:2374":{"id":"2:8910:2374","crate_id":2,"name":"enumerate","span":null,"visibility":"default","docs":"Creates an iterator which gives the current iteration count as well as\nthe next value.\n\nThe iterator returned yields pairs `(i, val)`, where `i` is the\ncurrent index of iteration and `val` is the value returned by the\niterator.\n\n`enumerate()` keeps its count as a [`usize`]. If you want to count by a\ndifferent sized integer, the [`zip`] function provides similar\nfunctionality.\n\n# Overflow Behavior\n\nThe method does no guarding against overflows, so enumerating more than\n[`usize::MAX`] elements either produces the wrong result or panics. If\ndebug assertions are enabled, a panic is guaranteed.\n\n# Panics\n\nThe returned iterator might panic if the to-be-returned index would\noverflow a [`usize`].\n\n[`zip`]: Iterator::zip\n\n# Examples\n\n```\nlet a = ['a', 'b', 'c'];\n\nlet mut iter = a.iter().enumerate();\n\nassert_eq!(iter.next(), Some((0, &'a')));\nassert_eq!(iter.next(), Some((1, &'b')));\nassert_eq!(iter.next(), Some((2, &'c')));\nassert_eq!(iter.next(), None);\n```","links":{"`usize::MAX`":"2:32349:4098","`usize`":"1:15899:4459","Iterator::zip":"2:8890:1801"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:46945:3519","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6216:23421":{"id":"1:6216:23421","crate_id":1,"name":"pre_exec","span":null,"visibility":"default","docs":"Schedules a closure to be run just before the `exec` function is\ninvoked.\n\nThe closure is allowed to return an I/O error whose OS error code will\nbe communicated back to the parent and returned as an error from when\nthe spawn was requested.\n\nMultiple closures can be registered and they will be called in order of\ntheir registration. If a closure returns `Err` then no further closures\nwill be called and the spawn operation will immediately return with a\nfailure.\n\n# Notes and Safety\n\nThis closure will be run in the context of the child process after a\n`fork`. This primarily means that any modifications made to memory on\nbehalf of this closure will **not** be visible to the parent process.\nThis is often a very constrained environment where normal operations\nlike `malloc`, accessing environment variables through [`std::env`]\nor acquiring a mutex are not guaranteed to work (due to\nother threads perhaps still running when the `fork` was run).\n\nFor further details refer to the [POSIX fork() specification]\nand the equivalent documentation for any targeted\nplatform, especially the requirements around *async-signal-safety*.\n\nThis also means that all resources such as file descriptors and\nmemory-mapped regions got duplicated. It is your responsibility to make\nsure that the closure does not violate library invariants by making\ninvalid use of these duplicates.\n\nPanicking in the closure is safe only if all the format arguments for the\npanic message can be safely formatted; this is because although\n`Command` calls [`std::panic::always_abort`](crate::panic::always_abort)\nbefore calling the pre_exec hook, panic will still try to format the\npanic message.\n\nWhen this closure is run, aspects such as the stdio file descriptors and\nworking directory have successfully been changed, so output to these\nlocations might not appear where intended.\n\n[POSIX fork() specification]:\n    https://pubs.opengroup.org/onlinepubs/9699919799/functions/fork.html\n[`std::env`]: mod@crate::env","links":{"mod@crate::env":"1:2326:607","crate::panic::always_abort":"1:6917:5005"},"attrs":["#[stable(feature = \"process_pre_exec\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"1:7477:6730","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2868-0:3766:1659":{"id":"b:2:2868-0:3766:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatWith","id":"0:3766:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4741:1849":{"id":"0:4741:1849","crate_id":0,"name":"Item","span":{"filename":"src/ziptuple.rs","begin":[130,0],"end":[130,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"C"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"D"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]}}},"0:3798":{"id":"0:3798","crate_id":0,"name":null,"span":{"filename":"src/format.rs","begin":[112,0],"end":[113,70]},"visibility":{"restricted":{"parent":"0:1247:678","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::LowerExp","id":"2:10581:3706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"LowerExp","id":"2:10581:3706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3801:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3877:4728":{"id":"2:3877:4728","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:2448":{"id":"0:2448","crate_id":0,"name":null,"span":{"filename":"src/with_position.rs","begin":[99,0],"end":[100,2]},"visibility":{"restricted":{"parent":"0:2419:1717","path":"::with_position"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WithPosition","id":"0:2430:1718","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:0:2854-0:4142:1708":{"id":"b:0:2854-0:4142:1708","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleWindows","id":"0:4142:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:9153:3194":{"id":"2:9153:3194","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1205":{"id":"0:1205","crate_id":0,"name":null,"span":{"filename":"src/flatten_ok.rs","begin":[34,0],"end":[92,1]},"visibility":{"restricted":{"parent":"0:1179:1660","path":"::flatten_ok"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FlattenOk","id":"0:1198:1661","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:1209:1849","0:1210:932","0:1211:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6506:1415":{"id":"5:6506:1415","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":"Converts the given value to a `String`.\n\n# Examples\n\nBasic usage:\n\n```\nlet i = 5;\nlet five = String::from(\"5\");\n\nassert_eq!(five, i.to_string());\n```","links":{},"attrs":["#[rustc_conversion_suggestion]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8479:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1211:1754":{"id":"0:1211:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/flatten_ok.rs","begin":[75,4],"end":[91,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:698":{"id":"0:698","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[563,0],"end":[597,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"MergePredicate","id":"0:662:3274","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeBy","id":"0:674:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:702:1849","0:703:932","0:704:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3370:216-0:3748:1653":{"id":"a:2:3370:216-0:3748:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CombinationsWithReplacement","id":"0:3748:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3180:136":{"id":"2:3180:136","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3182:688"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4075:1701":{"id":"0:4075:1701","crate_id":0,"name":"RepeatCall","span":{"filename":"src/sources.rs","begin":[11,0],"end":[13,1]},"visibility":"public","docs":"See [`repeat_call`](crate::repeat_call) for more information.","links":{"crate::repeat_call":"0:2124:1739"},"attrs":["#[deprecated(note = \"Use std repeat_with() instead\", since = \"0.8.0\")]"],"deprecation":{"since":"0.8.0","note":"Use std repeat_with() instead"},"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:4075:1701","a:2:9532:4793-0:4075:1701","a:2:3382:225-0:4075:1701","a:2:3370:216-0:4075:1701","a:2:3411:4706-0:4075:1701","b:0:2854-0:4075:1701","b:2:8676-0:4075:1701","b:2:4104-0:4075:1701","b:2:2865-0:4075:1701","b:2:3203-0:4075:1701","b:2:3207-0:4075:1701","b:2:3218-0:4075:1701","b:2:2868-0:4075:1701","b:2:3213-0:4075:1701","b:5:848-0:4075:1701","0:4078","0:2122","0:2127"]}},"0:3919:415":{"id":"0:3919:415","crate_id":0,"name":"clone","span":{"filename":"src/minmax.rs","begin":[5,15],"end":[5,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3370:216-0:3017:1648":{"id":"a:2:3370:216-0:3017:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Step","id":"0:3017:1648","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3370:216-0:1723:1679":{"id":"a:2:3370:216-0:1723:1679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeJoinBy","id":"0:1723:1679","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3413:1565":{"id":"0:3413:1565","crate_id":0,"name":"1","span":{"filename":"src/either_or_both.rs","begin":[9,12],"end":[9,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"B"}},"0:4628:4379":{"id":"0:4628:4379","crate_id":0,"name":"Only","span":{"filename":"src/with_position.rs","begin":[46,4],"end":[46,11]},"visibility":"default","docs":"This is the only element.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:4630:1564"]}},"0:3397:1646":{"id":"0:3397:1646","crate_id":0,"name":"Update","span":{"filename":"src/adaptors/mod.rs","begin":[1069,0],"end":[1072,1]},"visibility":"public","docs":"An iterator adapter to apply a mutating function to each element before yielding it.\n\nSee [`.update()`](crate::Itertools::update) for more information.","links":{"crate::Itertools::update":"0:2618:2348"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:3397:1646","a:2:9532:4793-0:3397:1646","a:2:3382:225-0:3397:1646","a:2:3370:216-0:3397:1646","a:2:3411:4706-0:3397:1646","b:0:2854-0:3397:1646","b:2:8676-0:3397:1646","b:2:4104-0:3397:1646","b:2:2865-0:3397:1646","b:2:3203-0:3397:1646","b:2:3207-0:3397:1646","b:2:3218-0:3397:1646","b:2:2868-0:3397:1646","b:2:3213-0:3397:1646","b:5:848-0:3397:1646","0:3402","0:849","0:855","0:868","0:871","0:875"]}},"0:1313:1664":{"id":"0:1313:1664","crate_id":0,"name":"GroupingMapBy","span":{"filename":"src/grouping_map.rs","begin":[42,0],"end":[42,65]},"visibility":"public","docs":"`GroupingMapBy` is an intermediate struct for efficient group-and-fold operations.\n \nSee [`GroupingMap`] for more informations.","links":{"`GroupingMap`":"0:3836:1663"},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"GroupingMap","id":"0:3836:1663","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"MapForGrouping","id":"0:3822:2800","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"a:2:9533:4792-0:2992:1634":{"id":"a:2:9533:4792-0:2992:1634","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Product","id":"0:2992:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:343:3340":{"id":"0:343:3340","crate_id":0,"name":"CoalesceBy","span":{"filename":"src/adaptors/coalesce.rs","begin":[7,0],"end":[14,1]},"visibility":"public","docs":null,"links":{},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":[]}},"2:8971:3700":{"id":"2:8971:3700","crate_id":2,"name":"try_for_each","span":null,"visibility":"default","docs":"An iterator method that applies a fallible function to each item in the\niterator, stopping at the first error and returning that error.\n\nThis can also be thought of as the fallible form of [`for_each()`]\nor as the stateless version of [`try_fold()`].\n\n[`for_each()`]: Iterator::for_each\n[`try_fold()`]: Iterator::try_fold\n\n# Examples\n\n```\nuse std::fs::rename;\nuse std::io::{stdout, Write};\nuse std::path::Path;\n\nlet data = [\"no_tea.txt\", \"stale_bread.json\", \"torrential_rain.png\"];\n\nlet res = data.iter().try_for_each(|x| writeln!(stdout(), \"{x}\"));\nassert!(res.is_ok());\n\nlet mut it = data.iter().cloned();\nlet res = it.try_for_each(|x| rename(x, Path::new(x).with_extension(\"old\")));\nassert!(res.is_err());\n// It short-circuited, so the remaining items are still in the iterator:\nassert_eq!(it.next(), Some(\"stale_bread.json\"));\n```\n\nThe [`ControlFlow`] type can be used with this method for the situations\nin which you'd use `break` and `continue` in a normal loop:\n\n```\nuse std::ops::ControlFlow;\n\nlet r = (2..100).try_for_each(|x| {\n    if 323 % x == 0 {\n        return ControlFlow::Break(x)\n    }\n\n    ControlFlow::Continue(())\n});\nassert_eq!(r, ControlFlow::Break(17));\n```","links":{"`ControlFlow`":"2:46098:4761","Iterator::try_fold":"2:8967:2653","Iterator::for_each":"2:8898:2456"},"attrs":["#[stable(feature = \"iterator_try_fold\", since = \"1.27.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"R"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"generic","inner":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2792:2909":{"id":"0:2792:2909","crate_id":0,"name":"position_min","span":{"filename":"src/lib.rs","begin":[3270,4],"end":[3276,5]},"visibility":"default","docs":"Return the position of the minimum element in the iterator.\n\nIf several elements are equally minimum, the position of the\nfirst of them is returned.\n\n# Examples\n\n```\nuse itertools::Itertools;\n\nlet a: [i32; 0] = [];\nassert_eq!(a.iter().position_min(), None);\n\nlet a = [-3, 0, 1, 5, -10];\nassert_eq!(a.iter().position_min(), Some(4));\n\nlet a = [1, 1, -1, -1];\nassert_eq!(a.iter().position_min(), Some(2));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2124:1739":{"id":"0:2124:1739","crate_id":0,"name":"repeat_call","span":{"filename":"src/sources.rs","begin":[43,0],"end":[47,1]},"visibility":"public","docs":"An iterator source that produces elements indefinitely by calling\na given closure.\n\nIterator element type is the return type of the closure.\n\n```\nuse itertools::repeat_call;\nuse itertools::Itertools;\nuse std::collections::BinaryHeap;\n\nlet mut heap = BinaryHeap::from(vec![2, 5, 3, 7, 8]);\n\n// extract each element in sorted order\nfor element in repeat_call(|| heap.pop()).while_some() {\n    print!(\"{}\", element);\n}\n\nitertools::assert_equal(\n    repeat_call(|| 1).take(5),\n    vec![1, 1, 1, 1, 1]\n);\n```","links":{},"attrs":["#[deprecated(note = \"Use std repeat_with() instead\", since = \"0.8.0\")]"],"deprecation":{"since":"0.8.0","note":"Use std repeat_with() instead"},"kind":"function","inner":{"decl":{"inputs":[["function",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"RepeatCall","id":"0:4075:1701","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[],"output":{"kind":"generic","inner":"A"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"a:2:9532:4793-0:1476:1671":{"id":"a:2:9532:4793-0:1476:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Groups","id":"0:1476:1671","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:4047:667":{"id":"0:4047:667","crate_id":0,"name":"fmt","span":{"filename":"src/process_results_impl.rs","begin":[8,9],"end":[8,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2250:2356":{"id":"0:2250:2356","crate_id":0,"name":"collect_from_iter_no_buf","span":{"filename":"src/tuple_impl.rs","begin":[246,4],"end":[247,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["iter",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3382:225-0:3375:1633":{"id":"a:2:3382:225-0:3375:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOk","id":"0:3375:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13775:57844":{"id":"2:13775:57844","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"2:13336:4565","prim@char":"1:15876:4439","str::rsplitn":"2:13778:57846"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49894:5405","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23059:16110":{"id":"2:23059:16110","crate_id":2,"name":"abs","span":null,"visibility":"default","docs":"Produces a vector where every lane has the absolute value of the\nequivalently-indexed lane in `self`.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4395":{"id":"0:4395","crate_id":0,"name":null,"span":{"filename":"src/unique_impl.rs","begin":[10,9],"end":[10,14]},"visibility":{"restricted":{"parent":"0:2350:1714","path":"::unique_impl"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:4399:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8199:5988":{"id":"2:8199:5988","crate_id":2,"name":"forward","span":null,"visibility":"default","docs":"Returns the value that would be obtained by taking the *successor*\nof `self` `count` times.\n\nIf this would overflow the range of values supported by `Self`,\nthis function is allowed to panic, wrap, or saturate.\nThe suggested behavior is to panic when debug assertions are enabled,\nand to wrap or saturate otherwise.\n\nUnsafe code should not rely on the correctness of behavior after overflow.\n\n# Invariants\n\nFor any `a`, `n`, and `m`, where no overflow occurs:\n\n* `Step::forward(Step::forward(a, n), m) == Step::forward(a, n + m)`\n\nFor any `a` and `n`, where no overflow occurs:\n\n* `Step::forward_checked(a, n) == Some(Step::forward(a, n))`\n* `Step::forward(a, n) == (0..n).fold(a, |x, _| Step::forward(x, 1))`\n  * Corollary: `Step::forward(a, 0) == a`\n* `Step::forward(a, n) >= a`\n* `Step::backward(Step::forward(a, n), n) == a`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["start",{"kind":"generic","inner":"Self"}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:4083:1702":{"id":"a:2:3411:4706-0:4083:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"St","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"St"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unfold","id":"0:4083:1702","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3382:225-0:4401:1715":{"id":"a:2:3382:225-0:4401:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4104-0:3017:1648":{"id":"b:2:4104-0:3017:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Step","id":"0:3017:1648","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13737:4562":{"id":"2:13737:4562","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49776:4069","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:4792-0:1527:1668":{"id":"a:2:9533:4792-0:1527:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunks","id":"0:1527:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:0:2854-0:1476:1671":{"id":"b:0:2854-0:1476:1671","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Groups","id":"0:1476:1671","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4123":{"id":"0:4123","crate_id":0,"name":null,"span":{"filename":"src/tuple_impl.rs","begin":[25,9],"end":[25,14]},"visibility":{"restricted":{"parent":"0:2180:1706","path":"::tuple_impl"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"HomogeneousTuple","id":"0:2196:1727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Buffer","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleBuffer","id":"0:4119:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:4125:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1823":{"id":"0:1823","crate_id":0,"name":null,"span":{"filename":"src/pad_tail.rs","begin":[93,0],"end":[96,2]},"visibility":{"restricted":{"parent":"0:1793:1684","path":"::pad_tail"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"primitive","inner":"usize"}],"output":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3902:415":{"id":"0:3902:415","crate_id":0,"name":"clone","span":{"filename":"src/merge_join.rs","begin":[43,4],"end":[43,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3914:4760":{"id":"2:3914:4760","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13742:37993":{"id":"2:13742:37993","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50082:5420","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3447":{"id":"0:3447","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"X","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Iter","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Iter"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Iter"}},{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}],"bindings":[]}}}},"items":["0:3461:1849","0:3462:932","0:3464:1754","0:3465:2582"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1844:1682":{"id":"0:1844:1682","crate_id":0,"name":"peek_nth","span":{"filename":"src/peek_nth.rs","begin":[65,4],"end":[71,5]},"visibility":"public","docs":"Returns a reference to the `nth` value without advancing the iterator.\n\n# Examples\n\nBasic usage:\n\n```rust\nuse itertools::peek_nth;\n\nlet xs = vec![1,2,3];\nlet mut iter = peek_nth(xs.iter());\n\nassert_eq!(iter.peek_nth(0), Some(&&1));\nassert_eq!(iter.next(), Some(&1));\n\n// The iterator does not advance even if we call `peek_nth` multiple times\nassert_eq!(iter.peek_nth(0), Some(&&2));\nassert_eq!(iter.peek_nth(1), Some(&&3));\nassert_eq!(iter.next(), Some(&2));\n\n// Calling `peek_nth` past the end of the iterator will return `None`\nassert_eq!(iter.peek_nth(1), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10572:667":{"id":"2:10572:667","crate_id":2,"name":"fmt","span":null,"visibility":"default","docs":"Formats the value using the given formatter.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48872:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2243:1849":{"id":"0:2243:1849","crate_id":0,"name":"Item","span":{"filename":"src/tuple_impl.rs","begin":[232,4],"end":[232,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:2622:2366":{"id":"0:2622:2366","crate_id":0,"name":"collect_tuple","span":{"filename":"src/lib.rs","begin":[1724,4],"end":[1735,5]},"visibility":"default","docs":"Collects all items from the iterator into a tuple of a specific size\n(up to 12).\n\nIf the number of elements inside the iterator is **exactly** equal to\nthe tuple size, then the tuple is returned inside `Some`, otherwise\n`None` is returned.\n\n```\nuse itertools::Itertools;\n\nlet iter = 1..3;\n\nif let Some((x, y)) = iter.collect_tuple() {\n    assert_eq!((x, y), (1, 2))\n} else {\n    panic!(\"Expected two elements\")\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"traits::HomogeneousTuple","id":"0:2196:1727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2981:667":{"id":"0:2981:667","crate_id":0,"name":"fmt","span":{"filename":"src/adaptors/mod.rs","begin":[88,16],"end":[88,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:602:3235":{"id":"0:602:3235","crate_id":0,"name":"put_back","span":{"filename":"src/adaptors/mod.rs","begin":[181,0],"end":[188,1]},"visibility":"public","docs":"Create an iterator where you can put back a single item","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:135":{"id":"0:135","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[119,4],"end":[119,48]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::cons_tuples_impl::ConsTuples","name":"ConsTuples","id":"0:3737:1655","glob":false}},"0:1263:667":{"id":"0:1263:667","crate_id":0,"name":"fmt","span":{"filename":"src/format.rs","begin":[54,4],"end":[70,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10823:22124":{"id":"2:10823:22124","crate_id":2,"name":"write_i128","span":null,"visibility":"default","docs":"Writes a single `i128` into this hasher.","links":{},"attrs":["#[stable(feature = \"i128\", since = \"1.26.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"i128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3469":{"id":"0:3469","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"X","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Iter","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Iter"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Iter"}},{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}],"bindings":[]}}}},"items":["0:3483:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9532:4793-0:3757:1657":{"id":"a:2:9532:4793-0:3757:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2517:1766":{"id":"0:2517:1766","crate_id":0,"name":"iproduct","span":{"filename":"src/lib.rs","begin":[266,0],"end":[282,1]},"visibility":"public","docs":"Create an iterator over the “cartesian product” of iterators.\n\nIterator element type is like `(A, B, ..., E)` if formed\nfrom iterators `(I, J, ..., M)` with element types `I::Item = A`, `J::Item = B`, etc.\n\n```\n# use itertools::iproduct;\n#\n# fn main() {\n// Iterate over the coordinates of a 4 x 4 x 4 grid\n// from (0, 0, 0), (0, 0, 1), .., (0, 1, 0), (0, 1, 1), .. etc until (3, 3, 3)\nfor (i, j, k) in iproduct!(0..4, 0..4, 0..4) {\n   // ..\n}\n# }\n```","links":{},"attrs":["#[macro_export]"],"deprecation":null,"kind":"macro","inner":"macro_rules! iproduct {\n    (@flatten $I:expr,) => { ... };\n    (@flatten $I:expr, $J:expr, $($K:expr,)*) => { ... };\n    ($I:expr) => { ... };\n    ($I:expr, $J:expr) => { ... };\n    ($I:expr, $J:expr, $($K:expr),+) => { ... };\n}"},"0:3955":{"id":"0:3955","crate_id":0,"name":null,"span":{"filename":"src/peek_nth.rs","begin":[7,9],"end":[7,14]},"visibility":{"restricted":{"parent":"0:1826:1682","path":"::peek_nth"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3957:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3979":{"id":"0:3979","crate_id":0,"name":null,"span":{"filename":"src/peeking_take_while.rs","begin":[144,0],"end":[144,61]},"visibility":{"restricted":{"parent":"0:1858:1686","path":"::peeking_take_while"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PeekingNext","id":"0:1868:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"::std::option::Iter","id":"2:47850:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:3982:4024"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:580":{"id":"0:580","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[50,0],"end":[74,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["0:583:1849","0:584:932","0:585:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6643:23413":{"id":"1:6643:23413","crate_id":1,"name":"into_raw_fd","span":null,"visibility":"default","docs":"Consumes this object, returning the raw underlying file descriptor.\n\nThis function is typically used to **transfer ownership** of the underlying\nfile descriptor to the caller. When used in this way, callers are then the unique\nowners of the file descriptor and must close it once it's no longer needed.\n\nHowever, transferring ownership is not strictly required. Use a\n[`Into<OwnedFd>::into`] implementation for an API which strictly\ntransfers ownership.\n\n# Example\n\n```no_run\nuse std::fs::File;\n# use std::io;\n#[cfg(unix)]\nuse std::os::unix::io::{IntoRawFd, RawFd};\n#[cfg(target_os = \"wasi\")]\nuse std::os::wasi::io::{IntoRawFd, RawFd};\n\nlet f = File::open(\"foo.txt\")?;\n#[cfg(any(unix, target_os = \"wasi\"))]\nlet raw_fd: RawFd = f.into_raw_fd();\n# Ok::<(), io::Error>(())\n```","links":{"`Into<OwnedFd>::into`":"2:3179:3309"},"attrs":["#[stable(feature = \"into_raw_os\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3213-0:1054:1651":{"id":"b:2:3213-0:1054:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Combinations","id":"0:1054:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:9129:5154":{"id":"2:9129:5154","crate_id":2,"name":"is_sorted","span":null,"visibility":"default","docs":"Checks if the elements of this iterator are sorted.\n\nThat is, for each element `a` and its following element `b`, `a <= b` must hold. If the\niterator yields exactly zero or one element, `true` is returned.\n\nNote that if `Self::Item` is only `PartialOrd`, but not `Ord`, the above definition\nimplies that this function returns `false` if any two consecutive items are not\ncomparable.\n\n# Examples\n\n```\n#![feature(is_sorted)]\n\nassert!([1, 2, 2, 9].iter().is_sorted());\nassert!(![1, 3, 2, 4].iter().is_sorted());\nassert!([0].iter().is_sorted());\nassert!(std::iter::empty::<i32>().is_sorted());\nassert!(![0.0, 1.0, f32::NAN].iter().is_sorted());\n```","links":{},"attrs":["#[unstable(feature = \"is_sorted\", reason = \"new API\", issue = \"53485\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4940":{"id":"0:4940","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[136,0],"end":[136,44]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"}]}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"C"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"D"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"E"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"G"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"H"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}}]}}],"bindings":[]}}}},"items":["0:4951:688"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1820":{"id":"0:1820","crate_id":0,"name":null,"span":{"filename":"src/pad_tail.rs","begin":[87,0],"end":[90,2]},"visibility":{"restricted":{"parent":"0:1793:1684","path":"::pad_tail"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"primitive","inner":"usize"}],"output":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1778":{"id":"0:1778","crate_id":0,"name":null,"span":{"filename":"src/multipeek_impl.rs","begin":[41,0],"end":[62,1]},"visibility":{"restricted":{"parent":"0:1757:1680","path":"::multipeek_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1780:3289"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9533:4792-0:4037:1691":{"id":"a:2:9533:4792-0:4037:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ProcessResults","id":"0:4037:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3196:3315":{"id":"0:3196:3315","crate_id":0,"name":"Tuple6Combination","span":{"filename":"src/adaptors/mod.rs","begin":[826,0],"end":[826,71]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"a:2:9533:4792-0:1917:1689":{"id":"a:2:9533:4792-0:1917:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Permutations","id":"0:1917:1689","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3411:4706-0:2954:1630":{"id":"a:2:3411:4706-0:2954:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10571:3709":{"id":"2:10571:3709","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10572:667"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9121:836":{"id":"2:9121:836","crate_id":2,"name":"lt","span":null,"visibility":"default","docs":"Determines if the elements of this [`Iterator`] are [lexicographically](Ord#lexicographical-comparison)\nless than those of another.\n\n# Examples\n\n```\nassert_eq!([1].iter().lt([1].iter()), false);\nassert_eq!([1].iter().lt([1, 2].iter()), true);\nassert_eq!([1, 2].iter().lt([1].iter()), false);\nassert_eq!([1, 2].iter().lt([1, 2].iter()), false);\n```","links":{"`Iterator`":"2:8873:159","Ord#lexicographical-comparison":"2:2956:180"},"attrs":["#[stable(feature = \"iter_order\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1007:2582":{"id":"0:1007:2582","crate_id":0,"name":"fold","span":{"filename":"src/free.rs","begin":[180,0],"end":[185,1]},"visibility":"public","docs":"Perform a fold operation over the iterable.\n\n[`IntoIterator`] enabled version of [`Iterator::fold`].\n\n```\nuse itertools::fold;\n\nassert_eq!(fold(&[1., 2., 3.], 0., |a, &b| f32::max(a, b)), 3.);\n```","links":{"`IntoIterator`":"2:8672:152","`Iterator::fold`":"2:8980:2582"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}],["init",{"kind":"generic","inner":"B"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"B"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"B"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}],"output":{"kind":"generic","inner":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:4104-0:4644:1720":{"id":"b:2:4104-0:4644:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3218-0:3777:1658":{"id":"b:2:3218-0:3777:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4687":{"id":"0:4687","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[127,0],"end":[127,17]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"}]}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:0:2854-0:4092:1703":{"id":"b:0:2854-0:4092:1703","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iterate","id":"0:4092:1703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10578:667":{"id":"2:10578:667","crate_id":2,"name":"fmt","span":null,"visibility":"default","docs":"Formats the value using the given formatter.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48872:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4705":{"id":"0:4705","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[128,0],"end":[128,20]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"}]}}],"bindings":[]}}}},"items":["0:4708:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3370:216-0:5099:2652":{"id":"a:2:3370:216-0:5099:2652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2847:2999":{"id":"0:2847:2999","crate_id":0,"name":"counts","span":{"filename":"src/lib.rs","begin":[3582,4],"end":[3590,5]},"visibility":"default","docs":"Collect the items in this iterator and return a `HashMap` which\ncontains each item that appears in the iterator and the number\nof times it appears.\n\n# Examples\n```\n# use itertools::Itertools;\nlet counts = [1, 1, 1, 3, 3, 5].into_iter().counts();\nassert_eq!(counts[&1], 3);\nassert_eq!(counts[&3], 2);\nassert_eq!(counts[&5], 1);\nassert_eq!(counts.get(&0), None);\n```","links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}},{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9532:4793-0:709:1641":{"id":"a:2:9532:4793-0:709:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TakeWhileRef","id":"0:709:1641","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:3370:216-0:1883:1687":{"id":"a:2:3370:216-0:1883:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekingTakeWhile","id":"0:1883:1687","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9532:4793-0:4112:1705":{"id":"a:2:9532:4793-0:4112:1705","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tee","id":"0:4112:1705","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:3203-0:3836:1663":{"id":"b:2:3203-0:3836:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupingMap","id":"0:3836:1663","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:858:1849":{"id":"0:858:1849","crate_id":0,"name":"Item","span":{"filename":"src/adaptors/mod.rs","begin":[1095,4],"end":[1095,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:3474:4741":{"id":"2:3474:4741","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3476:1374"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4104-0:1490:1670":{"id":"b:2:4104-0:1490:1670","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Group","id":"0:1490:1670","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2559:2036":{"id":"0:2559:2036","crate_id":0,"name":"filter_ok","span":{"filename":"src/lib.rs","begin":[880,4],"end":[885,5]},"visibility":"default","docs":"Return an iterator adaptor that filters every `Result::Ok`\nvalue with the provided closure. `Result::Err` values are\nunchanged.\n\n```\nuse itertools::Itertools;\n\nlet input = vec![Ok(22), Err(false), Ok(11)];\nlet it = input.into_iter().filter_ok(|&i| i > 20);\nitertools::assert_equal(it, vec![Ok(22), Err(false)]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"FilterOk","id":"0:3375:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2591:2178":{"id":"0:2591:2178","crate_id":0,"name":"dedup_by_with_count","span":{"filename":"src/lib.rs","begin":[1239,4],"end":[1245,5]},"visibility":"default","docs":"Remove duplicates from sections of consecutive identical elements, while keeping a count of\nhow many repeated elements were present.\nThis will determine equality using a comparison function.\nIf the iterator is sorted, all elements will be unique.\n\nIterator element type is `(usize, Self::Item)`.\n\nThis iterator is *fused*.\n\n```\nuse itertools::Itertools;\n\nlet data = vec![(0, 'a'), (1, 'a'), (0, 'b'), (0, 'c'), (1, 'c'), (1, 'b'), (2, 'b')];\nitertools::assert_equal(data.into_iter().dedup_by_with_count(|x, y| x.1 == y.1),\n                        vec![(2, (0, 'a')), (1, (0, 'b')), (2, (0, 'c')), (2, (1, 'b'))]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["cmp",{"kind":"generic","inner":"Cmp"}]],"output":{"kind":"resolved_path","inner":{"name":"DedupByWithCount","id":"0:416:1629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"Cmp"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Cmp","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Cmp"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:110":{"id":"0:110","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[107,8],"end":[107,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::TupleCombinations","name":"TupleCombinations","id":"0:3045:1644","glob":false}},"b:2:3203-0:3951:1683":{"id":"b:2:3203-0:3951:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:4411:6796":{"id":"1:4411:6796","crate_id":1,"name":"read","span":null,"visibility":"default","docs":"Pull some bytes from this source into the specified buffer, returning\nhow many bytes were read.\n\nThis function does not provide any guarantees about whether it blocks\nwaiting for data, but if an object needs to block for a read and cannot,\nit will typically signal this via an [`Err`] return value.\n\nIf the return value of this method is [`Ok(n)`], then implementations must\nguarantee that `0 <= n <= buf.len()`. A nonzero `n` value indicates\nthat the buffer `buf` has been filled in with `n` bytes of data from this\nsource. If `n` is `0`, then it can indicate one of two scenarios:\n\n1. This reader has reached its \"end of file\" and will likely no longer\n   be able to produce bytes. Note that this does not mean that the\n   reader will *always* no longer be able to produce bytes. As an example,\n   on Linux, this method will call the `recv` syscall for a [`TcpStream`],\n   where returning zero indicates the connection was shut down correctly. While\n   for [`File`], it is possible to reach the end of file and get zero as result,\n   but if more data is appended to the file, future calls to `read` will return\n   more data.\n2. The buffer specified was 0 bytes in length.\n\nIt is not an error if the returned value `n` is smaller than the buffer size,\neven when the reader is not at the end of the stream yet.\nThis may happen for example because fewer bytes are actually available right now\n(e. g. being close to end-of-file) or because read() was interrupted by a signal.\n\nAs this trait is safe to implement, callers cannot rely on `n <= buf.len()` for safety.\nExtra care needs to be taken when `unsafe` functions are used to access the read bytes.\nCallers have to ensure that no unchecked out-of-bounds accesses are possible even if\n`n > buf.len()`.\n\nNo guarantees are provided about the contents of `buf` when this\nfunction is called, implementations cannot rely on any property of the\ncontents of `buf` being true. It is recommended that *implementations*\nonly write data to `buf` instead of reading its contents.\n\nCorrespondingly, however, *callers* of this method must not assume any guarantees\nabout how the implementation uses `buf`. The trait is safe to implement,\nso it is possible that the code that's supposed to write to the buffer might also read\nfrom it. It is your responsibility to make sure that `buf` is initialized\nbefore calling `read`. Calling `read` with an uninitialized `buf` (of the kind one\nobtains via [`MaybeUninit<T>`]) is not safe, and can lead to undefined behavior.\n\n[`MaybeUninit<T>`]: crate::mem::MaybeUninit\n\n# Errors\n\nIf this function encounters any form of I/O or other error, an error\nvariant will be returned. If an error is returned then it must be\nguaranteed that no bytes were read.\n\nAn error of the [`ErrorKind::Interrupted`] kind is non-fatal and the read\noperation should be retried if there is nothing else to do.\n\n# Examples\n\n[`File`]s implement `Read`:\n\n[`Ok(n)`]: Ok\n[`File`]: crate::fs::File\n[`TcpStream`]: crate::net::TcpStream\n\n```no_run\nuse std::io;\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() -> io::Result<()> {\n    let mut f = File::open(\"foo.txt\")?;\n    let mut buffer = [0; 10];\n\n    // read up to 10 bytes\n    let n = f.read(&mut buffer[..])?;\n\n    println!(\"The bytes: {:?}\", &buffer[..n]);\n    Ok(())\n}\n```","links":{"`Err`":"2:47940:127","Ok":"2:47937:178","crate::mem::MaybeUninit":"2:32630:4590","`ErrorKind::Interrupted`":"1:10863:10656","crate::fs::File":"1:2909:129","crate::net::TcpStream":"1:5154:6835"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:5518:10826":{"id":"1:5518:10826","crate_id":1,"name":"custom_flags","span":null,"visibility":"default","docs":"Pass custom flags to the `flags` argument of `open`.\n\nThe bits that define the access mode are masked out with `O_ACCMODE`, to\nensure they do not interfere with the access mode set by Rusts options.\n\nCustom flags can only set flags, not remove flags set by Rusts options.\nThis options overwrites any previously set custom flags.\n\n# Examples\n\n```no_run\n# #![feature(rustc_private)]\nextern crate libc;\nuse std::fs::OpenOptions;\nuse std::os::unix::fs::OpenOptionsExt;\n\n# fn main() {\nlet mut options = OpenOptions::new();\noptions.write(true);\nif cfg!(unix) {\n    options.custom_flags(libc::O_NOFOLLOW);\n}\nlet file = options.open(\"foo.txt\");\n# }\n```","links":{},"attrs":["#[stable(feature = \"open_options_ext\", since = \"1.10.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["flags",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4160":{"id":"0:4160","crate_id":0,"name":null,"span":{"filename":"src/tuple_impl.rs","begin":[204,9],"end":[204,14]},"visibility":{"restricted":{"parent":"0:2180:1706","path":"::tuple_impl"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"TupleCollect","id":"0:2245:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CircularTupleWindows","id":"0:4155:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:4163:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:0:2854-0:1723:1679":{"id":"b:0:2854-0:1723:1679","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeJoinBy","id":"0:1723:1679","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:728:1754":{"id":"0:728:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/adaptors/mod.rs","begin":[649,4],"end":[651,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:361:3342":{"id":"0:361:3342","crate_id":0,"name":"coalesce_pair","span":{"filename":"src/adaptors/coalesce.rs","begin":[32,4],"end":[32,71]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"generic","inner":"T"}],["item",{"kind":"generic","inner":"Item"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"T"},{"kind":"generic","inner":"T"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:10574:667":{"id":"2:10574:667","crate_id":2,"name":"fmt","span":null,"visibility":"default","docs":"Formats the value using the given formatter.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48872:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4792":{"id":"0:4792","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[132,0],"end":[132,32]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]","#[allow(unused_assignments)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"}]}}],"bindings":[]}}}},"items":["0:4799:1849","0:4800:932","0:4801:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9110:5152":{"id":"2:9110:5152","crate_id":2,"name":"partial_cmp_by","span":null,"visibility":"default","docs":"[Lexicographically](Ord#lexicographical-comparison) compares the elements of this [`Iterator`] with those\nof another with respect to the specified comparison function.\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(iter_order_by)]\n\nuse std::cmp::Ordering;\n\nlet xs = [1.0, 2.0, 3.0, 4.0];\nlet ys = [1.0, 4.0, 9.0, 16.0];\n\nassert_eq!(\n    xs.iter().partial_cmp_by(&ys, |&x, &y| x.partial_cmp(&y)),\n    Some(Ordering::Less)\n);\nassert_eq!(\n    xs.iter().partial_cmp_by(&ys, |&x, &y| (x * x).partial_cmp(&y)),\n    Some(Ordering::Equal)\n);\nassert_eq!(\n    xs.iter().partial_cmp_by(&ys, |&x, &y| (2.0 * x).partial_cmp(&y)),\n    Some(Ordering::Greater)\n);\n```","links":{"Ord#lexicographical-comparison":"2:2956:180","`Iterator`":"2:8873:159"},"attrs":["#[unstable(feature = \"iter_order_by\", issue = \"64295\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}],["partial_cmp",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12777:1849":{"id":"2:12777:1849","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":"The element type of the slice being matched on.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:3809:667":{"id":"0:3809:667","crate_id":0,"name":"fmt","span":{"filename":"src/format.rs","begin":[112,0],"end":[113,70]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4472:7526":{"id":"1:4472:7526","crate_id":1,"name":"flush","span":null,"visibility":"default","docs":"Flush this output stream, ensuring that all intermediately buffered\ncontents reach their destination.\n\n# Errors\n\nIt is considered an error if not all bytes could be written due to\nI/O errors or EOF being reached.\n\n# Examples\n\n```no_run\nuse std::io::prelude::*;\nuse std::io::BufWriter;\nuse std::fs::File;\n\nfn main() -> std::io::Result<()> {\n    let mut buffer = BufWriter::new(File::create(\"foo.txt\")?);\n\n    buffer.write_all(b\"some bytes\")?;\n    buffer.flush()?;\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2579:2101":{"id":"0:2579:2101","crate_id":0,"name":"kmerge","span":{"filename":"src/lib.rs","begin":[1028,4],"end":[1034,5]},"visibility":"default","docs":"Return an iterator adaptor that flattens an iterator of iterators by\nmerging them in ascending order.\n\nIf all base iterators are sorted (ascending), the result is sorted.\n\nIterator element type is `Self::Item`.\n\n```\nuse itertools::Itertools;\n\nlet a = (0..6).step(3);\nlet b = (1..6).step(3);\nlet c = (2..6).step(3);\nlet it = vec![a, b, c].into_iter().kmerge();\nitertools::assert_equal(it, vec![0, 1, 2, 3, 4, 5]);\n```","links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"KMerge","id":"0:1637:1676","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3621:131":{"id":"2:3621:131","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3623:383"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2653:2494":{"id":"0:2653:2494","crate_id":0,"name":"join","span":{"filename":"src/lib.rs","begin":[2059,4],"end":[2076,5]},"visibility":"default","docs":"Combine all iterator elements into one String, separated by `sep`.\n\nUse the `Display` implementation of each element.\n\n```\nuse itertools::Itertools;\n\nassert_eq!([\"a\", \"b\", \"c\"].iter().join(\", \"), \"a, b, c\");\nassert_eq!([1, 2, 3].iter().join(\", \"), \"1, 2, 3\");\n```","links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["sep",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8479:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"std::fmt::Display","id":"2:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:674:1640":{"id":"b:2:2868-0:674:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeBy","id":"0:674:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1723:1679":{"id":"0:1723:1679","crate_id":0,"name":"MergeJoinBy","span":{"filename":"src/merge_join.rs","begin":[30,0],"end":[34,1]},"visibility":"public","docs":"An iterator adaptor that merge-joins items from the two base iterators in ascending order.\n\nSee [`.merge_join_by()`](crate::Itertools::merge_join_by) for more information.","links":{"crate::Itertools::merge_join_by":"0:2576:2091"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:1723:1679","a:2:9532:4793-0:1723:1679","a:2:3382:225-0:1723:1679","a:2:3370:216-0:1723:1679","a:2:3411:4706-0:1723:1679","b:0:2854-0:1723:1679","b:2:8676-0:1723:1679","b:2:4104-0:1723:1679","b:2:2865-0:1723:1679","b:2:3203-0:1723:1679","b:2:3207-0:1723:1679","b:2:3218-0:1723:1679","b:2:2868-0:1723:1679","b:2:3213-0:1723:1679","0:1730","0:1734","0:1738"]}},"0:3600:1754":{"id":"0:3600:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9018:5146":{"id":"2:9018:5146","crate_id":2,"name":"try_find","span":null,"visibility":"default","docs":"Applies function to the elements of iterator and returns\nthe first true result or the first error.\n\nThe return type of this method depends on the return type of the closure.\nIf you return `Result<bool, E>` from the closure, you'll get a `Result<Option<Self::Item>; E>`.\nIf you return `Option<bool>` from the closure, you'll get an `Option<Option<Self::Item>>`.\n\n# Examples\n\n```\n#![feature(try_find)]\n\nlet a = [\"1\", \"2\", \"lol\", \"NaN\", \"5\"];\n\nlet is_my_num = |s: &str, search: i32| -> Result<bool, std::num::ParseIntError> {\n    Ok(s.parse::<i32>()?  == search)\n};\n\nlet result = a.iter().try_find(|&&s| is_my_num(s, 2));\nassert_eq!(result, Ok(Some(&\"2\")));\n\nlet result = a.iter().try_find(|&&s| is_my_num(s, 5));\nassert!(result.is_err());\n```\n\nThis also supports other types which implement `Try`, not just `Result`.\n```\n#![feature(try_find)]\n\nuse std::num::NonZeroU32;\nlet a = [3, 5, 7, 4, 9, 0, 11];\nlet result = a.iter().try_find(|&&x| NonZeroU32::new(x).map(|y| y.is_power_of_two()));\nassert_eq!(result, Some(Some(&4)));\nlet result = a.iter().take(3).try_find(|&&x| NonZeroU32::new(x).map(|y| y.is_power_of_two()));\nassert_eq!(result, Some(None));\nlet result = a.iter().rev().try_find(|&&x| NonZeroU32::new(x).map(|y| y.is_power_of_two()));\nassert_eq!(result, None);\n```","links":{},"attrs":["#[unstable(feature = \"try_find\", reason = \"new API\", issue = \"63178\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"qualified_path","inner":{"name":"TryType","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"Residual","id":"2:3842:4755","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"generic","inner":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"bool"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Residual","id":"2:3842:4755","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2959:2321":{"id":"2:2959:2321","crate_id":2,"name":"min","span":null,"visibility":"default","docs":"Compares and returns the minimum of two values.\n\nReturns the first argument if the comparison determines them to be equal.\n\n# Examples\n\n```\nassert_eq!(1, 1.min(2));\nassert_eq!(2, 2.min(2));\n```","links":{},"attrs":["#[stable(feature = \"ord_max_min\", since = \"1.21.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1316":{"id":"0:1316","crate_id":0,"name":null,"span":{"filename":"src/grouping_map.rs","begin":[55,0],"end":[535,1]},"visibility":{"restricted":{"parent":"0:1274:1662","path":"::grouping_map"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"K"},{"kind":"generic","inner":"V"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"GroupingMap","id":"0:3836:1663","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1320:3749","0:1324:2582","0:1329:3771","0:1332:2468","0:1335:3564","0:1337:2889","0:1340:3800","0:1344:2321","0:1346:2910","0:1349:3811","0:1353:1734","0:1355:2878","0:1358:2874","0:1362:2669","0:1364:2678"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2865-0:4670:1724":{"id":"b:2:2865-0:4670:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:4792-0:1054:1651":{"id":"a:2:9533:4792-0:1054:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Combinations","id":"0:1054:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10581:3706":{"id":"2:10581:3706","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10582:667"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6642:6554":{"id":"1:6642:6554","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6643:23413"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:900:3463":{"id":"0:900:3463","crate_id":0,"name":"map_right","span":{"filename":"src/either_or_both.rs","begin":[117,4],"end":[126,5]},"visibility":"public","docs":"Apply the function `f` on the value `b` in `Right(b)` or `Both(a, b)` variants.\nIf it is present rewrapping the result in `self`'s original variant.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"M"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"B"}],"output":{"kind":"generic","inner":"M"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2982:1635":{"id":"0:2982:1635","crate_id":0,"name":"PutBack","span":{"filename":"src/adaptors/mod.rs","begin":[173,0],"end":[178,1]},"visibility":"public","docs":"An iterator adaptor that allows putting back a single\nitem to the front of the iterator.\n\nIterator element type is `I::Item`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["0:604","a:2:9533:4792-0:2982:1635","a:2:9532:4793-0:2982:1635","a:2:3382:225-0:2982:1635","a:2:3370:216-0:2982:1635","a:2:3411:4706-0:2982:1635","b:0:2854-0:2982:1635","b:2:8676-0:2982:1635","b:2:4104-0:2982:1635","b:2:2865-0:2982:1635","b:2:3203-0:2982:1635","b:2:3207-0:2982:1635","b:2:3218-0:2982:1635","b:2:2868-0:2982:1635","b:2:3213-0:2982:1635","b:5:848-0:2982:1635","0:2986","0:2989","0:609","0:1875"]}},"2:23146:16126":{"id":"2:23146:16126","crate_id":2,"name":"reduce_sum","span":null,"visibility":"default","docs":"Returns the sum of the lanes of the vector, with wrapping addition.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdUint","id":"2:23142:7061","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:5:848-0:4075:1701":{"id":"b:5:848-0:4075:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatCall","id":"0:4075:1701","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:2968:1631":{"id":"b:2:2865-0:2968:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InterleaveShortest","id":"0:2968:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3965:4024":{"id":"0:3965:4024","crate_id":0,"name":"peeking_next","span":{"filename":"src/peeking_take_while.rs","begin":[140,0],"end":[140,60]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["accept",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3835:376":{"id":"2:3835:376","crate_id":2,"name":"branch","span":null,"visibility":"default","docs":"Used in `?` to decide whether the operator should produce a value\n(because this returned [`ControlFlow::Continue`])\nor propagate a value back to the caller\n(because this returned [`ControlFlow::Break`]).\n\n# Examples\n\n```\n#![feature(try_trait_v2)]\nuse std::ops::{ControlFlow, Try};\n\nassert_eq!(Ok::<_, String>(3).branch(), ControlFlow::Continue(3));\nassert_eq!(Err::<String, _>(3).branch(), ControlFlow::Break(Err(3)));\n\nassert_eq!(Some(3).branch(), ControlFlow::Continue(3));\nassert_eq!(None::<String>.branch(), ControlFlow::Break(None));\n\nassert_eq!(ControlFlow::<String, _>::Continue(3).branch(), ControlFlow::Continue(3));\nassert_eq!(\n    ControlFlow::<_, String>::Break(3).branch(),\n    ControlFlow::Break(ControlFlow::Break(3)),\n);\n```","links":{"`ControlFlow::Break`":"2:46104:99","`ControlFlow::Continue`":"2:46101:106"},"attrs":["#[unstable(feature = \"try_trait_v2\", issue = \"84277\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"ControlFlow","id":"2:46098:4761","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3213-0:4657:1722":{"id":"b:2:3213-0:4657:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9532:4793-0:4058:1697":{"id":"a:2:9532:4793-0:4058:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:1103":{"id":"0:1103","crate_id":0,"name":null,"span":{"filename":"src/combinations_with_replacement.rs","begin":[105,0],"end":[109,2]},"visibility":{"restricted":{"parent":"0:1078:1652","path":"::combinations_with_replacement"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CombinationsWithReplacement","id":"0:3748:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4656:667":{"id":"0:4656:667","crate_id":0,"name":"fmt","span":{"filename":"src/zip_eq_impl.rs","begin":[6,16],"end":[6,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6468:10296":{"id":"1:6468:10296","crate_id":1,"name":"st_rdev","span":null,"visibility":"default","docs":"Returns the device ID that this file represents. Only relevant for special file.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_rdev());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3213-0:3904:1735":{"id":"b:2:3213-0:3904:1735","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3207-0:4388:1716":{"id":"b:2:3207-0:4388:1716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3370:216-0:4119:1707":{"id":"a:2:3370:216-0:4119:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Buffer","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TupleCollect","id":"0:2245:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleBuffer","id":"0:4119:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4104-0:1513:1666":{"id":"b:2:4104-0:1513:1666","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoChunks","id":"0:1513:1666","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3041:415":{"id":"0:3041:415","crate_id":0,"name":"clone","span":{"filename":"src/adaptors/mod.rs","begin":[658,9],"end":[658,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"WhileSome","id":"0:3036:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23054:7004":{"id":"2:23054:7004","crate_id":2,"name":"Mask","span":null,"visibility":"default","docs":"Mask type used for manipulating this SIMD vector type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:3423:415":{"id":"0:3423:415","crate_id":0,"name":"clone","span":{"filename":"src/either_or_both.rs","begin":[6,9],"end":[6,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:270":{"id":"0:270","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[158,4],"end":[158,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::zip_longest::ZipLongest","name":"ZipLongest","id":"0:4657:1722","glob":false}},"0:3057:667":{"id":"0:3057:667","crate_id":0,"name":"fmt","span":{"filename":"src/adaptors/mod.rs","begin":[691,16],"end":[691,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23150:16135":{"id":"2:23150:16135","crate_id":2,"name":"reduce_and","span":null,"visibility":"default","docs":"Returns the cumulative bitwise \"and\" across the lanes of the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdUint","id":"2:23142:7061","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2462:1754":{"id":"0:2462:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/zip_eq_impl.rs","begin":[52,4],"end":[54,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1209:1849":{"id":"0:1209:1849","crate_id":0,"name":"Item","span":{"filename":"src/flatten_ok.rs","begin":[39,4],"end":[39,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}},"0:4078":{"id":"0:4078","crate_id":0,"name":null,"span":{"filename":"src/sources.rs","begin":[9,9],"end":[9,14]},"visibility":{"restricted":{"parent":"0:2115:1700","path":"::sources"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatCall","id":"0:4075:1701","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:4080:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5430:4908":{"id":"1:5430:4908","crate_id":1,"name":"into_vec","span":null,"visibility":"default","docs":"Yields the underlying byte vector of this [`OsString`].\n\nSee the module documentation for an example.","links":{"`OsString`":"1:2651:183"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7898:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8224:4593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:6461:23448":{"id":"1:6461:23448","crate_id":1,"name":"as_raw_stat","span":null,"visibility":"default","docs":"Gain a reference to the underlying `stat` structure which contains\nthe raw information returned by the OS.\n\nThe contents of the returned [`stat`] are **not** consistent across\nUnix platforms. The `os::unix::fs::MetadataExt` trait contains the\ncross-Unix abstractions contained within the raw stat.\n\n[`stat`]: struct@crate::os::linux::raw::stat\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let stat = meta.as_raw_stat();\n    Ok(())\n}\n```","links":{"struct@crate::os::linux::raw::stat":"1:11285:10288"},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]","#[deprecated(since = \"1.8.0\", note =\n\"other methods of this trait are now preferred\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.8.0","note":"other methods of this trait are now preferred"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"stat","id":"1:11285:10288","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3553:3067":{"id":"0:3553:3067","crate_id":0,"name":"next_back","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4825:688":{"id":"0:4825:688","crate_id":0,"name":"from","span":{"filename":"src/ziptuple.rs","begin":[133,0],"end":[133,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4400:667":{"id":"0:4400:667","crate_id":0,"name":"fmt","span":{"filename":"src/unique_impl.rs","begin":[25,4],"end":[25,43]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"::std::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13836:6616":{"id":"2:13836:6616","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:5453:6616"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50098:5429","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:4142:1708":{"id":"b:2:2868-0:4142:1708","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleWindows","id":"0:4142:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:4119:1707":{"id":"b:2:2868-0:4119:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleBuffer","id":"0:4119:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9532:4793-0:1158:1732":{"id":"a:2:9532:4793-0:1158:1732","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Diff","id":"0:1158:1732","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5532:23372":{"id":"1:5532:23372","crate_id":1,"name":"atime_nsec","span":null,"visibility":"default","docs":"Returns the last access time of the file, in nanoseconds since [`atime`].\n\n[`atime`]: MetadataExt::atime\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let nano_last_access_time = meta.atime_nsec();\n    Ok(())\n}\n```","links":{"MetadataExt::atime":"1:5531:23371"},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4141:667":{"id":"0:4141:667","crate_id":0,"name":"fmt","span":{"filename":"src/tuple_impl.rs","begin":[80,16],"end":[80,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2062":{"id":"0:2062","crate_id":0,"name":null,"span":{"filename":"src/rciter_impl.rs","begin":[75,0],"end":[82,1]},"visibility":{"restricted":{"parent":"0:2038:1696","path":"::rciter_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:2064:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3411:4706-0:3836:1663":{"id":"a:2:3411:4706-0:3836:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupingMap","id":"0:3836:1663","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5103:1564":{"id":"0:5103:1564","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[3764,13],"end":[3764,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"a:2:3411:4706-0:4644:1720":{"id":"a:2:3411:4706-0:4644:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:8676-0:3861:1674":{"id":"b:2:8676-0:3861:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"ElemF"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:2707:2704":{"id":"0:2707:2704","crate_id":0,"name":"sorted_unstable_by_key","span":{"filename":"src/lib.rs","begin":[2565,4],"end":[2573,5]},"visibility":"default","docs":"Sort all iterator elements into a new iterator in ascending order.\n\n**Note:** This consumes the entire iterator, uses the\n[`slice::sort_unstable_by_key`] method and returns the result as a new\niterator that owns its elements.\n\nThe sorted iterator, if directly collected to a `Vec`, is converted\nwithout any extra copying or allocation cost.\n\n```\nuse itertools::Itertools;\n\n// sort people in descending order by age\nlet people = vec![(\"Jane\", 20), (\"John\", 18), (\"Jill\", 30), (\"Jack\", 27)];\n\nlet oldest_people_first = people\n    .into_iter()\n    .sorted_unstable_by_key(|x| -x.1)\n    .map(|(person, _age)| person);\n\nitertools::assert_equal(oldest_people_first,\n                        vec![\"Jill\", \"Jack\", \"Jane\", \"John\"]);\n```","links":{"`slice::sort_unstable_by_key`":"2:12677:2705"},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"alloc::vec::IntoIter","id":"5:7484:1621","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"generic","inner":"K"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:1054:1651":{"id":"b:5:848-0:1054:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Combinations","id":"0:1054:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:1723:1679":{"id":"b:2:3213-0:1723:1679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeJoinBy","id":"0:1723:1679","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3203-0:3007:1636":{"id":"b:2:3203-0:3007:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Batching","id":"0:3007:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3802":{"id":"0:3802","crate_id":0,"name":null,"span":{"filename":"src/format.rs","begin":[112,0],"end":[113,70]},"visibility":{"restricted":{"parent":"0:1247:678","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::UpperHex","id":"2:10577:3707","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:10577:3707","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3805:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3203-0:1537:1667":{"id":"b:2:3203-0:1537:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunk","id":"0:1537:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6638:6535":{"id":"1:6638:6535","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6639:23404"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3476:1374":{"id":"2:3476:1374","crate_id":2,"name":"sub_assign","span":null,"visibility":"default","docs":"Performs the `-=` operation.\n\n# Example\n\n```\nlet mut x: u32 = 12;\nx -= 1;\nassert_eq!(x, 11);\n```","links":{},"attrs":["#[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4725":{"id":"0:4725","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[129,0],"end":[129,23]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"}]}}],"bindings":[]}}}},"items":["0:4729:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3411:4706-0:4657:1722":{"id":"a:2:3411:4706-0:4657:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3704:1754":{"id":"0:3704:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:852:5160":{"id":"5:852:5160","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:486:1637":{"id":"0:486:1637","crate_id":0,"name":"MapInto","span":{"filename":"src/adaptors/map.rs","begin":[106,0],"end":[106,68]},"visibility":"public","docs":"An iterator adapter to apply `Into` conversion to each element.\n\nSee [`.map_into()`](crate::Itertools::map_into) for more information.","links":{"crate::Itertools::map_into":"0:2547:2016"},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"MapSpecialCase","id":"0:2897:3377","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"resolved_path","inner":{"name":"MapSpecialCaseFnInto","id":"0:2918:3388","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"1:6221:23424":{"id":"1:6221:23424","crate_id":1,"name":"arg0","span":null,"visibility":"default","docs":"Set executable argument\n\nSet the first process argument, `argv[0]`, to something other than the\ndefault executable path.","links":{},"attrs":["#[stable(feature = \"process_set_argv0\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"generic","inner":"S"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"1:7477:6730","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3171:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2654:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:888:3442":{"id":"0:888:3442","crate_id":0,"name":"is_left","span":{"filename":"src/either_or_both.rs","begin":[29,4],"end":[34,5]},"visibility":"public","docs":"If Left, return true otherwise, return false.\nExclusive version of [`has_left`](EitherOrBoth::has_left).","links":{"EitherOrBoth::has_left":"0:886:3437"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4791:688":{"id":"0:4791:688","crate_id":0,"name":"from","span":{"filename":"src/ziptuple.rs","begin":[132,0],"end":[132,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3461:1849":{"id":"0:3461:1849","crate_id":0,"name":"Item","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"X"}]}}},"0:3765:415":{"id":"0:3765:415","crate_id":0,"name":"clone","span":{"filename":"src/flatten_ok.rs","begin":[141,4],"end":[141,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1787:1849":{"id":"0:1787:1849","crate_id":0,"name":"Item","span":{"filename":"src/multipeek_impl.rs","begin":[84,4],"end":[84,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"1:6218:23422":{"id":"1:6218:23422","crate_id":1,"name":"before_exec","span":null,"visibility":"default","docs":"Schedules a closure to be run just before the `exec` function is\ninvoked.\n\nThis method is stable and usable, but it should be unsafe. To fix\nthat, it got deprecated in favor of the unsafe [`pre_exec`].\n\n[`pre_exec`]: CommandExt::pre_exec","links":{"CommandExt::pre_exec":"1:6216:23421"},"attrs":["#[stable(feature = \"process_exec\", since = \"1.15.0\")]","#[deprecated(since = \"1.37.0\", note =\n\"should be unsafe, use `pre_exec` instead\")]"],"deprecation":{"since":"1.37.0","note":"should be unsafe, use `pre_exec` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"1:7477:6730","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2401:502":{"id":"0:2401:502","crate_id":0,"name":"count","span":{"filename":"src/unique_impl.rs","begin":[126,4],"end":[128,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2412:1744":{"id":"0:2412:1744","crate_id":0,"name":"multiunzip","span":{"filename":"src/unziptuple.rs","begin":[21,0],"end":[27,1]},"visibility":"public","docs":"Converts an iterator of tuples into a tuple of containers.\n\n`unzip()` consumes an entire iterator of n-ary tuples, producing `n` collections, one for each\ncolumn.\n\nThis function is, in some sense, the opposite of [`multizip`].\n\n```\nuse itertools::multiunzip;\n\nlet inputs = vec![(1, 2, 3), (4, 5, 6), (7, 8, 9)];\n\nlet (a, b, c): (Vec<_>, Vec<_>, Vec<_>) = multiunzip(inputs);\n\nassert_eq!(a, vec![1, 4, 7]);\nassert_eq!(b, vec![2, 5, 8]);\nassert_eq!(c, vec![3, 6, 9]);\n```\n\n[`multizip`]: crate::multizip","links":{"crate::multizip":"0:2513:1746"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"FromI"},"c_variadic":false},"generics":{"params":[{"name":"FromI","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"MultiUnzip","id":"0:2415:1745","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"FromI"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[148,29],"end":[148,39]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::sources::RepeatCall","name":"RepeatCall","id":"0:4075:1701","glob":false}},"1:6639:23404":{"id":"1:6639:23404","crate_id":1,"name":"as_raw_fd","span":null,"visibility":"default","docs":"Extracts the raw file descriptor.\n\nThis function is typically used to **borrow** an owned file descriptor.\nWhen used in this way, this method does **not** pass ownership of the\nraw file descriptor to the caller, and the file descriptor is only\nguaranteed to be valid while the original object has not yet been\ndestroyed.\n\nHowever, borrowing is not strictly required. See [`AsFd::as_fd`]\nfor an API which strictly borrows a file descriptor.\n\n# Example\n\n```no_run\nuse std::fs::File;\n# use std::io;\n#[cfg(unix)]\nuse std::os::unix::io::{AsRawFd, RawFd};\n#[cfg(target_os = \"wasi\")]\nuse std::os::wasi::io::{AsRawFd, RawFd};\n\nlet mut f = File::open(\"foo.txt\")?;\n// Note that `raw_fd` is only valid as long as `f` exists.\n#[cfg(any(unix, target_os = \"wasi\"))]\nlet raw_fd: RawFd = f.as_raw_fd();\n# Ok::<(), io::Error>(())\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13837:61731":{"id":"2:13837:61731","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:5450:61731"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50107:5430","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4501:7603":{"id":"1:4501:7603","crate_id":1,"name":"lines","span":null,"visibility":"default","docs":"Returns an iterator over the lines of this reader.\n\nThe iterator returned from this function will yield instances of\n<code>[io::Result]<[String]></code>. Each string returned will *not* have a newline\nbyte (the `0xA` byte) or `CRLF` (`0xD`, `0xA` bytes) at the end.\n\n[io::Result]: self::Result \"io::Result\"\n\n# Examples\n\n[`std::io::Cursor`][`Cursor`] is a type that implements `BufRead`. In\nthis example, we use [`Cursor`] to iterate over all the lines in a byte\nslice.\n\n```\nuse std::io::{self, BufRead};\n\nlet cursor = io::Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");\n\nlet mut lines_iter = cursor.lines().map(|l| l.unwrap());\nassert_eq!(lines_iter.next(), Some(String::from(\"lorem\")));\nassert_eq!(lines_iter.next(), Some(String::from(\"ipsum\")));\nassert_eq!(lines_iter.next(), Some(String::from(\"dolor\")));\nassert_eq!(lines_iter.next(), None);\n```\n\n# Errors\n\nEach line of the iterator has the same error semantics as [`BufRead::read_line`].","links":{"self::Result":"1:3801:208","`Cursor`":"1:10712:5450","`BufRead::read_line`":"1:4498:15666","String":"5:8479:221"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"1:10986:5431","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2444:932":{"id":"0:2444:932","crate_id":0,"name":"next","span":{"filename":"src/with_position.rs","begin":[64,4],"end":[88,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5014:1849":{"id":"0:5014:1849","crate_id":0,"name":"Item","span":{"filename":"src/ziptuple.rs","begin":[137,0],"end":[137,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"C"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"D"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"E"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"G"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"H"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"K"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]}}},"b:5:6507-0:3757:1657":{"id":"b:5:6507-0:3757:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6505:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:6509:1415"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1353:1734":{"id":"0:1353:1734","crate_id":0,"name":"minmax","span":{"filename":"src/grouping_map.rs","begin":[400,4],"end":[404,5]},"visibility":"public","docs":"Groups elements from the `GroupingMap` source by key and find the maximum and minimum of\neach group.\n \nIf several elements are equally maximum, the last element is picked.\nIf several elements are equally minimum, the first element is picked.\n \nSee [.minmax()](crate::Itertools::minmax) for the non-grouping version.\n \nDifferences from the non grouping version:\n- It never produces a `MinMaxResult::NoElements`\n- It doesn't have any speedup\n \nReturns a `HashMap` associating the key of each group with the minimum and maximum of that group's elements.\n \n```\nuse itertools::Itertools;\nuse itertools::MinMaxResult::{OneElement, MinMax};\n \nlet lookup = vec![1, 3, 4, 5, 7, 9, 12].into_iter()\n    .into_grouping_map_by(|&n| n % 3)\n    .minmax();\n \nassert_eq!(lookup[&0], MinMax(3, 12));\nassert_eq!(lookup[&1], MinMax(1, 7));\nassert_eq!(lookup[&2], OneElement(5));\nassert_eq!(lookup.len(), 3);\n```","links":{"crate::Itertools::minmax":"0:2769:1734"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3176:3454":{"id":"2:3176:3454","crate_id":2,"name":"as_mut","span":null,"visibility":"default","docs":"Converts this type into a mutable reference of the (usually inferred) input type.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3478:4739":{"id":"2:3478:4739","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3480:903"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3218-0:2430:1718":{"id":"b:2:3218-0:2430:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WithPosition","id":"0:2430:1718","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:3951:1683":{"id":"b:2:2868-0:3951:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2601:1686":{"id":"0:2601:1686","crate_id":0,"name":"peeking_take_while","span":{"filename":"src/lib.rs","begin":[1360,4],"end":[1365,5]},"visibility":"default","docs":"Return an iterator adaptor that borrows from this iterator and\ntakes items while the closure `accept` returns `true`.\n\nThis adaptor can only be used on iterators that implement `PeekingNext`\nlike `.peekable()`, `put_back` and a few other collection iterators.\n\nThe last and rejected element (first `false`) is still available when\n`peeking_take_while` is done.\n\n\nSee also [`.take_while_ref()`](Itertools::take_while_ref)\nwhich is a similar adaptor.","links":{"Itertools::take_while_ref":"0:2603:2232"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["accept",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"PeekingTakeWhile","id":"0:1883:1687","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PeekingNext","id":"0:1868:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2246:1849":{"id":"0:2246:1849","crate_id":0,"name":"Item","span":{"filename":"src/tuple_impl.rs","begin":[240,4],"end":[240,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:4771":{"id":"0:4771","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[131,0],"end":[131,29]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"}]}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8920:3245":{"id":"2:8920:3245","crate_id":2,"name":"take","span":null,"visibility":"default","docs":"Creates an iterator that yields the first `n` elements, or fewer\nif the underlying iterator ends sooner.\n\n`take(n)` yields elements until `n` elements are yielded or the end of\nthe iterator is reached (whichever happens first).\nThe returned iterator is a prefix of length `n` if the original iterator\ncontains at least `n` elements, otherwise it contains all of the\n(fewer than `n`) elements of the original iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter().take(2);\n\nassert_eq!(iter.next(), Some(&1));\nassert_eq!(iter.next(), Some(&2));\nassert_eq!(iter.next(), None);\n```\n\n`take()` is often used with an infinite iterator, to make it finite:\n\n```\nlet mut iter = (0..).take(3);\n\nassert_eq!(iter.next(), Some(0));\nassert_eq!(iter.next(), Some(1));\nassert_eq!(iter.next(), Some(2));\nassert_eq!(iter.next(), None);\n```\n\nIf less than `n` elements are available,\n`take` will limit itself to the size of the underlying iterator:\n\n```\nlet v = [1, 2];\nlet mut iter = v.into_iter().take(5);\nassert_eq!(iter.next(), Some(1));\nassert_eq!(iter.next(), Some(2));\nassert_eq!(iter.next(), None);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Take","id":"2:47096:4275","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:4792-0:4401:1715":{"id":"a:2:9533:4792-0:4401:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3411:4706-0:3748:1653":{"id":"a:2:3411:4706-0:3748:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CombinationsWithReplacement","id":"0:3748:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1841":{"id":"0:1841","crate_id":0,"name":null,"span":{"filename":"src/peek_nth.rs","begin":[33,0],"end":[72,1]},"visibility":{"restricted":{"parent":"0:1826:1682","path":"::peek_nth"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1843:3289","0:1844:1682"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:848-0:3939:1685":{"id":"b:5:848-0:3939:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6471:10300":{"id":"1:6471:10300","crate_id":1,"name":"st_atime_nsec","span":null,"visibility":"default","docs":"Returns the last access time of the file, in nanoseconds since [`st_atime`].\n\n[`st_atime`]: Self::st_atime\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_atime_nsec());\n    Ok(())\n}\n```","links":{"Self::st_atime":"1:6470:10299"},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2173":{"id":"0:2173","crate_id":0,"name":null,"span":{"filename":"src/tee.rs","begin":[37,0],"end":[73,1]},"visibility":{"restricted":{"parent":"0:2158:1704","path":"::tee"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tee","id":"0:4112:1705","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:2175:1849","0:2176:932","0:2177:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3370:216-0:4112:1705":{"id":"a:2:3370:216-0:4112:1705","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tee","id":"0:4112:1705","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:2865-0:3036:1642":{"id":"b:2:2865-0:3036:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WhileSome","id":"0:3036:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1218":{"id":"0:1218","crate_id":0,"name":null,"span":{"filename":"src/flatten_ok.rs","begin":[135,0],"end":[142,1]},"visibility":{"restricted":{"parent":"0:1179:1660","path":"::flatten_ok"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"2:8672:152","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FlattenOk","id":"0:1198:1661","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:3765:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3203-0:3748:1653":{"id":"b:2:3203-0:3748:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CombinationsWithReplacement","id":"0:3748:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13752:2389":{"id":"2:13752:2389","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"2:13336:4565","`None`":"2:47811:177","prim@char":"1:15876:4439"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:165":{"id":"0:165","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[126,52],"end":[126,58]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::groupbylazy::Chunks","name":"Chunks","id":"0:1527:1668","glob":false}},"2:3521:184":{"id":"2:3521:184","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `>>` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"b:2:3213-0:4119:1707":{"id":"b:2:3213-0:4119:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleBuffer","id":"0:4119:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:9075:2910":{"id":"2:9075:2910","crate_id":2,"name":"min_by","span":null,"visibility":"default","docs":"Returns the element that gives the minimum value with respect to the\nspecified comparison function.\n\nIf several elements are equally minimum, the first element is\nreturned. If the iterator is empty, [`None`] is returned.\n\n# Examples\n\n```\nlet a = [-3_i32, 0, 1, 5, -10];\nassert_eq!(*a.iter().min_by(|x, y| x.cmp(y)).unwrap(), -10);\n```","links":{"`None`":"2:47811:177"},"attrs":["#[stable(feature = \"iter_min_by\", since = \"1.15.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["compare",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1324:2582":{"id":"0:1324:2582","crate_id":0,"name":"fold","span":{"filename":"src/grouping_map.rs","begin":[139,4],"end":[147,5]},"visibility":"public","docs":"Groups elements from the `GroupingMap` source by key and applies `operation` to the elements\nof each group sequentially, passing the previously accumulated value, a reference to the key\nand the current element as arguments, and stores the results in a new map.\n\n`init` is the value from which will be cloned the initial value of each accumulator.\n\n`operation` is a function that is invoked on each element with the following parameters:\n - the current value of the accumulator of the group;\n - a reference to the key of the group this element belongs to;\n - the element from the source being accumulated.\n\nReturn a `HashMap` associating the key of each group with the result of folding that group's elements.\n \n```\nuse itertools::Itertools;\n \nlet lookup = (1..=7)\n    .into_grouping_map_by(|&n| n % 3)\n    .fold(0, |acc, _key, val| acc + val);\n \nassert_eq!(lookup[&0], 3 + 6);\nassert_eq!(lookup[&1], 1 + 4 + 7);\nassert_eq!(lookup[&2], 2 + 5);\nassert_eq!(lookup.len(), 3);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["init",{"kind":"generic","inner":"R"}],["operation",{"kind":"generic","inner":"FO"}]],"output":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"FO","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"FO"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"R"},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"K"}}},{"kind":"generic","inner":"V"}],"output":{"kind":"generic","inner":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6236:10367":{"id":"1:6236:10367","crate_id":1,"name":"signal","span":null,"visibility":"default","docs":"If the process was terminated by a signal, returns that signal.\n\nIn other words, if `WIFSIGNALED`, this returns `WTERMSIG`.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:23065:16116":{"id":"2:23065:16116","crate_id":2,"name":"is_nan","span":null,"visibility":"default","docs":"Returns true for each lane if its value is `NaN`.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23053:7076","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3594:117":{"id":"2:3594:117","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3595:227","2:3596:550"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4104-0:4401:1715":{"id":"b:2:4104-0:4401:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:4792-0:1476:1671":{"id":"a:2:9533:4792-0:1476:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Groups","id":"0:1476:1671","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:3207-0:1917:1689":{"id":"b:2:3207-0:1917:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Permutations","id":"0:1917:1689","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4689":{"id":"0:4689","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[127,0],"end":[127,17]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"}]}}],"bindings":[]}}}},"items":["0:4691:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5524:23368":{"id":"1:5524:23368","crate_id":1,"name":"ino","span":null,"visibility":"default","docs":"Returns the inode number.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let inode = meta.ino();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:895:3454":{"id":"0:895:3454","crate_id":0,"name":"as_mut","span":{"filename":"src/either_or_both.rs","begin":[85,4],"end":[91,5]},"visibility":"public","docs":"Converts from `&mut EitherOrBoth<A, B>` to `EitherOrBoth<&mut A, &mut B>`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"A"}}}},{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"B"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:4792-0:5099:2652":{"id":"a:2:9533:4792-0:5099:2652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2603:2232":{"id":"0:2603:2232","crate_id":0,"name":"take_while_ref","span":{"filename":"src/lib.rs","begin":[1385,4],"end":[1390,5]},"visibility":"default","docs":"Return an iterator adaptor that borrows from a `Clone`-able iterator\nto only pick off elements while the predicate `accept` returns `true`.\n\nIt uses the `Clone` trait to restore the original iterator so that the\nlast and rejected element (first `false`) is still available when\n`take_while_ref` is done.\n\n```\nuse itertools::Itertools;\n\nlet mut hexadecimals = \"0123456789abcdef\".chars();\n\nlet decimals = hexadecimals.take_while_ref(|c| c.is_numeric())\n                           .collect::<String>();\nassert_eq!(decimals, \"0123456789\");\nassert_eq!(hexadecimals.next(), Some('a'));\n\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["accept",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"TakeWhileRef","id":"0:709:1641","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4151":{"id":"0:4151","crate_id":0,"name":null,"span":{"filename":"src/tuple_impl.rs","begin":[137,16],"end":[137,21]},"visibility":{"restricted":{"parent":"0:2180:1706","path":"::tuple_impl"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"HomogeneousTuple","id":"0:2196:1727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleWindows","id":"0:4142:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:4154:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13819:61727":{"id":"2:13819:61727","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13336:4565","prim@char":"1:15876:4439"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13361:5417","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4675:415":{"id":"0:4675:415","crate_id":0,"name":"clone","span":{"filename":"src/ziptuple.rs","begin":[4,9],"end":[4,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:3757:1657":{"id":"b:2:3218-0:3757:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4874:932":{"id":"0:4874:932","crate_id":0,"name":"next","span":{"filename":"src/ziptuple.rs","begin":[134,0],"end":[134,38]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:0:2854-0:2430:1718":{"id":"b:0:2854-0:2430:1718","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WithPosition","id":"0:2430:1718","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3203-0:4037:1691":{"id":"b:2:3203-0:4037:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ProcessResults","id":"0:4037:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3797:667":{"id":"0:3797:667","crate_id":0,"name":"fmt","span":{"filename":"src/format.rs","begin":[112,0],"end":[113,70]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13360:23330":{"id":"2:13360:23330","crate_id":2,"name":"next_reject","span":null,"visibility":"default","docs":"Finds the next [`Reject`][SearchStep::Reject] result. See [`next()`][Searcher::next]\nand [`next_match()`][Searcher::next_match].\n\nUnlike [`next()`][Searcher::next], there is no guarantee that the returned ranges\nof this and [`next_match`][Searcher::next_match] will overlap.","links":{"Searcher::next":"2:13358:932","Searcher::next_match":"2:13359:23329","SearchStep::Reject":"2:50175:10535"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2616:2340":{"id":"0:2616:2340","crate_id":0,"name":"positions","span":{"filename":"src/lib.rs","begin":[1661,4],"end":[1666,5]},"visibility":"default","docs":"Return an iterator adaptor that yields the indices of all elements\nsatisfying a predicate, counted from the start of the iterator.\n\nEquivalent to `iter.enumerate().filter(|(_, v)| predicate(v)).map(|(i, _)| i)`.\n\n```\nuse itertools::Itertools;\n\nlet data = vec![1, 2, 3, 3, 4, 6, 7, 9];\nitertools::assert_equal(data.iter().positions(|v| v % 2 == 0), vec![1, 4, 5]);\n\nitertools::assert_equal(data.iter().positions(|v| v % 2 == 1).rev(), vec![7, 6, 3, 2, 0]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:722":{"id":"0:722","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[628,0],"end":[652,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TakeWhileRef","id":"0:709:1641","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:726:1849","0:727:932","0:728:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:656:1849":{"id":"0:656:1849","crate_id":0,"name":"Item","span":{"filename":"src/adaptors/mod.rs","begin":[440,4],"end":[440,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1141":{"id":"0:1141","crate_id":0,"name":null,"span":{"filename":"src/exactly_one_err.rs","begin":[73,0],"end":[73,78]},"visibility":{"restricted":{"parent":"0:1105:1656","path":"::exactly_one_err"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2865-0:1476:1671":{"id":"b:2:2865-0:1476:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Groups","id":"0:1476:1671","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4003":{"id":"0:4003","crate_id":0,"name":null,"span":{"filename":"src/peeking_take_while.rs","begin":[153,0],"end":[154,46]},"visibility":{"restricted":{"parent":"0:1858:1686","path":"::peeking_take_while"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PeekingNext","id":"0:1868:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PeekingNext","id":"0:1868:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"::std::iter::Rev","id":"2:47044:3524","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:4005:4024"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2176:932":{"id":"0:2176:932","crate_id":0,"name":"next","span":{"filename":"src/tee.rs","begin":[42,4],"end":[60,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:3861:1674":{"id":"a:2:3411:4706-0:3861:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"ElemF","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"ElemF"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"ElemF"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3370:216-0:2954:1630":{"id":"a:2:3370:216-0:2954:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1641:3964":{"id":"0:1641:3964","crate_id":0,"name":"kmerge_pred","span":{"filename":"src/kmerge_impl.rs","begin":[110,4],"end":[110,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["a",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}],["b",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:5:848-0:3375:1633":{"id":"b:5:848-0:3375:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOk","id":"0:3375:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8967:2653":{"id":"2:8967:2653","crate_id":2,"name":"try_fold","span":null,"visibility":"default","docs":"An iterator method that applies a function as long as it returns\nsuccessfully, producing a single, final value.\n\n`try_fold()` takes two arguments: an initial value, and a closure with\ntwo arguments: an 'accumulator', and an element. The closure either\nreturns successfully, with the value that the accumulator should have\nfor the next iteration, or it returns failure, with an error value that\nis propagated back to the caller immediately (short-circuiting).\n\nThe initial value is the value the accumulator will have on the first\ncall. If applying the closure succeeded against every element of the\niterator, `try_fold()` returns the final accumulator as success.\n\nFolding is useful whenever you have a collection of something, and want\nto produce a single value from it.\n\n# Note to Implementors\n\nSeveral of the other (forward) methods have default implementations in\nterms of this one, so try to implement this explicitly if it can\ndo something better than the default `for` loop implementation.\n\nIn particular, try to have this call `try_fold()` on the internal parts\nfrom which this iterator is composed. If multiple calls are needed,\nthe `?` operator may be convenient for chaining the accumulator value\nalong, but beware any invariants that need to be upheld before those\nearly returns. This is a `&mut self` method, so iteration needs to be\nresumable after hitting an error here.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\n// the checked sum of all of the elements of the array\nlet sum = a.iter().try_fold(0i8, |acc, &x| acc.checked_add(x));\n\nassert_eq!(sum, Some(6));\n```\n\nShort-circuiting:\n\n```\nlet a = [10, 20, 30, 100, 40, 50];\nlet mut it = a.iter();\n\n// This sum overflows when adding the 100 element\nlet sum = it.try_fold(0i8, |acc, &x| acc.checked_add(x));\nassert_eq!(sum, None);\n\n// Because it short-circuited, the remaining elements are still\n// available through the iterator.\nassert_eq!(it.len(), 2);\nassert_eq!(it.next(), Some(&40));\n```\n\nWhile you cannot `break` from a closure, the [`ControlFlow`] type allows\na similar idea:\n\n```\nuse std::ops::ControlFlow;\n\nlet triangular = (1..30).try_fold(0_i8, |prev, x| {\n    if let Some(next) = prev.checked_add(x) {\n        ControlFlow::Continue(next)\n    } else {\n        ControlFlow::Break(prev)\n    }\n});\nassert_eq!(triangular, ControlFlow::Break(120));\n\nlet triangular = (1..30).try_fold(0_u64, |prev, x| {\n    if let Some(next) = prev.checked_add(x) {\n        ControlFlow::Continue(next)\n    } else {\n        ControlFlow::Break(prev)\n    }\n});\nassert_eq!(triangular, ControlFlow::Continue(435));\n```","links":{"`ControlFlow`":"2:46098:4761"},"attrs":["#[stable(feature = \"iterator_try_fold\", since = \"1.27.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["init",{"kind":"generic","inner":"B"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"R"},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"B"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"generic","inner":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1452:1669":{"id":"0:1452:1669","crate_id":0,"name":"GroupBy","span":{"filename":"src/groupbylazy.rs","begin":[289,0],"end":[296,1]},"visibility":"public","docs":"`GroupBy` is the storage for the lazy grouping operation.\n\nIf the groups are consumed in their original order, or if each\ngroup is dropped without keeping it around, then `GroupBy` uses\nno allocations. It needs allocations only if several group iterators\nare alive at the same time.\n\nThis type implements [`IntoIterator`] (it is **not** an iterator\nitself), because the group iterators need to borrow from this\nvalue. It should be stored in a local variable or temporary and\niterated.\n\nSee [`.group_by()`](crate::Itertools::group_by) for more information.","links":{"crate::Itertools::group_by":"0:2535:1926","`IntoIterator`":"2:8672:152"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:1452:1669","a:2:9532:4793-0:1452:1669","a:2:3382:225-0:1452:1669","a:2:3370:216-0:1452:1669","a:2:3411:4706-0:1452:1669","b:2:4104-0:1452:1669","b:2:2865-0:1452:1669","b:2:3203-0:1452:1669","b:2:3207-0:1452:1669","b:2:3218-0:1452:1669","b:2:2868-0:1452:1669","b:2:3213-0:1452:1669","0:1468"]}},"2:2972:836":{"id":"2:2972:836","crate_id":2,"name":"lt","span":null,"visibility":"default","docs":"This method tests less than (for `self` and `other`) and is used by the `<` operator.\n\n# Examples\n\n```\nlet result = 1.0 < 2.0;\nassert_eq!(result, true);\n\nlet result = 2.0 < 1.0;\nassert_eq!(result, false);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Rhs"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3805:667":{"id":"0:3805:667","crate_id":0,"name":"fmt","span":{"filename":"src/format.rs","begin":[112,0],"end":[113,70]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:0:2854-0:3017:1648":{"id":"b:0:2854-0:3017:1648","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Step","id":"0:3017:1648","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3821:667":{"id":"0:3821:667","crate_id":0,"name":"fmt","span":{"filename":"src/format.rs","begin":[112,0],"end":[113,70]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:637":{"id":"0:637","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[367,0],"end":[371,2]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Product","id":"0:2992:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3678:1849":{"id":"0:3678:1849","crate_id":0,"name":"Item","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"X"}]}}},"b:2:2868-0:1883:1687":{"id":"b:2:2868-0:1883:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekingTakeWhile","id":"0:1883:1687","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3370:216-0:3836:1663":{"id":"a:2:3370:216-0:3836:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupingMap","id":"0:3836:1663","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3537:2582":{"id":"0:3537:2582","crate_id":0,"name":"fold","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["accum",{"kind":"generic","inner":"Acc"}],["f",{"kind":"generic","inner":"Fold"}]],"output":{"kind":"generic","inner":"Acc"},"c_variadic":false},"generics":{"params":[{"name":"Acc","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Fold","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Fold"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Acc"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"generic","inner":"Acc"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:1031:6614":{"id":"1:1031:6614","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1032:5158","1:1033:7359","1:1034:15395","1:1035:15396","1:1036:15397","1:1037:15398","1:1038:15399"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3946":{"id":"0:3946","crate_id":0,"name":null,"span":{"filename":"src/pad_tail.rs","begin":[10,9],"end":[10,14]},"visibility":{"restricted":{"parent":"0:1793:1684","path":"::pad_tail"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:3949:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10583:3705":{"id":"2:10583:3705","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10584:667"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:650:1849":{"id":"0:650:1849","crate_id":0,"name":"Item","span":{"filename":"src/adaptors/mod.rs","begin":[399,4],"end":[399,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"B"}}},"0:1169:1565":{"id":"0:1169:1565","crate_id":0,"name":"1","span":{"filename":"src/diff.rs","begin":[23,19],"end":[23,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}},"a:2:3411:4706-0:2430:1718":{"id":"a:2:3411:4706-0:2430:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WithPosition","id":"0:2430:1718","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1987":{"id":"0:1987","crate_id":0,"name":null,"span":{"filename":"src/powerset.rs","begin":[27,0],"end":[32,1]},"visibility":{"restricted":{"parent":"0:1958:1692","path":"::powerset"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Powerset","id":"0:1981:1693","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:4036:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4743:1754":{"id":"0:4743:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/ziptuple.rs","begin":[130,0],"end":[130,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2852:1744":{"id":"0:2852:1744","crate_id":0,"name":"multiunzip","span":{"filename":"src/lib.rs","begin":[3654,4],"end":[3659,5]},"visibility":"default","docs":"Converts an iterator of tuples into a tuple of containers.\n\n`unzip()` consumes an entire iterator of n-ary tuples, producing `n` collections, one for each\ncolumn.\n\nThis function is, in some sense, the opposite of [`multizip`].\n \n```\nuse itertools::Itertools;\n\nlet inputs = vec![(1, 2, 3), (4, 5, 6), (7, 8, 9)];\n\nlet (a, b, c): (Vec<_>, Vec<_>, Vec<_>) = inputs\n    .into_iter()\n    .multiunzip();\n\nassert_eq!(a, vec![1, 4, 7]);\nassert_eq!(b, vec![2, 5, 8]);\nassert_eq!(c, vec![3, 6, 9]);\n```","links":{"`multizip`":"0:2513:1746"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"FromI"},"c_variadic":false},"generics":{"params":[{"name":"FromI","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"MultiUnzip","id":"0:2415:1745","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"FromI"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:592":{"id":"0:592","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[111,0],"end":[161,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InterleaveShortest","id":"0:2968:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["0:595:1849","0:596:932","0:597:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5559:23382":{"id":"1:5559:23382","crate_id":1,"name":"is_fifo","span":null,"visibility":"default","docs":"Returns `true` if this file type is a fifo.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::FileTypeExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"fifo_file\")?;\n    let file_type = meta.file_type();\n    assert!(file_type.is_fifo());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"file_type_ext\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1877:4024":{"id":"0:1877:4024","crate_id":0,"name":"peeking_next","span":{"filename":"src/peeking_take_while.rs","begin":[40,4],"end":[52,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["accept",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3034:415":{"id":"0:3034:415","crate_id":0,"name":"clone","span":{"filename":"src/adaptors/mod.rs","begin":[560,4],"end":[560,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:537":{"id":"0:537","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[10,0],"end":[10,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::coalesce","name":"coalesce","id":"0:333:2153","glob":true}},"0:3414:161":{"id":"0:3414:161","crate_id":0,"name":"Left","span":{"filename":"src/either_or_both.rs","begin":[11,4],"end":[11,11]},"visibility":"default","docs":"Only the left value of type `A` is present.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:3416:1564"]}},"0:4845":{"id":"0:4845","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[133,0],"end":[133,35]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"}]}}],"bindings":[]}}}},"items":["0:4853:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2868-0:1723:1679":{"id":"b:2:2868-0:1723:1679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeJoinBy","id":"0:1723:1679","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9532:4793-0:4048:1695":{"id":"a:2:9532:4793-0:4048:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1671:932":{"id":"0:1671:932","crate_id":0,"name":"next","span":{"filename":"src/kmerge_impl.rs","begin":[201,4],"end":[213,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3173:312":{"id":"2:3173:312","crate_id":2,"name":"as_ref","span":null,"visibility":"default","docs":"Converts this type into a shared reference of the (usually inferred) input type.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:8950:5143":{"id":"2:8950:5143","crate_id":2,"name":"partition_in_place","span":null,"visibility":"default","docs":"Reorders the elements of this iterator *in-place* according to the given predicate,\nsuch that all those that return `true` precede all those that return `false`.\nReturns the number of `true` elements found.\n\nThe relative order of partitioned items is not maintained.\n\n# Current implementation\n\nCurrent algorithms tries finding the first element for which the predicate evaluates\nto false, and the last element for which it evaluates to true and repeatedly swaps them.\n\nTime complexity: *O*(*n*)\n\nSee also [`is_partitioned()`] and [`partition()`].\n\n[`is_partitioned()`]: Iterator::is_partitioned\n[`partition()`]: Iterator::partition\n\n# Examples\n\n```\n#![feature(iter_partition_in_place)]\n\nlet mut a = [1, 2, 3, 4, 5, 6, 7];\n\n// Partition in-place between evens and odds\nlet i = a.iter_mut().partition_in_place(|&n| n % 2 == 0);\n\nassert_eq!(i, 3);\nassert!(a[..i].iter().all(|&n| n % 2 == 0)); // evens\nassert!(a[i..].iter().all(|&n| n % 2 == 1)); // odds\n```","links":{"Iterator::is_partitioned":"2:8965:5144","Iterator::partition":"2:8940:3063"},"attrs":["#[unstable(feature = \"iter_partition_in_place\", reason = \"new API\", issue =\n\"62543\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'a"}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23115:16134":{"id":"2:23115:16134","crate_id":2,"name":"is_negative","span":null,"visibility":"default","docs":"Returns true for each negative lane and false if it is zero or positive.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdInt","id":"2:23106:7064","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:5:6507-0:3777:1658":{"id":"b:5:6507-0:3777:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6505:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:6509:1415"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13727:21636":{"id":"2:13727:21636","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11209:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11209:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3370:216-0:1054:1651":{"id":"a:2:3370:216-0:1054:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Combinations","id":"0:1054:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:848-0:1198:1661":{"id":"b:5:848-0:1198:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FlattenOk","id":"0:1198:1661","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11212:3884":{"id":"2:11212:3884","crate_id":2,"name":"get","span":null,"visibility":"default","docs":"Returns a shared reference to the output at this location, if in\nbounds.","links":{},"attrs":["#[unstable(feature = \"slice_index_methods\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["slice",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SliceIndex","id":"2:11209:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3392":{"id":"0:3392","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[996,9],"end":[996,14]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:3395:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9533:4792-0:2928:1649":{"id":"a:2:9533:4792-0:2928:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiProduct","id":"0:2928:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13778:57846":{"id":"2:13778:57846","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:15876:4439","self::pattern":"2:13336:4565","str::splitn":"2:13775:57844"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49912:5403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13361:5417","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3054":{"id":"0:3054","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[691,16],"end":[691,21]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"HasCombination","id":"0:737:2255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Combination","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:737:2255","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleCombinations","id":"0:3045:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:3057:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3207-0:3757:1657":{"id":"b:2:3207-0:3757:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:9095:5150":{"id":"2:9095:5150","crate_id":2,"name":"array_chunks","span":null,"visibility":"default","docs":"Returns an iterator over `N` elements of the iterator at a time.\n\nThe chunks do not overlap. If `N` does not divide the length of the\niterator, then the last up to `N-1` elements will be omitted and can be\nretrieved from the [`.into_remainder()`][ArrayChunks::into_remainder]\nfunction of the iterator.\n\n# Panics\n\nPanics if `N` is 0.\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(iter_array_chunks)]\n\nlet mut iter = \"lorem\".chars().array_chunks();\nassert_eq!(iter.next(), Some(['l', 'o']));\nassert_eq!(iter.next(), Some(['r', 'e']));\nassert_eq!(iter.next(), None);\nassert_eq!(iter.into_remainder().unwrap().as_slice(), &['m']);\n```\n\n```\n#![feature(iter_array_chunks)]\n\nlet data = [1, 1, 2, -2, 6, 0, 3, 1];\n//          ^-----^  ^------^\nfor [x, y, z] in data.iter().array_chunks() {\n    assert_eq!(x + y + z, 4);\n}\n```","links":{"ArrayChunks::into_remainder":"2:5995:70218"},"attrs":["#[track_caller]","#[unstable(feature = \"iter_array_chunks\", reason = \"recently added\", issue =\n\"100450\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"ArrayChunks","id":"2:46879:4653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"N","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"N","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:3017:1648":{"id":"b:2:2868-0:3017:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Step","id":"0:3017:1648","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:848-0:3777:1658":{"id":"b:5:848-0:3777:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:4906:1754":{"id":"2:4906:1754","crate_id":2,"name":"size_hint","span":null,"visibility":"default","docs":"Returns the bounds on the remaining length of the async iterator.\n\nSpecifically, `size_hint()` returns a tuple where the first element\nis the lower bound, and the second element is the upper bound.\n\nThe second half of the tuple that is returned is an <code>[Option]<[usize]></code>.\nA [`None`] here means that either there is no known upper bound, or the\nupper bound is larger than [`usize`].\n\n# Implementation notes\n\nIt is not enforced that an async iterator implementation yields the declared\nnumber of elements. A buggy async iterator may yield less than the lower bound\nor more than the upper bound of elements.\n\n`size_hint()` is primarily intended to be used for optimizations such as\nreserving space for the elements of the async iterator, but must not be\ntrusted to e.g., omit bounds checks in unsafe code. An incorrect\nimplementation of `size_hint()` should not lead to memory safety\nviolations.\n\nThat said, the implementation should provide a correct estimation,\nbecause otherwise it would be a violation of the trait's protocol.\n\nThe default implementation returns <code>(0, [None])</code> which is correct for any\nasync iterator.","links":{"`usize`":"1:15899:4459","`None`":"2:47811:177","usize":"1:15899:4459","None":"2:47811:177","Option":"2:47809:179"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:4401:1715":{"id":"b:2:2868-0:4401:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:791:1632":{"id":"b:2:2865-0:791:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterMapOk","id":"0:791:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3203-0:1723:1679":{"id":"b:2:3203-0:1723:1679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeJoinBy","id":"0:1723:1679","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3686":{"id":"0:3686","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"X","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Iter","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Iter"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Iter"}},{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}],"bindings":[]}}}},"items":["0:3693:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4104-0:4048:1695":{"id":"b:2:4104-0:4048:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4037:1691":{"id":"0:4037:1691","crate_id":0,"name":"ProcessResults","span":{"filename":"src/process_results_impl.rs","begin":[9,0],"end":[12,1]},"visibility":"public","docs":"An iterator that produces only the `T` values as long as the\ninner iterator produces `Ok(T)`.\n\nUsed by [`process_results`](crate::process_results), see its docs\nfor more information.","links":{"crate::process_results":"0:2013:1737"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:4037:1691","a:2:9532:4793-0:4037:1691","a:2:3382:225-0:4037:1691","a:2:3370:216-0:4037:1691","a:2:3411:4706-0:4037:1691","b:0:2854-0:4037:1691","b:2:8676-0:4037:1691","b:2:4104-0:4037:1691","b:2:2865-0:4037:1691","b:2:3203-0:4037:1691","b:2:3207-0:4037:1691","b:2:3218-0:4037:1691","b:2:2868-0:4037:1691","b:2:3213-0:4037:1691","0:4043","0:2000"]}},"0:2240":{"id":"0:2240","crate_id":0,"name":null,"span":{"filename":"src/tuple_impl.rs","begin":[227,0],"end":[237,1]},"visibility":{"restricted":{"parent":"0:2180:1706","path":"::tuple_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"TupleCollect","id":"0:2245:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CircularTupleWindows","id":"0:4155:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:2243:1849","0:2244:932"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2090":{"id":"0:2090","crate_id":0,"name":null,"span":{"filename":"src/repeatn.rs","begin":[57,0],"end":[59,2]},"visibility":{"restricted":{"parent":"0:2074:1698","path":"::repeatn"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2587:2159":{"id":"0:2587:2159","crate_id":0,"name":"dedup","span":{"filename":"src/lib.rs","begin":[1172,4],"end":[1177,5]},"visibility":"default","docs":"Remove duplicates from sections of consecutive identical elements.\nIf the iterator is sorted, all elements will be unique.\n\nIterator element type is `Self::Item`.\n\nThis iterator is *fused*.\n\n```\nuse itertools::Itertools;\n\nlet data = vec![1., 1., 2., 3., 3., 2., 2.];\nitertools::assert_equal(data.into_iter().dedup(),\n                        vec![1., 2., 3., 2.]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Dedup","id":"0:412:1626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4104-0:3737:1655":{"id":"b:2:4104-0:3737:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4686:1754":{"id":"0:4686:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/ziptuple.rs","begin":[127,0],"end":[127,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3439:3711":{"id":"2:3439:3711","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3441:184","2:3442:271"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3447:1373":{"id":"2:3447:1373","crate_id":2,"name":"sub","span":null,"visibility":"default","docs":"Performs the `-` operation.\n\n# Example\n\n```\nassert_eq!(12 - 1, 11);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Sub","id":"2:3444:4737","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2865-0:4048:1695":{"id":"b:2:2865-0:4048:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4104-0:1452:1669":{"id":"b:2:4104-0:1452:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupBy","id":"0:1452:1669","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10580:667":{"id":"2:10580:667","crate_id":2,"name":"fmt","span":null,"visibility":"default","docs":"Formats the value using the given formatter.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"pointer_trait_fmt\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48872:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2868-0:1917:1689":{"id":"b:2:2868-0:1917:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Permutations","id":"0:1917:1689","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:14063:1024":{"id":"2:14063:1024","crate_id":2,"name":"poll","span":null,"visibility":"default","docs":"Attempt to resolve the future to a final value, registering\nthe current task for wakeup if the value is not yet available.\n\n# Return value\n\nThis function returns:\n\n- [`Poll::Pending`] if the future is not ready yet\n- [`Poll::Ready(val)`] with the result `val` of this future if it\n  finished successfully.\n\nOnce a future has finished, clients should not `poll` it again.\n\nWhen a future is not ready yet, `poll` returns `Poll::Pending` and\nstores a clone of the [`Waker`] copied from the current [`Context`].\nThis [`Waker`] is then woken once the future can make progress.\nFor example, a future waiting for a socket to become\nreadable would call `.clone()` on the [`Waker`] and store it.\nWhen a signal arrives elsewhere indicating that the socket is readable,\n[`Waker::wake`] is called and the socket future's task is awoken.\nOnce a task has been woken up, it should attempt to `poll` the future\nagain, which may or may not produce a final value.\n\nNote that on multiple calls to `poll`, only the [`Waker`] from the\n[`Context`] passed to the most recent call should be scheduled to\nreceive a wakeup.\n\n# Runtime characteristics\n\nFutures alone are *inert*; they must be *actively* `poll`ed to make\nprogress, meaning that each time the current task is woken up, it should\nactively re-`poll` pending futures that it still has an interest in.\n\nThe `poll` function is not called repeatedly in a tight loop -- instead,\nit should only be called when the future indicates that it is ready to\nmake progress (by calling `wake()`). If you're familiar with the\n`poll(2)` or `select(2)` syscalls on Unix it's worth noting that futures\ntypically do *not* suffer the same problems of \"all wakeups must poll\nall events\"; they are more like `epoll(4)`.\n\nAn implementation of `poll` should strive to return quickly, and should\nnot block. Returning quickly prevents unnecessarily clogging up\nthreads or event loops. If it is known ahead of time that a call to\n`poll` may end up taking awhile, the work should be offloaded to a\nthread pool (or something similar) to ensure that `poll` can return\nquickly.\n\n# Panics\n\nOnce a future has completed (returned `Ready` from `poll`), calling its\n`poll` method again may panic, block forever, or cause other kinds of\nproblems; the `Future` trait places no requirements on the effects of\nsuch a call. However, as the `poll` method is not marked `unsafe`,\nRust's usual rules apply: calls must never cause undefined behavior\n(memory corruption, incorrect use of `unsafe` functions, or the like),\nregardless of the future's state.\n\n[`Poll::Ready(val)`]: Poll::Ready\n[`Waker`]: crate::task::Waker\n[`Waker::wake`]: crate::task::Waker::wake","links":{"crate::task::Waker::wake":"2:14379:7239","Poll::Ready":"2:50695:204","crate::task::Waker":"2:14373:7242","`Poll::Pending`":"2:50698:190","`Context`":"2:14363:5313"},"attrs":["#[stable(feature = \"futures_api\", since = \"1.36.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47926:191","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}}}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Context","id":"2:14363:5313","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50693:193","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Future","id":"2:14061:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3370:216-0:3386:1645":{"id":"a:2:3370:216-0:3386:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5509:8505":{"id":"1:5509:8505","crate_id":1,"name":"mode","span":null,"visibility":"default","docs":"Returns the underlying raw `st_mode` bits that contain the standard\nUnix permissions for this file.\n\n# Examples\n\n```no_run\nuse std::fs::File;\nuse std::os::unix::fs::PermissionsExt;\n\nfn main() -> std::io::Result<()> {\n    let f = File::create(\"foo.txt\")?;\n    let metadata = f.metadata()?;\n    let permissions = metadata.permissions();\n\n    println!(\"permissions: {:o}\", permissions.mode());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"fs_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:9028:1025":{"id":"2:9028:1025","crate_id":2,"name":"position","span":null,"visibility":"default","docs":"Searches for an element in an iterator, returning its index.\n\n`position()` takes a closure that returns `true` or `false`. It applies\nthis closure to each element of the iterator, and if one of them\nreturns `true`, then `position()` returns [`Some(index)`]. If all of\nthem return `false`, it returns [`None`].\n\n`position()` is short-circuiting; in other words, it will stop\nprocessing as soon as it finds a `true`.\n\n# Overflow Behavior\n\nThe method does no guarding against overflows, so if there are more\nthan [`usize::MAX`] non-matching elements, it either produces the wrong\nresult or panics. If debug assertions are enabled, a panic is\nguaranteed.\n\n# Panics\n\nThis function might panic if the iterator has more than `usize::MAX`\nnon-matching elements.\n\n[`Some(index)`]: Some\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nassert_eq!(a.iter().position(|&x| x == 2), Some(1));\n\nassert_eq!(a.iter().position(|&x| x == 5), None);\n```\n\nStopping at the first `true`:\n\n```\nlet a = [1, 2, 3, 4];\n\nlet mut iter = a.iter();\n\nassert_eq!(iter.position(|&x| x >= 2), Some(1));\n\n// we can still use `iter`, as there are more elements.\nassert_eq!(iter.next(), Some(&3));\n\n// The returned index depends on iterator state\nassert_eq!(iter.position(|&x| x == 4), Some(0));\n\n```","links":{"`usize::MAX`":"2:32349:4098","Some":"2:47813:220","`None`":"2:47811:177"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:671:2061":{"id":"0:671:2061","crate_id":0,"name":"merge","span":{"filename":"src/adaptors/mod.rs","begin":[501,0],"end":[507,1]},"visibility":"public","docs":"Create an iterator that merges elements in `i` and `j`.\n\n[`IntoIterator`] enabled version of [`Itertools::merge`](crate::Itertools::merge).\n\n```\nuse itertools::merge;\n\nfor elt in merge(&[1, 2, 3], &[2, 3, 4]) {\n    /* loop body */\n}\n```","links":{"`IntoIterator`":"2:8672:152","crate::Itertools::merge":"0:2571:2061"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["i",{"kind":"generic","inner":"I"}],["j",{"kind":"generic","inner":"J"}]],"output":{"kind":"resolved_path","inner":{"name":"Merge","id":"0:668:1639","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:3213-0:4401:1715":{"id":"b:2:3213-0:4401:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:4388:1716":{"id":"b:2:3213-0:4388:1716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2547:2016":{"id":"0:2547:2016","crate_id":0,"name":"map_into","span":{"filename":"src/lib.rs","begin":[835,4],"end":[840,5]},"visibility":"default","docs":"Convert each item of the iterator using the [`Into`] trait.\n\n```rust\nuse itertools::Itertools;\n\n(1i32..42i32).map_into::<f64>().collect_vec();\n```","links":{"`Into`":"2:3177:150"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"MapInto","id":"0:486:1637","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1780:3289":{"id":"0:1780:3289","crate_id":0,"name":"peek","span":{"filename":"src/multipeek_impl.rs","begin":[46,4],"end":[61,5]},"visibility":"public","docs":"Works exactly like `.next()` with the only difference that it doesn't\nadvance itself. `.peek()` can be called multiple times, to peek\nfurther ahead.\nWhen `.next()` is called, reset the peeking “cursor”.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8201:5990":{"id":"2:8201:5990","crate_id":2,"name":"backward_checked","span":null,"visibility":"default","docs":"Returns the value that would be obtained by taking the *predecessor*\nof `self` `count` times.\n\nIf this would overflow the range of values supported by `Self`, returns `None`.\n\n# Invariants\n\nFor any `a`, `n`, and `m`:\n\n* `Step::backward_checked(a, n).and_then(|x| Step::backward_checked(x, m)) == n.checked_add(m).and_then(|x| Step::backward_checked(a, x))`\n* `Step::backward_checked(a, n).and_then(|x| Step::backward_checked(x, m)) == try { Step::backward_checked(a, n.checked_add(m)?) }`\n\nFor any `a` and `n`:\n\n* `Step::backward_checked(a, n) == (0..n).try_fold(a, |x, _| Step::backward_checked(&x, 1))`\n  * Corollary: `Step::backward_checked(&a, 0) == Some(a)`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["start",{"kind":"generic","inner":"Self"}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1340:3800":{"id":"0:1340:3800","crate_id":0,"name":"max_by_key","span":{"filename":"src/grouping_map.rs","begin":[288,4],"end":[293,5]},"visibility":"public","docs":"Groups elements from the `GroupingMap` source by key and finds the element of each group\nthat gives the maximum from the specified function.\n \nIf several elements are equally maximum, the last element is picked.\n \nReturns a `HashMap` associating the key of each group with the maximum of that group's elements.\n \n```\nuse itertools::Itertools;\n \nlet lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()\n    .into_grouping_map_by(|&n| n % 3)\n    .max_by_key(|_key, &val| val % 4);\n \nassert_eq!(lookup[&0], 3);\nassert_eq!(lookup[&1], 7);\nassert_eq!(lookup[&2], 5);\nassert_eq!(lookup.len(), 3);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CK","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"K"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"V"}}}],"output":{"kind":"generic","inner":"CK"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"CK"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5508:6521":{"id":"1:5508:6521","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5509:8505","1:5510:23363","1:5511:23364"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2549:2021":{"id":"0:2549:2021","crate_id":0,"name":"map_results","span":{"filename":"src/lib.rs","begin":[844,4],"end":[849,5]},"visibility":"default","docs":"See [`.map_ok()`](Itertools::map_ok).","links":{"Itertools::map_ok":"0:2554:2024"},"attrs":["#[deprecated(note = \"Use .map_ok() instead\", since = \"0.10.0\")]"],"deprecation":{"since":"0.10.0","note":"Use .map_ok() instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"MapOk","id":"0:464:1638","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"T"}],"output":{"kind":"generic","inner":"U"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4498:15666":{"id":"1:4498:15666","crate_id":1,"name":"read_line","span":null,"visibility":"default","docs":"Read all bytes until a newline (the `0xA` byte) is reached, and append\nthem to the provided buffer. You do not need to clear the buffer before\nappending.\n\nThis function will read bytes from the underlying stream until the\nnewline delimiter (the `0xA` byte) or EOF is found. Once found, all bytes\nup to, and including, the delimiter (if found) will be appended to\n`buf`.\n\nIf successful, this function will return the total number of bytes read.\n\nIf this function returns [`Ok(0)`], the stream has reached EOF.\n\nThis function is blocking and should be used carefully: it is possible for\nan attacker to continuously send bytes without ever sending a newline\nor EOF.\n\n[`Ok(0)`]: Ok\n\n# Errors\n\nThis function has the same error semantics as [`read_until`] and will\nalso return an error if the read bytes are not valid UTF-8. If an I/O\nerror is encountered then `buf` may contain some bytes already read in\nthe event that all data read so far was valid UTF-8.\n\n[`read_until`]: BufRead::read_until\n\n# Examples\n\n[`std::io::Cursor`][`Cursor`] is a type that implements `BufRead`. In\nthis example, we use [`Cursor`] to read all the lines in a byte slice:\n\n```\nuse std::io::{self, BufRead};\n\nlet mut cursor = io::Cursor::new(b\"foo\\nbar\");\nlet mut buf = String::new();\n\n// cursor is at 'f'\nlet num_bytes = cursor.read_line(&mut buf)\n    .expect(\"reading from cursor won't fail\");\nassert_eq!(num_bytes, 4);\nassert_eq!(buf, \"foo\\n\");\nbuf.clear();\n\n// cursor is at 'b'\nlet num_bytes = cursor.read_line(&mut buf)\n    .expect(\"reading from cursor won't fail\");\nassert_eq!(num_bytes, 3);\nassert_eq!(buf, \"bar\");\nbuf.clear();\n\n// cursor is at EOF\nlet num_bytes = cursor.read_line(&mut buf)\n    .expect(\"reading from cursor won't fail\");\nassert_eq!(num_bytes, 0);\nassert_eq!(buf, \"\");\n```","links":{"`Cursor`":"1:10712:5450","Ok":"2:47937:178","BufRead::read_until":"1:4497:6580"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8479:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8938:5142":{"id":"2:8938:5142","crate_id":2,"name":"collect_into","span":null,"visibility":"default","docs":"Collects all the items from an iterator into a collection.\n\nThis method consumes the iterator and adds all its items to the\npassed collection. The collection is then returned, so the call chain\ncan be continued.\n\nThis is useful when you already have a collection and wants to add\nthe iterator items to it.\n\nThis method is a convenience method to call [Extend::extend](trait.Extend.html),\nbut instead of being called on a collection, it's called on an iterator.\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(iter_collect_into)]\n\nlet a = [1, 2, 3];\nlet mut vec: Vec::<i32> = vec![0, 1];\n\na.iter().map(|&x| x * 2).collect_into(&mut vec);\na.iter().map(|&x| x * 10).collect_into(&mut vec);\n\nassert_eq!(vec![0, 1, 2, 4, 6, 10, 20, 30], vec);\n```\n\n`Vec` can have a manual set capacity to avoid reallocating it:\n\n```\n#![feature(iter_collect_into)]\n\nlet a = [1, 2, 3];\nlet mut vec: Vec::<i32> = Vec::with_capacity(6);\n\na.iter().map(|&x| x * 2).collect_into(&mut vec);\na.iter().map(|&x| x * 10).collect_into(&mut vec);\n\nassert_eq!(6, vec.capacity());\nprintln!(\"{:?}\", vec);\n```\n\nThe returned mutable reference can be used to continue the call chain:\n\n```\n#![feature(iter_collect_into)]\n\nlet a = [1, 2, 3];\nlet mut vec: Vec::<i32> = Vec::with_capacity(6);\n\nlet count = a.iter().collect_into(&mut vec).iter().count();\n\nassert_eq!(count, vec.len());\nprintln!(\"Vec len is {}\", count);\n\nlet count = a.iter().collect_into(&mut vec).iter().count();\n\nassert_eq!(count, vec.len());\nprintln!(\"Vec len now is {}\", count);\n```","links":{},"attrs":["#[unstable(feature = \"iter_collect_into\", reason = \"new API\", issue =\n\"94780\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["collection",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"E"}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:1198:1661":{"id":"b:2:3213-0:1198:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FlattenOk","id":"0:1198:1661","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23772:12776":{"id":"2:23772:12776","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23773:16124","2:23774:16123","2:23775:16125"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialOrd","id":"2:23767:7006","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9532:4793-0:3928:1681":{"id":"a:2:9532:4793-0:3928:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2868-0:1158:1732":{"id":"b:2:2868-0:1158:1732","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Diff","id":"0:1158:1732","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23142:7061":{"id":"2:23142:7061","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23143:16106","2:23144:1243","2:23145:1244","2:23146:16126","2:23147:16127","2:23148:16128","2:23149:16129","2:23150:16135","2:23151:16136","2:23152:16137"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23155:6539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:4708:3067":{"id":"0:4708:3067","crate_id":0,"name":"next_back","span":{"filename":"src/ziptuple.rs","begin":[128,0],"end":[128,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3643:3067":{"id":"0:3643:3067","crate_id":0,"name":"next_back","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:3017:1648":{"id":"b:5:848-0:3017:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Step","id":"0:3017:1648","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3017:1648":{"id":"0:3017:1648","crate_id":0,"name":"Step","span":{"filename":"src/adaptors/mod.rs","begin":[417,0],"end":[420,1]},"visibility":"public","docs":"An iterator adaptor that steps a number elements in the base iterator\nfor each iteration.\n\nThe iterator steps by yielding the next element from the base iterator,\nthen skipping forward *n-1* elements.\n\nSee [`.step()`](crate::Itertools::step) for more information.","links":{"crate::Itertools::step":"0:2546:2012"},"attrs":["#[deprecated(note = \"Use std .step_by() instead\", since = \"0.8.0\")]","#[allow(deprecated)]","#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":{"since":"0.8.0","note":"Use std .step_by() instead"},"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:3017:1648","a:2:9532:4793-0:3017:1648","a:2:3382:225-0:3017:1648","a:2:3370:216-0:3017:1648","a:2:3411:4706-0:3017:1648","b:0:2854-0:3017:1648","b:2:8676-0:3017:1648","b:2:4104-0:3017:1648","b:2:2865-0:3017:1648","b:2:3203-0:3017:1648","b:2:3207-0:3017:1648","b:2:3218-0:3017:1648","b:2:2868-0:3017:1648","b:2:3213-0:3017:1648","b:5:848-0:3017:1648","0:3021","0:3024","0:654","0:660"]}},"0:2391:3067":{"id":"0:2391:3067","crate_id":0,"name":"next_back","span":{"filename":"src/unique_impl.rs","begin":[86,4],"end":[94,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3519:3067":{"id":"0:3519:3067","crate_id":0,"name":"next_back","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8879:1754":{"id":"2:8879:1754","crate_id":2,"name":"size_hint","span":null,"visibility":"default","docs":"Returns the bounds on the remaining length of the iterator.\n\nSpecifically, `size_hint()` returns a tuple where the first element\nis the lower bound, and the second element is the upper bound.\n\nThe second half of the tuple that is returned is an <code>[Option]<[usize]></code>.\nA [`None`] here means that either there is no known upper bound, or the\nupper bound is larger than [`usize`].\n\n# Implementation notes\n\nIt is not enforced that an iterator implementation yields the declared\nnumber of elements. A buggy iterator may yield less than the lower bound\nor more than the upper bound of elements.\n\n`size_hint()` is primarily intended to be used for optimizations such as\nreserving space for the elements of the iterator, but must not be\ntrusted to e.g., omit bounds checks in unsafe code. An incorrect\nimplementation of `size_hint()` should not lead to memory safety\nviolations.\n\nThat said, the implementation should provide a correct estimation,\nbecause otherwise it would be a violation of the trait's protocol.\n\nThe default implementation returns <code>(0, [None])</code> which is correct for any\niterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\nlet mut iter = a.iter();\n\nassert_eq!((3, Some(3)), iter.size_hint());\nlet _ = iter.next();\nassert_eq!((2, Some(2)), iter.size_hint());\n```\n\nA more complex example:\n\n```\n// The even numbers in the range of zero to nine.\nlet iter = (0..10).filter(|x| x % 2 == 0);\n\n// We might iterate from zero to ten times. Knowing that it's five\n// exactly wouldn't be possible without executing filter().\nassert_eq!((0, Some(10)), iter.size_hint());\n\n// Let's add five more numbers with chain()\nlet iter = (0..10).filter(|x| x % 2 == 0).chain(15..20);\n\n// now both bounds are increased by five\nassert_eq!((5, Some(15)), iter.size_hint());\n```\n\nReturning `None` for an upper bound:\n\n```\n// an infinite iterator has no upper bound\n// and the maximum possible lower bound\nlet iter = 0..;\n\nassert_eq!((usize::MAX, None), iter.size_hint());\n```","links":{"`usize`":"1:15899:4459","`None`":"2:47811:177","usize":"1:15899:4459","None":"2:47811:177","Option":"2:47809:179"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3395:415":{"id":"0:3395:415","crate_id":0,"name":"clone","span":{"filename":"src/adaptors/mod.rs","begin":[996,9],"end":[996,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3370:216-0:3939:1685":{"id":"a:2:3370:216-0:3939:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9533:4792-0:4670:1724":{"id":"a:2:9533:4792-0:4670:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13784:61716":{"id":"2:13784:61716","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13361:5417","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1871":{"id":"0:1871","crate_id":0,"name":null,"span":{"filename":"src/peeking_take_while.rs","begin":[22,0],"end":[35,1]},"visibility":{"restricted":{"parent":"0:1858:1686","path":"::peeking_take_while"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"PeekingNext","id":"0:1868:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Peekable","id":"2:47034:3193","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1873:4024"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:705":{"id":"0:705","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[599,0],"end":[603,2]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"MergePredicate","id":"0:662:3274","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeBy","id":"0:674:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23147:16127":{"id":"2:23147:16127","crate_id":2,"name":"reduce_product","span":null,"visibility":"default","docs":"Returns the product of the lanes of the vector, with wrapping multiplication.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdUint","id":"2:23142:7061","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:0:2854-0:4670:1724":{"id":"b:0:2854-0:4670:1724","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:14544:4592":{"id":"2:14544:4592","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14545:21212","2:14546:21213","2:14547:21214","2:14548:21215","2:14549:21216","2:14550:21217","2:14551:3938"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:3757:1657":{"id":"b:2:3213-0:3757:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2644:2467":{"id":"0:2644:2467","crate_id":0,"name":"collect_vec","span":{"filename":"src/lib.rs","begin":[1982,4],"end":[1986,5]},"visibility":"default","docs":"`.collect_vec()` is simply a type specialization of [`Iterator::collect`],\nfor convenience.","links":{"`Iterator::collect`":"2:8933:2468"},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7898:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4106:1449":{"id":"2:4106:1449","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46337:7060","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:412:1626":{"id":"0:412:1626","crate_id":0,"name":"Dedup","span":{"filename":"src/adaptors/coalesce.rs","begin":[173,0],"end":[173,40]},"visibility":"public","docs":"An iterator adaptor that removes repeated duplicates.\n\nSee [`.dedup()`](crate::Itertools::dedup) for more information.","links":{"crate::Itertools::dedup":"0:2587:2159"},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"DedupBy","id":"0:390:1627","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"resolved_path","inner":{"name":"DedupEq","id":"0:2881:3362","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"b:2:4104-0:791:1632":{"id":"b:2:4104-0:791:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterMapOk","id":"0:791:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:1158:1732":{"id":"b:2:3213-0:1158:1732","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Diff","id":"0:1158:1732","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:2430:1718":{"id":"b:2:3213-0:2430:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WithPosition","id":"0:2430:1718","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3382:225-0:1158:1732":{"id":"a:2:3382:225-0:1158:1732","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Diff","id":"0:1158:1732","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4863:688":{"id":"0:4863:688","crate_id":0,"name":"from","span":{"filename":"src/ziptuple.rs","begin":[134,0],"end":[134,38]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2554:2024":{"id":"0:2554:2024","crate_id":0,"name":"map_ok","span":{"filename":"src/lib.rs","begin":[862,4],"end":[867,5]},"visibility":"default","docs":"Return an iterator adaptor that applies the provided closure\nto every `Result::Ok` value. `Result::Err` values are\nunchanged.\n\n```\nuse itertools::Itertools;\n\nlet input = vec![Ok(41), Err(false), Ok(11)];\nlet it = input.into_iter().map_ok(|i| i + 1);\nitertools::assert_equal(it, vec![Ok(42), Err(false), Ok(12)]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"MapOk","id":"0:464:1638","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"T"}],"output":{"kind":"generic","inner":"U"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2217:1849":{"id":"0:2217:1849","crate_id":0,"name":"Item","span":{"filename":"src/tuple_impl.rs","begin":[105,4],"end":[105,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:3405:415":{"id":"0:3405:415","crate_id":0,"name":"clone","span":{"filename":"src/adaptors/mod.rs","begin":[1067,9],"end":[1067,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3653:1849":{"id":"0:3653:1849","crate_id":0,"name":"Item","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"X"}]}}},"0:2247:4281":{"id":"0:2247:4281","crate_id":0,"name":"Buffer","span":{"filename":"src/tuple_impl.rs","begin":[241,4],"end":[241,85]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsRef","id":"2:3171:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsMut","id":"2:3174:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"2:8674:1621":{"id":"2:8674:1621","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":"Which kind of iterator are we turning this into?","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[{"eq_predicate":{"lhs":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"rhs":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:2434":{"id":"0:2434","crate_id":0,"name":null,"span":{"filename":"src/with_position.rs","begin":[16,0],"end":[21,1]},"visibility":{"restricted":{"parent":"0:2419:1717","path":"::with_position"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WithPosition","id":"0:2430:1718","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:4616:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3627:133":{"id":"2:3627:133","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3629:184","2:3630:385"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3203-0:5099:2652":{"id":"b:2:3203-0:5099:2652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8921:5139":{"id":"2:8921:5139","crate_id":2,"name":"scan","span":null,"visibility":"default","docs":"An iterator adapter similar to [`fold`] that holds internal state and\nproduces a new iterator.\n\n[`fold`]: Iterator::fold\n\n`scan()` takes two arguments: an initial value which seeds the internal\nstate, and a closure with two arguments, the first being a mutable\nreference to the internal state and the second an iterator element.\nThe closure can assign to the internal state to share state between\niterations.\n\nOn iteration, the closure will be applied to each element of the\niterator and the return value from the closure, an [`Option`], is\nyielded by the iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter().scan(1, |state, &x| {\n    // each iteration, we'll multiply the state by the element\n    *state = *state * x;\n\n    // then, we'll yield the negation of the state\n    Some(-*state)\n});\n\nassert_eq!(iter.next(), Some(-1));\nassert_eq!(iter.next(), Some(-2));\nassert_eq!(iter.next(), Some(-6));\nassert_eq!(iter.next(), None);\n```","links":{"Iterator::fold":"2:8980:2582","`Option`":"2:47809:179"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["initial_state",{"kind":"generic","inner":"St"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Scan","id":"2:47053:4667","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"St","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"St"}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2761:2845":{"id":"0:2761:2845","crate_id":0,"name":"max_set_by","span":{"filename":"src/lib.rs","begin":[3052,4],"end":[3060,5]},"visibility":"default","docs":"Return all maximum elements of an iterator, as determined by\nthe specified function.\n\n# Examples\n\n```\n# use std::cmp::Ordering;\nuse itertools::Itertools;\n\nlet a: [(i32, i32); 0] = [];\nassert_eq!(a.iter().max_set_by(|_, _| Ordering::Equal), Vec::<&(i32, i32)>::new());\n\nlet a = [(1, 2)];\nassert_eq!(a.iter().max_set_by(|&&(k1,_), &&(k2, _)| k1.cmp(&k2)), vec![&(1, 2)]);\n\nlet a = [(1, 2), (2, 2), (3, 9), (4, 8), (5, 9)];\nassert_eq!(a.iter().max_set_by(|&&(_,k1), &&(_,k2)| k1.cmp(&k2)), vec![&(3, 9), &(5, 9)]);\n\nlet a = [(1, 2), (1, 3), (1, 4), (1, 5)];\nassert_eq!(a.iter().max_set_by(|&&(k1,_), &&(k2, _)| k1.cmp(&k2)), vec![&(1, 2), &(1, 3), &(1, 4), &(1, 5)]);\n```\n\nThe elements can be floats but no particular result is guaranteed\nif an element is NaN.","links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["compare",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7898:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3370:216-0:3737:1655":{"id":"a:2:3370:216-0:3737:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1227":{"id":"0:1227","crate_id":0,"name":null,"span":{"filename":"src/flatten_ok.rs","begin":[160,0],"end":[165,1]},"visibility":{"restricted":{"parent":"0:1179:1660","path":"::flatten_ok"}},"docs":"Only the iterator being flattened needs to implement [`FusedIterator`].","links":{"`FusedIterator`":"2:9153:3194"},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FlattenOk","id":"0:1198:1661","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:0:2854-0:2954:1630":{"id":"b:0:2854-0:2954:1630","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3665:22906":{"id":"2:3665:22906","crate_id":2,"name":"resume","span":null,"visibility":"default","docs":"Resumes the execution of this generator.\n\nThis function will resume execution of the generator or start execution\nif it hasn't already. This call will return back into the generator's\nlast suspension point, resuming execution from the latest `yield`. The\ngenerator will continue executing until it either yields or returns, at\nwhich point this function will return.\n\n# Return value\n\nThe `GeneratorState` enum returned from this function indicates what\nstate the generator is in upon returning. If the `Yielded` variant is\nreturned then the generator has reached a suspension point and a value\nhas been yielded out. Generators in this state are available for\nresumption at a later point.\n\nIf `Complete` is returned then the generator has completely finished\nwith the value provided. It is invalid for the generator to be resumed\nagain.\n\n# Panics\n\nThis function may panic if it is called after the `Complete` variant has\nbeen returned previously. While generator literals in the language are\nguaranteed to panic on resuming after `Complete`, this is not guaranteed\nfor all implementations of the `Generator` trait.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47926:191","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}}}}],["arg",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"GeneratorState","id":"2:46125:4759","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Yield","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Generator","id":"2:3661:4758","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}}}},{"type":{"kind":"qualified_path","inner":{"name":"Return","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Generator","id":"2:3661:4758","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3411:4706-0:1917:1689":{"id":"a:2:3411:4706-0:1917:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Permutations","id":"0:1917:1689","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1210:932":{"id":"0:1210:932","crate_id":0,"name":"next","span":{"filename":"src/flatten_ok.rs","begin":[41,4],"end":[73,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2629:2388":{"id":"0:2629:2388","crate_id":0,"name":"find_or_first","span":{"filename":"src/lib.rs","begin":[1790,4],"end":[1800,5]},"visibility":"default","docs":"Find the value of the first element satisfying a predicate or return the first element, if any.\n\nThe iterator is not advanced past the first element found.\n\n```\nuse itertools::Itertools;\n\nlet numbers = [1, 2, 3, 4];\nassert_eq!(numbers.iter().find_or_first(|&&x| x > 5), Some(&1));\nassert_eq!(numbers.iter().find_or_first(|&&x| x > 2), Some(&3));\nassert_eq!(std::iter::empty::<i32>().find_or_first(|&x| x > 5), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:188":{"id":"0:188","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[129,41],"end":[129,49]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::kmerge_impl::KMergeBy","name":"KMergeBy","id":"0:1651:1677","glob":false}},"5:5917:5379":{"id":"5:5917:5379","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5919:184","5:5920:2494"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3203-0:1452:1669":{"id":"b:2:3203-0:1452:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupBy","id":"0:1452:1669","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6220:23423":{"id":"1:6220:23423","crate_id":1,"name":"exec","span":null,"visibility":"default","docs":"Performs all the required setup by this `Command`, followed by calling\nthe `execvp` syscall.\n\nOn success this function will not return, and otherwise it will return\nan error indicating why the exec (or another part of the setup of the\n`Command`) failed.\n\n`exec` not returning has the same implications as calling\n[`process::exit`] – no destructors on the current stack or any other\nthread’s stack will be run. Therefore, it is recommended to only call\n`exec` at a point where it is fine to not run any destructors. Note,\nthat the `execvp` syscall independently guarantees that all memory is\nfreed and all file descriptors with the `CLOEXEC` option (set by default\non all file descriptors opened by the standard library) are closed.\n\nThis function, unlike `spawn`, will **not** `fork` the process to create\na new child. Like spawn, however, the default behavior for the stdio\ndescriptors will be to inherited from the current process.\n\n# Notes\n\nThe process may be in a \"broken state\" if this function returns in\nerror. For example the working directory, environment variables, signal\nhandling settings, various user/group information, or aspects of stdio\nfile descriptors may have changed. If a \"transactional spawn\" is\nrequired to gracefully handle errors it is recommended to use the\ncross-platform `spawn` instead.","links":{"`process::exit`":"1:7592:6736"},"attrs":["#[stable(feature = \"process_exec2\", since = \"1.9.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1487:1849":{"id":"0:1487:1849","crate_id":0,"name":"Item","span":{"filename":"src/groupbylazy.rs","begin":[372,4],"end":[372,40]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"generic","inner":"K"},{"kind":"resolved_path","inner":{"name":"Group","id":"0:1490:1670","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}}]}}},"0:2206:1754":{"id":"0:2206:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/tuple_impl.rs","begin":[59,4],"end":[69,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8676-0:4065:1699":{"id":"b:2:8676-0:4065:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"a:2:3370:216-0:4058:1697":{"id":"a:2:3370:216-0:4058:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:3984":{"id":"0:3984","crate_id":0,"name":null,"span":{"filename":"src/peeking_take_while.rs","begin":[145,0],"end":[145,61]},"visibility":{"restricted":{"parent":"0:1858:1686","path":"::peeking_take_while"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PeekingNext","id":"0:1868:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"::std::result::Iter","id":"2:47977:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:3987:4024"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3370:216-0:2982:1635":{"id":"a:2:3370:216-0:2982:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4657:1722":{"id":"0:4657:1722","crate_id":0,"name":"ZipLongest","span":{"filename":"src/zip_longest.rs","begin":[17,0],"end":[20,1]},"visibility":"public","docs":"An iterator which iterates two other iterators simultaneously\n\nThis iterator is *fused*.\n\nSee [`.zip_longest()`](crate::Itertools::zip_longest) for more information.","links":{"crate::Itertools::zip_longest":"0:2528:1721"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:4657:1722","a:2:9532:4793-0:4657:1722","a:2:3382:225-0:4657:1722","a:2:3370:216-0:4657:1722","a:2:3411:4706-0:4657:1722","b:0:2854-0:4657:1722","b:2:8676-0:4657:1722","b:2:4104-0:4657:1722","b:2:2865-0:4657:1722","b:2:3203-0:4657:1722","b:2:3207-0:4657:1722","b:2:3218-0:4657:1722","b:2:2868-0:4657:1722","b:2:3213-0:4657:1722","b:5:848-0:4657:1722","0:4662","0:4666","0:2493","0:2499","0:2503","0:2506"]}},"1:5525:8505":{"id":"1:5525:8505","crate_id":1,"name":"mode","span":null,"visibility":"default","docs":"Returns the rights applied to this file.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let mode = meta.mode();\n    let user_has_write_access      = mode & 0o200;\n    let user_has_read_write_access = mode & 0o600;\n    let group_has_read_access      = mode & 0o040;\n    let others_have_exec_access    = mode & 0o001;\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:890:3447":{"id":"0:890:3447","crate_id":0,"name":"is_both","span":{"filename":"src/either_or_both.rs","begin":[47,4],"end":[49,5]},"visibility":"public","docs":"If Right, return true otherwise, return false.\nEquivalent to `self.as_ref().both().is_some()`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23119:16128":{"id":"2:23119:16128","crate_id":2,"name":"reduce_max","span":null,"visibility":"default","docs":"Returns the maximum lane in the vector.\n\n# Examples\n\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{i32x4, SimdInt};\nlet v = i32x4::from_array([1, 2, 3, 4]);\nassert_eq!(v.reduce_max(), 4);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdInt","id":"2:23106:7064","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9532:4793-0:1452:1669":{"id":"a:2:9532:4793-0:1452:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupBy","id":"0:1452:1669","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2309:4327":{"id":"0:2309:4327","crate_id":0,"name":"ByFn","span":{"filename":"src/duplicates_impl.rs","begin":[136,4],"end":[136,37]},"visibility":"public","docs":"Apply a user-supplied function to elements before checking them for equality.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"2:3467:184":{"id":"2:3467:184","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `-` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"a:2:9533:4792-0:4075:1701":{"id":"a:2:9533:4792-0:4075:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatCall","id":"0:4075:1701","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:4425:3245":{"id":"1:4425:3245","crate_id":1,"name":"take","span":null,"visibility":"default","docs":"Creates an adapter which will read at most `limit` bytes from it.\n\nThis function returns a new instance of `Read` which will read at most\n`limit` bytes, after which it will always return EOF ([`Ok(0)`]). Any\nread errors will not count towards the number of bytes read and future\ncalls to [`read()`] may succeed.\n\n# Examples\n\n[`File`]s implement `Read`:\n\n[`File`]: crate::fs::File\n[`Ok(0)`]: Ok\n[`read()`]: Read::read\n\n```no_run\nuse std::io;\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() -> io::Result<()> {\n    let f = File::open(\"foo.txt\")?;\n    let mut buffer = [0; 5];\n\n    // read at most five bytes\n    let mut handle = f.take(5);\n\n    handle.read(&mut buffer)?;\n    Ok(())\n}\n```","links":{"Ok":"2:47937:178","crate::fs::File":"1:2909:129","Read::read":"1:4411:6796"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["limit",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Take","id":"1:10966:4275","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2499":{"id":"0:2499","crate_id":0,"name":null,"span":{"filename":"src/zip_longest.rs","begin":[55,0],"end":[73,1]},"visibility":{"restricted":{"parent":"0:2466:1721","path":"::zip_longest"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"items":["0:2502:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11213:3881":{"id":"2:11213:3881","crate_id":2,"name":"get_mut","span":null,"visibility":"default","docs":"Returns a mutable reference to the output at this location, if in\nbounds.","links":{},"attrs":["#[unstable(feature = \"slice_index_methods\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["slice",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SliceIndex","id":"2:11209:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[164,4],"end":[164,48]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::tuple_impl::HomogeneousTuple","name":"HomogeneousTuple","id":"0:2196:1727","glob":false}},"2:23151:16136":{"id":"2:23151:16136","crate_id":2,"name":"reduce_or","span":null,"visibility":"default","docs":"Returns the cumulative bitwise \"or\" across the lanes of the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdUint","id":"2:23142:7061","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3411:4706-0:1513:1666":{"id":"a:2:3411:4706-0:1513:1666","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoChunks","id":"0:1513:1666","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8940:3063":{"id":"2:8940:3063","crate_id":2,"name":"partition","span":null,"visibility":"default","docs":"Consumes an iterator, creating two collections from it.\n\nThe predicate passed to `partition()` can return `true`, or `false`.\n`partition()` returns a pair, all of the elements for which it returned\n`true`, and all of the elements for which it returned `false`.\n\nSee also [`is_partitioned()`] and [`partition_in_place()`].\n\n[`is_partitioned()`]: Iterator::is_partitioned\n[`partition_in_place()`]: Iterator::partition_in_place\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nlet (even, odd): (Vec<_>, Vec<_>) = a\n    .into_iter()\n    .partition(|n| n % 2 == 0);\n\nassert_eq!(even, vec![2]);\nassert_eq!(odd, vec![1, 3]);\n```","links":{"Iterator::is_partitioned":"2:8965:5144","Iterator::partition_in_place":"2:8950:5143"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"B"},{"kind":"generic","inner":"B"}]},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:3777:1658":{"id":"b:2:2868-0:3777:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4064:415":{"id":"0:4064:415","crate_id":0,"name":"clone","span":{"filename":"src/rciter_impl.rs","begin":[54,4],"end":[54,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3379:222":{"id":"2:3379:222","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1143":{"id":"0:1143","crate_id":0,"name":null,"span":{"filename":"src/exactly_one_err.rs","begin":[75,0],"end":[86,1]},"visibility":{"restricted":{"parent":"0:1105:1656","path":"::exactly_one_err"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1145:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2868-0:4670:1724":{"id":"b:2:2868-0:4670:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2196:1727":{"id":"0:2196:1727","crate_id":0,"name":"HomogeneousTuple","span":{"filename":"src/tuple_impl.rs","begin":[15,0],"end":[17,2]},"visibility":"public","docs":"Implemented for homogeneous tuples of size up to 12.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"TupleCollect","id":"0:2245:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:2197"]}},"0:2609:1650":{"id":"0:2609:1650","crate_id":0,"name":"combinations","span":{"filename":"src/lib.rs","begin":[1483,4],"end":[1488,5]},"visibility":"default","docs":"Return an iterator adaptor that iterates over the `k`-length combinations of\nthe elements from an iterator.\n\nIterator element type is `Vec<Self::Item>`. The iterator produces a new Vec per iteration,\nand clones the iterator elements.\n\n```\nuse itertools::Itertools;\n\nlet it = (1..5).combinations(3);\nitertools::assert_equal(it, vec![\n    vec![1, 2, 3],\n    vec![1, 2, 4],\n    vec![1, 3, 4],\n    vec![2, 3, 4],\n]);\n```\n\nNote: Combinations does not take into account the equality of the iterated values.\n```\nuse itertools::Itertools;\n\nlet it = vec![1, 2, 2].into_iter().combinations(2);\nitertools::assert_equal(it, vec![\n    vec![1, 2], // Note: these are the same\n    vec![1, 2], // Note: these are the same\n    vec![2, 2],\n]);\n```","links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["k",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Combinations","id":"0:1054:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:120":{"id":"0:120","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[112,30],"end":[112,40]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::MapResults","name":"MapResults","id":"0:467:1647","glob":false}},"2:13769:61713":{"id":"2:13769:61713","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"prim@char":"1:15876:4439","str::rsplit_terminator":"2:13772:61714","str::split":"2:13760:15667","self::pattern":"2:13336:4565","`DoubleEndedIterator`":"2:8716:121"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49840:5438","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1991":{"id":"0:1991","crate_id":0,"name":null,"span":{"filename":"src/powerset.rs","begin":[45,0],"end":[84,1]},"visibility":{"restricted":{"parent":"0:1958:1692","path":"::powerset"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Powerset","id":"0:1981:1693","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1993:1849","0:1994:932","0:1996:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:0:2854-0:3737:1655":{"id":"b:0:2854-0:3737:1655","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:4112:1705":{"id":"b:2:2868-0:4112:1705","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tee","id":"0:4112:1705","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3203-0:2928:1649":{"id":"b:2:3203-0:2928:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiProduct","id":"0:2928:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3957:415":{"id":"0:3957:415","crate_id":0,"name":"clone","span":{"filename":"src/peek_nth.rs","begin":[7,9],"end":[7,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5920:2494":{"id":"5:5920:2494","crate_id":5,"name":"join","span":null,"visibility":"default","docs":"Implementation of [`[T]::join`](slice::join)","links":{"slice::join":"5:5906:2494"},"attrs":["#[unstable(feature = \"slice_concat_trait\", issue = \"27747\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["slice",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["sep",{"kind":"generic","inner":"Separator"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Join","id":"5:5917:5379","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Separator"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:71":{"id":"0:71","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[94,8],"end":[94,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::InterleaveShortest","name":"InterleaveShortest","id":"0:2968:1631","glob":false}},"2:3624:132":{"id":"2:3624:132","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3626:384"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1659:1733":{"id":"0:1659:1733","crate_id":0,"name":"kmerge_by","span":{"filename":"src/kmerge_impl.rs","begin":[173,0],"end":[185,1]},"visibility":"public","docs":"Create an iterator that merges elements of the contained iterators.\n\n[`IntoIterator`] enabled version of [`Itertools::kmerge_by`].","links":{"`Itertools::kmerge_by`":"0:2580:1733","`IntoIterator`":"2:8672:152"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}],["less_than",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"KMergePredicate","id":"0:1639:3963","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:2868-0:1981:1693":{"id":"b:2:2868-0:1981:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Powerset","id":"0:1981:1693","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:958":{"id":"0:958","crate_id":0,"name":null,"span":{"filename":"src/free.rs","begin":[21,4],"end":[21,14]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::interleave","name":"interleave","id":"0:577:1848","glob":false}},"b:2:2865-0:4092:1703":{"id":"b:2:2865-0:4092:1703","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iterate","id":"0:4092:1703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2523:1855":{"id":"0:2523:1855","crate_id":0,"name":"interleave_shortest","span":{"filename":"src/lib.rs","begin":[464,4],"end":[469,5]},"visibility":"default","docs":"Alternate elements from two iterators until at least one of them has run\nout.\n\nIterator element type is `Self::Item`.\n\n```\nuse itertools::Itertools;\n\nlet it = (1..7).interleave_shortest(vec![-1, -2]);\nitertools::assert_equal(it, vec![1, -1, 2, -2, 3]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"J"}]],"output":{"kind":"resolved_path","inner":{"name":"InterleaveShortest","id":"0:2968:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8683:2756":{"id":"2:8683:2756","crate_id":2,"name":"extend","span":null,"visibility":"default","docs":"Extends a collection with the contents of an iterator.\n\nAs this is the only required method for this trait, the [trait-level] docs\ncontain more details.\n\n[trait-level]: Extend\n\n# Examples\n\nBasic usage:\n\n```\n// You can extend a String with some chars:\nlet mut message = String::from(\"abc\");\n\nmessage.extend(['d', 'e', 'f'].iter());\n\nassert_eq!(\"abcdef\", &message);\n```","links":{"Extend":"2:8681:2464"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"A"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3411:4706-0:2928:1649":{"id":"a:2:3411:4706-0:2928:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiProduct","id":"0:2928:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3382:225-0:1883:1687":{"id":"a:2:3382:225-0:1883:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekingTakeWhile","id":"0:1883:1687","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3375:1633":{"id":"0:3375:1633","crate_id":0,"name":"FilterOk","span":{"filename":"src/adaptors/mod.rs","begin":[839,0],"end":[842,1]},"visibility":"public","docs":"An iterator adapter to filter values within a nested `Result::Ok`.\n\nSee [`.filter_ok()`](crate::Itertools::filter_ok) for more information.","links":{"crate::Itertools::filter_ok":"0:2559:2036"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:3375:1633","a:2:9532:4793-0:3375:1633","a:2:3382:225-0:3375:1633","a:2:3370:216-0:3375:1633","a:2:3411:4706-0:3375:1633","b:0:2854-0:3375:1633","b:2:8676-0:3375:1633","b:2:4104-0:3375:1633","b:2:2865-0:3375:1633","b:2:3203-0:3375:1633","b:2:3207-0:3375:1633","b:2:3218-0:3375:1633","b:2:2868-0:3375:1633","b:2:3213-0:3375:1633","b:5:848-0:3375:1633","0:3380","0:763","0:771","0:786"]}},"2:14061:139":{"id":"2:14061:139","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:14062:184","2:14063:1024"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9533:4792-0:1537:1667":{"id":"a:2:9533:4792-0:1537:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunk","id":"0:1537:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:1791":{"id":"0:1791","crate_id":0,"name":null,"span":{"filename":"src/multipeek_impl.rs","begin":[97,0],"end":[99,2]},"visibility":{"restricted":{"parent":"0:1757:1680","path":"::multipeek_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5560:23383":{"id":"1:5560:23383","crate_id":1,"name":"is_socket","span":null,"visibility":"default","docs":"Returns `true` if this file type is a socket.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::FileTypeExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"unix.socket\")?;\n    let file_type = meta.file_type();\n    assert!(file_type.is_socket());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"file_type_ext\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:6569:6550":{"id":"1:6569:6550","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6570:11008"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10409:6539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5436:23351":{"id":"1:5436:23351","crate_id":1,"name":"as_bytes","span":null,"visibility":"default","docs":"Gets the underlying byte view of the [`OsStr`] slice.\n\nSee the module documentation for an example.","links":{"`OsStr`":"1:2654:182"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3927:667":{"id":"0:3927:667","crate_id":0,"name":"fmt","span":{"filename":"src/minmax.rs","begin":[5,33],"end":[5,38]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2954:1630":{"id":"0:2954:1630","crate_id":0,"name":"Interleave","span":{"filename":"src/adaptors/mod.rs","begin":[30,0],"end":[34,1]},"visibility":"public","docs":"An iterator adaptor that alternates elements from two iterators until both\nrun out.\n\nThis iterator is *fused*.\n\nSee [`.interleave()`](crate::Itertools::interleave) for more information.","links":{"crate::Itertools::interleave":"0:2521:1848"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:2954:1630","a:2:9532:4793-0:2954:1630","a:2:3382:225-0:2954:1630","a:2:3370:216-0:2954:1630","a:2:3411:4706-0:2954:1630","b:0:2854-0:2954:1630","b:2:8676-0:2954:1630","b:2:4104-0:2954:1630","b:2:2865-0:2954:1630","b:2:3203-0:2954:1630","b:2:3207-0:2954:1630","b:2:3218-0:2954:1630","b:2:2868-0:2954:1630","b:2:3213-0:2954:1630","b:5:848-0:2954:1630","0:2960","0:2964","0:580","0:586"]}},"0:2248:4285":{"id":"0:2248:4285","crate_id":0,"name":"collect_from_iter","span":{"filename":"src/tuple_impl.rs","begin":[243,4],"end":[244,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["iter",{"kind":"generic","inner":"I"}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Buffer","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1743:932":{"id":"0:1743:932","crate_id":0,"name":"next","span":{"filename":"src/merge_join.rs","begin":[62,4],"end":[84,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3402":{"id":"0:3402","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[1067,9],"end":[1067,14]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:3405:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:0:2854-0:4155:1709":{"id":"b:0:2854-0:4155:1709","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CircularTupleWindows","id":"0:4155:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1509:1849":{"id":"0:1509:1849","crate_id":0,"name":"Item","span":{"filename":"src/groupbylazy.rs","begin":[417,4],"end":[417,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:4964:932":{"id":"0:4964:932","crate_id":0,"name":"next","span":{"filename":"src/ziptuple.rs","begin":[136,0],"end":[136,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:3766:1659":{"id":"b:2:2865-0:3766:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatWith","id":"0:3766:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3656:1754":{"id":"0:3656:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9532:4793-0:5099:2652":{"id":"a:2:9532:4793-0:5099:2652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8202:5991":{"id":"2:8202:5991","crate_id":2,"name":"backward","span":null,"visibility":"default","docs":"Returns the value that would be obtained by taking the *predecessor*\nof `self` `count` times.\n\nIf this would overflow the range of values supported by `Self`,\nthis function is allowed to panic, wrap, or saturate.\nThe suggested behavior is to panic when debug assertions are enabled,\nand to wrap or saturate otherwise.\n\nUnsafe code should not rely on the correctness of behavior after overflow.\n\n# Invariants\n\nFor any `a`, `n`, and `m`, where no overflow occurs:\n\n* `Step::backward(Step::backward(a, n), m) == Step::backward(a, n + m)`\n\nFor any `a` and `n`, where no overflow occurs:\n\n* `Step::backward_checked(a, n) == Some(Step::backward(a, n))`\n* `Step::backward(a, n) == (0..n).fold(a, |x, _| Step::backward(x, 1))`\n  * Corollary: `Step::backward(a, 0) == a`\n* `Step::backward(a, n) <= a`\n* `Step::forward(Step::backward(a, n), n) == a`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["start",{"kind":"generic","inner":"Self"}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23114:16133":{"id":"2:23114:16133","crate_id":2,"name":"is_positive","span":null,"visibility":"default","docs":"Returns true for each positive lane and false if it is zero or negative.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdInt","id":"2:23106:7064","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1649:2101":{"id":"0:1649:2101","crate_id":0,"name":"kmerge","span":{"filename":"src/kmerge_impl.rs","begin":[140,0],"end":[146,1]},"visibility":"public","docs":"Create an iterator that merges elements of the contained iterators using\nthe ordering function.\n\n[`IntoIterator`] enabled version of [`Itertools::kmerge`].\n\n```\nuse itertools::kmerge;\n\nfor elt in kmerge(vec![vec![0, 2, 4], vec![1, 3, 5], vec![6, 7]]) {\n    /* loop body */\n}\n```","links":{"`IntoIterator`":"2:8672:152","`Itertools::kmerge`":"0:2579:2101"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"KMerge","id":"0:1637:1676","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:467:1647":{"id":"0:467:1647","crate_id":0,"name":"MapResults","span":{"filename":"src/adaptors/map.rs","begin":[72,0],"end":[72,40]},"visibility":"public","docs":"See [`MapOk`].","links":{"`MapOk`":"0:464:1638"},"attrs":["#[deprecated(note = \"Use MapOk instead\", since = \"0.10.0\")]"],"deprecation":{"since":"0.10.0","note":"Use MapOk instead"},"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"MapOk","id":"0:464:1638","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"2:13828:7143":{"id":"2:13828:7143","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:13275:4561","FromStr::Err":"2:13276:127"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:13275:4561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13275:4561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2743:2798":{"id":"0:2743:2798","crate_id":0,"name":"into_grouping_map_by","span":{"filename":"src/lib.rs","begin":[2896,4],"end":[2902,5]},"visibility":"default","docs":"Constructs a `GroupingMap` to be used later with one of the efficient \ngroup-and-fold operations it allows to perform.\n \nThe values from this iterator will be used as values for the folding operation\nwhile the keys will be obtained from the values by calling `key_mapper`.\n \nSee [`GroupingMap`] for more informations\non what operations are available.","links":{"`GroupingMap`":"0:3836:1663"},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["key_mapper",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"GroupingMapBy","id":"0:1313:1664","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"V"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"V"}}}],"output":{"kind":"generic","inner":"K"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1259":{"id":"0:1259","crate_id":0,"name":null,"span":{"filename":"src/format.rs","begin":[50,0],"end":[71,1]},"visibility":{"restricted":{"parent":"0:1247:678","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"fmt::Display","id":"2:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}}],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[]}],"lifetime":null}}}}],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatWith","id":"0:3766:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:1263:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2594:2193":{"id":"0:2594:2193","crate_id":0,"name":"duplicates_by","span":{"filename":"src/lib.rs","begin":[1287,4],"end":[1293,5]},"visibility":"default","docs":"Return an iterator adaptor that produces elements that appear more than once during the\niteration. Duplicates are detected using hash and equality.\n\nDuplicates are detected by comparing the key they map to with the keying function `f` by\nhash and equality. The keys are stored in a hash map in the iterator.\n\nThe iterator is stable, returning the duplicate items in the order in which they occur in\nthe adapted iterator. Each duplicate item is returned exactly once. If an item appears more\nthan twice, the second item is the item retained and the rest are discarded.\n\n```\nuse itertools::Itertools;\n\nlet data = vec![\"a\", \"bb\", \"aa\", \"c\", \"ccc\"];\nitertools::assert_equal(data.into_iter().duplicates_by(|s| s.len()),\n                        vec![\"aa\", \"c\"]);\n```","links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"DuplicatesBy","id":"0:2338:1713","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"generic","inner":"V"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3521":{"id":"0:3521","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"X","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Iter","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Iter"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Iter"}},{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}],"bindings":[]}}}},"items":["0:3533:1849","0:3534:932","0:3536:1754","0:3537:2582"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1902:1754":{"id":"0:1902:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/peeking_take_while.rs","begin":[113,4],"end":[115,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:990:1864":{"id":"0:990:1864","crate_id":0,"name":"intersperse_with","span":{"filename":"src/free.rs","begin":[66,0],"end":[71,1]},"visibility":"public","docs":"Iterate `iterable` with a particular value created by a function inserted\nbetween each element.\n\n[`IntoIterator`] enabled version of [`Iterator::intersperse_with`].\n\n```\nuse itertools::intersperse_with;\n\nlet mut i = 10;\nitertools::assert_equal(intersperse_with((0..3), || { i -= 1; i }), vec![0, 9, 1, 8, 2]);\nassert_eq!(i, 8);\n```","links":{"`IntoIterator`":"2:8672:152","`Iterator::intersperse_with`":"2:8893:1864"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}],["element",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[],"output":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3221:128":{"id":"2:3221:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39109:6738","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:8676-0:1054:1651":{"id":"b:2:8676-0:1054:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Combinations","id":"0:1054:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:893:3448":{"id":"0:893:3448","crate_id":0,"name":"both","span":{"filename":"src/either_or_both.rs","begin":[68,4],"end":[73,5]},"visibility":"public","docs":"If Both, return `Some` tuple containing left and right.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4701:1754":{"id":"0:4701:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/ziptuple.rs","begin":[128,0],"end":[128,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23145:1244":{"id":"2:23145:1244","crate_id":2,"name":"saturating_sub","span":null,"visibility":"default","docs":"Lanewise saturating subtract.\n\n# Examples\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{Simd, SimdUint};\nuse core::u32::MAX;\nlet x = Simd::from_array([2, 1, 0, MAX]);\nlet max = Simd::splat(MAX);\nlet unsat = x - max;\nlet sat = x.saturating_sub(max);\nassert_eq!(unsat, Simd::from_array([3, 2, 1, 0]));\nassert_eq!(sat, Simd::splat(0));","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["second",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1744:1754":{"id":"0:1744:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/merge_join.rs","begin":[86,4],"end":[98,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3370:216-0:3045:1644":{"id":"a:2:3370:216-0:3045:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Combination","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"HasCombination","id":"0:737:2255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleCombinations","id":"0:3045:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1777:4017":{"id":"0:1777:4017","crate_id":0,"name":"reset_peek","span":{"filename":"src/multipeek_impl.rs","begin":[36,4],"end":[38,5]},"visibility":"public","docs":"Reset the peeking “cursor”","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9532:4793-0:4670:1724":{"id":"a:2:9532:4793-0:4670:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3382:225-0:3036:1642":{"id":"a:2:3382:225-0:3036:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WhileSome","id":"0:3036:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4404":{"id":"0:4404","crate_id":0,"name":null,"span":{"filename":"src/unique_impl.rs","begin":[155,9],"end":[155,14]},"visibility":{"restricted":{"parent":"0:2350:1714","path":"::unique_impl"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:4406:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:731":{"id":"0:731","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[669,0],"end":[684,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WhileSome","id":"0:3036:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:734:1849","0:735:932","0:736:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:658:1754":{"id":"0:658:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/adaptors/mod.rs","begin":[450,4],"end":[460,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1900:1849":{"id":"0:1900:1849","crate_id":0,"name":"Item","span":{"filename":"src/peeking_take_while.rs","begin":[108,4],"end":[108,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:4560:1744":{"id":"0:4560:1744","crate_id":0,"name":"multiunzip","span":{"filename":"src/unziptuple.rs","begin":[78,0],"end":[78,136]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"},{"kind":"generic","inner":"FromC"},{"kind":"generic","inner":"FromD"},{"kind":"generic","inner":"FromE"},{"kind":"generic","inner":"FromF"},{"kind":"generic","inner":"FromG"},{"kind":"generic","inner":"FromH"},{"kind":"generic","inner":"FromI"},{"kind":"generic","inner":"FromJ"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3203-0:1490:1670":{"id":"b:2:3203-0:1490:1670","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Group","id":"0:1490:1670","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:4792-0:2968:1631":{"id":"a:2:9533:4792-0:2968:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InterleaveShortest","id":"0:2968:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3207-0:3737:1655":{"id":"b:2:3207-0:3737:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3598:932":{"id":"0:3598:932","crate_id":0,"name":"next","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:4142:1708":{"id":"b:2:3218-0:4142:1708","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleWindows","id":"0:4142:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:529:502":{"id":"0:529:502","crate_id":0,"name":"count","span":{"filename":"src/adaptors/multi_product.rs","begin":[173,4],"end":[192,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1140:1754":{"id":"0:1140:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/exactly_one_err.rs","begin":[67,4],"end":[69,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4966":{"id":"0:4966","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[136,0],"end":[136,44]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"}]}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5055:688":{"id":"0:5055:688","crate_id":0,"name":"from","span":{"filename":"src/ziptuple.rs","begin":[138,0],"end":[138,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:674:1640":{"id":"a:2:3411:4706-0:674:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeBy","id":"0:674:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9532:4793-0:2968:1631":{"id":"a:2:9532:4793-0:2968:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InterleaveShortest","id":"0:2968:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3003":{"id":"0:3003","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[276,16],"end":[276,21]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Product","id":"0:2992:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["0:3006:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:8676-0:791:1632":{"id":"b:2:8676-0:791:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterMapOk","id":"0:791:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:0:2854-0:4037:1691":{"id":"b:0:2854-0:4037:1691","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ProcessResults","id":"0:4037:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4104-0:1651:1677":{"id":"b:2:4104-0:1651:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3744:667":{"id":"0:3744:667","crate_id":0,"name":"fmt","span":{"filename":"src/cons_tuples_impl.rs","begin":[45,9],"end":[45,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1537:1667":{"id":"0:1537:1667","crate_id":0,"name":"Chunk","span":{"filename":"src/groupbylazy.rs","begin":[541,0],"end":[548,1]},"visibility":"public","docs":"An iterator for the elements in a single chunk.\n\nIterator element type is `I::Item`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"outlives":"'a"}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:1537:1667","a:2:9532:4793-0:1537:1667","a:2:3382:225-0:1537:1667","a:2:3370:216-0:1537:1667","a:2:3411:4706-0:1537:1667","b:0:2854-0:1537:1667","b:2:8676-0:1537:1667","b:2:4104-0:1537:1667","b:2:2865-0:1537:1667","b:2:3203-0:1537:1667","b:2:3207-0:1537:1667","b:2:3218-0:1537:1667","b:2:2868-0:1537:1667","b:2:3213-0:1537:1667","0:1543","0:1547"]}},"2:23118:16127":{"id":"2:23118:16127","crate_id":2,"name":"reduce_product","span":null,"visibility":"default","docs":"Returns the product of the lanes of the vector, with wrapping multiplication.\n\n# Examples\n\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{i32x4, SimdInt};\nlet v = i32x4::from_array([1, 2, 3, 4]);\nassert_eq!(v.reduce_product(), 24);\n\n// SIMD integer multiplication is always wrapping\nlet v = i32x4::from_array([i32::MAX, 2, 1, 1]);\nassert!(v.reduce_product() < i32::MAX);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdInt","id":"2:23106:7064","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9532:4793-0:1981:1693":{"id":"a:2:9532:4793-0:1981:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Powerset","id":"0:1981:1693","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2869:3076":{"id":"0:2869:3076","crate_id":0,"name":"into_inner","span":{"filename":"src/lib.rs","begin":[3771,4],"end":[3775,5]},"visibility":"public","docs":"Return the value in the continue or done.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[143,4],"end":[143,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::put_back_n_impl::PutBackN","name":"PutBackN","id":"0:4048:1695","glob":false}},"b:5:848-0:4657:1722":{"id":"b:5:848-0:4657:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2750:2824":{"id":"0:2750:2824","crate_id":0,"name":"min_set_by","span":{"filename":"src/lib.rs","begin":[2958,4],"end":[2966,5]},"visibility":"default","docs":"Return all minimum elements of an iterator, as determined by\nthe specified function.\n\n# Examples\n\n```\n# use std::cmp::Ordering;\nuse itertools::Itertools;\n\nlet a: [(i32, i32); 0] = [];\nassert_eq!(a.iter().min_set_by(|_, _| Ordering::Equal), Vec::<&(i32, i32)>::new());\n\nlet a = [(1, 2)];\nassert_eq!(a.iter().min_set_by(|&&(k1,_), &&(k2, _)| k1.cmp(&k2)), vec![&(1, 2)]);\n\nlet a = [(1, 2), (2, 2), (3, 9), (4, 8), (5, 9)];\nassert_eq!(a.iter().min_set_by(|&&(_,k1), &&(_,k2)| k1.cmp(&k2)), vec![&(1, 2), &(2, 2)]);\n\nlet a = [(1, 2), (1, 3), (1, 4), (1, 5)];\nassert_eq!(a.iter().min_set_by(|&&(k1,_), &&(k2, _)| k1.cmp(&k2)), vec![&(1, 2), &(1, 3), &(1, 4), &(1, 5)]);\n```\n\nThe elements can be floats but no particular result is guaranteed\nif an element is NaN.","links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["compare",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7898:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1513:1666":{"id":"0:1513:1666","crate_id":0,"name":"IntoChunks","span":{"filename":"src/groupbylazy.rs","begin":[465,0],"end":[472,1]},"visibility":"public","docs":"`ChunkLazy` is the storage for a lazy chunking operation.\n\n`IntoChunks` behaves just like `GroupBy`: it is iterable, and\nit only buffers if several chunk iterators are alive at the same time.\n\nThis type implements [`IntoIterator`] (it is **not** an iterator\nitself), because the chunk iterators need to borrow from this\nvalue. It should be stored in a local variable or temporary and\niterated.\n\nIterator element type is `Chunk`, each chunk's iterator.\n\nSee [`.chunks()`](crate::Itertools::chunks) for more information.","links":{"`IntoIterator`":"2:8672:152","crate::Itertools::chunks":"0:2538:1943"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:1513:1666","a:2:9532:4793-0:1513:1666","a:2:3382:225-0:1513:1666","a:2:3370:216-0:1513:1666","a:2:3411:4706-0:1513:1666","b:2:4104-0:1513:1666","b:2:2865-0:1513:1666","b:2:3203-0:1513:1666","b:2:3207-0:1513:1666","b:2:3218-0:1513:1666","b:2:2868-0:1513:1666","b:2:3213-0:1513:1666","0:1521"]}},"2:9116:5153":{"id":"2:9116:5153","crate_id":2,"name":"eq_by","span":null,"visibility":"default","docs":"Determines if the elements of this [`Iterator`] are equal to those of\nanother with respect to the specified equality function.\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(iter_order_by)]\n\nlet xs = [1, 2, 3, 4];\nlet ys = [1, 4, 9, 16];\n\nassert!(xs.iter().eq_by(&ys, |&x, &y| x * x == y));\n```","links":{"`Iterator`":"2:8873:159"},"attrs":["#[unstable(feature = \"iter_order_by\", issue = \"64295\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}],["eq",{"kind":"generic","inner":"F"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:3017:1648":{"id":"b:2:3207-0:3017:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Step","id":"0:3017:1648","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23061:16112":{"id":"2:23061:16112","crate_id":2,"name":"to_degrees","span":null,"visibility":"default","docs":"Converts each lane from radians to degrees.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:8676-0:4670:1724":{"id":"b:2:8676-0:4670:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:8875:932":{"id":"2:8875:932","crate_id":2,"name":"next","span":null,"visibility":"default","docs":"Advances the iterator and returns the next value.\n\nReturns [`None`] when iteration is finished. Individual iterator\nimplementations may choose to resume iteration, and so calling `next()`\nagain may or may not eventually start returning [`Some(Item)`] again at some\npoint.\n\n[`Some(Item)`]: Some\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter();\n\n// A call to next() returns the next value...\nassert_eq!(Some(&1), iter.next());\nassert_eq!(Some(&2), iter.next());\nassert_eq!(Some(&3), iter.next());\n\n// ... and then None once it's over.\nassert_eq!(None, iter.next());\n\n// More calls may or may not return `None`. Here, they always will.\nassert_eq!(None, iter.next());\nassert_eq!(None, iter.next());\n```","links":{"Some":"2:47813:220","`None`":"2:47811:177"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"5:6171:62366":{"id":"5:6171:62366","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:4557","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8224:4593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:4557","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8224:4593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4468:2499":{"id":"1:4468:2499","crate_id":1,"name":"write","span":null,"visibility":"default","docs":"Write a buffer into this writer, returning how many bytes were written.\n\nThis function will attempt to write the entire contents of `buf`, but\nthe entire write might not succeed, or the write may also generate an\nerror. A call to `write` represents *at most one* attempt to write to\nany wrapped object.\n\nCalls to `write` are not guaranteed to block waiting for data to be\nwritten, and a write which would otherwise block can be indicated through\nan [`Err`] variant.\n\nIf the return value is [`Ok(n)`] then it must be guaranteed that\n`n <= buf.len()`. A return value of `0` typically means that the\nunderlying object is no longer able to accept bytes and will likely not\nbe able to in the future as well, or that the buffer provided is empty.\n\n# Errors\n\nEach call to `write` may generate an I/O error indicating that the\noperation could not be completed. If an error is returned then no bytes\nin the buffer were written to this writer.\n\nIt is **not** considered an error if the entire buffer could not be\nwritten to this writer.\n\nAn error of the [`ErrorKind::Interrupted`] kind is non-fatal and the\nwrite operation should be retried if there is nothing else to do.\n\n# Examples\n\n```no_run\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() -> std::io::Result<()> {\n    let mut buffer = File::create(\"foo.txt\")?;\n\n    // Writes some prefix of the byte string, not necessarily all of it.\n    buffer.write(b\"some bytes\")?;\n    Ok(())\n}\n```\n\n[`Ok(n)`]: Ok","links":{"`Err`":"2:47940:127","Ok":"2:47937:178","`ErrorKind::Interrupted`":"1:10863:10656"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2584:2134":{"id":"0:2584:2134","crate_id":0,"name":"multi_cartesian_product","span":{"filename":"src/lib.rs","begin":[1113,4],"end":[1120,5]},"visibility":"default","docs":"Return an iterator adaptor that iterates over the cartesian product of\nall subiterators returned by meta-iterator `self`.\n\nAll provided iterators must yield the same `Item` type. To generate\nthe product of iterators yielding multiple types, use the\n[`iproduct`] macro instead.\n\n\nThe iterator element type is `Vec<T>`, where `T` is the iterator element\nof the subiterators.\n\n```\nuse itertools::Itertools;\nlet mut multi_prod = (0..3).map(|i| (i * 2)..(i * 2 + 2))\n    .multi_cartesian_product();\nassert_eq!(multi_prod.next(), Some(vec![0, 2, 4]));\nassert_eq!(multi_prod.next(), Some(vec![0, 2, 5]));\nassert_eq!(multi_prod.next(), Some(vec![0, 3, 4]));\nassert_eq!(multi_prod.next(), Some(vec![0, 3, 5]));\nassert_eq!(multi_prod.next(), Some(vec![1, 2, 4]));\nassert_eq!(multi_prod.next(), Some(vec![1, 2, 5]));\nassert_eq!(multi_prod.next(), Some(vec![1, 3, 4]));\nassert_eq!(multi_prod.next(), Some(vec![1, 3, 5]));\nassert_eq!(multi_prod.next(), None);\n```","links":{"`iproduct`":"0:2517:1766"},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"MultiProduct","id":"0:2928:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1985":{"id":"0:1985","crate_id":0,"name":null,"span":{"filename":"src/powerset.rs","begin":[20,0],"end":[25,1]},"visibility":{"restricted":{"parent":"0:1958:1692","path":"::powerset"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Powerset","id":"0:1981:1693","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:4035:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2649:2488":{"id":"0:2649:2488","crate_id":0,"name":"set_from","span":{"filename":"src/lib.rs","begin":[2033,4],"end":[2046,5]},"visibility":"default","docs":"Assign to each reference in `self` from the `from` iterator,\nstopping at the shortest of the two iterators.\n\nThe `from` iterator is queried for its next element before the `self`\niterator, and if either is exhausted the method is done.\n\nReturn the number of elements written.\n\n```\nuse itertools::Itertools;\n\nlet mut xs = [0; 4];\nxs.iter_mut().set_from(1..);\nassert_eq!(xs, [1, 2, 3, 4]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"J"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"A","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"A"}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"A"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6834:6635":{"id":"1:6834:6635","crate_id":1,"name":"TcpStreamExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6835:23451","1:6836:23452"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10409:6539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3207-0:2968:1631":{"id":"b:2:3207-0:2968:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InterleaveShortest","id":"0:2968:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23111:16110":{"id":"2:23111:16110","crate_id":2,"name":"abs","span":null,"visibility":"default","docs":"Lanewise absolute value, implemented in Rust.\nEvery lane becomes its absolute value.\n\n# Examples\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{Simd, SimdInt};\nuse core::i32::{MIN, MAX};\nlet xs = Simd::from_array([MIN, MIN +1, -5, 0]);\nassert_eq!(xs.abs(), Simd::from_array([MIN, MAX, 5, 0]));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[155,41],"end":[155,49]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::unique_impl::UniqueBy","name":"UniqueBy","id":"0:4388:1716","glob":false}},"0:842":{"id":"0:842","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[1045,0],"end":[1057,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:845:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2493":{"id":"0:2493","crate_id":0,"name":null,"span":{"filename":"src/zip_longest.rs","begin":[33,0],"end":[53,1]},"visibility":{"restricted":{"parent":"0:2466:1721","path":"::zip_longest"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"items":["0:2496:1849","0:2497:932","0:2498:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6462:10289":{"id":"1:6462:10289","crate_id":1,"name":"st_dev","span":null,"visibility":"default","docs":"Returns the device ID on which this file resides.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_dev());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3370:216-0:1513:1666":{"id":"a:2:3370:216-0:1513:1666","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoChunks","id":"0:1513:1666","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9533:4792-0:3766:1659":{"id":"a:2:9533:4792-0:3766:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatWith","id":"0:3766:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:2637:2426":{"id":"0:2637:2426","crate_id":0,"name":"all_unique","span":{"filename":"src/lib.rs","begin":[1877,4],"end":[1883,5]},"visibility":"default","docs":"Check whether all elements are unique (non equal).\n\nEmpty iterators are considered to have unique elements:\n\n```\nuse itertools::Itertools;\n\nlet data = vec![1, 2, 3, 4, 1, 5];\nassert!(!data.iter().all_unique());\nassert!(data[0..4].iter().all_unique());\nassert!(data[1..6].iter().all_unique());\n\nlet data : Option<usize> = None;\nassert!(data.into_iter().all_unique());\n```","links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3889:667":{"id":"0:3889:667","crate_id":0,"name":"fmt","span":{"filename":"src/kmerge_impl.rs","begin":[167,4],"end":[167,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"::std::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:2982:1635":{"id":"b:2:2868-0:2982:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4081:667":{"id":"0:4081:667","crate_id":0,"name":"fmt","span":{"filename":"src/sources.rs","begin":[17,4],"end":[17,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"::std::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:4058:1697":{"id":"b:2:3218-0:4058:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3924:611":{"id":"0:3924:611","crate_id":0,"name":"eq","span":{"filename":"src/minmax.rs","begin":[5,22],"end":[5,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23113:16132":{"id":"2:23113:16132","crate_id":2,"name":"saturating_neg","span":null,"visibility":"default","docs":"Lanewise saturating negation, implemented in Rust.\nAs neg(), except the MIN value becomes MAX instead of itself.\n\n# Examples\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{Simd, SimdInt};\nuse core::i32::{MIN, MAX};\nlet x = Simd::from_array([MIN, -2, 3, MAX]);\nlet unsat = -x;\nlet sat = x.saturating_neg();\nassert_eq!(unsat, Simd::from_array([MIN, 2, -3, MIN + 1]));\nassert_eq!(sat, Simd::from_array([MAX, 2, -3, MIN + 1]));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9533:4792-0:1198:1661":{"id":"a:2:9533:4792-0:1198:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FlattenOk","id":"0:1198:1661","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2443:1849":{"id":"0:2443:1849","crate_id":0,"name":"Item","span":{"filename":"src/with_position.rs","begin":[62,4],"end":[62,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"a:2:9532:4793-0:4037:1691":{"id":"a:2:9532:4793-0:4037:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ProcessResults","id":"0:4037:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:4631":{"id":"0:4631","crate_id":0,"name":null,"span":{"filename":"src/with_position.rs","begin":[37,9],"end":[37,13]},"visibility":{"restricted":{"parent":"0:2419:1717","path":"::with_position"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3207-0:2992:1634":{"id":"b:2:3207-0:2992:1634","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Product","id":"0:2992:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23143:16106":{"id":"2:23143:16106","crate_id":2,"name":"Scalar","span":null,"visibility":"default","docs":"Scalar type contained by this SIMD vector type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"2:8882:3247":{"id":"2:8882:3247","crate_id":2,"name":"last","span":null,"visibility":"default","docs":"Consumes the iterator, returning the last element.\n\nThis method will evaluate the iterator until it returns [`None`]. While\ndoing so, it keeps track of the current element. After [`None`] is\nreturned, `last()` will then return the last element it saw.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\nassert_eq!(a.iter().last(), Some(&3));\n\nlet a = [1, 2, 3, 4, 5];\nassert_eq!(a.iter().last(), Some(&5));\n```","links":{"`None`":"2:47811:177"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3874:667":{"id":"0:3874:667","crate_id":0,"name":"fmt","span":{"filename":"src/intersperse.rs","begin":[49,16],"end":[49,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2059:1849":{"id":"0:2059:1849","crate_id":0,"name":"Item","span":{"filename":"src/rciter_impl.rs","begin":[60,4],"end":[60,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"A"}}},"0:660":{"id":"0:660","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[465,0],"end":[467,2]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Step","id":"0:3017:1648","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9533:4792-0:3904:1735":{"id":"a:2:9533:4792-0:3904:1735","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:14462:525":{"id":"2:14462:525","crate_id":2,"name":"dealloc","span":null,"visibility":"default","docs":"Deallocate the block of memory at the given `ptr` pointer with the given `layout`.\n\n# Safety\n\nThis function is unsafe because undefined behavior can result\nif the caller does not ensure all of the following:\n\n* `ptr` must denote a block of memory currently allocated via\n  this allocator,\n\n* `layout` must be the same layout that was used\n  to allocate that block of memory.","links":{},"attrs":["#[stable(feature = \"global_alloc\", since = \"1.28.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ptr",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}}],["layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50749:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}},"2:8670:691":{"id":"2:8670:691","crate_id":2,"name":"from_iter","span":null,"visibility":"default","docs":"Creates a value from an iterator.\n\nSee the [module-level documentation] for more.\n\n[module-level documentation]: crate::iter\n\n# Examples\n\nBasic usage:\n\n```\nlet five_fives = std::iter::repeat(5).take(5);\n\nlet v = Vec::from_iter(five_fives);\n\nassert_eq!(v, vec![5, 5, 5, 5, 5]);\n```","links":{"crate::iter":"2:5752:788"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["iter",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"A"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:8676-0:1476:1671":{"id":"b:2:8676-0:1476:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Groups","id":"0:1476:1671","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:4101:667":{"id":"0:4101:667","crate_id":0,"name":"fmt","span":{"filename":"src/sources.rs","begin":[149,4],"end":[149,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"::std::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2747:2811":{"id":"0:2747:2811","crate_id":0,"name":"min_set","span":{"filename":"src/lib.rs","begin":[2927,4],"end":[2931,5]},"visibility":"default","docs":"Return all minimum elements of an iterator.\n\n# Examples\n\n```\nuse itertools::Itertools;\n\nlet a: [i32; 0] = [];\nassert_eq!(a.iter().min_set(), Vec::<&i32>::new());\n\nlet a = [1];\nassert_eq!(a.iter().min_set(), vec![&1]);\n\nlet a = [1, 2, 3, 4, 5];\nassert_eq!(a.iter().min_set(), vec![&1]);\n\nlet a = [1, 1, 1, 1];\nassert_eq!(a.iter().min_set(), vec![&1, &1, &1, &1]);\n```\n\nThe elements can be floats but no particular result is guaranteed\nif an element is NaN.","links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7898:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6191:62370":{"id":"5:6191:62370","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:8479:221","`Box<str>`":"5:444:4557"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:4557","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8224:4593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8479:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:654":{"id":"0:654","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[437,0],"end":[461,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Step","id":"0:3017:1648","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:656:1849","0:657:932","0:658:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2932":{"id":"0:2932","crate_id":0,"name":null,"span":{"filename":"src/adaptors/multi_product.rs","begin":[8,9],"end":[8,14]},"visibility":{"restricted":{"parent":"0:497:3191","path":"::adaptors::multi_product"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiProduct","id":"0:2928:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:2934:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4643:611":{"id":"0:4643:611","crate_id":0,"name":"eq","span":{"filename":"src/with_position.rs","begin":[37,29],"end":[37,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4104-0:4142:1708":{"id":"b:2:4104-0:4142:1708","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleWindows","id":"0:4142:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3506":{"id":"0:3506","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"X","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Iter","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Iter"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Iter"}},{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}],"bindings":[]}}}},"items":["0:3519:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:9143:16071":{"id":"1:9143:16071","crate_id":1,"name":"fract","span":null,"visibility":"default","docs":"Returns the floating point's fractional value, with its integer part removed.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13731:6679":{"id":"2:13731:6679","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"str::slice_mut_unchecked":"2:13732:61711","`str`":"1:15882:4444","crate::ops::Index":"2:3679:3976"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:9088:5149":{"id":"2:9088:5149","crate_id":2,"name":"copied","span":null,"visibility":"default","docs":"Creates an iterator which copies all of its elements.\n\nThis is useful when you have an iterator over `&T`, but you need an\niterator over `T`.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nlet v_copied: Vec<_> = a.iter().copied().collect();\n\n// copied is the same as .map(|&x| x)\nlet v_map: Vec<_> = a.iter().map(|&x| x).collect();\n\nassert_eq!(v_copied, vec![1, 2, 3]);\nassert_eq!(v_map, vec![1, 2, 3]);\n```","links":{},"attrs":["#[stable(feature = \"iter_copied\", since = \"1.36.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:46926:4655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8676-0:4092:1703":{"id":"b:2:8676-0:4092:1703","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iterate","id":"0:4092:1703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:4588":{"id":"0:4588","crate_id":0,"name":null,"span":{"filename":"src/unziptuple.rs","begin":[80,0],"end":[80,160]},"visibility":{"restricted":{"parent":"0:2411:1743","path":"::unziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"IT","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"C"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"D"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"G"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"H"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromL","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MultiUnzip","id":"0:2415:1745","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"},{"kind":"generic","inner":"FromC"},{"kind":"generic","inner":"FromD"},{"kind":"generic","inner":"FromE"},{"kind":"generic","inner":"FromF"},{"kind":"generic","inner":"FromG"},{"kind":"generic","inner":"FromH"},{"kind":"generic","inner":"FromI"},{"kind":"generic","inner":"FromJ"},{"kind":"generic","inner":"FromK"},{"kind":"generic","inner":"FromL"}]}}],"bindings":[]}}},"for":{"kind":"generic","inner":"IT"},"items":["0:4614:1744"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2978":{"id":"0:2978","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[88,16],"end":[88,21]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InterleaveShortest","id":"0:2968:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["0:2981:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2610:1652":{"id":"0:2610:1652","crate_id":0,"name":"combinations_with_replacement","span":{"filename":"src/lib.rs","begin":[1510,4],"end":[1516,5]},"visibility":"default","docs":"Return an iterator that iterates over the `k`-length combinations of\nthe elements from an iterator, with replacement.\n\nIterator element type is `Vec<Self::Item>`. The iterator produces a new Vec per iteration,\nand clones the iterator elements.\n\n```\nuse itertools::Itertools;\n\nlet it = (1..4).combinations_with_replacement(2);\nitertools::assert_equal(it, vec![\n    vec![1, 1],\n    vec![1, 2],\n    vec![1, 3],\n    vec![2, 2],\n    vec![2, 3],\n    vec![3, 3],\n]);\n```","links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["k",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"CombinationsWithReplacement","id":"0:3748:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5557:23380":{"id":"1:5557:23380","crate_id":1,"name":"is_block_device","span":null,"visibility":"default","docs":"Returns `true` if this file type is a block device.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::FileTypeExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"block_device_file\")?;\n    let file_type = meta.file_type();\n    assert!(file_type.is_block_device());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"file_type_ext\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4636":{"id":"0:4636","crate_id":0,"name":null,"span":{"filename":"src/with_position.rs","begin":[37,22],"end":[37,27]},"visibility":{"restricted":{"parent":"0:2419:1717","path":"::with_position"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:4638:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4754:3067":{"id":"0:4754:3067","crate_id":0,"name":"next_back","span":{"filename":"src/ziptuple.rs","begin":[130,0],"end":[130,26]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3252:3317":{"id":"0:3252:3317","crate_id":0,"name":"Tuple8Combination","span":{"filename":"src/adaptors/mod.rs","begin":[828,0],"end":[828,75]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"b:0:2854-0:3748:1653":{"id":"b:0:2854-0:3748:1653","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CombinationsWithReplacement","id":"0:3748:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:3737:1655":{"id":"b:2:2865-0:3737:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3382:225-0:4092:1703":{"id":"a:2:3382:225-0:4092:1703","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"St","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"St"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iterate","id":"0:4092:1703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:9139:16067":{"id":"1:9139:16067","crate_id":1,"name":"ceil","span":null,"visibility":"default","docs":"Returns the smallest integer greater than or equal to each lane.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9532:4793-0:2430:1718":{"id":"a:2:9532:4793-0:2430:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WithPosition","id":"0:2430:1718","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3498:4742":{"id":"2:3498:4742","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3500:184","2:3501:358"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2032":{"id":"0:2032","crate_id":0,"name":null,"span":{"filename":"src/put_back_n_impl.rs","begin":[49,0],"end":[60,1]},"visibility":{"restricted":{"parent":"0:2020:1694","path":"::put_back_n_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:2034:1849","0:2035:932","0:2037:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:191":{"id":"0:191","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[130,4],"end":[130,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::merge_join::MergeJoinBy","name":"MergeJoinBy","id":"0:1723:1679","glob":false}},"0:2668:2572":{"id":"0:2668:2572","crate_id":0,"name":"fold_options","span":{"filename":"src/lib.rs","begin":[2221,4],"end":[2232,5]},"visibility":"default","docs":"Fold `Option` values from an iterator.\n\nOnly `Some` values are folded. If no `None` is encountered, the folded\nvalue is returned inside `Some`. Otherwise, the operation terminates\nand returns `None`. No iterator elements are consumed after the `None`.\n\nThis is the `Option` equivalent to [`fold_ok`](Itertools::fold_ok).\n\n```\nuse std::ops::Add;\nuse itertools::Itertools;\n\nlet mut values = vec![Some(1), Some(2), Some(-2)].into_iter();\nassert_eq!(values.fold_options(5, Add::add), Some(5 + 1 + 2 - 2));\n\nlet mut more_values = vec![Some(2), None, Some(0)].into_iter();\nassert!(more_values.fold_options(0, Add::add).is_none());\nassert_eq!(more_values.next().unwrap(), Some(0));\n```","links":{"Itertools::fold_ok":"0:2663:2532"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["start",{"kind":"generic","inner":"B"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"B"},{"kind":"generic","inner":"A"}],"output":{"kind":"generic","inner":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:1490:1670":{"id":"b:2:2868-0:1490:1670","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Group","id":"0:1490:1670","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3255:59":{"id":"2:3255:59","crate_id":2,"name":"default","span":null,"visibility":"default","docs":"Returns the \"default value\" for a type.\n\nDefault values are often some kind of initial value, identity value, or anything else that\nmay make sense as a default.\n\n# Examples\n\nUsing built-in default values:\n\n```\nlet i: i8 = Default::default();\nlet (x, y): (Option<String>, f64) = Default::default();\nlet (a, b, (c, d)): (i32, u32, (bool, bool)) = Default::default();\n```\n\nMaking your own:\n\n```\n# #[allow(dead_code)]\nenum Kind {\n    A,\n    B,\n    C,\n}\n\nimpl Default for Kind {\n    fn default() -> Self { Kind::A }\n}\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3967":{"id":"0:3967","crate_id":0,"name":null,"span":{"filename":"src/peeking_take_while.rs","begin":[141,0],"end":[141,53]},"visibility":{"restricted":{"parent":"0:1858:1686","path":"::peeking_take_while"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PeekingNext","id":"0:1868:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"::std::str::Chars","id":"2:49760:4067","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:3969:4024"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:231":{"id":"0:231","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[148,49],"end":[148,56]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::sources::Iterate","name":"Iterate","id":"0:4092:1703","glob":false}},"a:2:3370:216-0:3757:1657":{"id":"a:2:3370:216-0:3757:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5104:2655":{"id":"0:5104:2655","crate_id":0,"name":"Done","span":{"filename":"src/lib.rs","begin":[3766,4],"end":[3766,11]},"visibility":"default","docs":"Fold is complete and will return this value","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:5106:1564"]}},"2:3460:4736":{"id":"2:3460:4736","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3462:184","2:3463:1114"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3785:415":{"id":"0:3785:415","crate_id":0,"name":"clone","span":{"filename":"src/format.rs","begin":[24,9],"end":[24,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1847:1849":{"id":"0:1847:1849","crate_id":0,"name":"Item","span":{"filename":"src/peek_nth.rs","begin":[78,4],"end":[78,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:891:2754":{"id":"0:891:2754","crate_id":0,"name":"left","span":{"filename":"src/either_or_both.rs","begin":[52,4],"end":[57,5]},"visibility":"public","docs":"If `Left`, or `Both`, return `Some` with the left value, otherwise, return `None`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:1054:1651":{"id":"b:2:3218-0:1054:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Combinations","id":"0:1054:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2080":{"id":"0:2080","crate_id":0,"name":null,"span":{"filename":"src/repeatn.rs","begin":[24,0],"end":[42,1]},"visibility":{"restricted":{"parent":"0:2074:1698","path":"::repeatn"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"items":["0:2082:1849","0:2083:932","0:2084:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1804":{"id":"0:1804","crate_id":0,"name":null,"span":{"filename":"src/pad_tail.rs","begin":[19,0],"end":[24,1]},"visibility":{"restricted":{"parent":"0:1793:1684","path":"::pad_tail"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"std::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:3950:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4496":{"id":"0:4496","crate_id":0,"name":null,"span":{"filename":"src/unziptuple.rs","begin":[76,0],"end":[76,112]},"visibility":{"restricted":{"parent":"0:2411:1743","path":"::unziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"IT","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"C"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"D"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"G"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"H"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MultiUnzip","id":"0:2415:1745","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"},{"kind":"generic","inner":"FromC"},{"kind":"generic","inner":"FromD"},{"kind":"generic","inner":"FromE"},{"kind":"generic","inner":"FromF"},{"kind":"generic","inner":"FromG"},{"kind":"generic","inner":"FromH"}]}}],"bindings":[]}}},"for":{"kind":"generic","inner":"IT"},"items":["0:4514:1744"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1637:1676":{"id":"0:1637:1676","crate_id":0,"name":"KMerge","span":{"filename":"src/kmerge_impl.rs","begin":[107,0],"end":[107,45]},"visibility":"public","docs":"An iterator adaptor that merges an abitrary number of base iterators in ascending order.\nIf all base iterators are sorted (ascending), the result is sorted.\n\nIterator element type is `I::Item`.\n\nSee [`.kmerge()`](crate::Itertools::kmerge) for more information.","links":{"crate::Itertools::kmerge":"0:2579:2101"},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"resolved_path","inner":{"name":"KMergeByLt","id":"0:3883:3962","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"0:5016:1754":{"id":"0:5016:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/ziptuple.rs","begin":[137,0],"end":[137,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6465:10291":{"id":"1:6465:10291","crate_id":1,"name":"st_nlink","span":null,"visibility":"default","docs":"Returns the number of hard links to file.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_nlink());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2088":{"id":"0:2088","crate_id":0,"name":null,"span":{"filename":"src/repeatn.rs","begin":[53,0],"end":[55,2]},"visibility":{"restricted":{"parent":"0:2074:1698","path":"::repeatn"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3762":{"id":"0:3762","crate_id":0,"name":null,"span":{"filename":"src/exactly_one_err.rs","begin":[19,9],"end":[19,14]},"visibility":{"restricted":{"parent":"0:1105:1656","path":"::exactly_one_err"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3764:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13833:15399":{"id":"2:13833:15399","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:2954:1630":{"id":"b:2:3213-0:2954:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23063:16114":{"id":"2:23063:16114","crate_id":2,"name":"is_sign_positive","span":null,"visibility":"default","docs":"Returns true for each lane if it has a positive sign, including\n`+0.0`, `NaN`s with positive sign bit and positive infinity.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23053:7076","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3370:216-0:4092:1703":{"id":"a:2:3370:216-0:4092:1703","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"St","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"St"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iterate","id":"0:4092:1703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:674:1640":{"id":"0:674:1640","crate_id":0,"name":"MergeBy","span":{"filename":"src/adaptors/mod.rs","begin":[516,0],"end":[524,1]},"visibility":"public","docs":"An iterator adaptor that merges the two base iterators in ascending order.\nIf both base iterators are sorted (ascending), the result is sorted.\n\nIterator element type is `I::Item`.\n\nSee [`.merge_by()`](crate::Itertools::merge_by) for more information.","links":{"crate::Itertools::merge_by":"0:2573:2069"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:674:1640","a:2:9532:4793-0:674:1640","a:2:3382:225-0:674:1640","a:2:3370:216-0:674:1640","a:2:3411:4706-0:674:1640","b:0:2854-0:674:1640","b:2:8676-0:674:1640","b:2:4104-0:674:1640","b:2:2865-0:674:1640","b:2:3203-0:674:1640","b:2:3207-0:674:1640","b:2:3218-0:674:1640","b:2:2868-0:674:1640","b:2:3213-0:674:1640","b:5:848-0:674:1640","0:682","0:694","0:698","0:705"]}},"0:2862:3063":{"id":"0:2862:3063","crate_id":0,"name":"partition","span":{"filename":"src/lib.rs","begin":[3734,0],"end":[3756,1]},"visibility":"public","docs":"Partition a sequence using predicate `pred` so that elements\nthat map to `true` are placed before elements which map to `false`.\n\nThe order within the partitions is arbitrary.\n\nReturn the index of the split point.\n\n```\nuse itertools::partition;\n\n# // use repeated numbers to not promise any ordering\nlet mut data = [7, 1, 1, 7, 1, 1, 7];\nlet split_index = partition(&mut data, |elt| *elt >= 3);\n\nassert_eq!(data, [7, 7, 7, 1, 1, 1, 1]);\nassert_eq!(split_index, 3);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iter",{"kind":"generic","inner":"I"}],["pred",{"kind":"generic","inner":"F"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"A","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"A"}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"A"}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:9160:4652":{"id":"2:9160:4652","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Step","id":"2:8196:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2865-0:4037:1691":{"id":"b:2:2865-0:4037:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ProcessResults","id":"0:4037:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[132,4],"end":[132,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::multipeek_impl::MultiPeek","name":"MultiPeek","id":"0:3928:1681","glob":false}},"b:2:3218-0:4644:1720":{"id":"b:2:3218-0:4644:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3382:225-0:1198:1661":{"id":"a:2:3382:225-0:1198:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FlattenOk","id":"0:1198:1661","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4809":{"id":"0:4809","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[132,0],"end":[132,32]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"}]}}],"bindings":[]}}}},"items":["0:4816:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4104-0:674:1640":{"id":"b:2:4104-0:674:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeBy","id":"0:674:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6192:4644":{"id":"5:6192:4644","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8479:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8479:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10820:22121":{"id":"2:10820:22121","crate_id":2,"name":"write_i16","span":null,"visibility":"default","docs":"Writes a single `i16` into this hasher.","links":{},"attrs":["#[stable(feature = \"hasher_write\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4784":{"id":"0:4784","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[132,0],"end":[132,32]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"}]}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"C"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"D"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"E"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"","id":"2:8672:152","args":null}}}]}}],"bindings":[]}}}},"items":["0:4791:688"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4104-0:3836:1663":{"id":"b:2:4104-0:3836:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupingMap","id":"0:3836:1663","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2013:1737":{"id":"0:2013:1737","crate_id":0,"name":"process_results","span":{"filename":"src/process_results_impl.rs","begin":[87,0],"end":[97,1]},"visibility":"public","docs":"“Lift” a function of the values of an iterator so that it can process\nan iterator of `Result` values instead.\n\n`iterable` is an iterator or iterable with `Result<T, E>` elements, where\n`T` is the value type and `E` the error type.\n\n`processor` is a closure that receives an adapted version of the iterable\nas the only argument — the adapted iterator produces elements of type `T`,\nas long as the original iterator produces `Ok` values.\n\nIf the original iterable produces an error at any point, the adapted\niterator ends and the `process_results` function will return the\nerror iself.\n\nOtherwise, the return value from the closure is returned wrapped\ninside `Ok`.\n\n# Example\n\n```\nuse itertools::process_results;\n\ntype R = Result<i32, &'static str>;\n\nlet first_values: Vec<R> = vec![Ok(1), Ok(0), Ok(3)];\nlet second_values: Vec<R> = vec![Ok(2), Ok(1), Err(\"overflow\")];\n\n// “Lift” the iterator .max() method to work on the values in Results using process_results\n\nlet first_max = process_results(first_values, |iter| iter.max().unwrap_or(0));\nlet second_max = process_results(second_values, |iter| iter.max().unwrap_or(0));\n\nassert_eq!(first_max, Ok(3));\nassert!(second_max.is_err());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}],["processor",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"ProcessResults","id":"0:4037:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}],"output":{"kind":"generic","inner":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3764:415":{"id":"0:3764:415","crate_id":0,"name":"clone","span":{"filename":"src/exactly_one_err.rs","begin":[19,9],"end":[19,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1534:1849":{"id":"0:1534:1849","crate_id":0,"name":"Item","span":{"filename":"src/groupbylazy.rs","begin":[521,4],"end":[521,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Chunk","id":"0:1537:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}}},"2:23076:16127":{"id":"2:23076:16127","crate_id":2,"name":"reduce_product","span":null,"visibility":"default","docs":"Reducing multiply.  Returns the product of the lanes of the vector.\n\n# Examples\n\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{f32x2, SimdFloat};\nlet v = f32x2::from_array([3., 4.]);\nassert_eq!(v.reduce_product(), 12.);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23053:7076","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:8675:777":{"id":"2:8675:777","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":"Creates an iterator from a value.\n\nSee the [module-level documentation] for more.\n\n[module-level documentation]: crate::iter\n\n# Examples\n\nBasic usage:\n\n```\nlet v = [1, 2, 3];\nlet mut iter = v.into_iter();\n\nassert_eq!(Some(1), iter.next());\nassert_eq!(Some(2), iter.next());\nassert_eq!(Some(3), iter.next());\nassert_eq!(None, iter.next());\n```","links":{"crate::iter":"2:5752:788"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:7596:15893":{"id":"1:7596:15893","crate_id":1,"name":"report","span":null,"visibility":"default","docs":"Is called to get the representation of the value as status code.\nThis status code is returned to the operating system.","links":{},"attrs":["#[stable(feature = \"termination_trait_lib\", since = \"1.61.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"ExitCode","id":"1:11875:6735","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3457:565":{"id":"2:3457:565","crate_id":2,"name":"div","span":null,"visibility":"default","docs":"Performs the `/` operation.\n\n# Example\n\n```\nassert_eq!(12 / 2, 6);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Div","id":"2:3454:4734","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2613:2320":{"id":"0:2613:2320","crate_id":0,"name":"pad_using","span":{"filename":"src/lib.rs","begin":[1616,4],"end":[1621,5]},"visibility":"default","docs":"Return an iterator adaptor that pads the sequence to a minimum length of\n`min` by filling missing elements using a closure `f`.\n\nIterator element type is `Self::Item`.\n\n```\nuse itertools::Itertools;\n\nlet it = (0..5).pad_using(10, |i| 2*i);\nitertools::assert_equal(it, vec![0, 1, 2, 3, 4, 10, 12, 14, 16, 18]);\n\nlet it = (0..10).pad_using(5, |i| 2*i);\nitertools::assert_equal(it, vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n\nlet it = (0..5).pad_using(10, |i| 2*i).rev();\nitertools::assert_equal(it, vec![18, 16, 14, 12, 10, 4, 3, 2, 1, 0]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["min",{"kind":"primitive","inner":"usize"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"primitive","inner":"usize"}],"output":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:3407:1748":{"id":"b:2:3218-0:3407:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:9142:16070":{"id":"1:9142:16070","crate_id":1,"name":"trunc","span":null,"visibility":"default","docs":"Returns the floating point's integer value, with its fractional part removed.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:3007:1636":{"id":"b:2:3218-0:3007:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Batching","id":"0:3007:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2445:1754":{"id":"0:2445:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/with_position.rs","begin":[90,4],"end":[92,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:3748:1653":{"id":"b:2:3213-0:3748:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CombinationsWithReplacement","id":"0:3748:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5067:6617":{"id":"1:5067:6617","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5068:3584","1:5069:15750"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4055":{"id":"0:4055","crate_id":0,"name":null,"span":{"filename":"src/put_back_n_impl.rs","begin":[9,16],"end":[9,21]},"visibility":{"restricted":{"parent":"0:2020:1694","path":"::put_back_n_impl"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:4057:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:65":{"id":"0:65","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[92,8],"end":[92,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::DedupByWithCount","name":"DedupByWithCount","id":"0:416:1629","glob":false}},"0:3987:4024":{"id":"0:3987:4024","crate_id":0,"name":"peeking_next","span":{"filename":"src/peeking_take_while.rs","begin":[145,0],"end":[145,61]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["accept",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:861:2582":{"id":"0:861:2582","crate_id":0,"name":"fold","span":{"filename":"src/adaptors/mod.rs","begin":[1110,4],"end":[1115,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["init",{"kind":"generic","inner":"Acc"}],["g",{"kind":"generic","inner":"G"}]],"output":{"kind":"generic","inner":"Acc"},"c_variadic":false},"generics":{"params":[{"name":"Acc","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Acc"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"generic","inner":"Acc"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5567:23368":{"id":"1:5567:23368","crate_id":1,"name":"ino","span":null,"visibility":"default","docs":"Returns the underlying `d_ino` field in the contained `dirent`\nstructure.\n\n# Examples\n\n```\nuse std::fs;\nuse std::os::unix::fs::DirEntryExt;\n\nif let Ok(entries) = fs::read_dir(\".\") {\n    for entry in entries {\n        if let Ok(entry) = entry {\n            // Here, `entry` is a `DirEntry`.\n            println!(\"{:?}: {}\", entry.file_name(), entry.ino());\n        }\n    }\n}\n```","links":{},"attrs":["#[stable(feature = \"dir_entry_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2865-0:1513:1666":{"id":"b:2:2865-0:1513:1666","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoChunks","id":"0:1513:1666","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2545:1704":{"id":"0:2545:1704","crate_id":0,"name":"tee","span":{"filename":"src/lib.rs","begin":[797,4],"end":[802,5]},"visibility":"default","docs":"Split into an iterator pair that both yield all elements from\nthe original iterator.\n\n**Note:** If the iterator is clonable, prefer using that instead\nof using this method. Cloning is likely to be more efficient.\n\nIterator element type is `Self::Item`.\n\n```\nuse itertools::Itertools;\nlet xs = vec![0, 1, 2, 3];\n\nlet (mut t1, t2) = xs.into_iter().tee();\nitertools::assert_equal(t1.next(), Some(0));\nitertools::assert_equal(t2, 0..4);\nitertools::assert_equal(t1, 1..4);\n```","links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"Tee","id":"0:4112:1705","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"Tee","id":"0:4112:1705","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:3045:1644":{"id":"b:5:848-0:3045:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleCombinations","id":"0:3045:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8673:1849":{"id":"2:8673:1849","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":"The type of the elements being iterated over.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:3385:667":{"id":"0:3385:667","crate_id":0,"name":"fmt","span":{"filename":"src/adaptors/mod.rs","begin":[923,4],"end":[923,40]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"::std::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1746:3247":{"id":"0:1746:3247","crate_id":0,"name":"last","span":{"filename":"src/merge_join.rs","begin":[119,4],"end":[149,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:4792-0:3407:1748":{"id":"a:2:9533:4792-0:3407:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4586:1744":{"id":"0:4586:1744","crate_id":0,"name":"multiunzip","span":{"filename":"src/unziptuple.rs","begin":[79,0],"end":[79,148]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"},{"kind":"generic","inner":"FromC"},{"kind":"generic","inner":"FromD"},{"kind":"generic","inner":"FromE"},{"kind":"generic","inner":"FromF"},{"kind":"generic","inner":"FromG"},{"kind":"generic","inner":"FromH"},{"kind":"generic","inner":"FromI"},{"kind":"generic","inner":"FromJ"},{"kind":"generic","inner":"FromK"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:528:932":{"id":"0:528:932","crate_id":0,"name":"next","span":{"filename":"src/adaptors/multi_product.rs","begin":[162,4],"end":[171,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3282:5308":{"id":"2:3282:5308","crate_id":2,"name":"cause","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note =\n\"replaced by Error::source, which can support downcasting\")]","#[allow(missing_docs)]"],"deprecation":{"since":"1.33.0","note":"replaced by Error::source, which can support downcasting"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Error","id":"2:3278:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:3375:1633":{"id":"b:2:2868-0:3375:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOk","id":"0:3375:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:5099:2652":{"id":"b:2:2868-0:5099:2652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4721":{"id":"0:4721","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[129,0],"end":[129,23]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"}]}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3951:1683":{"id":"0:3951:1683","crate_id":0,"name":"PeekNth","span":{"filename":"src/peek_nth.rs","begin":[8,0],"end":[14,1]},"visibility":"public","docs":"See [`peek_nth()`] for more information.","links":{"`peek_nth()`":"0:1839:1682"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["0:1841","a:2:9533:4792-0:3951:1683","a:2:9532:4793-0:3951:1683","a:2:3382:225-0:3951:1683","a:2:3370:216-0:3951:1683","a:2:3411:4706-0:3951:1683","b:0:2854-0:3951:1683","b:2:8676-0:3951:1683","b:2:4104-0:3951:1683","b:2:2865-0:3951:1683","b:2:3203-0:3951:1683","b:2:3207-0:3951:1683","b:2:3218-0:3951:1683","b:2:2868-0:3951:1683","b:2:3213-0:3951:1683","b:5:848-0:3951:1683","0:3955","0:3958","0:1845","0:1851","0:1853"]}},"0:2607:2254":{"id":"0:2607:2254","crate_id":0,"name":"tuple_combinations","span":{"filename":"src/lib.rs","begin":[1445,4],"end":[1451,5]},"visibility":"default","docs":"Return an iterator adaptor that iterates over the combinations of the\nelements from an iterator.\n\nIterator element can be any homogeneous tuple of type `Self::Item` with\nsize up to 12.\n\n```\nuse itertools::Itertools;\n\nlet mut v = Vec::new();\nfor (a, b) in (1..5).tuple_combinations() {\n    v.push((a, b));\n}\nassert_eq!(v, vec![(1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 4)]);\n\nlet mut it = (1..5).tuple_combinations();\nassert_eq!(Some((1, 2, 3)), it.next());\nassert_eq!(Some((1, 2, 4)), it.next());\nassert_eq!(Some((1, 3, 4)), it.next());\nassert_eq!(Some((2, 3, 4)), it.next());\nassert_eq!(None, it.next());\n\n// this requires a type hint\nlet it = (1..5).tuple_combinations::<(_, _, _)>();\nitertools::assert_equal(it, vec![(1, 2, 3), (1, 2, 4), (1, 3, 4), (2, 3, 4)]);\n\n// you can also specify the complete type\nuse itertools::TupleCombinations;\nuse std::ops::Range;\n\nlet it: TupleCombinations<Range<u32>, (u32, u32, u32)> = (1..5).tuple_combinations();\nitertools::assert_equal(it, vec![(1, 2, 3), (1, 2, 4), (1, 3, 4), (2, 3, 4)]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"TupleCombinations","id":"0:3045:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"adaptors::HasCombination","id":"0:737:2255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2765:2850":{"id":"0:2765:2850","crate_id":0,"name":"max_set_by_key","span":{"filename":"src/lib.rs","begin":[3086,4],"end":[3090,5]},"visibility":"default","docs":"Return all minimum elements of an iterator, as determined by\nthe specified function.\n\n# Examples\n\n```\nuse itertools::Itertools;\n\nlet a: [(i32, i32); 0] = [];\nassert_eq!(a.iter().max_set_by_key(|_| ()), Vec::<&(i32, i32)>::new());\n\nlet a = [(1, 2)];\nassert_eq!(a.iter().max_set_by_key(|&&(k,_)| k), vec![&(1, 2)]);\n\nlet a = [(1, 2), (2, 2), (3, 9), (4, 8), (5, 9)];\nassert_eq!(a.iter().max_set_by_key(|&&(_, k)| k), vec![&(3, 9), &(5, 9)]);\n\nlet a = [(1, 2), (1, 3), (1, 4), (1, 5)];\nassert_eq!(a.iter().max_set_by_key(|&&(k, _)| k), vec![&(1, 2), &(1, 3), &(1, 4), &(1, 5)]);\n```\n\nThe elements can be floats but no particular result is guaranteed\nif an element is NaN.","links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["key",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7898:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"generic","inner":"K"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:4075:1701":{"id":"b:2:3213-0:4075:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatCall","id":"0:4075:1701","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:8676-0:3951:1683":{"id":"b:2:8676-0:3951:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:2867:1616":{"id":"2:2867:1616","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3308:3321":{"id":"0:3308:3321","crate_id":0,"name":"Tuple10Combination","span":{"filename":"src/adaptors/mod.rs","begin":[830,0],"end":[830,80]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"2:10563:667":{"id":"2:10563:667","crate_id":2,"name":"fmt","span":null,"visibility":"default","docs":"Formats the value using the given formatter.\n\n# Examples\n\n```\nuse std::fmt;\n\nstruct Position {\n    longitude: f32,\n    latitude: f32,\n}\n\nimpl fmt::Debug for Position {\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n        f.debug_tuple(\"\")\n         .field(&self.longitude)\n         .field(&self.latitude)\n         .finish()\n    }\n}\n\nlet position = Position { longitude: 1.987, latitude: 2.983 };\nassert_eq!(format!(\"{position:?}\"), \"(1.987, 2.983)\");\n\nassert_eq!(format!(\"{position:#?}\"), \"(\n    1.987,\n    2.983,\n)\");\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48872:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2868-0:4644:1720":{"id":"b:2:2868-0:4644:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10821:22122":{"id":"2:10821:22122","crate_id":2,"name":"write_i32","span":null,"visibility":"default","docs":"Writes a single `i32` into this hasher.","links":{},"attrs":["#[stable(feature = \"hasher_write\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:4037:1691":{"id":"b:2:3213-0:4037:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ProcessResults","id":"0:4037:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:4142:1708":{"id":"b:2:2865-0:4142:1708","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleWindows","id":"0:4142:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:1490:1670":{"id":"b:2:3213-0:1490:1670","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Group","id":"0:1490:1670","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2956:180":{"id":"2:2956:180","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2957:422","2:2958:3564","2:2959:2321","2:2960:5125"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:14548:21215":{"id":"2:14548:21215","crate_id":2,"name":"grow","span":null,"visibility":"default","docs":"Attempts to extend the memory block.\n\nReturns a new [`NonNull<[u8]>`][NonNull] containing a pointer and the actual size of the allocated\nmemory. The pointer is suitable for holding data described by `new_layout`. To accomplish\nthis, the allocator may extend the allocation referenced by `ptr` to fit the new layout.\n\nIf this returns `Ok`, then ownership of the memory block referenced by `ptr` has been\ntransferred to this allocator. The memory may or may not have been freed, and should be\nconsidered unusable.\n\nIf this method returns `Err`, then ownership of the memory block has not been transferred to\nthis allocator, and the contents of the memory block are unaltered.\n\n# Safety\n\n* `ptr` must denote a block of memory [*currently allocated*] via this allocator.\n* `old_layout` must [*fit*] that block of memory (The `new_layout` argument need not fit it.).\n* `new_layout.size()` must be greater than or equal to `old_layout.size()`.\n\nNote that `new_layout.align()` need not be the same as `old_layout.align()`.\n\n[*currently allocated*]: #currently-allocated-memory\n[*fit*]: #memory-fitting\n\n# Errors\n\nReturns `Err` if the new layout does not meet the allocator's size and alignment\nconstraints of the allocator, or if growing otherwise fails.\n\nImplementations are encouraged to return `Err` on memory exhaustion rather than panicking or\naborting, but this is not a strict requirement. (Specifically: it is *legal* to implement\nthis trait atop an underlying native allocation library that aborts on memory exhaustion.)\n\nClients wishing to abort computation in response to an allocation error are encouraged to\ncall the [`handle_alloc_error`] function, rather than directly invoking `panic!` or similar.\n\n[`handle_alloc_error`]: ../../alloc/alloc/fn.handle_alloc_error.html","links":{"NonNull":"2:2391:4591"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ptr",{"kind":"resolved_path","inner":{"name":"NonNull","id":"2:2391:4591","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}],["old_layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50749:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["new_layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50749:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NonNull","id":"2:2391:4591","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"AllocError","id":"2:50778:4797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3203-0:3777:1658":{"id":"b:2:3203-0:3777:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2503":{"id":"0:2503","crate_id":0,"name":null,"span":{"filename":"src/zip_longest.rs","begin":[75,0],"end":[78,2]},"visibility":{"restricted":{"parent":"0:2466:1721","path":"::zip_longest"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4104-0:4112:1705":{"id":"b:2:4104-0:4112:1705","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tee","id":"0:4112:1705","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5041:3067":{"id":"0:5041:3067","crate_id":0,"name":"next_back","span":{"filename":"src/ziptuple.rs","begin":[137,0],"end":[137,47]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:3386:1645":{"id":"a:2:3411:4706-0:3386:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2346:1712":{"id":"0:2346:1712","crate_id":0,"name":"Duplicates","span":{"filename":"src/duplicates_impl.rs","begin":[206,0],"end":[206,88]},"visibility":"public","docs":"An iterator adapter to filter out duplicate elements.\n\nSee [`.duplicates()`](crate::Itertools::duplicates) for more information.","links":{"crate::Itertools::duplicates":"0:2593:2187"},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"private::DuplicatesBy","id":"0:4344:1713","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"type":{"kind":"resolved_path","inner":{"name":"private::ById","id":"0:4366:4324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"0:3534:932":{"id":"0:3534:932","crate_id":0,"name":"next","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8676-0:4401:1715":{"id":"b:2:8676-0:4401:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:3218-0:3737:1655":{"id":"b:2:3218-0:3737:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5015:932":{"id":"0:5015:932","crate_id":0,"name":"next","span":{"filename":"src/ziptuple.rs","begin":[137,0],"end":[137,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:4092:1703":{"id":"b:2:3218-0:4092:1703","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iterate","id":"0:4092:1703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3608:552":{"id":"2:3608:552","crate_id":2,"name":"deref_mut","span":null,"visibility":"default","docs":"Mutably dereferences the value.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Deref","id":"2:3594:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2405":{"id":"0:2405","crate_id":0,"name":null,"span":{"filename":"src/unique_impl.rs","begin":[147,0],"end":[150,2]},"visibility":{"restricted":{"parent":"0:2350:1714","path":"::unique_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9056:2889":{"id":"2:9056:2889","crate_id":2,"name":"max_by","span":null,"visibility":"default","docs":"Returns the element that gives the maximum value with respect to the\nspecified comparison function.\n\nIf several elements are equally maximum, the last element is\nreturned. If the iterator is empty, [`None`] is returned.\n\n# Examples\n\n```\nlet a = [-3_i32, 0, 1, 5, -10];\nassert_eq!(*a.iter().max_by(|x, y| x.cmp(y)).unwrap(), 5);\n```","links":{"`None`":"2:47811:177"},"attrs":["#[stable(feature = \"iter_max_by\", since = \"1.15.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["compare",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:4083:1702":{"id":"b:5:848-0:4083:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unfold","id":"0:4083:1702","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:8676-0:3017:1648":{"id":"b:2:8676-0:3017:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Step","id":"0:3017:1648","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"1:4497:6580":{"id":"1:4497:6580","crate_id":1,"name":"read_until","span":null,"visibility":"default","docs":"Read all bytes into `buf` until the delimiter `byte` or EOF is reached.\n\nThis function will read bytes from the underlying stream until the\ndelimiter or EOF is found. Once found, all bytes up to, and including,\nthe delimiter (if found) will be appended to `buf`.\n\nIf successful, this function will return the total number of bytes read.\n\nThis function is blocking and should be used carefully: it is possible for\nan attacker to continuously send bytes without ever sending the delimiter\nor EOF.\n\n# Errors\n\nThis function will ignore all instances of [`ErrorKind::Interrupted`] and\nwill otherwise return any errors returned by [`fill_buf`].\n\nIf an I/O error is encountered then all bytes read so far will be\npresent in `buf` and its length will have been adjusted appropriately.\n\n[`fill_buf`]: BufRead::fill_buf\n\n# Examples\n\n[`std::io::Cursor`][`Cursor`] is a type that implements `BufRead`. In\nthis example, we use [`Cursor`] to read all the bytes in a byte slice\nin hyphen delimited segments:\n\n```\nuse std::io::{self, BufRead};\n\nlet mut cursor = io::Cursor::new(b\"lorem-ipsum\");\nlet mut buf = vec![];\n\n// cursor is at 'l'\nlet num_bytes = cursor.read_until(b'-', &mut buf)\n    .expect(\"reading from cursor won't fail\");\nassert_eq!(num_bytes, 6);\nassert_eq!(buf, b\"lorem-\");\nbuf.clear();\n\n// cursor is at 'i'\nlet num_bytes = cursor.read_until(b'-', &mut buf)\n    .expect(\"reading from cursor won't fail\");\nassert_eq!(num_bytes, 5);\nassert_eq!(buf, b\"ipsum\");\nbuf.clear();\n\n// cursor is at EOF\nlet num_bytes = cursor.read_until(b'-', &mut buf)\n    .expect(\"reading from cursor won't fail\");\nassert_eq!(num_bytes, 0);\nassert_eq!(buf, b\"\");\n```","links":{"`Cursor`":"1:10712:5450","BufRead::fill_buf":"1:4493:15663","`ErrorKind::Interrupted`":"1:10863:10656"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["byte",{"kind":"primitive","inner":"u8"}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7898:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8224:4593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:2992:1634":{"id":"b:5:848-0:2992:1634","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Product","id":"0:2992:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:551":{"id":"0:551","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[13,0],"end":[13,30]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"self::map::MapResults","name":"MapResults","id":"0:467:1647","glob":false}},"1:4487:15651":{"id":"1:4487:15651","crate_id":1,"name":"rewind","span":null,"visibility":"default","docs":"Rewind to the beginning of a stream.\n\nThis is a convenience method, equivalent to `seek(SeekFrom::Start(0))`.\n\n# Errors\n\nRewinding can fail, for example because it might involve flushing a buffer.\n\n# Example\n\n```no_run\nuse std::io::{Read, Seek, Write};\nuse std::fs::OpenOptions;\n\nlet mut f = OpenOptions::new()\n    .write(true)\n    .read(true)\n    .create(true)\n    .open(\"foo.txt\").unwrap();\n\nlet hello = \"Hello!\\n\";\nwrite!(f, \"{hello}\").unwrap();\nf.rewind().unwrap();\n\nlet mut buf = String::new();\nf.read_to_string(&mut buf).unwrap();\nassert_eq!(&buf, hello);\n```","links":{},"attrs":["#[stable(feature = \"seek_rewind\", since = \"1.55.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:3386:1645":{"id":"b:5:848-0:3386:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4407:667":{"id":"0:4407:667","crate_id":0,"name":"fmt","span":{"filename":"src/unique_impl.rs","begin":[165,4],"end":[165,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"::std::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2152:1849":{"id":"0:2152:1849","crate_id":0,"name":"Item","span":{"filename":"src/sources.rs","begin":[155,4],"end":[155,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"St"}}},"2:2885:415":{"id":"2:2885:415","crate_id":2,"name":"clone","span":null,"visibility":"default","docs":"Returns a copy of the value.\n\n# Examples\n\n```\n# #![allow(noop_method_call)]\nlet hello = \"Hello\"; // &str implements Clone\n\nassert_eq!(\"Hello\", hello.clone());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[must_use =\n\"cloning is often expensive and is not expected to have side effects\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:9533:4792":{"id":"2:9533:4792","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1875":{"id":"0:1875","crate_id":0,"name":null,"span":{"filename":"src/peeking_take_while.rs","begin":[37,0],"end":[53,1]},"visibility":{"restricted":{"parent":"0:1858:1686","path":"::peeking_take_while"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"PeekingNext","id":"0:1868:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1877:4024"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13787:4517":{"id":"2:13787:4517","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"prim@char":"1:15876:4439","`DoubleEndedIterator`":"2:8716:121","str::matches":"2:13787:4517","self::pattern":"2:13336:4565"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49994:5435","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:3777:1658":{"id":"b:2:3207-0:3777:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2958:3564":{"id":"2:2958:3564","crate_id":2,"name":"max","span":null,"visibility":"default","docs":"Compares and returns the maximum of two values.\n\nReturns the second argument if the comparison determines them to be equal.\n\n# Examples\n\n```\nassert_eq!(2, 1.max(2));\nassert_eq!(2, 2.max(2));\n```","links":{},"attrs":["#[stable(feature = \"ord_max_min\", since = \"1.21.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2398:1849":{"id":"0:2398:1849","crate_id":0,"name":"Item","span":{"filename":"src/unique_impl.rs","begin":[107,4],"end":[107,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:8681:2464":{"id":"2:8681:2464","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8683:2756","2:8685:5131","2:8686:5132"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3207-0:3375:1633":{"id":"b:2:3207-0:3375:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOk","id":"0:3375:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5115":{"id":"0:5115","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3761,29],"end":[3761,31]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3379:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3383:415":{"id":"0:3383:415","crate_id":0,"name":"clone","span":{"filename":"src/adaptors/mod.rs","begin":[837,9],"end":[837,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FilterOk","id":"0:3375:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10800:143":{"id":"2:10800:143","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10801:722","2:10803:5306"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2571:2061":{"id":"0:2571:2061","crate_id":0,"name":"merge","span":{"filename":"src/lib.rs","begin":[943,4],"end":[949,5]},"visibility":"default","docs":"Return an iterator adaptor that merges the two base iterators in\nascending order.  If both base iterators are sorted (ascending), the\nresult is sorted.\n\nIterator element type is `Self::Item`.\n\n```\nuse itertools::Itertools;\n\nlet a = (0..11).step(3);\nlet b = (0..11).step(5);\nlet it = a.merge(b);\nitertools::assert_equal(it, vec![0, 0, 3, 5, 6, 9, 10]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"J"}]],"output":{"kind":"resolved_path","inner":{"name":"Merge","id":"0:668:1639","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3998":{"id":"0:3998","crate_id":0,"name":null,"span":{"filename":"src/peeking_take_while.rs","begin":[150,0],"end":[150,77]},"visibility":{"restricted":{"parent":"0:1858:1686","path":"::peeking_take_while"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PeekingNext","id":"0:1868:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"alloc::collections::vec_deque::Iter","id":"5:4516:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:4001:4024"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23179:7077":{"id":"2:23179:7077","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23180:7004","2:23181:1265","2:23182:1290"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2585:2153":{"id":"0:2585:2153","crate_id":0,"name":"coalesce","span":{"filename":"src/lib.rs","begin":[1150,4],"end":[1156,5]},"visibility":"default","docs":"Return an iterator adaptor that uses the passed-in closure to\noptionally merge together consecutive elements.\n\nThe closure `f` is passed two elements, `previous` and `current` and may\nreturn either (1) `Ok(combined)` to merge the two values or\n(2) `Err((previous', current'))` to indicate they can't be merged.\nIn (2), the value `previous'` is emitted by the iterator.\nEither (1) `combined` or (2) `current'` becomes the previous value\nwhen coalesce continues with the next pair of elements to merge. The\nvalue that remains at the end is also emitted by the iterator.\n\nIterator element type is `Self::Item`.\n\nThis iterator is *fused*.\n\n```\nuse itertools::Itertools;\n\n// sum same-sign runs together\nlet data = vec![-1., -2., -3., 3., 1., 0., -1.];\nitertools::assert_equal(data.into_iter().coalesce(|x, y|\n        if (x >= 0.) == (y >= 0.) {\n            Ok(x + y)\n        } else {\n            Err((x, y))\n        }),\n        vec![-6., 4., -1.]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Coalesce","id":"0:379:1643","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}},{"type":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}]}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:4083:1702":{"id":"b:2:2868-0:4083:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unfold","id":"0:4083:1702","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2154:1754":{"id":"0:2154:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/sources.rs","begin":[164,4],"end":[166,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9137:16065":{"id":"1:9137:16065","crate_id":1,"name":"mul_add","span":null,"visibility":"default","docs":"Fused multiply-add.  Computes `(self * a) + b` with only one rounding error,\nyielding a more accurate result than an unfused multiply-add.\n\nUsing `mul_add` *may* be more performant than an unfused multiply-add if the target\narchitecture has a dedicated `fma` CPU instruction.  However, this is not always\ntrue, and will be heavily dependent on designing algorithms with specific target\nhardware in mind.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["a",{"kind":"generic","inner":"Self"}],["b",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13357:6966":{"id":"2:13357:6966","crate_id":2,"name":"haystack","span":null,"visibility":"default","docs":"Getter for the underlying string to be searched in\n\nWill always return the same [`&str`][str].","links":{"str":"1:15882:4444"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:23110:1244":{"id":"2:23110:1244","crate_id":2,"name":"saturating_sub","span":null,"visibility":"default","docs":"Lanewise saturating subtract.\n\n# Examples\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{Simd, SimdInt};\nuse core::i32::{MIN, MAX};\nlet x = Simd::from_array([MIN, -2, -1, MAX]);\nlet max = Simd::splat(MAX);\nlet unsat = x - max;\nlet sat = x.saturating_sub(max);\nassert_eq!(unsat, Simd::from_array([1, MAX, MIN, 0]));\nassert_eq!(sat, Simd::from_array([MIN, MIN, MIN, 0]));","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["second",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:584:932":{"id":"0:584:932","crate_id":0,"name":"next","span":{"filename":"src/adaptors/mod.rs","begin":[56,4],"end":[69,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23149:16129":{"id":"2:23149:16129","crate_id":2,"name":"reduce_min","span":null,"visibility":"default","docs":"Returns the minimum lane in the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdUint","id":"2:23142:7061","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3207-0:3007:1636":{"id":"b:2:3207-0:3007:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Batching","id":"0:3007:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:14077:184":{"id":"2:14077:184","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The output that the future will produce on completion.","links":{},"attrs":["#[stable(feature = \"into_future\", since = \"1.64.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:631:1754":{"id":"0:631:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/adaptors/mod.rs","begin":[333,4],"end":[342,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14551:3938":{"id":"2:14551:3938","crate_id":2,"name":"by_ref","span":null,"visibility":"default","docs":"Creates a \"by reference\" adapter for this instance of `Allocator`.\n\nThe returned adapter also implements `Allocator` and will simply borrow this.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:3951:1683":{"id":"b:2:2865-0:3951:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3207-0:3861:1674":{"id":"b:2:3207-0:3861:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"ElemF"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:3386:1645":{"id":"b:2:2868-0:3386:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2641:2455":{"id":"0:2641:2455","crate_id":0,"name":"foreach","span":{"filename":"src/lib.rs","begin":[1952,4],"end":[1957,5]},"visibility":"default","docs":"Run the closure `f` eagerly on each element of the iterator.\n\nConsumes the iterator until its end.\n\n```\nuse std::sync::mpsc::channel;\nuse itertools::Itertools;\n\nlet (tx, rx) = channel();\n\n// use .foreach() to apply a function to each value -- sending it\n(0..5).map(|x| x * 2 + 1).foreach(|x| { tx.send(x).unwrap(); } );\n\ndrop(tx);\n\nitertools::assert_equal(rx.iter(), vec![1, 3, 5, 7, 9]);\n```","links":{},"attrs":["#[deprecated(note = \"Use .for_each() instead\", since = \"0.8.0\")]"],"deprecation":{"since":"0.8.0","note":"Use .for_each() instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3925":{"id":"0:3925","crate_id":0,"name":null,"span":{"filename":"src/minmax.rs","begin":[5,33],"end":[5,38]},"visibility":{"restricted":{"parent":"0:1748:1734","path":"::minmax"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:3927:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3218-0:3766:1659":{"id":"b:2:3218-0:3766:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatWith","id":"0:3766:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3218-0:3836:1663":{"id":"b:2:3218-0:3836:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupingMap","id":"0:3836:1663","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8196:1648":{"id":"2:8196:1648","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8197:5986","2:8198:5987","2:8199:5988","2:8200:5989","2:8201:5990","2:8202:5991","2:8203:5992"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10514:5538":{"id":"2:10514:5538","crate_id":2,"name":"write_char","span":null,"visibility":"default","docs":"Writes a [`char`] into this writer, returning whether the write succeeded.\n\nA single [`char`] may be encoded as more than one byte.\nThis method can only succeed if the entire byte sequence was successfully\nwritten, and this method will not return until all data has been\nwritten or an error occurs.\n\n# Errors\n\nThis function will return an instance of [`Error`] on error.\n\n# Examples\n\n```\nuse std::fmt::{Error, Write};\n\nfn writer<W: Write>(f: &mut W, c: char) -> Result<(), Error> {\n    f.write_char(c)\n}\n\nlet mut buf = String::new();\nwriter(&mut buf, 'a').unwrap();\nwriter(&mut buf, 'b').unwrap();\nassert_eq!(&buf, \"ab\");\n```","links":{"`Error`":"2:48872:128","`char`":"1:15876:4439"},"attrs":["#[stable(feature = \"fmt_write_char\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["c",{"kind":"primitive","inner":"char"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48872:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:4083:1702":{"id":"b:2:3207-0:4083:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unfold","id":"0:4083:1702","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10846:147":{"id":"2:10846:147","crate_id":2,"name":"Hasher","span":null,"visibility":"default","docs":"Type of the hasher that will be created.","links":{},"attrs":["#[stable(since = \"1.7.0\", feature = \"build_hasher\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Hasher","id":"2:10810:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"b:2:2868-0:2992:1634":{"id":"b:2:2868-0:2992:1634","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Product","id":"0:2992:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3411:4706-0:1981:1693":{"id":"a:2:3411:4706-0:1981:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Powerset","id":"0:1981:1693","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:8676-0:1723:1679":{"id":"b:2:8676-0:1723:1679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeJoinBy","id":"0:1723:1679","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"1:9136:6637":{"id":"1:9136:6637","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9137:16065","1:9138:16066","1:9139:16067","1:9140:16068","1:9141:16069","1:9142:16070","1:9143:16071"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10409:6539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3370:216-0:4129:1710":{"id":"a:2:3370:216-0:4129:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Buffer","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TupleCollect","id":"0:2245:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tuples","id":"0:4129:1710","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3630:385":{"id":"2:3630:385","crate_id":2,"name":"call_once","span":null,"visibility":"default","docs":"Performs the call operation.","links":{},"attrs":["#[unstable(feature = \"fn_traits\", issue = \"29625\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["args",{"kind":"generic","inner":"Args"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"FnOnce","id":"2:3627:133","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":{"Other":"\"rust-call\""}},"has_body":false}},"b:2:3207-0:2430:1718":{"id":"b:2:3207-0:2430:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WithPosition","id":"0:2430:1718","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3890:415":{"id":"0:3890:415","crate_id":0,"name":"clone","span":{"filename":"src/kmerge_impl.rs","begin":[192,4],"end":[192,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2884:105":{"id":"2:2884:105","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2885:415","2:2886:417"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23767:7006":{"id":"2:23767:7006","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23768:1288","2:23769:1287","2:23770:1285","2:23771:1284"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialEq","id":"2:23179:7077","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:4918:1754":{"id":"0:4918:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/ziptuple.rs","begin":[135,0],"end":[135,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3370:216-0:3951:1683":{"id":"a:2:3370:216-0:3951:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4104-0:2982:1635":{"id":"b:2:4104-0:2982:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3813:667":{"id":"0:3813:667","crate_id":0,"name":"fmt","span":{"filename":"src/format.rs","begin":[112,0],"end":[113,70]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14464:1091":{"id":"2:14464:1091","crate_id":2,"name":"realloc","span":null,"visibility":"default","docs":"Shrink or grow a block of memory to the given `new_size`.\nThe block is described by the given `ptr` pointer and `layout`.\n\nIf this returns a non-null pointer, then ownership of the memory block\nreferenced by `ptr` has been transferred to this allocator.\nThe memory may or may not have been deallocated, and should be\nconsidered unusable. The new memory block is allocated with `layout`,\nbut with the `size` updated to `new_size`. This new layout should be\nused when deallocating the new memory block with `dealloc`. The range\n`0..min(layout.size(), new_size)` of the new memory block is\nguaranteed to have the same values as the original block.\n\nIf this method returns null, then ownership of the memory\nblock has not been transferred to this allocator, and the\ncontents of the memory block are unaltered.\n\n# Safety\n\nThis function is unsafe because undefined behavior can result\nif the caller does not ensure all of the following:\n\n* `ptr` must be currently allocated via this allocator,\n\n* `layout` must be the same layout that was used\n  to allocate that block of memory,\n\n* `new_size` must be greater than zero.\n\n* `new_size`, when rounded up to the nearest multiple of `layout.align()`,\n  must not overflow (i.e., the rounded value must be less than `usize::MAX`).\n\n(Extension subtraits might provide more specific bounds on\nbehavior, e.g., guarantee a sentinel address or a null pointer\nin response to a zero-size allocation request.)\n\n# Errors\n\nReturns null if the new layout does not meet the size\nand alignment constraints of the allocator, or if reallocation\notherwise fails.\n\nImplementations are encouraged to return null on memory\nexhaustion rather than panicking or aborting, but this is not\na strict requirement. (Specifically: it is *legal* to\nimplement this trait atop an underlying native allocation\nlibrary that aborts on memory exhaustion.)\n\nClients wishing to abort computation in response to a\nreallocation error are encouraged to call the [`handle_alloc_error`] function,\nrather than directly invoking `panic!` or similar.\n\n[`handle_alloc_error`]: ../../alloc/alloc/fn.handle_alloc_error.html","links":{},"attrs":["#[stable(feature = \"global_alloc\", since = \"1.28.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ptr",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}}],["layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50749:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["new_size",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:10818:22119":{"id":"2:10818:22119","crate_id":2,"name":"write_usize","span":null,"visibility":"default","docs":"Writes a single `usize` into this hasher.","links":{},"attrs":["#[stable(feature = \"hasher_write\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8676-0:2430:1718":{"id":"b:2:8676-0:2430:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WithPosition","id":"0:2430:1718","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:4104-0:1476:1671":{"id":"b:2:4104-0:1476:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Groups","id":"0:1476:1671","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4061":{"id":"0:4061","crate_id":0,"name":null,"span":{"filename":"src/rciter_impl.rs","begin":[7,9],"end":[7,14]},"visibility":{"restricted":{"parent":"0:2038:1696","path":"::rciter_impl"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:4063:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:0:1588":{"id":"0:0:1588","crate_id":0,"name":"itertools","span":{"filename":"src/lib.rs","begin":[1,0],"end":[3784,1]},"visibility":"public","docs":"Extra iterator adaptors, functions and macros.\n\nTo extend [`Iterator`] with methods in this crate, import\nthe [`Itertools`] trait:\n\n```\nuse itertools::Itertools;\n```\n\nNow, new methods like [`interleave`](Itertools::interleave)\nare available on all iterators:\n\n```\nuse itertools::Itertools;\n\nlet it = (1..3).interleave(vec![-1, -2]);\nitertools::assert_equal(it, vec![1, -1, 2, -2]);\n```\n\nMost iterator methods are also provided as functions (with the benefit\nthat they convert parameters using [`IntoIterator`]):\n\n```\nuse itertools::interleave;\n\nfor elt in interleave(&[1, 2, 3], &[2, 3, 4]) {\n    /* loop body */\n}\n```\n\n## Crate Features\n\n- `use_std`\n  - Enabled by default.\n  - Disable to compile itertools using `#![no_std]`. This disables\n    any items that depend on collections (like `group_by`, `unique`,\n    `kmerge`, `join` and many more).\n\n## Rust Version\n\nThis version of itertools requires Rust 1.32 or later.","links":{"`IntoIterator`":"2:8672:152","`Itertools`":"0:2520:1771","`Iterator`":"2:8873:159","Itertools::interleave":"0:2521:1848"},"attrs":["#![warn(missing_docs)]","#![crate_name = \"itertools\"]","#![doc(html_root_url = \"https://docs.rs/itertools/0.8/\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:54:1624","0:276:1726","0:11","0:281","0:284","0:287","0:290","0:294","0:297","0:300","0:303","0:306","0:310","0:313","0:316","0:319","0:323","0:326","0:329","0:927","0:2520:1771","0:2856:3042","0:2859:3049","0:2862:3063","0:5099:2652","0:2517:1766","0:2518:1793","0:2519:1831","0:280","0:1025"],"is_stripped":false}},"1:5434:6542":{"id":"1:5434:6542","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5435:8053","1:5436:23351"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10409:6539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3382:225-0:1651:1677":{"id":"a:2:3382:225-0:1651:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3203-0:3386:1645":{"id":"b:2:3203-0:3386:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3444:4737":{"id":"2:3444:4737","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3446:184","2:3447:1373"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1091":{"id":"0:1091","crate_id":0,"name":null,"span":{"filename":"src/combinations_with_replacement.rs","begin":[22,0],"end":[28,1]},"visibility":{"restricted":{"parent":"0:1078:1652","path":"::combinations_with_replacement"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CombinationsWithReplacement","id":"0:3748:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3756:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:613:1754":{"id":"0:613:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/adaptors/mod.rs","begin":[227,4],"end":[230,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3203-0:4048:1695":{"id":"b:2:3203-0:4048:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1550:1849":{"id":"0:1550:1849","crate_id":0,"name":"Item","span":{"filename":"src/groupbylazy.rs","begin":[563,4],"end":[563,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"5:850:5158":{"id":"5:850:5158","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"b:2:4104-0:3397:1646":{"id":"b:2:4104-0:3397:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4729:3067":{"id":"0:4729:3067","crate_id":0,"name":"next_back","span":{"filename":"src/ziptuple.rs","begin":[129,0],"end":[129,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8727:5130":{"id":"2:8727:5130","crate_id":2,"name":"rfind","span":null,"visibility":"default","docs":"Searches for an element of an iterator from the back that satisfies a predicate.\n\n`rfind()` takes a closure that returns `true` or `false`. It applies\nthis closure to each element of the iterator, starting at the end, and if any\nof them return `true`, then `rfind()` returns [`Some(element)`]. If they all return\n`false`, it returns [`None`].\n\n`rfind()` is short-circuiting; in other words, it will stop processing\nas soon as the closure returns `true`.\n\nBecause `rfind()` takes a reference, and many iterators iterate over\nreferences, this leads to a possibly confusing situation where the\nargument is a double reference. You can see this effect in the\nexamples below, with `&&x`.\n\n[`Some(element)`]: Some\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nassert_eq!(a.iter().rfind(|&&x| x == 2), Some(&2));\n\nassert_eq!(a.iter().rfind(|&&x| x == 5), None);\n```\n\nStopping at the first `true`:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter();\n\nassert_eq!(iter.rfind(|&&x| x == 2), Some(&2));\n\n// we can still use `iter`, as there are more elements.\nassert_eq!(iter.next_back(), Some(&1));\n```","links":{"`None`":"2:47811:177","Some":"2:47813:220"},"attrs":["#[stable(feature = \"iter_rfind\", since = \"1.27.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2378":{"id":"0:2378","crate_id":0,"name":null,"span":{"filename":"src/unique_impl.rs","begin":[52,0],"end":[79,1]},"visibility":{"restricted":{"parent":"0:2350:1714","path":"::unique_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"generic","inner":"V"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:2382:1849","0:2383:932","0:2384:1754","0:2385:502"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3222:1435":{"id":"2:3222:1435","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:3836:1663":{"id":"b:5:848-0:3836:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupingMap","id":"0:3836:1663","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9532:4793-0:3045:1644":{"id":"a:2:9532:4793-0:3045:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Combination","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"HasCombination","id":"0:737:2255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleCombinations","id":"0:3045:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:4489:15653":{"id":"1:4489:15653","crate_id":1,"name":"stream_position","span":null,"visibility":"default","docs":"Returns the current seek position from the start of the stream.\n\nThis is equivalent to `self.seek(SeekFrom::Current(0))`.\n\n# Example\n\n```no_run\nuse std::{\n    io::{self, BufRead, BufReader, Seek},\n    fs::File,\n};\n\nfn main() -> io::Result<()> {\n    let mut f = BufReader::new(File::open(\"foo.txt\")?);\n\n    let before = f.stream_position()?;\n    f.read_line(&mut String::new())?;\n    let after = f.stream_position()?;\n\n    println!(\"The first line was {} bytes long\", after - before);\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"seek_convenience\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3370:216-0:4075:1701":{"id":"a:2:3370:216-0:4075:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatCall","id":"0:4075:1701","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3382:225-0:4112:1705":{"id":"a:2:3382:225-0:4112:1705","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tee","id":"0:4112:1705","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:855":{"id":"0:855","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[1090,0],"end":[1124,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:858:1849","0:859:932","0:860:1754","0:861:2582","0:865:2468"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9042:3564":{"id":"2:9042:3564","crate_id":2,"name":"max","span":null,"visibility":"default","docs":"Returns the maximum element of an iterator.\n\nIf several elements are equally maximum, the last element is\nreturned. If the iterator is empty, [`None`] is returned.\n\nNote that [`f32`]/[`f64`] doesn't implement [`Ord`] due to NaN being\nincomparable. You can work around this by using [`Iterator::reduce`]:\n```\nassert_eq!(\n    [2.4, f32::NAN, 1.3]\n        .into_iter()\n        .reduce(f32::max)\n        .unwrap(),\n    2.4\n);\n```\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\nlet b: Vec<u32> = Vec::new();\n\nassert_eq!(a.iter().max(), Some(&3));\nassert_eq!(b.iter().max(), None);\n```","links":{"`Iterator::reduce`":"2:8983:3500","`None`":"2:47811:177","`f32`":"1:15886:4446","`f64`":"1:15887:4447","`Ord`":"2:2956:180"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4494:1744":{"id":"0:4494:1744","crate_id":0,"name":"multiunzip","span":{"filename":"src/unziptuple.rs","begin":[75,0],"end":[75,100]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"},{"kind":"generic","inner":"FromC"},{"kind":"generic","inner":"FromD"},{"kind":"generic","inner":"FromE"},{"kind":"generic","inner":"FromF"},{"kind":"generic","inner":"FromG"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6333:23441":{"id":"1:6333:23441","crate_id":1,"name":"as_pthread_t","span":null,"visibility":"default","docs":"Extracts the raw pthread_t without taking ownership","links":{},"attrs":["#[stable(feature = \"thread_extensions\", since = \"1.9.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9533:4792-0:1651:1677":{"id":"a:2:9533:4792-0:1651:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3218-0:2954:1630":{"id":"b:2:3218-0:2954:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8916:5138":{"id":"2:8916:5138","crate_id":2,"name":"map_while","span":null,"visibility":"default","docs":"Creates an iterator that both yields elements based on a predicate and maps.\n\n`map_while()` takes a closure as an argument. It will call this\nclosure on each element of the iterator, and yield elements\nwhile it returns [`Some(_)`][`Some`].\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [-1i32, 4, 0, 1];\n\nlet mut iter = a.iter().map_while(|x| 16i32.checked_div(*x));\n\nassert_eq!(iter.next(), Some(-16));\nassert_eq!(iter.next(), Some(4));\nassert_eq!(iter.next(), None);\n```\n\nHere's the same example, but with [`take_while`] and [`map`]:\n\n[`take_while`]: Iterator::take_while\n[`map`]: Iterator::map\n\n```\nlet a = [-1i32, 4, 0, 1];\n\nlet mut iter = a.iter()\n                .map(|x| 16i32.checked_div(*x))\n                .take_while(|x| x.is_some())\n                .map(|x| x.unwrap());\n\nassert_eq!(iter.next(), Some(-16));\nassert_eq!(iter.next(), Some(4));\nassert_eq!(iter.next(), None);\n```\n\nStopping after an initial [`None`]:\n\n```\nlet a = [0, 1, 2, -3, 4, 5, -6];\n\nlet iter = a.iter().map_while(|x| u32::try_from(*x).ok());\nlet vec = iter.collect::<Vec<_>>();\n\n// We have more elements which could fit in u32 (4, 5), but `map_while` returned `None` for `-3`\n// (as the `predicate` returned `None`) and `collect` stops at the first `None` encountered.\nassert_eq!(vec, vec![0, 1, 2]);\n```\n\nBecause `map_while()` needs to look at the value in order to see if it\nshould be included or not, consuming iterators will see that it is\nremoved:\n\n```\nlet a = [1, 2, -3, 4];\nlet mut iter = a.iter();\n\nlet result: Vec<u32> = iter.by_ref()\n                           .map_while(|n| u32::try_from(*n).ok())\n                           .collect();\n\nassert_eq!(result, &[1, 2]);\n\nlet result: Vec<i32> = iter.cloned().collect();\n\nassert_eq!(result, &[4]);\n```\n\nThe `-3` is no longer there, because it was consumed in order to see if\nthe iteration should stop, but wasn't placed back into the iterator.\n\nNote that unlike [`take_while`] this iterator is **not** fused.\nIt is also not specified what this iterator returns after the first [`None`] is returned.\nIf you need fused iterator, use [`fuse`].\n\n[`fuse`]: Iterator::fuse","links":{"`None`":"2:47811:177","`Some`":"2:47813:220","Iterator::fuse":"2:8929:3204","Iterator::take_while":"2:8914:5137","Iterator::map":"2:8895:851"},"attrs":["#[stable(feature = \"iter_map_while\", since = \"1.57.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MapWhile","id":"2:47025:4657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2300:4315":{"id":"0:2300:4315","crate_id":0,"name":"KeyMethod","span":{"filename":"src/duplicates_impl.rs","begin":[118,4],"end":[122,5]},"visibility":"public","docs":"A keying method for use with `DuplicatesBy`","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:2303:4321","0:2304:4317"],"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3725:1754":{"id":"0:3725:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:3836:1663":{"id":"b:2:3207-0:3836:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupingMap","id":"0:3836:1663","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1848:932":{"id":"0:1848:932","crate_id":0,"name":"next","span":{"filename":"src/peek_nth.rs","begin":[80,4],"end":[82,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4666":{"id":"0:4666","crate_id":0,"name":null,"span":{"filename":"src/zip_longest.rs","begin":[15,16],"end":[15,21]},"visibility":{"restricted":{"parent":"0:2466:1721","path":"::zip_longest"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"items":["0:4669:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2382:1849":{"id":"0:2382:1849","crate_id":0,"name":"Item","span":{"filename":"src/unique_impl.rs","begin":[57,4],"end":[57,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:0:2854-0:4058:1697":{"id":"b:0:2854-0:4058:1697","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3750:4554":{"id":"2:3750:4554","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3752:22805","2:3753:22806","2:3754:2406"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3516:1249":{"id":"2:3516:1249","crate_id":2,"name":"shl","span":null,"visibility":"default","docs":"Performs the `<<` operation.\n\n# Examples\n\n```\nassert_eq!(5u8 << 1, 10);\nassert_eq!(1u8 << 1, 2);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Shl","id":"2:3513:4746","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3527:359":{"id":"2:3527:359","crate_id":2,"name":"bitand_assign","span":null,"visibility":"default","docs":"Performs the `&=` operation.\n\n# Examples\n\n```\nlet mut x = true;\nx &= false;\nassert_eq!(x, false);\n\nlet mut x = true;\nx &= true;\nassert_eq!(x, true);\n\nlet mut x: u8 = 5;\nx &= 1;\nassert_eq!(x, 1);\n\nlet mut x: u8 = 5;\nx &= 2;\nassert_eq!(x, 0);\n```","links":{},"attrs":["#[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4412":{"id":"0:4412","crate_id":0,"name":null,"span":{"filename":"src/unziptuple.rs","begin":[69,0],"end":[69,28]},"visibility":{"restricted":{"parent":"0:2411:1743","path":"::unziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"IT","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MultiUnzip","id":"0:2415:1745","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"}]}}],"bindings":[]}}},"for":{"kind":"generic","inner":"IT"},"items":["0:4416:1744"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3434":{"id":"0:3434","crate_id":0,"name":null,"span":{"filename":"src/either_or_both.rs","begin":[6,27],"end":[6,29]},"visibility":{"restricted":{"parent":"0:878:1747","path":"::either_or_both"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2539:1966":{"id":"0:2539:1966","crate_id":0,"name":"tuple_windows","span":{"filename":"src/lib.rs","begin":[699,4],"end":[705,5]},"visibility":"default","docs":"Return an iterator over all contiguous windows producing tuples of\na specific size (up to 12).\n\n`tuple_windows` clones the iterator elements so that they can be\npart of successive windows, this makes it most suited for iterators\nof references and other values that are cheap to copy.\n\n```\nuse itertools::Itertools;\nlet mut v = Vec::new();\n\n// pairwise iteration\nfor (a, b) in (1..5).tuple_windows() {\n    v.push((a, b));\n}\nassert_eq!(v, vec![(1, 2), (2, 3), (3, 4)]);\n\nlet mut it = (1..5).tuple_windows();\nassert_eq!(Some((1, 2, 3)), it.next());\nassert_eq!(Some((2, 3, 4)), it.next());\nassert_eq!(None, it.next());\n\n// this requires a type hint\nlet it = (1..5).tuple_windows::<(_, _, _)>();\nitertools::assert_equal(it, vec![(1, 2, 3), (2, 3, 4)]);\n\n// you can also specify the complete type\nuse itertools::TupleWindows;\nuse std::ops::Range;\n\nlet it: TupleWindows<Range<u32>, (u32, u32, u32)> = (1..5).tuple_windows();\nitertools::assert_equal(it, vec![(1, 2, 3), (2, 3, 4)]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"TupleWindows","id":"0:4142:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"traits::HomogeneousTuple","id":"0:2196:1727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:709:1641":{"id":"b:2:3218-0:709:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TakeWhileRef","id":"0:709:1641","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4005:4024":{"id":"0:4005:4024","crate_id":0,"name":"peeking_next","span":{"filename":"src/peeking_take_while.rs","begin":[153,0],"end":[154,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["accept",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2177:1754":{"id":"0:2177:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/tee.rs","begin":[62,4],"end":[72,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:988:1672":{"id":"0:988:1672","crate_id":0,"name":"intersperse","span":{"filename":"src/free.rs","begin":[47,0],"end":[52,1]},"visibility":"public","docs":"Iterate `iterable` with a particular value inserted between each element.\n\n[`IntoIterator`] enabled version of [`Iterator::intersperse`].\n\n```\nuse itertools::intersperse;\n\nitertools::assert_equal(intersperse((0..3), 8), vec![0, 8, 1, 8, 2]);\n```","links":{"`Iterator::intersperse`":"2:8892:1672","`IntoIterator`":"2:8672:152"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}],["element",{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}]],"output":{"kind":"resolved_path","inner":{"name":"Intersperse","id":"0:1569:1673","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4163:667":{"id":"0:4163:667","crate_id":0,"name":"fmt","span":{"filename":"src/tuple_impl.rs","begin":[204,9],"end":[204,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23117:16126":{"id":"2:23117:16126","crate_id":2,"name":"reduce_sum","span":null,"visibility":"default","docs":"Returns the sum of the lanes of the vector, with wrapping addition.\n\n# Examples\n\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{i32x4, SimdInt};\nlet v = i32x4::from_array([1, 2, 3, 4]);\nassert_eq!(v.reduce_sum(), 10);\n\n// SIMD integer addition is always wrapping\nlet v = i32x4::from_array([i32::MAX, 1, 0, 0]);\nassert_eq!(v.reduce_sum(), i32::MIN);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdInt","id":"2:23106:7064","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3735:3067":{"id":"0:3735:3067","crate_id":0,"name":"next_back","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3424":{"id":"0:3424","crate_id":0,"name":null,"span":{"filename":"src/either_or_both.rs","begin":[6,16],"end":[6,25]},"visibility":{"restricted":{"parent":"0:878:1747","path":"::either_or_both"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3378:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9532:4793-0:674:1640":{"id":"a:2:9532:4793-0:674:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeBy","id":"0:674:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2868-0:4617:1742":{"id":"b:2:2868-0:4617:1742","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3058:3305":{"id":"0:3058:3305","crate_id":0,"name":"Tuple1Combination","span":{"filename":"src/adaptors/mod.rs","begin":[734,0],"end":[736,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"2:3463:1114":{"id":"2:3463:1114","crate_id":2,"name":"rem","span":null,"visibility":"default","docs":"Performs the `%` operation.\n\n# Example\n\n```\nassert_eq!(12 % 10, 2);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Rem","id":"2:3460:4736","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3465:2582":{"id":"0:3465:2582","crate_id":0,"name":"fold","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["accum",{"kind":"generic","inner":"Acc"}],["f",{"kind":"generic","inner":"Fold"}]],"output":{"kind":"generic","inner":"Acc"},"c_variadic":false},"generics":{"params":[{"name":"Acc","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Fold","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Fold"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Acc"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"generic","inner":"Acc"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5503:23359":{"id":"1:5503:23359","crate_id":1,"name":"write_at","span":null,"visibility":"default","docs":"Writes a number of bytes starting from a given offset.\n\nReturns the number of bytes written.\n\nThe offset is relative to the start of the file and thus independent\nfrom the current cursor.\n\nThe current file cursor is not affected by this function.\n\nWhen writing beyond the end of the file, the file is appropriately\nextended and the intermediate bytes are initialized with the value 0.\n\nNote that similar to [`File::write`], it is not an error to return a\nshort write.\n\n[`File::write`]: fs::File::write\n\n# Examples\n\n```no_run\nuse std::fs::File;\nuse std::io;\nuse std::os::unix::prelude::FileExt;\n\nfn main() -> io::Result<()> {\n    let file = File::open(\"foo.txt\")?;\n\n    // We now write at the offset 10.\n    file.write_at(b\"sushi\", 10)?;\n    Ok(())\n}\n```","links":{"fs::File::write":"1:2958:2499"},"attrs":["#[stable(feature = \"file_offset\", since = \"1.15.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["offset",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3814":{"id":"0:3814","crate_id":0,"name":null,"span":{"filename":"src/format.rs","begin":[112,0],"end":[113,70]},"visibility":{"restricted":{"parent":"0:1247:678","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Binary","id":"2:10573:3710","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:10573:3710","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3817:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1074:932":{"id":"0:1074:932","crate_id":0,"name":"next","span":{"filename":"src/combinations.rs","begin":[87,4],"end":[122,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:1513:1666":{"id":"b:2:3207-0:1513:1666","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoChunks","id":"0:1513:1666","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3203-0:3766:1659":{"id":"b:2:3203-0:3766:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatWith","id":"0:3766:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10826:1555":{"id":"2:10826:1555","crate_id":2,"name":"write_str","span":null,"visibility":"default","docs":"Writes a single `str` into this hasher.\n\nIf you're implementing [`Hash`], you generally do not need to call this,\nas the `impl Hash for str` does, so you should prefer that instead.\n\nThis includes the domain separator for prefix-freedom, so you should\n**not** call `Self::write_length_prefix` before calling this.\n\n# Note to Implementers\n\nThere are at least two reasonable default ways to implement this.\nWhich one will be the default is not yet decided, so for now\nyou probably want to override it specifically.\n\n## The general answer\n\nIt's always correct to implement this with a length prefix:\n\n```\n# #![feature(hasher_prefixfree_extras)]\n# struct Foo;\n# impl std::hash::Hasher for Foo {\n# fn finish(&self) -> u64 { unimplemented!() }\n# fn write(&mut self, _bytes: &[u8]) { unimplemented!() }\nfn write_str(&mut self, s: &str) {\n    self.write_length_prefix(s.len());\n    self.write(s.as_bytes());\n}\n# }\n```\n\nAnd, if your `Hasher` works in `usize` chunks, this is likely a very\nefficient way to do it, as anything more complicated may well end up\nslower than just running the round with the length.\n\n## If your `Hasher` works byte-wise\n\nOne nice thing about `str` being UTF-8 is that the `b'\\xFF'` byte\nnever happens.  That means that you can append that to the byte stream\nbeing hashed and maintain prefix-freedom:\n\n```\n# #![feature(hasher_prefixfree_extras)]\n# struct Foo;\n# impl std::hash::Hasher for Foo {\n# fn finish(&self) -> u64 { unimplemented!() }\n# fn write(&mut self, _bytes: &[u8]) { unimplemented!() }\nfn write_str(&mut self, s: &str) {\n    self.write(s.as_bytes());\n    self.write_u8(0xff);\n}\n# }\n```\n\nThis does require that your implementation not add extra padding, and\nthus generally requires that you maintain a buffer, running a round\nonly once that buffer is full (or `finish` is called).\n\nThat's because if `write` pads data out to a fixed chunk size, it's\nlikely that it does it in such a way that `\"a\"` and `\"a\\x00\"` would\nend up hashing the same sequence of things, introducing conflicts.","links":{"`Hash`":"2:10800:143"},"attrs":["#[unstable(feature = \"hasher_prefixfree_extras\", issue = \"96762\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5533:23373":{"id":"1:5533:23373","crate_id":1,"name":"mtime","span":null,"visibility":"default","docs":"Returns the last modification time of the file, in seconds since Unix Epoch.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let last_modification_time = meta.mtime();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3370:216-0:4388:1716":{"id":"a:2:3370:216-0:4388:1716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3213-0:4058:1697":{"id":"b:2:3213-0:4058:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10575:3708":{"id":"2:10575:3708","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10576:667"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:11217:762":{"id":"2:11217:762","crate_id":2,"name":"index_mut","span":null,"visibility":"default","docs":"Returns a mutable reference to the output at this location, panicking\nif out of bounds.","links":{},"attrs":["#[unstable(feature = \"slice_index_methods\", issue = \"none\")]","#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["slice",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SliceIndex","id":"2:11209:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:8676-0:1490:1670":{"id":"b:2:8676-0:1490:1670","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Group","id":"0:1490:1670","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"1:6640:6553":{"id":"1:6640:6553","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6641:23409"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10847:22160":{"id":"2:10847:22160","crate_id":2,"name":"build_hasher","span":null,"visibility":"default","docs":"Creates a new hasher.\n\nEach call to `build_hasher` on the same instance should produce identical\n[`Hasher`]s.\n\n# Examples\n\n```\nuse std::collections::hash_map::RandomState;\nuse std::hash::BuildHasher;\n\nlet s = RandomState::new();\nlet new_s = s.build_hasher();\n```","links":{"`Hasher`":"2:10810:147"},"attrs":["#[stable(since = \"1.7.0\", feature = \"build_hasher\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Hasher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"BuildHasher","id":"2:10845:4689","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:2923:917":{"id":"2:2923:917","crate_id":2,"name":"ne","span":null,"visibility":"default","docs":"This method tests for `!=`. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Rhs"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2415:1745":{"id":"0:2415:1745","crate_id":0,"name":"MultiUnzip","span":{"filename":"src/unziptuple.rs","begin":[32,0],"end":[35,1]},"visibility":"public","docs":"An iterator that can be unzipped into multiple collections.\n\nSee [`.multiunzip()`](crate::Itertools::multiunzip) for more information.","links":{"crate::Itertools::multiunzip":"0:2852:1744"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:2417:1744"],"generics":{"params":[{"name":"FromI","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:4408","0:4412","0:4418","0:4426","0:4436","0:4448","0:4462","0:4478","0:4496","0:4516","0:4538","0:4562","0:4588"]}},"0:5042":{"id":"0:5042","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[138,0],"end":[138,50]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"C"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"D"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"E"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"G"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"H"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"K"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"L"},"trait":{"name":"","id":"2:8672:152","args":null}}}]}}],"bindings":[]}}}},"items":["0:5055:688"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2035:932":{"id":"0:2035:932","crate_id":0,"name":"next","span":{"filename":"src/put_back_n_impl.rs","begin":[52,4],"end":[54,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8995:301":{"id":"2:8995:301","crate_id":2,"name":"any","span":null,"visibility":"default","docs":"Tests if any element of the iterator matches a predicate.\n\n`any()` takes a closure that returns `true` or `false`. It applies\nthis closure to each element of the iterator, and if any of them return\n`true`, then so does `any()`. If they all return `false`, it\nreturns `false`.\n\n`any()` is short-circuiting; in other words, it will stop processing\nas soon as it finds a `true`, given that no matter what else happens,\nthe result will also be `true`.\n\nAn empty iterator returns `false`.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nassert!(a.iter().any(|&x| x > 0));\n\nassert!(!a.iter().any(|&x| x > 5));\n```\n\nStopping at the first `true`:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter();\n\nassert!(iter.any(|&x| x != 2));\n\n// we can still use `iter`, as there are more elements.\nassert_eq!(iter.next(), Some(&2));\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:4388:1716":{"id":"b:2:3218-0:4388:1716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2988:415":{"id":"0:2988:415","crate_id":0,"name":"clone","span":{"filename":"src/adaptors/mod.rs","begin":[168,9],"end":[168,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2204:1849":{"id":"0:2204:1849","crate_id":0,"name":"Item","span":{"filename":"src/tuple_impl.rs","begin":[47,4],"end":[47,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TupleCollect","id":"0:2245:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:3203-0:1054:1651":{"id":"b:2:3203-0:1054:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Combinations","id":"0:1054:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:848-0:3748:1653":{"id":"b:5:848-0:3748:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CombinationsWithReplacement","id":"0:3748:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:5099:2652":{"id":"b:2:2865-0:5099:2652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3752:22805":{"id":"2:3752:22805","crate_id":2,"name":"start_bound","span":null,"visibility":"default","docs":"Start index bound.\n\nReturns the start value as a `Bound`.\n\n# Examples\n\n```\n# fn main() {\nuse std::ops::Bound::*;\nuse std::ops::RangeBounds;\n\nassert_eq!((..10).start_bound(), Unbounded);\nassert_eq!((3..10).start_bound(), Included(&3));\n# }\n```","links":{},"attrs":["#[stable(feature = \"collections_range\", since = \"1.28.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bound","id":"2:46298:4631","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9533:4792-0:1490:1670":{"id":"a:2:9533:4792-0:1490:1670","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Group","id":"0:1490:1670","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:3396:667":{"id":"0:3396:667","crate_id":0,"name":"fmt","span":{"filename":"src/adaptors/mod.rs","begin":[1008,4],"end":[1008,45]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"::std::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1563:3926":{"id":"0:1563:3926","crate_id":0,"name":"IntersperseElement","span":{"filename":"src/intersperse.rs","begin":[4,0],"end":[6,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1565:3927"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8724:5129":{"id":"2:8724:5129","crate_id":2,"name":"rfold","span":null,"visibility":"default","docs":"An iterator method that reduces the iterator's elements to a single,\nfinal value, starting from the back.\n\nThis is the reverse version of [`Iterator::fold()`]: it takes elements\nstarting from the back of the iterator.\n\n`rfold()` takes two arguments: an initial value, and a closure with two\narguments: an 'accumulator', and an element. The closure returns the value that\nthe accumulator should have for the next iteration.\n\nThe initial value is the value the accumulator will have on the first\ncall.\n\nAfter applying this closure to every element of the iterator, `rfold()`\nreturns the accumulator.\n\nThis operation is sometimes called 'reduce' or 'inject'.\n\nFolding is useful whenever you have a collection of something, and want\nto produce a single value from it.\n\nNote: `rfold()` combines elements in a *right-associative* fashion. For associative\noperators like `+`, the order the elements are combined in is not important, but for non-associative\noperators like `-` the order will affect the final result.\nFor a *left-associative* version of `rfold()`, see [`Iterator::fold()`].\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\n// the sum of all of the elements of a\nlet sum = a.iter()\n           .rfold(0, |acc, &x| acc + x);\n\nassert_eq!(sum, 6);\n```\n\nThis example demonstrates the right-associative nature of `rfold()`:\nit builds a string, starting with an initial value\nand continuing with each element from the back until the front:\n\n```\nlet numbers = [1, 2, 3, 4, 5];\n\nlet zero = \"0\".to_string();\n\nlet result = numbers.iter().rfold(zero, |acc, &x| {\n    format!(\"({x} + {acc})\")\n});\n\nassert_eq!(result, \"(1 + (2 + (3 + (4 + (5 + 0)))))\");\n```","links":{"`Iterator::fold()`":"2:8980:2582"},"attrs":["#[doc(alias = \"foldr\")]","#[stable(feature = \"iter_rfold\", since = \"1.27.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["init",{"kind":"generic","inner":"B"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"B"},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"B"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"generic","inner":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2244:932":{"id":"0:2244:932","crate_id":0,"name":"next","span":{"filename":"src/tuple_impl.rs","begin":[234,4],"end":[236,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6223:23425":{"id":"1:6223:23425","crate_id":1,"name":"process_group","span":null,"visibility":"default","docs":"Sets the process group ID (PGID) of the child process. Equivalent to a\n`setpgid` call in the child process, but may be more efficient.\n\nProcess groups determine which processes receive signals.\n\n# Examples\n\nPressing Ctrl-C in a terminal will send SIGINT to all processes in\nthe current foreground process group. By spawning the `sleep`\nsubprocess in a new process group, it will not receive SIGINT from the\nterminal.\n\nThe parent process could install a signal handler and manage the\nsubprocess on its own terms.\n\nA process group ID of 0 will use the process ID as the PGID.\n\n```no_run\nuse std::process::Command;\nuse std::os::unix::process::CommandExt;\n\nCommand::new(\"sleep\")\n    .arg(\"10\")\n    .process_group(0)\n    .spawn()?\n    .wait()?;\n#\n# Ok::<_, Box<dyn std::error::Error>>(())\n```","links":{},"attrs":["#[stable(feature = \"process_set_process_group\", since = \"1.64.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["pgroup",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"1:7477:6730","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:735:932":{"id":"0:735:932","crate_id":0,"name":"next","span":{"filename":"src/adaptors/mod.rs","begin":[674,4],"end":[679,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3533:4750":{"id":"2:3533:4750","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3535:364"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:8676-0:4119:1707":{"id":"b:2:8676-0:4119:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleBuffer","id":"0:4119:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:2736:2787":{"id":"0:2736:2787","crate_id":0,"name":"into_group_map_by","span":{"filename":"src/lib.rs","begin":[2861,4],"end":[2868,5]},"visibility":"default","docs":"Return an `Iterator` on a `HashMap`. Keys mapped to `Vec`s of values. The key is specified\nin the closure.\n\nEssentially a shorthand for `.into_grouping_map_by(f).collect::<Vec<_>>()`.\n\n```\nuse itertools::Itertools;\nuse std::collections::HashMap;\n\nlet data = vec![(0, 10), (2, 12), (3, 13), (0, 20), (3, 33), (2, 42)];\nlet lookup: HashMap<u32,Vec<(u32, u32)>> =\n    data.clone().into_iter().into_group_map_by(|a| a.0);\n\nassert_eq!(lookup[&0], vec![(0,10),(0,20)]);\nassert_eq!(lookup.get(&1), None);\nassert_eq!(lookup[&2], vec![(2,12), (2,42)]);\nassert_eq!(lookup[&3], vec![(3,13), (3,33)]);\n\nassert_eq!(\n    data.into_iter()\n        .into_group_map_by(|x| x.0)\n        .into_iter()\n        .map(|(key, values)| (key, values.into_iter().fold(0,|acc, (_,v)| acc + v )))\n        .collect::<HashMap<u32,u32>>()[&0],\n    30,\n);\n```","links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7898:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"V"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"V"}}}],"output":{"kind":"generic","inner":"K"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6472:10301":{"id":"1:6472:10301","crate_id":1,"name":"st_mtime","span":null,"visibility":"default","docs":"Returns the last modification time of the file, in seconds since Unix Epoch.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_mtime());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:329":{"id":"0:329","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[183,0],"end":[183,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::ziptuple::multizip","name":"multizip","id":"0:2513:1746","glob":false}},"2:2870:3696":{"id":"2:2870:3696","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4080:415":{"id":"0:4080:415","crate_id":0,"name":"clone","span":{"filename":"src/sources.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RepeatCall","id":"0:4075:1701","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4007:415":{"id":"0:4007:415","crate_id":0,"name":"clone","span":{"filename":"src/permutations.rs","begin":[22,4],"end":[22,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4817":{"id":"0:4817","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[133,0],"end":[133,35]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"}]}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"C"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"D"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"E"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"G"},"trait":{"name":"","id":"2:8672:152","args":null}}}]}}],"bindings":[]}}}},"items":["0:4825:688"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3203-0:3397:1646":{"id":"b:2:3203-0:3397:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:821:2468":{"id":"0:821:2468","crate_id":0,"name":"collect","span":{"filename":"src/adaptors/mod.rs","begin":[978,4],"end":[985,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"C"},"c_variadic":false},"generics":{"params":[{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"FromIterator","id":"2:8668:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:0:2854-0:4388:1716":{"id":"b:0:2854-0:4388:1716","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:848-0:1917:1689":{"id":"b:5:848-0:1917:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Permutations","id":"0:1917:1689","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23078:16129":{"id":"2:23078:16129","crate_id":2,"name":"reduce_min","span":null,"visibility":"default","docs":"Returns the minimum lane in the vector.\n\nReturns values based on equality, so a vector containing both `0.` and `-0.` may\nreturn either.\n\nThis function will not return `NaN` unless all lanes are `NaN`.\n\n# Examples\n\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{f32x2, SimdFloat};\nlet v = f32x2::from_array([3., 7.]);\nassert_eq!(v.reduce_min(), 3.);\n\n// NaN values are skipped...\nlet v = f32x2::from_array([1., f32::NAN]);\nassert_eq!(v.reduce_min(), 1.);\n\n// ...unless all values are NaN\nlet v = f32x2::from_array([f32::NAN, f32::NAN]);\nassert!(v.reduce_min().is_nan());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23053:7076","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3382:225-0:4048:1695":{"id":"a:2:3382:225-0:4048:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3203-0:1513:1666":{"id":"b:2:3203-0:1513:1666","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoChunks","id":"0:1513:1666","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:3007:1636":{"id":"b:2:2865-0:3007:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Batching","id":"0:3007:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:8676-0:4083:1702":{"id":"b:2:8676-0:4083:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unfold","id":"0:4083:1702","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:3904:1735":{"id":"0:3904:1735","crate_id":0,"name":"MinMaxResult","span":{"filename":"src/minmax.rs","begin":[6,0],"end":[16,1]},"visibility":"public","docs":"`MinMaxResult` is an enum returned by `minmax`.\n\nSee [`.minmax()`](crate::Itertools::minmax) for more detail.","links":{"crate::Itertools::minmax":"0:2769:1734"},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:3906:2943","0:3908:2944","0:3911:2945"],"impls":["0:1749","a:2:9533:4792-0:3904:1735","a:2:9532:4793-0:3904:1735","a:2:3382:225-0:3904:1735","a:2:3370:216-0:3904:1735","a:2:3411:4706-0:3904:1735","b:2:4104-0:3904:1735","b:2:2865-0:3904:1735","b:2:3203-0:3904:1735","b:2:3207-0:3904:1735","b:2:3218-0:3904:1735","b:2:2868-0:3904:1735","b:2:3213-0:3904:1735","b:5:848-0:3904:1735","0:3915","0:3917","0:3920","0:3922","0:3925"]}},"0:4662":{"id":"0:4662","crate_id":0,"name":null,"span":{"filename":"src/zip_longest.rs","begin":[15,9],"end":[15,14]},"visibility":{"restricted":{"parent":"0:2466:1721","path":"::zip_longest"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"items":["0:4665:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4092:1703":{"id":"0:4092:1703","crate_id":0,"name":"Iterate","span":{"filename":"src/sources.rs","begin":[141,0],"end":[144,1]},"visibility":"public","docs":"An iterator that infinitely applies function to value and yields results.\n\nThis `struct` is created by the [`iterate()`](crate::iterate) function.\nSee its documentation for more.","links":{"crate::iterate":"0:2155:1741"},"attrs":["#[must_use = \"iterators are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"St","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:4092:1703","a:2:9532:4793-0:4092:1703","a:2:3382:225-0:4092:1703","a:2:3370:216-0:4092:1703","a:2:3411:4706-0:4092:1703","b:0:2854-0:4092:1703","b:2:8676-0:4092:1703","b:2:4104-0:4092:1703","b:2:2865-0:4092:1703","b:2:3203-0:4092:1703","b:2:3207-0:4092:1703","b:2:3218-0:4092:1703","b:2:2868-0:4092:1703","b:2:3213-0:4092:1703","b:5:848-0:4092:1703","0:4097","0:2146","0:2149"]}},"2:8720:5128":{"id":"2:8720:5128","crate_id":2,"name":"try_rfold","span":null,"visibility":"default","docs":"This is the reverse version of [`Iterator::try_fold()`]: it takes\nelements starting from the back of the iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [\"1\", \"2\", \"3\"];\nlet sum = a.iter()\n    .map(|&s| s.parse::<i32>())\n    .try_rfold(0, |acc, x| x.and_then(|y| Ok(acc + y)));\nassert_eq!(sum, Ok(6));\n```\n\nShort-circuiting:\n\n```\nlet a = [\"1\", \"rust\", \"3\"];\nlet mut it = a.iter();\nlet sum = it\n    .by_ref()\n    .map(|&s| s.parse::<i32>())\n    .try_rfold(0, |acc, x| x.and_then(|y| Ok(acc + y)));\nassert!(sum.is_err());\n\n// Because it short-circuited, the remaining elements are still\n// available through the iterator.\nassert_eq!(it.next_back(), Some(&\"1\"));\n```","links":{"`Iterator::try_fold()`":"2:8967:2653"},"attrs":["#[stable(feature = \"iterator_try_fold\", since = \"1.27.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["init",{"kind":"generic","inner":"B"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"R"},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"B"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"generic","inner":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:152":{"id":"0:152","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[124,34],"end":[124,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::grouping_map::GroupingMap","name":"GroupingMap","id":"0:3836:1663","glob":false}},"0:3938:667":{"id":"0:3938:667","crate_id":0,"name":"fmt","span":{"filename":"src/multipeek_impl.rs","begin":[9,16],"end":[9,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3991:4024":{"id":"0:3991:4024","crate_id":0,"name":"peeking_next","span":{"filename":"src/peeking_take_while.rs","begin":[146,0],"end":[146,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["accept",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10825:22126":{"id":"2:10825:22126","crate_id":2,"name":"write_length_prefix","span":null,"visibility":"default","docs":"Writes a length prefix into this hasher, as part of being prefix-free.\n\nIf you're implementing [`Hash`] for a custom collection, call this before\nwriting its contents to this `Hasher`.  That way\n`(collection![1, 2, 3], collection![4, 5])` and\n`(collection![1, 2], collection![3, 4, 5])` will provide different\nsequences of values to the `Hasher`\n\nThe `impl<T> Hash for [T]` includes a call to this method, so if you're\nhashing a slice (or array or vector) via its `Hash::hash` method,\nyou should **not** call this yourself.\n\nThis method is only for providing domain separation.  If you want to\nhash a `usize` that represents part of the *data*, then it's important\nthat you pass it to [`Hasher::write_usize`] instead of to this method.\n\n# Examples\n\n```\n#![feature(hasher_prefixfree_extras)]\n# // Stubs to make the `impl` below pass the compiler\n# struct MyCollection<T>(Option<T>);\n# impl<T> MyCollection<T> {\n#     fn len(&self) -> usize { todo!() }\n# }\n# impl<'a, T> IntoIterator for &'a MyCollection<T> {\n#     type Item = T;\n#     type IntoIter = std::iter::Empty<T>;\n#     fn into_iter(self) -> Self::IntoIter { todo!() }\n# }\n\nuse std::hash::{Hash, Hasher};\nimpl<T: Hash> Hash for MyCollection<T> {\n    fn hash<H: Hasher>(&self, state: &mut H) {\n        state.write_length_prefix(self.len());\n        for elt in self {\n            elt.hash(state);\n        }\n    }\n}\n```\n\n# Note to Implementers\n\nIf you've decided that your `Hasher` is willing to be susceptible to\nHash-DoS attacks, then you might consider skipping hashing some or all\nof the `len` provided in the name of increased performance.","links":{"`Hash`":"2:10800:143","`Hasher::write_usize`":"2:10818:22119"},"attrs":["#[unstable(feature = \"hasher_prefixfree_extras\", issue = \"96762\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5536:23376":{"id":"1:5536:23376","crate_id":1,"name":"ctime_nsec","span":null,"visibility":"default","docs":"Returns the last status change time of the file, in nanoseconds since [`ctime`].\n\n[`ctime`]: MetadataExt::ctime\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let nano_last_status_change_time = meta.ctime_nsec();\n    Ok(())\n}\n```","links":{"MetadataExt::ctime":"1:5535:23375"},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:967":{"id":"0:967","crate_id":0,"name":null,"span":{"filename":"src/free.rs","begin":[26,0],"end":[26,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::put_back_n_impl::put_back_n","name":"put_back_n","id":"0:2027:3504","glob":false}},"0:2849:3024":{"id":"0:2849:3024","crate_id":0,"name":"counts_by","span":{"filename":"src/lib.rs","begin":[3625,4],"end":[3632,5]},"visibility":"default","docs":"Collect the items in this iterator and return a `HashMap` which\ncontains each item that appears in the iterator and the number\nof times it appears,\ndetermining identity using a keying function.\n\n```\n# use itertools::Itertools;\nstruct Character {\n  first_name: &'static str,\n  last_name:  &'static str,\n}\n \nlet characters =\n    vec![\n        Character { first_name: \"Amy\",   last_name: \"Pond\"      },\n        Character { first_name: \"Amy\",   last_name: \"Wong\"      },\n        Character { first_name: \"Amy\",   last_name: \"Santiago\"  },\n        Character { first_name: \"James\", last_name: \"Bond\"      },\n        Character { first_name: \"James\", last_name: \"Sullivan\"  },\n        Character { first_name: \"James\", last_name: \"Norington\" },\n        Character { first_name: \"James\", last_name: \"Kirk\"      },\n    ];\n \nlet first_name_frequency = \n    characters\n        .into_iter()\n        .counts_by(|c| c.first_name);\n     \nassert_eq!(first_name_frequency[\"Amy\"], 3);\nassert_eq!(first_name_frequency[\"James\"], 4);\nassert_eq!(first_name_frequency.contains_key(\"Asha\"), false);\n```","links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"generic","inner":"K"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10577:3707":{"id":"2:10577:3707","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10578:667"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3207-0:3045:1644":{"id":"b:2:3207-0:3045:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleCombinations","id":"0:3045:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3218-0:4112:1705":{"id":"b:2:3218-0:4112:1705","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tee","id":"0:4112:1705","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2632:2406":{"id":"0:2632:2406","crate_id":0,"name":"contains","span":{"filename":"src/lib.rs","begin":[1826,4],"end":[1833,5]},"visibility":"default","docs":"Returns `true` if the given item is present in this iterator.\n\nThis method is short-circuiting. If the given item is present in this\niterator, this method will consume the iterator up-to-and-including\nthe item. If the given item is not present in this iterator, the\niterator will be exhausted.\n\n```\nuse itertools::Itertools;\n\n#[derive(PartialEq, Debug)]\nenum Enum { A, B, C, D, E, }\n \nlet mut iter = vec![Enum::A, Enum::B, Enum::C, Enum::D].into_iter();\n \n// search `iter` for `B`\nassert_eq!(iter.contains(&Enum::B), true);\n// `B` was found, so the iterator now rests at the item after `B` (i.e, `C`).\nassert_eq!(iter.next(), Some(Enum::C));\n \n// search `iter` for `E`\nassert_eq!(iter.contains(&Enum::E), false);\n// `E` wasn't found, so `iter` is now exhausted\nassert_eq!(iter.next(), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["query",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Q"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Q"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Q"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:2430:1718":{"id":"b:2:2868-0:2430:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WithPosition","id":"0:2430:1718","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23109:1243":{"id":"2:23109:1243","crate_id":2,"name":"saturating_add","span":null,"visibility":"default","docs":"Lanewise saturating add.\n\n# Examples\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{Simd, SimdInt};\nuse core::i32::{MIN, MAX};\nlet x = Simd::from_array([MIN, 0, 1, MAX]);\nlet max = Simd::splat(MAX);\nlet unsat = x + max;\nlet sat = x.saturating_add(max);\nassert_eq!(unsat, Simd::from_array([-1, MAX, MIN, -2]));\nassert_eq!(sat, Simd::from_array([-1, MAX, MAX, MAX]));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["second",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:6464:10292":{"id":"1:6464:10292","crate_id":1,"name":"st_mode","span":null,"visibility":"default","docs":"Returns the file type and mode.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_mode());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2430:1718":{"id":"0:2430:1718","crate_id":0,"name":"WithPosition","span":{"filename":"src/with_position.rs","begin":[9,0],"end":[14,1]},"visibility":"public","docs":"An iterator adaptor that wraps each element in an [`Position`].\n\nIterator element type is `Position<I::Item>`.\n\nSee [`.with_position()`](crate::Itertools::with_position) for more information.","links":{"`Position`":"0:4617:1742","crate::Itertools::with_position":"0:2615:1717"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:2430:1718","a:2:9532:4793-0:2430:1718","a:2:3382:225-0:2430:1718","a:2:3370:216-0:2430:1718","a:2:3411:4706-0:2430:1718","b:0:2854-0:2430:1718","b:2:8676-0:2430:1718","b:2:4104-0:2430:1718","b:2:2865-0:2430:1718","b:2:3203-0:2430:1718","b:2:3207-0:2430:1718","b:2:3218-0:2430:1718","b:2:2868-0:2430:1718","b:2:3213-0:2430:1718","b:5:848-0:2430:1718","0:2434","0:2441","0:2446","0:2448"]}},"0:748":{"id":"0:748","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[728,0],"end":[731,2]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"HasCombination","id":"0:737:2255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleCombinations","id":"0:3045:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:0:2854-0:3951:1683":{"id":"b:0:2854-0:3951:1683","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23106:7064":{"id":"2:23106:7064","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23107:7004","2:23108:16106","2:23109:1243","2:23110:1244","2:23111:16110","2:23112:16131","2:23113:16132","2:23114:16133","2:23115:16134","2:23116:16121","2:23117:16126","2:23118:16127","2:23119:16128","2:23120:16129","2:23121:16135","2:23122:16136","2:23123:16137"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23155:6539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1813:1849":{"id":"0:1813:1849","crate_id":0,"name":"Item","span":{"filename":"src/pad_tail.rs","begin":[43,4],"end":[43,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:3218-0:1917:1689":{"id":"b:2:3218-0:1917:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Permutations","id":"0:1917:1689","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3382:225-0:2954:1630":{"id":"a:2:3382:225-0:2954:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8203:5992":{"id":"2:8203:5992","crate_id":2,"name":"backward_unchecked","span":null,"visibility":"default","docs":"Returns the value that would be obtained by taking the *predecessor*\nof `self` `count` times.\n\n# Safety\n\nIt is undefined behavior for this operation to overflow the\nrange of values supported by `Self`. If you cannot guarantee that this\nwill not overflow, use `backward` or `backward_checked` instead.\n\n# Invariants\n\nFor any `a`:\n\n* if there exists `b` such that `b < a`, it is safe to call `Step::backward_unchecked(a, 1)`\n* if there exists `b`, `n` such that `steps_between(&b, &a) == Some(n)`,\n  it is safe to call `Step::backward_unchecked(a, m)` for any `m <= n`.\n\nFor any `a` and `n`, where no overflow occurs:\n\n* `Step::backward_unchecked(a, n)` is equivalent to `Step::backward(a, n)`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["start",{"kind":"generic","inner":"Self"}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:2982:1635":{"id":"b:2:3213-0:2982:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3605":{"id":"0:3605","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"X","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Iter","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Iter"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Iter"}},{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}],"bindings":[]}}}},"items":["0:3615:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4104-0:4119:1707":{"id":"b:2:4104-0:4119:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleBuffer","id":"0:4119:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23122:16136":{"id":"2:23122:16136","crate_id":2,"name":"reduce_or","span":null,"visibility":"default","docs":"Returns the cumulative bitwise \"or\" across the lanes of the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdInt","id":"2:23106:7064","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2233:932":{"id":"0:2233:932","crate_id":0,"name":"next","span":{"filename":"src/tuple_impl.rs","begin":[177,4],"end":[188,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:89":{"id":"0:89","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[100,8],"end":[100,15]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::MapInto","name":"MapInto","id":"0:486:1637","glob":false}},"b:2:3207-0:4048:1695":{"id":"b:2:3207-0:4048:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:2928:1649":{"id":"b:2:3213-0:2928:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiProduct","id":"0:2928:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:1452:1669":{"id":"b:2:2868-0:1452:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupBy","id":"0:1452:1669","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4644:1720":{"id":"0:4644:1720","crate_id":0,"name":"ZipEq","span":{"filename":"src/zip_eq_impl.rs","begin":[8,0],"end":[11,1]},"visibility":"public","docs":"An iterator which iterates two other iterators simultaneously\n\nSee [`.zip_eq()`](crate::Itertools::zip_eq) for more information.","links":{"crate::Itertools::zip_eq":"0:2530:1885"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:4644:1720","a:2:9532:4793-0:4644:1720","a:2:3382:225-0:4644:1720","a:2:3370:216-0:4644:1720","a:2:3411:4706-0:4644:1720","b:0:2854-0:4644:1720","b:2:8676-0:4644:1720","b:2:4104-0:4644:1720","b:2:2865-0:4644:1720","b:2:3203-0:4644:1720","b:2:3207-0:4644:1720","b:2:3218-0:4644:1720","b:2:2868-0:4644:1720","b:2:3213-0:4644:1720","b:5:848-0:4644:1720","0:4649","0:4653","0:2457","0:2463"]}},"0:3053:415":{"id":"0:3053:415","crate_id":0,"name":"clone","span":{"filename":"src/adaptors/mod.rs","begin":[691,9],"end":[691,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TupleCombinations","id":"0:3045:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:3861:1674":{"id":"b:2:3218-0:3861:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"ElemF"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3382:225-0:3757:1657":{"id":"a:2:3382:225-0:3757:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3508:4744":{"id":"2:3508:4744","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3510:184","2:3511:363"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4410:1744":{"id":"0:4410:1744","crate_id":0,"name":"multiunzip","span":{"filename":"src/unziptuple.rs","begin":[68,0],"end":[68,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:1038:15399":{"id":"1:1038:15399","crate_id":1,"name":"make_ascii_lowercase","span":null,"visibility":"default","docs":"Converts this type to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase`].\n\n# Note\n\nThis method is deprecated in favor of the identically-named\ninherent methods on `u8`, `char`, `[u8]` and `str`.\n\n[`to_ascii_lowercase`]: AsciiExt::to_ascii_lowercase","links":{"AsciiExt::to_ascii_lowercase":"1:1035:15396"},"attrs":["#[stable(feature = \"ascii\", since = \"1.9.0\")]"],"deprecation":{"since":"1.26.0","note":"use inherent methods instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:6212:6550":{"id":"1:6212:6550","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6213:6858","1:6214:6859","1:6215:11007","1:6216:23421","1:6218:23422","1:6220:23423","1:6221:23424","1:6223:23425"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10409:6539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3213-0:3766:1659":{"id":"b:2:3213-0:3766:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatWith","id":"0:3766:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3382:225-0:3045:1644":{"id":"a:2:3382:225-0:3045:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Combination","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"HasCombination","id":"0:737:2255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleCombinations","id":"0:3045:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10810:147":{"id":"2:10810:147","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10811:659","2:10812:2499","2:10813:22114","2:10814:22115","2:10815:22116","2:10816:22117","2:10817:22118","2:10818:22119","2:10819:22120","2:10820:22121","2:10821:22122","2:10822:22123","2:10823:22124","2:10824:22125","2:10825:22126","2:10826:1555"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:24077:7004":{"id":"2:24077:7004","crate_id":2,"name":"Mask","span":null,"visibility":"default","docs":"The mask element type corresponding to this element type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"MaskElement","id":"2:23439:7005","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"1:5537:23377":{"id":"1:5537:23377","crate_id":1,"name":"blksize","span":null,"visibility":"default","docs":"Returns the block size for filesystem I/O.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let block_size = meta.blksize();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4802":{"id":"0:4802","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[132,0],"end":[132,32]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"}]}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3370:216-0:3766:1659":{"id":"a:2:3370:216-0:3766:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatWith","id":"0:3766:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3910:1564":{"id":"0:3910:1564","crate_id":0,"name":"0","span":{"filename":"src/minmax.rs","begin":[11,15],"end":[11,16]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"1:6738:6534":{"id":"1:6738:6534","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6739:23397"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3737:1655":{"id":"0:3737:1655","crate_id":0,"name":"ConsTuples","span":{"filename":"src/cons_tuples_impl.rs","begin":[46,0],"end":[50,1]},"visibility":"public","docs":"An iterator that maps an iterator of tuples like\n`((A, B), C)` to an iterator of `(A, B, C)`.\n\nUsed by the `iproduct!()` macro.","links":{},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"J"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:3737:1655","a:2:9532:4793-0:3737:1655","a:2:3382:225-0:3737:1655","a:2:3370:216-0:3737:1655","a:2:3411:4706-0:3737:1655","b:0:2854-0:3737:1655","b:2:8676-0:3737:1655","b:2:4104-0:3737:1655","b:2:2865-0:3737:1655","b:2:3203-0:3737:1655","b:2:3207-0:3737:1655","b:2:3218-0:3737:1655","b:2:2868-0:3737:1655","b:2:3213-0:3737:1655","b:5:848-0:3737:1655","0:3717","0:3730","0:3695","0:3709","0:3671","0:3686","0:3645","0:3661","0:3617","0:3634","0:3587","0:3605","0:3555","0:3574","0:3521","0:3541","0:3485","0:3506","0:3447","0:3469","0:3741","0:1035"]}},"a:2:9533:4792-0:3939:1685":{"id":"a:2:9533:4792-0:3939:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:8676-0:674:1640":{"id":"b:2:8676-0:674:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeBy","id":"0:674:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"a:2:9533:4792-0:1981:1693":{"id":"a:2:9533:4792-0:1981:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Powerset","id":"0:1981:1693","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:23073:16124":{"id":"2:23073:16124","crate_id":2,"name":"simd_max","span":null,"visibility":"default","docs":"Returns the maximum of each lane.\n\nIf one of the values is `NAN`, then the other value is returned.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3382:225-0:1527:1668":{"id":"a:2:3382:225-0:1527:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunks","id":"0:1527:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:1869:4024":{"id":"0:1869:4024","crate_id":0,"name":"peeking_next","span":{"filename":"src/peeking_take_while.rs","begin":[18,4],"end":[19,45]},"visibility":"default","docs":"Pass a reference to the next iterator element to the closure `accept`;\nif `accept` returns true, return it as the next element,\nelse None.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["accept",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:142":{"id":"0:142","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[121,28],"end":[121,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::format::Format","name":"Format","id":"0:3777:1658","glob":false}},"1:4485:6561":{"id":"1:4485:6561","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4486:15650","1:4487:15651","1:4488:15652","1:4489:15653"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5429:23355":{"id":"1:5429:23355","crate_id":1,"name":"from_vec","span":null,"visibility":"default","docs":"Creates an [`OsString`] from a byte vector.\n\nSee the module documentation for an example.","links":{"`OsString`":"1:2651:183"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["vec",{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7898:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8224:4593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2658:2531":{"id":"0:2658:2531","crate_id":0,"name":"fold_results","span":{"filename":"src/lib.rs","begin":[2140,4],"end":[2145,5]},"visibility":"default","docs":"See [`.fold_ok()`](Itertools::fold_ok).","links":{"Itertools::fold_ok":"0:2663:2532"},"attrs":["#[deprecated(note = \"Use .fold_ok() instead\", since = \"0.10.0\")]"],"deprecation":{"since":"0.10.0","note":"Use .fold_ok() instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["start",{"kind":"generic","inner":"B"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"B"},{"kind":"generic","inner":"A"}],"output":{"kind":"generic","inner":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:4037:1691":{"id":"b:2:3207-0:4037:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ProcessResults","id":"0:4037:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2920:186":{"id":"2:2920:186","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2922:611","2:2923:917"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:2868-0:3928:1681":{"id":"b:2:2868-0:3928:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3207-0:1490:1670":{"id":"b:2:3207-0:1490:1670","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Group","id":"0:1490:1670","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:3904:1735":{"id":"b:2:2865-0:3904:1735","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:0:2854-0:3045:1644":{"id":"b:0:2854-0:3045:1644","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleCombinations","id":"0:3045:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2740:2795":{"id":"0:2740:2795","crate_id":0,"name":"into_grouping_map","span":{"filename":"src/lib.rs","begin":[2880,4],"end":[2885,5]},"visibility":"default","docs":"Constructs a `GroupingMap` to be used later with one of the efficient \ngroup-and-fold operations it allows to perform.\n \nThe input iterator must yield item in the form of `(K, V)` where the\nvalue of type `K` will be used as key to identify the groups and the\nvalue of type `V` as value for the folding operation.\n \nSee [`GroupingMap`] for more informations\non what operations are available.","links":{"`GroupingMap`":"0:3836:1663"},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"GroupingMap","id":"0:3836:1663","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"K"},{"kind":"generic","inner":"V"}]}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13822:61728":{"id":"2:13822:61728","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13336:4565","prim@char":"1:15876:4439"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14545:21212":{"id":"2:14545:21212","crate_id":2,"name":"allocate","span":null,"visibility":"default","docs":"Attempts to allocate a block of memory.\n\nOn success, returns a [`NonNull<[u8]>`][NonNull] meeting the size and alignment guarantees of `layout`.\n\nThe returned block may have a larger size than specified by `layout.size()`, and may or may\nnot have its contents initialized.\n\n# Errors\n\nReturning `Err` indicates that either memory is exhausted or `layout` does not meet\nallocator's size or alignment constraints.\n\nImplementations are encouraged to return `Err` on memory exhaustion rather than panicking or\naborting, but this is not a strict requirement. (Specifically: it is *legal* to implement\nthis trait atop an underlying native allocation library that aborts on memory exhaustion.)\n\nClients wishing to abort computation in response to an allocation error are encouraged to\ncall the [`handle_alloc_error`] function, rather than directly invoking `panic!` or similar.\n\n[`handle_alloc_error`]: ../../alloc/alloc/fn.handle_alloc_error.html","links":{"NonNull":"2:2391:4591"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50749:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NonNull","id":"2:2391:4591","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"AllocError","id":"2:50778:4797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1525:1621":{"id":"0:1525:1621","crate_id":0,"name":"IntoIter","span":{"filename":"src/groupbylazy.rs","begin":[494,4],"end":[494,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Chunks","id":"0:1527:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}}},"2:10814:22115":{"id":"2:10814:22115","crate_id":2,"name":"write_u16","span":null,"visibility":"default","docs":"Writes a single `u16` into this hasher.","links":{},"attrs":["#[stable(feature = \"hasher_write\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3709":{"id":"0:3709","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"X","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Iter","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Iter"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Iter"}},{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}],"bindings":[]}}}},"items":["0:3715:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2056":{"id":"0:2056","crate_id":0,"name":null,"span":{"filename":"src/rciter_impl.rs","begin":[57,0],"end":[73,1]},"visibility":{"restricted":{"parent":"0:2038:1696","path":"::rciter_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"A"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:2059:1849","0:2060:932","0:2061:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3179:3309":{"id":"2:3179:3309","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Converts this type into the (usually inferred) input type.","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:23055:16106":{"id":"2:23055:16106","crate_id":2,"name":"Scalar","span":null,"visibility":"default","docs":"Scalar type contained by this SIMD vector type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"2:8983:3500":{"id":"2:8983:3500","crate_id":2,"name":"reduce","span":null,"visibility":"default","docs":"Reduces the elements to a single one, by repeatedly applying a reducing\noperation.\n\nIf the iterator is empty, returns [`None`]; otherwise, returns the\nresult of the reduction.\n\nThe reducing function is a closure with two arguments: an 'accumulator', and an element.\nFor iterators with at least one element, this is the same as [`fold()`]\nwith the first element of the iterator as the initial accumulator value, folding\nevery subsequent element into it.\n\n[`fold()`]: Iterator::fold\n\n# Example\n\nFind the maximum value:\n\n```\nfn find_max<I>(iter: I) -> Option<I::Item>\n    where I: Iterator,\n          I::Item: Ord,\n{\n    iter.reduce(|accum, item| {\n        if accum >= item { accum } else { item }\n    })\n}\nlet a = [10, 20, 5, -23, 0];\nlet b: [u32; 0] = [];\n\nassert_eq!(find_max(a.iter()), Some(&20));\nassert_eq!(find_max(b.iter()), None);\n```","links":{"Iterator::fold":"2:8980:2582","`None`":"2:47811:177"},"attrs":["#[stable(feature = \"iterator_fold_self\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2197":{"id":"0:2197","crate_id":0,"name":null,"span":{"filename":"src/tuple_impl.rs","begin":[19,0],"end":[19,47]},"visibility":{"restricted":{"parent":"0:2180:1706","path":"::tuple_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"TupleCollect","id":"0:2245:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"HomogeneousTuple","id":"0:2196:1727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"T"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13831:15397":{"id":"2:13831:15397","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2518:1793":{"id":"0:2518:1793","crate_id":0,"name":"izip","span":{"filename":"src/lib.rs","begin":[319,0],"end":[353,1]},"visibility":"public","docs":"Create an iterator running multiple iterators in lockstep.\n\nThe `izip!` iterator yields elements until any subiterator\nreturns `None`.\n\nThis is a version of the standard ``.zip()`` that's supporting more than\ntwo iterators. The iterator element type is a tuple with one element\nfrom each of the input iterators. Just like ``.zip()``, the iteration stops\nwhen the shortest of the inputs reaches its end.\n\n**Note:** The result of this macro is in the general case an iterator\ncomposed of repeated `.zip()` and a `.map()`; it has an anonymous type.\nThe special cases of one and two arguments produce the equivalent of\n`$a.into_iter()` and `$a.into_iter().zip($b)` respectively.\n\nPrefer this macro `izip!()` over [`multizip`] for the performance benefits\nof using the standard library `.zip()`.\n\n```\n# use itertools::izip;\n#\n# fn main() {\n\n// iterate over three sequences side-by-side\nlet mut results = [0, 0, 0, 0];\nlet inputs = [3, 7, 9, 6];\n\nfor (r, index, input) in izip!(&mut results, 0..10, &inputs) {\n    *r = index * 10 + input;\n}\n\nassert_eq!(results, [0 + 3, 10 + 7, 29, 36]);\n# }\n```","links":{"`multizip`":"0:2513:1746"},"attrs":["#[macro_export]"],"deprecation":null,"kind":"macro","inner":"macro_rules! izip {\n    ( @closure $p:pat => $tup:expr ) => { ... };\n    ( @closure $p:pat => ( $($tup:tt)* ) , $_iter:expr $( , $tail:expr )* ) => { ... };\n    ($first:expr $(,)*) => { ... };\n    ($first:expr, $second:expr $(,)*) => { ... };\n    ( $first:expr $( , $rest:expr )* $(,)* ) => { ... };\n}"},"2:13353:23289":{"id":"2:13353:23289","crate_id":2,"name":"strip_prefix_of","span":null,"visibility":"default","docs":"Removes the pattern from the front of haystack, if it matches.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1000:1831":{"id":"0:1000:1831","crate_id":0,"name":"chain","span":{"filename":"src/free.rs","begin":[148,0],"end":[153,1]},"visibility":"public","docs":"Takes two iterables and creates a new iterator over both in sequence. \n\n[`IntoIterator`] enabled version of [`Iterator::chain`].\n\n## Example\n```\nuse itertools::chain;\n \nlet mut result:Vec<i32> = Vec::new();\n\nfor element in chain(&[1, 2, 3], &[4]) {\n    result.push(*element);\n}\nassert_eq!(result, vec![1, 2, 3, 4]);\n```","links":{"`IntoIterator`":"2:8672:152","`Iterator::chain`":"2:8888:1831"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["i",{"kind":"generic","inner":"I"}],["j",{"kind":"generic","inner":"J"}]],"output":{"kind":"resolved_path","inner":{"name":"iter::Chain","id":"2:46904:3541","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:2868-0:4065:1699":{"id":"b:2:2868-0:4065:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:545":{"id":"0:545","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[11,38],"end":[11,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::map::MapInto","name":"MapInto","id":"0:486:1637","glob":false}},"1:4500:15667":{"id":"1:4500:15667","crate_id":1,"name":"split","span":null,"visibility":"default","docs":"Returns an iterator over the contents of this reader split on the byte\n`byte`.\n\nThe iterator returned from this function will return instances of\n<code>[io::Result]<[Vec]\\<u8>></code>. Each vector returned will *not* have\nthe delimiter byte at the end.\n\nThis function will yield errors whenever [`read_until`] would have\nalso yielded an error.\n\n[io::Result]: self::Result \"io::Result\"\n[`read_until`]: BufRead::read_until\n\n# Examples\n\n[`std::io::Cursor`][`Cursor`] is a type that implements `BufRead`. In\nthis example, we use [`Cursor`] to iterate over all hyphen delimited\nsegments in a byte slice\n\n```\nuse std::io::{self, BufRead};\n\nlet cursor = io::Cursor::new(b\"lorem-ipsum-dolor\");\n\nlet mut split_iter = cursor.split(b'-').map(|l| l.unwrap());\nassert_eq!(split_iter.next(), Some(b\"lorem\".to_vec()));\nassert_eq!(split_iter.next(), Some(b\"ipsum\".to_vec()));\nassert_eq!(split_iter.next(), Some(b\"dolor\".to_vec()));\nassert_eq!(split_iter.next(), None);\n```","links":{"self::Result":"1:3801:208","`Cursor`":"1:10712:5450","BufRead::read_until":"1:4497:6580","Vec":"5:7898:240"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["byte",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"1:10979:5394","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3541":{"id":"0:3541","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"X","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Iter","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Iter"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Iter"}},{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}],"bindings":[]}}}},"items":["0:3553:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3836:138":{"id":"2:3836:138","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3838:694"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:423:1628":{"id":"0:423:1628","crate_id":0,"name":"DedupWithCount","span":{"filename":"src/adaptors/coalesce.rs","begin":[215,0],"end":[215,58]},"visibility":"public","docs":"An iterator adaptor that removes repeated duplicates, while keeping a count of how many\nrepeated elements were present.\n\nSee [`.dedup_with_count()`](crate::Itertools::dedup_with_count) for more information.","links":{"crate::Itertools::dedup_with_count":"0:2590:2173"},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"DedupByWithCount","id":"0:416:1629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"resolved_path","inner":{"name":"DedupEq","id":"0:2881:3362","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"0:2817:2956":{"id":"0:2817:2956","crate_id":0,"name":"position_minmax_by_key","span":{"filename":"src/lib.rs","begin":[3421,4],"end":[3430,5]},"visibility":"default","docs":"Return the postions of the minimum and maximum elements of an\niterator, as determined by the specified function.\n\nThe return value is a variant of [`MinMaxResult`] like for\n[`position_minmax`].\n\nFor the minimum, if several elements are equally minimum, the\nposition of the first of them is returned. For the maximum, if\nseveral elements are equally maximum, the position of the last\nof them is returned.\n\nThe keys can be floats but no particular result is guaranteed\nif a key is NaN.\n\n# Examples\n\n```\nuse itertools::Itertools;\nuse itertools::MinMaxResult::{NoElements, OneElement, MinMax};\n\nlet a: [i32; 0] = [];\nassert_eq!(a.iter().position_minmax_by_key(|x| x.abs()), NoElements);\n\nlet a = [10_i32];\nassert_eq!(a.iter().position_minmax_by_key(|x| x.abs()), OneElement(0));\n\nlet a = [-3_i32, 0, 1, 5, -10];\nassert_eq!(a.iter().position_minmax_by_key(|x| x.abs()), MinMax(1, 4));\n\nlet a = [1_i32, 1, -1, -1];\nassert_eq!(a.iter().position_minmax_by_key(|x| x.abs()), MinMax(0, 3));\n```\n\n[`position_minmax`]: Self::position_minmax","links":{"`MinMaxResult`":"0:3904:1735","Self::position_minmax":"0:2804:2942"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["key",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"generic","inner":"K"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1030:440":{"id":"0:1030:440","crate_id":0,"name":"concat","span":{"filename":"src/concat_impl.rs","begin":[17,0],"end":[23,1]},"visibility":"public","docs":"Combine all an iterator's elements into one element by using [`Extend`].\n\n[`IntoIterator`]-enabled version of [`Itertools::concat`].\n\nThis combinator will extend the first item with each of the rest of the\nitems of the iterator. If the iterator is empty, the default value of\n`I::Item` is returned.\n\n```rust\nuse itertools::concat;\n \nlet input = vec![vec![1], vec![2, 3], vec![4, 5, 6]];\nassert_eq!(concat(input), vec![1, 2, 3, 4, 5, 6]);\n```","links":{"`IntoIterator`":"2:8672:152","`Itertools::concat`":"0:2643:440","`Extend`":"2:8681:2464"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}]],"output":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:234":{"id":"0:234","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[150,4],"end":[150,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::tee::Tee","name":"Tee","id":"0:4112:1705","glob":false}},"a:2:3382:225-0:3737:1655":{"id":"a:2:3382:225-0:3737:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1879":{"id":"0:1879","crate_id":0,"name":null,"span":{"filename":"src/peeking_take_while.rs","begin":[56,0],"end":[72,1]},"visibility":{"restricted":{"parent":"0:1858:1686","path":"::peeking_take_while"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"PeekingNext","id":"0:1868:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1881:4024"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1035":{"id":"0:1035","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[52,0],"end":[56,1]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"J"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["0:3745:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3218-0:3375:1633":{"id":"b:2:3218-0:3375:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOk","id":"0:3375:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:726:1849":{"id":"0:726:1849","crate_id":0,"name":"Item","span":{"filename":"src/adaptors/mod.rs","begin":[632,4],"end":[632,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:5:848-0:4401:1715":{"id":"b:5:848-0:4401:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23439:7005":{"id":"2:23439:7005","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdElement","id":"2:24076:7000","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23430:6539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2868-0:1054:1651":{"id":"b:2:2868-0:1054:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Combinations","id":"0:1054:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23112:16131":{"id":"2:23112:16131","crate_id":2,"name":"saturating_abs","span":null,"visibility":"default","docs":"Lanewise saturating absolute value, implemented in Rust.\nAs abs(), except the MIN value becomes MAX instead of itself.\n\n# Examples\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{Simd, SimdInt};\nuse core::i32::{MIN, MAX};\nlet xs = Simd::from_array([MIN, -2, 0, 3]);\nlet unsat = xs.abs();\nlet sat = xs.saturating_abs();\nassert_eq!(unsat, Simd::from_array([MIN, 2, 0, 3]));\nassert_eq!(sat, Simd::from_array([MAX, 2, 0, 3]));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:970":{"id":"0:970","crate_id":0,"name":null,"span":{"filename":"src/free.rs","begin":[28,0],"end":[28,41]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::multipeek_impl::multipeek","name":"multipeek","id":"0:1773:2989","glob":false}},"0:464:1638":{"id":"0:464:1638","crate_id":0,"name":"MapOk","span":{"filename":"src/adaptors/map.rs","begin":[68,0],"end":[68,64]},"visibility":"public","docs":"An iterator adapter to apply a transformation within a nested `Result::Ok`.\n\nSee [`.map_ok()`](crate::Itertools::map_ok) for more information.","links":{"crate::Itertools::map_ok":"0:2554:2024"},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"MapSpecialCase","id":"0:2897:3377","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"resolved_path","inner":{"name":"MapSpecialCaseFnOk","id":"0:2910:3382","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"0:4418":{"id":"0:4418","crate_id":0,"name":null,"span":{"filename":"src/unziptuple.rs","begin":[70,0],"end":[70,40]},"visibility":{"restricted":{"parent":"0:2411:1743","path":"::unziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"IT","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MultiUnzip","id":"0:2415:1745","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"}]}}],"bindings":[]}}},"for":{"kind":"generic","inner":"IT"},"items":["0:4424:1744"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3996:4024":{"id":"0:3996:4024","crate_id":0,"name":"peeking_next","span":{"filename":"src/peeking_take_while.rs","begin":[148,0],"end":[148,79]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["accept",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4478":{"id":"0:4478","crate_id":0,"name":null,"span":{"filename":"src/unziptuple.rs","begin":[75,0],"end":[75,100]},"visibility":{"restricted":{"parent":"0:2411:1743","path":"::unziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"IT","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"C"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"D"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"G"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MultiUnzip","id":"0:2415:1745","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"},{"kind":"generic","inner":"FromC"},{"kind":"generic","inner":"FromD"},{"kind":"generic","inner":"FromE"},{"kind":"generic","inner":"FromF"},{"kind":"generic","inner":"FromG"}]}}],"bindings":[]}}},"for":{"kind":"generic","inner":"IT"},"items":["0:4494:1744"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2800:2919":{"id":"0:2800:2919","crate_id":0,"name":"position_min_by","span":{"filename":"src/lib.rs","begin":[3326,4],"end":[3332,5]},"visibility":"default","docs":"Return the position of the minimum element in the iterator, as\ndetermined by the specified comparison function.\n\nIf several elements are equally minimum, the position of the\nfirst of them is returned.\n\n# Examples\n\n```\nuse itertools::Itertools;\n\nlet a: [i32; 0] = [];\nassert_eq!(a.iter().position_min_by(|x, y| x.cmp(y)), None);\n\nlet a = [-3_i32, 0, 1, 5, -10];\nassert_eq!(a.iter().position_min_by(|x, y| x.cmp(y)), Some(4));\n\nlet a = [1_i32, 1, -1, -1];\nassert_eq!(a.iter().position_min_by(|x, y| x.cmp(y)), Some(2));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["compare",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5558:23381":{"id":"1:5558:23381","crate_id":1,"name":"is_char_device","span":null,"visibility":"default","docs":"Returns `true` if this file type is a char device.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::FileTypeExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"char_device_file\")?;\n    let file_type = meta.file_type();\n    assert!(file_type.is_char_device());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"file_type_ext\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3370:216-0:1981:1693":{"id":"a:2:3370:216-0:1981:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Powerset","id":"0:1981:1693","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3755:415":{"id":"0:3755:415","crate_id":0,"name":"clone","span":{"filename":"src/combinations_with_replacement.rs","begin":[11,9],"end":[11,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CombinationsWithReplacement","id":"0:3748:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:4119:1707":{"id":"b:2:2865-0:4119:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleBuffer","id":"0:4119:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3484:566":{"id":"2:3484:566","crate_id":2,"name":"div_assign","span":null,"visibility":"default","docs":"Performs the `/=` operation.\n\n# Example\n\n```\nlet mut x: u32 = 12;\nx /= 2;\nassert_eq!(x, 6);\n```","links":{},"attrs":["#[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:5500:6520":{"id":"1:5500:6520","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5501:23357","1:5502:23358","1:5503:23359","1:5504:23360"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2870:3078":{"id":"0:2870:3078","crate_id":0,"name":"is_done","span":{"filename":"src/lib.rs","begin":[3778,4],"end":[3783,5]},"visibility":"public","docs":"Return true if `self` is `Done`, false if it is `Continue`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11209:219":{"id":"2:11209:219","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:11211:184","2:11212:3884","2:11213:3881","2:11214:21636","2:11215:21637","2:11216:761","2:11217:762"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:11200:6539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1933":{"id":"0:1933","crate_id":0,"name":null,"span":{"filename":"src/permutations.rs","begin":[96,0],"end":[165,1]},"visibility":{"restricted":{"parent":"0:1904:1688","path":"::permutations"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Permutations","id":"0:1917:1689","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1935:1849","0:1936:932","0:1939:502","0:1941:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9532:4793-0:2928:1649":{"id":"a:2:9532:4793-0:2928:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiProduct","id":"0:2928:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5056":{"id":"0:5056","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[138,0],"end":[138,50]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]","#[allow(unused_assignments)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]}}],"bindings":[]}}}},"items":["0:5069:1849","0:5070:932","0:5071:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2034:1849":{"id":"0:2034:1849","crate_id":0,"name":"Item","span":{"filename":"src/put_back_n_impl.rs","begin":[50,4],"end":[50,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:9533:4792-0:3397:1646":{"id":"a:2:9533:4792-0:3397:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3213-0:3939:1685":{"id":"b:2:3213-0:3939:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:1527:1668":{"id":"b:2:3213-0:1527:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunks","id":"0:1527:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2082:1849":{"id":"0:2082:1849","crate_id":0,"name":"Item","span":{"filename":"src/repeatn.rs","begin":[27,4],"end":[27,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"A"}}},"a:2:9532:4793-0:4075:1701":{"id":"a:2:9532:4793-0:4075:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatCall","id":"0:4075:1701","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3411:4706-0:3766:1659":{"id":"a:2:3411:4706-0:3766:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatWith","id":"0:3766:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3454:4734":{"id":"2:3454:4734","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3456:184","2:3457:565"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:254":{"id":"0:254","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[153,49],"end":[153,61]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::duplicates_impl::DuplicatesBy","name":"DuplicatesBy","id":"0:2338:1713","glob":false}},"b:2:2868-0:3407:1748":{"id":"b:2:2868-0:3407:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4735:688":{"id":"0:4735:688","crate_id":0,"name":"from","span":{"filename":"src/ziptuple.rs","begin":[130,0],"end":[130,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:737:2255":{"id":"0:737:2255","crate_id":0,"name":"HasCombination","span":{"filename":"src/adaptors/mod.rs","begin":[701,0],"end":[703,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:739:3302"],"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:824":{"id":"0:824","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[988,0],"end":[991,2]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"T"}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterMapOk","id":"0:791:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3024":{"id":"0:3024","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[415,16],"end":[415,21]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(deprecated)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Step","id":"0:3017:1648","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3026:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:0:2854-0:4401:1715":{"id":"b:0:2854-0:4401:1715","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1584:932":{"id":"0:1584:932","crate_id":0,"name":"next","span":{"filename":"src/intersperse.rs","begin":[76,4],"end":[87,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:597:1754":{"id":"0:597:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/adaptors/mod.rs","begin":[127,4],"end":[160,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:840:932":{"id":"0:840:932","crate_id":0,"name":"next","span":{"filename":"src/adaptors/mod.rs","begin":[1029,4],"end":[1038,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:0:2854-0:4119:1707":{"id":"b:0:2854-0:4119:1707","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleBuffer","id":"0:4119:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3411:4706-0:1452:1669":{"id":"a:2:3411:4706-0:1452:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupBy","id":"0:1452:1669","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4614:1744":{"id":"0:4614:1744","crate_id":0,"name":"multiunzip","span":{"filename":"src/unziptuple.rs","begin":[80,0],"end":[80,160]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"},{"kind":"generic","inner":"FromC"},{"kind":"generic","inner":"FromD"},{"kind":"generic","inner":"FromE"},{"kind":"generic","inner":"FromF"},{"kind":"generic","inner":"FromG"},{"kind":"generic","inner":"FromH"},{"kind":"generic","inner":"FromI"},{"kind":"generic","inner":"FromJ"},{"kind":"generic","inner":"FromK"},{"kind":"generic","inner":"FromL"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6238:23429":{"id":"1:6238:23429","crate_id":1,"name":"stopped_signal","span":null,"visibility":"default","docs":"If the process was stopped by a signal, returns that signal.\n\nIn other words, if `WIFSTOPPED`, this returns `WSTOPSIG`.  This is only possible if the status came from\na `wait` system call which was passed `WUNTRACED`, and was then converted into an `ExitStatus`.","links":{},"attrs":["#[stable(feature = \"unix_process_wait_more\", since = \"1.58.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1851":{"id":"0:1851","crate_id":0,"name":null,"span":{"filename":"src/peek_nth.rs","begin":[89,0],"end":[89,70]},"visibility":{"restricted":{"parent":"0:1826:1682","path":"::peek_nth"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:0:2854-0:3397:1646":{"id":"b:0:2854-0:3397:1646","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2846:2989":{"id":"0:2846:2989","crate_id":0,"name":"multipeek","span":{"filename":"src/lib.rs","begin":[3561,4],"end":[3566,5]},"visibility":"default","docs":"An iterator adaptor that allows the user to peek at multiple `.next()`\nvalues without advancing the base iterator.\n\n# Examples\n```\nuse itertools::Itertools;\n\nlet mut iter = (0..10).multipeek();\nassert_eq!(iter.peek(), Some(&0));\nassert_eq!(iter.peek(), Some(&1));\nassert_eq!(iter.peek(), Some(&2));\nassert_eq!(iter.next(), Some(0));\nassert_eq!(iter.peek(), Some(&1));\n```","links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:1537:1667":{"id":"b:2:2868-0:1537:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunk","id":"0:1537:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4434:1744":{"id":"0:4434:1744","crate_id":0,"name":"multiunzip","span":{"filename":"src/unziptuple.rs","begin":[71,0],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"},{"kind":"generic","inner":"FromC"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9532:4793-0:1883:1687":{"id":"a:2:9532:4793-0:1883:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekingTakeWhile","id":"0:1883:1687","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:2366":{"id":"0:2366","crate_id":0,"name":null,"span":{"filename":"src/unique_impl.rs","begin":[21,0],"end":[26,1]},"visibility":{"restricted":{"parent":"0:2350:1714","path":"::unique_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:4400:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3607:4622":{"id":"2:3607:4622","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3608:552"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"2:3594:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:532:1754":{"id":"0:532:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/adaptors/multi_product.rs","begin":[194,4],"end":[214,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:0:2854-0:1490:1670":{"id":"b:0:2854-0:1490:1670","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Group","id":"0:1490:1670","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:9140:16068":{"id":"1:9140:16068","crate_id":1,"name":"floor","span":null,"visibility":"default","docs":"Returns the largest integer value less than or equal to each lane.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2960:5125":{"id":"2:2960:5125","crate_id":2,"name":"clamp","span":null,"visibility":"default","docs":"Restrict a value to a certain interval.\n\nReturns `max` if `self` is greater than `max`, and `min` if `self` is\nless than `min`. Otherwise this returns `self`.\n\n# Panics\n\nPanics if `min > max`.\n\n# Examples\n\n```\nassert!((-3).clamp(-2, 1) == -2);\nassert!(0.clamp(-2, 1) == 0);\nassert!(2.clamp(-2, 1) == 1);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"clamp\", since = \"1.50.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["min",{"kind":"generic","inner":"Self"}],["max",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4816:3067":{"id":"0:4816:3067","crate_id":0,"name":"next_back","span":{"filename":"src/ziptuple.rs","begin":[132,0],"end":[132,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2590:2173":{"id":"0:2590:2173","crate_id":0,"name":"dedup_with_count","span":{"filename":"src/lib.rs","begin":[1216,4],"end":[1221,5]},"visibility":"default","docs":"Remove duplicates from sections of consecutive identical elements, while keeping a count of\nhow many repeated elements were present.\nIf the iterator is sorted, all elements will be unique.\n\nIterator element type is `(usize, Self::Item)`.\n\nThis iterator is *fused*.\n\n```\nuse itertools::Itertools;\n\nlet data = vec!['a', 'a', 'b', 'c', 'c', 'b', 'b'];\nitertools::assert_equal(data.into_iter().dedup_with_count(),\n                        vec![(2, 'a'), (1, 'b'), (2, 'c'), (2, 'b')]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"DedupWithCount","id":"0:423:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8912:5136":{"id":"2:8912:5136","crate_id":2,"name":"skip_while","span":null,"visibility":"default","docs":"Creates an iterator that [`skip`]s elements based on a predicate.\n\n[`skip`]: Iterator::skip\n\n`skip_while()` takes a closure as an argument. It will call this\nclosure on each element of the iterator, and ignore elements\nuntil it returns `false`.\n\nAfter `false` is returned, `skip_while()`'s job is over, and the\nrest of the elements are yielded.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [-1i32, 0, 1];\n\nlet mut iter = a.iter().skip_while(|x| x.is_negative());\n\nassert_eq!(iter.next(), Some(&0));\nassert_eq!(iter.next(), Some(&1));\nassert_eq!(iter.next(), None);\n```\n\nBecause the closure passed to `skip_while()` takes a reference, and many\niterators iterate over references, this leads to a possibly confusing\nsituation, where the type of the closure argument is a double reference:\n\n```\nlet a = [-1, 0, 1];\n\nlet mut iter = a.iter().skip_while(|x| **x < 0); // need two *s!\n\nassert_eq!(iter.next(), Some(&0));\nassert_eq!(iter.next(), Some(&1));\nassert_eq!(iter.next(), None);\n```\n\nStopping after an initial `false`:\n\n```\nlet a = [-1, 0, 1, -2];\n\nlet mut iter = a.iter().skip_while(|x| **x < 0);\n\nassert_eq!(iter.next(), Some(&0));\nassert_eq!(iter.next(), Some(&1));\n\n// while this would have been false, since we already got a false,\n// skip_while() isn't used any more\nassert_eq!(iter.next(), Some(&-2));\n\nassert_eq!(iter.next(), None);\n```","links":{"Iterator::skip":"2:8919:1326"},"attrs":["#[doc(alias = \"drop_while\")]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SkipWhile","id":"2:47075:4669","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:116":{"id":"0:116","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[109,8],"end":[109,14]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::Update","name":"Update","id":"0:3397:1646","glob":false}},"a:2:3382:225-0:1981:1693":{"id":"a:2:3382:225-0:1981:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Powerset","id":"0:1981:1693","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:23391:12757":{"id":"2:23391:12757","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23392:9452","2:23393:16100","2:23394:16101"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23384:6539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:4103:1449":{"id":"2:4103:1449","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":"Gets the `TypeId` of `self`.\n\n# Examples\n\n```\nuse std::any::{Any, TypeId};\n\nfn is_string(s: &dyn Any) -> bool {\n    TypeId::of::<String>() == s.type_id()\n}\n\nassert_eq!(is_string(&0), false);\nassert_eq!(is_string(&\"cookie monster\".to_string()), true);\n```","links":{},"attrs":["#[stable(feature = \"get_type_id\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46337:7060","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1023:2708":{"id":"0:1023:2708","crate_id":0,"name":"sorted","span":{"filename":"src/free.rs","begin":[280,0],"end":[285,1]},"visibility":"public","docs":"Sort all iterator elements into a new iterator in ascending order.\n\n[`IntoIterator`] enabled version of [`Itertools::sorted`].\n\n```\nuse itertools::sorted;\nuse itertools::assert_equal;\n\nassert_equal(sorted(\"rust\".chars()), \"rstu\".chars());\n```","links":{"`Itertools::sorted`":"0:2710:2708","`IntoIterator`":"2:8672:152"},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"alloc::vec::IntoIter","id":"5:7484:1621","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[170,0],"end":[170,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::cons_tuples_impl::cons_tuples","name":"cons_tuples","id":"0:1038:1729","glob":false}},"0:1745:502":{"id":"0:1745:502","crate_id":0,"name":"count","span":{"filename":"src/merge_join.rs","begin":[100,4],"end":[117,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4074:667":{"id":"0:4074:667","crate_id":0,"name":"fmt","span":{"filename":"src/repeatn.rs","begin":[7,16],"end":[7,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:4155:1709":{"id":"b:2:2868-0:4155:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CircularTupleWindows","id":"0:4155:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:4155:1709":{"id":"b:2:2865-0:4155:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CircularTupleWindows","id":"0:4155:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13714:61708":{"id":"2:13714:61708","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4065:1699":{"id":"0:4065:1699","crate_id":0,"name":"RepeatN","span":{"filename":"src/repeatn.rs","begin":[8,0],"end":[11,1]},"visibility":"public","docs":"An iterator that produces *n* repetitions of an element.\n\nSee [`repeat_n()`](crate::repeat_n) for more information.","links":{"crate::repeat_n":"0:2078:1738"},"attrs":["#[must_use = \"iterators are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:4065:1699","a:2:9532:4793-0:4065:1699","a:2:3382:225-0:4065:1699","a:2:3370:216-0:4065:1699","a:2:3411:4706-0:4065:1699","b:0:2854-0:4065:1699","b:2:8676-0:4065:1699","b:2:4104-0:4065:1699","b:2:2865-0:4065:1699","b:2:3203-0:4065:1699","b:2:3207-0:4065:1699","b:2:3218-0:4065:1699","b:2:2868-0:4065:1699","b:2:3213-0:4065:1699","b:5:848-0:4065:1699","0:4069","0:4072","0:2080","0:2085","0:2088","0:2090"]}},"a:2:9532:4793-0:4401:1715":{"id":"a:2:9532:4793-0:4401:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2568:1660":{"id":"0:2568:1660","crate_id":0,"name":"flatten_ok","span":{"filename":"src/lib.rs","begin":[922,4],"end":[927,5]},"visibility":"default","docs":"Return an iterator adaptor that flattens every `Result::Ok` value into\na series of `Result::Ok` values. `Result::Err` values are unchanged.\n \nThis is useful when you have some common error type for your crate and\nneed to propagate it upwards, but the `Result::Ok` case needs to be flattened.\n\n```\nuse itertools::Itertools;\n\nlet input = vec![Ok(0..2), Err(false), Ok(2..4)];\nlet it = input.iter().cloned().flatten_ok();\nitertools::assert_equal(it.clone(), vec![Ok(0), Ok(1), Err(false), Ok(2), Ok(3)]);\n \n// This can also be used to propagate errors when collecting.\nlet output_result: Result<Vec<i32>, bool> = it.collect();\nassert_eq!(output_result, Err(false));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"FlattenOk","id":"0:1198:1661","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2178":{"id":"0:2178","crate_id":0,"name":null,"span":{"filename":"src/tee.rs","begin":[75,0],"end":[78,2]},"visibility":{"restricted":{"parent":"0:2158:1704","path":"::tee"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tee","id":"0:4112:1705","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4977":{"id":"0:4977","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[136,0],"end":[136,44]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"}]}}],"bindings":[]}}}},"items":["0:4988:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2769:1734":{"id":"0:2769:1734","crate_id":0,"name":"minmax","span":{"filename":"src/lib.rs","begin":[3127,4],"end":[3131,5]},"visibility":"default","docs":"Return the minimum and maximum elements in the iterator.\n\nThe return type `MinMaxResult` is an enum of three variants:\n\n- `NoElements` if the iterator is empty.\n- `OneElement(x)` if the iterator has exactly one element.\n- `MinMax(x, y)` is returned otherwise, where `x <= y`. Two\n   values are equal if and only if there is more than one\n   element in the iterator and all elements are equal.\n\nOn an iterator of length `n`, `minmax` does `1.5 * n` comparisons,\nand so is faster than calling `min` and `max` separately which does\n`2 * n` comparisons.\n\n# Examples\n\n```\nuse itertools::Itertools;\nuse itertools::MinMaxResult::{NoElements, OneElement, MinMax};\n\nlet a: [i32; 0] = [];\nassert_eq!(a.iter().minmax(), NoElements);\n\nlet a = [1];\nassert_eq!(a.iter().minmax(), OneElement(&1));\n\nlet a = [1, 2, 3, 4, 5];\nassert_eq!(a.iter().minmax(), MinMax(&1, &5));\n\nlet a = [1, 1, 1, 1];\nassert_eq!(a.iter().minmax(), MinMax(&1, &1));\n```\n\nThe elements can be floats but no particular result is guaranteed\nif an element is NaN.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4699:1849":{"id":"0:4699:1849","crate_id":0,"name":"Item","span":{"filename":"src/ziptuple.rs","begin":[128,0],"end":[128,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]}}},"2:13348:5418":{"id":"2:13348:5418","crate_id":2,"name":"Searcher","span":null,"visibility":"default","docs":"Associated searcher for this pattern","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"2:13355:5418","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"b:2:4104-0:2992:1634":{"id":"b:2:4104-0:2992:1634","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Product","id":"0:2992:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2845:2981":{"id":"0:2845:2981","crate_id":0,"name":"at_most_one","span":{"filename":"src/lib.rs","begin":[3527,4],"end":[3544,5]},"visibility":"default","docs":"If the iterator yields no elements, Ok(None) will be returned. If the iterator yields\nexactly one element, that element will be returned, otherwise an error will be returned\ncontaining an iterator that has the same output as the input iterator.\n\nThis provides an additional layer of validation over just calling `Iterator::next()`.\nIf your assumption that there should be at most one element yielded is false this provides\nthe opportunity to detect and handle that, preventing errors at a distance.\n\n# Examples\n```\nuse itertools::Itertools;\n\nassert_eq!((0..10).filter(|&x| x == 2).at_most_one().unwrap(), Some(2));\nassert!((0..10).filter(|&x| x > 1 && x < 4).at_most_one().unwrap_err().eq(2..4));\nassert!((0..10).filter(|&x| x > 1 && x < 5).at_most_one().unwrap_err().eq(2..5));\nassert_eq!((0..10).filter(|&_| false).at_most_one().unwrap(), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:129":{"id":"0:129","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[116,4],"end":[116,46]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::combinations::Combinations","name":"Combinations","id":"0:1054:1651","glob":false}},"0:2710:2708":{"id":"0:2710:2708","crate_id":0,"name":"sorted","span":{"filename":"src/lib.rs","begin":[2593,4],"end":[2602,5]},"visibility":"default","docs":"Sort all iterator elements into a new iterator in ascending order.\n\n**Note:** This consumes the entire iterator, uses the\n[`slice::sort`] method and returns the result as a new\niterator that owns its elements.\n\nThe sorted iterator, if directly collected to a `Vec`, is converted\nwithout any extra copying or allocation cost.\n\n```\nuse itertools::Itertools;\n\n// sort the letters of the text in ascending order\nlet text = \"bdacfe\";\nitertools::assert_equal(text.chars().sorted(),\n                        \"abcdef\".chars());\n```","links":{"`slice::sort`":"5:5885:2709"},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"alloc::vec::IntoIter","id":"5:7484:1621","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2460:1849":{"id":"0:2460:1849","crate_id":0,"name":"Item","span":{"filename":"src/zip_eq_impl.rs","begin":[41,4],"end":[41,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]}}},"2:9101:422":{"id":"2:9101:422","crate_id":2,"name":"cmp","span":null,"visibility":"default","docs":"[Lexicographically](Ord#lexicographical-comparison) compares the elements of this [`Iterator`] with those\nof another.\n\n# Examples\n\n```\nuse std::cmp::Ordering;\n\nassert_eq!([1].iter().cmp([1].iter()), Ordering::Equal);\nassert_eq!([1].iter().cmp([1, 2].iter()), Ordering::Less);\nassert_eq!([1, 2].iter().cmp([1].iter()), Ordering::Greater);\n```","links":{"`Iterator`":"2:8873:159","Ord#lexicographical-comparison":"2:2956:180"},"attrs":["#[stable(feature = \"iter_order\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:845:5158":{"id":"5:845:5158","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":"The resulting type after obtaining ownership.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:1981:1693":{"id":"0:1981:1693","crate_id":0,"name":"Powerset","span":{"filename":"src/powerset.rs","begin":[14,0],"end":[18,1]},"visibility":"public","docs":"An iterator to iterate through the powerset of the elements from an iterator.\n\nSee [`.powerset()`](crate::Itertools::powerset) for more\ninformation.","links":{"crate::Itertools::powerset":"0:2612:1692"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:1981:1693","a:2:9532:4793-0:1981:1693","a:2:3382:225-0:1981:1693","a:2:3370:216-0:1981:1693","a:2:3411:4706-0:1981:1693","b:0:2854-0:1981:1693","b:2:8676-0:1981:1693","b:2:4104-0:1981:1693","b:2:2865-0:1981:1693","b:2:3203-0:1981:1693","b:2:3207-0:1981:1693","b:2:3218-0:1981:1693","b:2:2868-0:1981:1693","b:2:3213-0:1981:1693","b:5:848-0:1981:1693","0:1985","0:1987","0:1991","0:1997"]}},"2:3542:4752":{"id":"2:3542:4752","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3544:1253"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:615:3247":{"id":"0:615:3247","crate_id":0,"name":"last","span":{"filename":"src/adaptors/mod.rs","begin":[236,4],"end":[238,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3950:667":{"id":"0:3950:667","crate_id":0,"name":"fmt","span":{"filename":"src/pad_tail.rs","begin":[23,4],"end":[23,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"::std::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4134":{"id":"0:4134","crate_id":0,"name":null,"span":{"filename":"src/tuple_impl.rs","begin":[80,9],"end":[80,14]},"visibility":{"restricted":{"parent":"0:2180:1706","path":"::tuple_impl"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"HomogeneousTuple","id":"0:2196:1727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Buffer","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tuples","id":"0:4129:1710","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:4137:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3630:2582":{"id":"0:3630:2582","crate_id":0,"name":"fold","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["accum",{"kind":"generic","inner":"Acc"}],["f",{"kind":"generic","inner":"Fold"}]],"output":{"kind":"generic","inner":"Acc"},"c_variadic":false},"generics":{"params":[{"name":"Acc","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Fold","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Fold"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Acc"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"generic","inner":"Acc"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3883:3962":{"id":"0:3883:3962","crate_id":0,"name":"KMergeByLt","span":{"filename":"src/kmerge_impl.rs","begin":[114,0],"end":[114,22]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":[]}},"0:1535:932":{"id":"0:1535:932","crate_id":0,"name":"next","span":{"filename":"src/groupbylazy.rs","begin":[524,4],"end":[535,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3382:225-0:3951:1683":{"id":"a:2:3382:225-0:3951:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4963:1849":{"id":"0:4963:1849","crate_id":0,"name":"Item","span":{"filename":"src/ziptuple.rs","begin":[136,0],"end":[136,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"C"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"D"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"E"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"G"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"H"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]}}},"a:2:3382:225-0:4058:1697":{"id":"a:2:3382:225-0:4058:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:379:1643":{"id":"0:379:1643","crate_id":0,"name":"Coalesce","span":{"filename":"src/adaptors/coalesce.rs","begin":[90,0],"end":[90,66]},"visibility":"public","docs":"An iterator adaptor that may join together adjacent elements.\n\nSee [`.coalesce()`](crate::Itertools::coalesce) for more information.","links":{"crate::Itertools::coalesce":"0:2585:2153"},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"CoalesceBy","id":"0:343:3340","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"2:23148:16128":{"id":"2:23148:16128","crate_id":2,"name":"reduce_max","span":null,"visibility":"default","docs":"Returns the maximum lane in the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdUint","id":"2:23142:7061","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:609":{"id":"0:609","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[215,0],"end":[274,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:611:1849","0:612:932","0:613:1754","0:614:502","0:615:3247","0:616:2437","0:617:283","0:619:2582"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:113":{"id":"0:113","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[108,8],"end":[108,17]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::Positions","name":"Positions","id":"0:3386:1645","glob":false}},"b:2:2865-0:4112:1705":{"id":"b:2:2865-0:4112:1705","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tee","id":"0:4112:1705","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1816":{"id":"0:1816","crate_id":0,"name":null,"span":{"filename":"src/pad_tail.rs","begin":[70,0],"end":[85,1]},"visibility":{"restricted":{"parent":"0:1793:1684","path":"::pad_tail"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"primitive","inner":"usize"}],"output":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:1819:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4104-0:709:1641":{"id":"b:2:4104-0:709:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TakeWhileRef","id":"0:709:1641","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4627:1564":{"id":"0:4627:1564","crate_id":0,"name":"0","span":{"filename":"src/with_position.rs","begin":[44,9],"end":[44,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"a:2:9532:4793-0:4644:1720":{"id":"a:2:9532:4793-0:4644:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3007:1636":{"id":"0:3007:1636","crate_id":0,"name":"Batching","span":{"filename":"src/adaptors/mod.rs","begin":[381,0],"end":[384,1]},"visibility":"public","docs":"A “meta iterator adaptor”. Its closure receives a reference to the iterator\nand may pick off as many elements as it likes, to produce the next iterator element.\n\nIterator element type is *X*, if the return type of `F` is *Option\\<X\\>*.\n\nSee [`.batching()`](crate::Itertools::batching) for more information.","links":{"crate::Itertools::batching":"0:2532:1901"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:3007:1636","a:2:9532:4793-0:3007:1636","a:2:3382:225-0:3007:1636","a:2:3370:216-0:3007:1636","a:2:3411:4706-0:3007:1636","b:0:2854-0:3007:1636","b:2:8676-0:3007:1636","b:2:4104-0:3007:1636","b:2:2865-0:3007:1636","b:2:3203-0:3007:1636","b:2:3207-0:3007:1636","b:2:3218-0:3007:1636","b:2:2868-0:3007:1636","b:2:3213-0:3007:1636","b:5:848-0:3007:1636","0:3012","0:640","0:646"]}},"0:4895":{"id":"0:4895","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[135,0],"end":[135,41]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"}]}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"C"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"D"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"E"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"G"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"H"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}]}}],"bindings":[]}}}},"items":["0:4905:688"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2502:3067":{"id":"0:2502:3067","crate_id":0,"name":"next_back","span":{"filename":"src/zip_longest.rs","begin":[60,4],"end":[72,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9094:4300":{"id":"2:9094:4300","crate_id":2,"name":"cycle","span":null,"visibility":"default","docs":"Repeats an iterator endlessly.\n\nInstead of stopping at [`None`], the iterator will instead start again,\nfrom the beginning. After iterating again, it will start at the\nbeginning again. And again. And again. Forever. Note that in case the\noriginal iterator is empty, the resulting iterator will also be empty.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nlet mut it = a.iter().cycle();\n\nassert_eq!(it.next(), Some(&1));\nassert_eq!(it.next(), Some(&2));\nassert_eq!(it.next(), Some(&3));\nassert_eq!(it.next(), Some(&1));\nassert_eq!(it.next(), Some(&2));\nassert_eq!(it.next(), Some(&3));\nassert_eq!(it.next(), Some(&1));\n```","links":{"`None`":"2:47811:177"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Cycle","id":"2:46935:4276","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:2982:1635":{"id":"a:2:3411:4706-0:2982:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:926:3309":{"id":"0:926:3309","crate_id":0,"name":"into","span":{"filename":"src/either_or_both.rs","begin":[247,4],"end":[253,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Either","id":"20:216:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4150:415":{"id":"0:4150:415","crate_id":0,"name":"clone","span":{"filename":"src/tuple_impl.rs","begin":[137,9],"end":[137,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TupleWindows","id":"0:4142:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:4792-0:674:1640":{"id":"a:2:9533:4792-0:674:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeBy","id":"0:674:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5114:667":{"id":"0:5114:667","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[3761,22],"end":[3761,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4516":{"id":"0:4516","crate_id":0,"name":null,"span":{"filename":"src/unziptuple.rs","begin":[77,0],"end":[77,124]},"visibility":{"restricted":{"parent":"0:2411:1743","path":"::unziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"IT","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"C"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"D"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"G"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"H"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MultiUnzip","id":"0:2415:1745","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"},{"kind":"generic","inner":"FromC"},{"kind":"generic","inner":"FromD"},{"kind":"generic","inner":"FromE"},{"kind":"generic","inner":"FromF"},{"kind":"generic","inner":"FromG"},{"kind":"generic","inner":"FromH"},{"kind":"generic","inner":"FromI"}]}}],"bindings":[]}}},"for":{"kind":"generic","inner":"IT"},"items":["0:4536:1744"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3218-0:1513:1666":{"id":"b:2:3218-0:1513:1666","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoChunks","id":"0:1513:1666","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3218-0:2968:1631":{"id":"b:2:3218-0:2968:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InterleaveShortest","id":"0:2968:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23056:16107":{"id":"2:23056:16107","crate_id":2,"name":"Bits","span":null,"visibility":"default","docs":"Bit representation of this SIMD vector type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"2:3411:4706":{"id":"2:3411:4706","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3480:903":{"id":"2:3480:903","crate_id":2,"name":"mul_assign","span":null,"visibility":"default","docs":"Performs the `*=` operation.\n\n# Example\n\n```\nlet mut x: u32 = 12;\nx *= 2;\nassert_eq!(x, 24);\n```","links":{},"attrs":["#[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:12776:7355":{"id":"2:12776:7355","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12777:1849","2:12778:23115"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13813:27294":{"id":"2:13813:27294","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15876:4439","self::pattern":"2:13336:4565"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:674:1640":{"id":"b:2:3207-0:674:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeBy","id":"0:674:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6237:23428":{"id":"1:6237:23428","crate_id":1,"name":"core_dumped","span":null,"visibility":"default","docs":"If the process was terminated by a signal, says whether it dumped core.","links":{},"attrs":["#[stable(feature = \"unix_process_wait_more\", since = \"1.58.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:9123:801":{"id":"2:9123:801","crate_id":2,"name":"le","span":null,"visibility":"default","docs":"Determines if the elements of this [`Iterator`] are [lexicographically](Ord#lexicographical-comparison)\nless or equal to those of another.\n\n# Examples\n\n```\nassert_eq!([1].iter().le([1].iter()), true);\nassert_eq!([1].iter().le([1, 2].iter()), true);\nassert_eq!([1, 2].iter().le([1].iter()), false);\nassert_eq!([1, 2].iter().le([1, 2].iter()), true);\n```","links":{"Ord#lexicographical-comparison":"2:2956:180","`Iterator`":"2:8873:159"},"attrs":["#[stable(feature = \"iter_order\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:4058:1697":{"id":"b:2:2868-0:4058:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:24076:7000":{"id":"2:24076:7000","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:24077:7004"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:24072:6539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3216:128":{"id":"2:3216:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"a:2:9532:4793-0:3737:1655":{"id":"a:2:9532:4793-0:3737:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:9035:5147":{"id":"2:9035:5147","crate_id":2,"name":"rposition","span":null,"visibility":"default","docs":"Searches for an element in an iterator from the right, returning its\nindex.\n\n`rposition()` takes a closure that returns `true` or `false`. It applies\nthis closure to each element of the iterator, starting from the end,\nand if one of them returns `true`, then `rposition()` returns\n[`Some(index)`]. If all of them return `false`, it returns [`None`].\n\n`rposition()` is short-circuiting; in other words, it will stop\nprocessing as soon as it finds a `true`.\n\n[`Some(index)`]: Some\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nassert_eq!(a.iter().rposition(|&x| x == 3), Some(2));\n\nassert_eq!(a.iter().rposition(|&x| x == 5), None);\n```\n\nStopping at the first `true`:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter();\n\nassert_eq!(iter.rposition(|&x| x == 2), Some(1));\n\n// we can still use `iter`, as there are more elements.\nassert_eq!(iter.next(), Some(&1));\n```","links":{"Some":"2:47813:220","`None`":"2:47811:177"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10562:110":{"id":"2:10562:110","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10563:667"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3801:667":{"id":"0:3801:667","crate_id":0,"name":"fmt","span":{"filename":"src/format.rs","begin":[112,0],"end":[113,70]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:3904:1735":{"id":"b:2:3218-0:3904:1735","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4097":{"id":"0:4097","crate_id":0,"name":null,"span":{"filename":"src/sources.rs","begin":[139,9],"end":[139,14]},"visibility":{"restricted":{"parent":"0:2115:1700","path":"::sources"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"St","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iterate","id":"0:4092:1703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:4100:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1814:932":{"id":"0:1814:932","crate_id":0,"name":"next","span":{"filename":"src/pad_tail.rs","begin":[46,4],"end":[62,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3380":{"id":"0:3380","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[837,9],"end":[837,14]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOk","id":"0:3375:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:3383:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4104-0:2430:1718":{"id":"b:2:4104-0:2430:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WithPosition","id":"0:2430:1718","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3203-0:4155:1709":{"id":"b:2:3203-0:4155:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CircularTupleWindows","id":"0:4155:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:171":{"id":"0:171","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[126,69],"end":[126,74]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::groupbylazy::Group","name":"Group","id":"0:1490:1670","glob":false}},"b:2:3218-0:3397:1646":{"id":"b:2:3218-0:3397:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3218-0:4119:1707":{"id":"b:2:3218-0:4119:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleBuffer","id":"0:4119:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3870:415":{"id":"0:3870:415","crate_id":0,"name":"clone","span":{"filename":"src/intersperse.rs","begin":[49,9],"end":[49,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"ElemF"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9532:4793-0:4155:1709":{"id":"a:2:9532:4793-0:4155:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CircularTupleWindows","id":"0:4155:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2992:1634":{"id":"0:2992:1634","crate_id":0,"name":"Product","span":{"filename":"src/adaptors/mod.rs","begin":[284,0],"end":[291,1]},"visibility":"public","docs":"An iterator adaptor that iterates over the cartesian product of\nthe element sets of two iterators `I` and `J`.\n\nIterator element type is `(I::Item, J::Item)`.\n\nSee [`.cartesian_product()`](crate::Itertools::cartesian_product) for more information.","links":{"crate::Itertools::cartesian_product":"0:2582:1772"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:2992:1634","a:2:9532:4793-0:2992:1634","a:2:3382:225-0:2992:1634","a:2:3370:216-0:2992:1634","a:2:3411:4706-0:2992:1634","b:0:2854-0:2992:1634","b:2:8676-0:2992:1634","b:2:4104-0:2992:1634","b:2:2865-0:2992:1634","b:2:3203-0:2992:1634","b:2:3207-0:2992:1634","b:2:3218-0:2992:1634","b:2:2868-0:2992:1634","b:2:3213-0:2992:1634","b:5:848-0:2992:1634","0:2999","0:3003","0:625","0:637"]}},"5:6178:62368":{"id":"5:6178:62368","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8479:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8479:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9113:611":{"id":"2:9113:611","crate_id":2,"name":"eq","span":null,"visibility":"default","docs":"Determines if the elements of this [`Iterator`] are equal to those of\nanother.\n\n# Examples\n\n```\nassert_eq!([1].iter().eq([1].iter()), true);\nassert_eq!([1].iter().eq([1, 2].iter()), false);\n```","links":{"`Iterator`":"2:8873:159"},"attrs":["#[stable(feature = \"iter_order\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2338:1713":{"id":"0:2338:1713","crate_id":0,"name":"DuplicatesBy","span":{"filename":"src/duplicates_impl.rs","begin":[191,0],"end":[191,79]},"visibility":"public","docs":"An iterator adapter to filter for duplicate elements.\n\nSee [`.duplicates_by()`](crate::Itertools::duplicates_by) for more information.","links":{"crate::Itertools::duplicates_by":"0:2594:2193"},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"private::DuplicatesBy","id":"0:4344:1713","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"resolved_path","inner":{"name":"private::ByFn","id":"0:2309:4327","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"0:2612:1692":{"id":"0:2612:1692","crate_id":0,"name":"powerset","span":{"filename":"src/lib.rs","begin":[1592,4],"end":[1597,5]},"visibility":"default","docs":"Return an iterator that iterates through the powerset of the elements from an\niterator.\n\nIterator element type is `Vec<Self::Item>`. The iterator produces a new `Vec`\nper iteration, and clones the iterator elements.\n\nThe powerset of a set contains all subsets including the empty set and the full\ninput set. A powerset has length _2^n_ where _n_ is the length of the input\nset.\n\nEach `Vec` produced by this iterator represents a subset of the elements\nproduced by the source iterator.\n\n```\nuse itertools::Itertools;\n\nlet sets = (1..4).powerset().collect::<Vec<_>>();\nitertools::assert_equal(sets, vec![\n    vec![],\n    vec![1],\n    vec![2],\n    vec![3],\n    vec![1, 2],\n    vec![1, 3],\n    vec![2, 3],\n    vec![1, 2, 3],\n]);\n```","links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Powerset","id":"0:1981:1693","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:159":{"id":"0:159","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[126,33],"end":[126,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::groupbylazy::IntoChunks","name":"IntoChunks","id":"0:1513:1666","glob":false}},"2:3171:75":{"id":"2:3171:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3173:312"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:4495:15665":{"id":"1:4495:15665","crate_id":1,"name":"has_data_left","span":null,"visibility":"default","docs":"Check if the underlying `Read` has any data left to be read.\n\nThis function may fill the buffer to check for data,\nso this functions returns `Result<bool>`, not `bool`.\n\nDefault implementation calls `fill_buf` and checks that\nreturned slice is empty (which means that there is no data left,\nsince EOF is reached).\n\nExamples\n\n```\n#![feature(buf_read_has_data_left)]\nuse std::io;\nuse std::io::prelude::*;\n\nlet stdin = io::stdin();\nlet mut stdin = stdin.lock();\n\nwhile stdin.has_data_left().unwrap() {\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    // work with line\n    println!(\"{line:?}\");\n}\n```","links":{},"attrs":["#[unstable(feature = \"buf_read_has_data_left\", reason = \"recently added\",\nissue = \"86423\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"bool"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:4792-0:1452:1669":{"id":"a:2:9533:4792-0:1452:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupBy","id":"0:1452:1669","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:95":{"id":"0:95","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[102,8],"end":[102,13]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::Merge","name":"Merge","id":"0:668:1639","glob":false}},"2:8668:137":{"id":"2:8668:137","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8670:691"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9532:4793-0:2992:1634":{"id":"a:2:9532:4793-0:2992:1634","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Product","id":"0:2992:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1364:2678":{"id":"0:1364:2678","crate_id":0,"name":"product","span":{"filename":"src/grouping_map.rs","begin":[530,4],"end":[534,5]},"visibility":"public","docs":"Groups elements from the `GroupingMap` source by key and multiply them.\n \nThis is just a shorthand for `self.fold_first(|acc, _, val| acc * val)`.\nIt is more limited than `Iterator::product` since it doesn't use the `Product` trait.\n \nReturns a `HashMap` associating the key of each group with the product of that group's elements.\n \n```\nuse itertools::Itertools;\n \nlet lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()\n    .into_grouping_map_by(|&n| n % 3)\n    .product();\n \nassert_eq!(lookup[&0], 3 * 9 * 12);\nassert_eq!(lookup[&1], 1 * 4 * 7);\nassert_eq!(lookup[&2], 5 * 8);\nassert_eq!(lookup.len(), 3);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Mul","id":"2:3449:3712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"V"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:174":{"id":"0:174","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[126,76],"end":[126,82]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::groupbylazy::Groups","name":"Groups","id":"0:1476:1671","glob":false}},"2:10579:192":{"id":"2:10579:192","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10580:667"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2083:932":{"id":"0:2083:932","crate_id":0,"name":"next","span":{"filename":"src/repeatn.rs","begin":[29,4],"end":[37,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:3951:1683":{"id":"b:2:3213-0:3951:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6175:62367":{"id":"5:6175:62367","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8479:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8479:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5117":{"id":"0:5117","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3761,29],"end":[3761,31]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4989":{"id":"0:4989","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[137,0],"end":[137,47]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"}]}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"C"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"D"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"E"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"G"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"H"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"K"},"trait":{"name":"","id":"2:8672:152","args":null}}}]}}],"bindings":[]}}}},"items":["0:5001:688"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3669:3067":{"id":"0:3669:3067","crate_id":0,"name":"next_back","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1349:3811":{"id":"0:1349:3811","crate_id":0,"name":"min_by_key","span":{"filename":"src/grouping_map.rs","begin":[366,4],"end":[371,5]},"visibility":"public","docs":"Groups elements from the `GroupingMap` source by key and finds the element of each group\nthat gives the minimum from the specified function.\n \nIf several elements are equally minimum, the first element is picked.\n \nReturns a `HashMap` associating the key of each group with the minimum of that group's elements.\n \n```\nuse itertools::Itertools;\n \nlet lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()\n    .into_grouping_map_by(|&n| n % 3)\n    .min_by_key(|_key, &val| val % 4);\n \nassert_eq!(lookup[&0], 12);\nassert_eq!(lookup[&1], 4);\nassert_eq!(lookup[&2], 8);\nassert_eq!(lookup.len(), 3);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CK","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"K"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"V"}}}],"output":{"kind":"generic","inner":"CK"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"CK"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3370:216-0:1452:1669":{"id":"a:2:3370:216-0:1452:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupBy","id":"0:1452:1669","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1510:932":{"id":"0:1510:932","crate_id":0,"name":"next","span":{"filename":"src/groupbylazy.rs","begin":[419,4],"end":[424,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23152:16137":{"id":"2:23152:16137","crate_id":2,"name":"reduce_xor","span":null,"visibility":"default","docs":"Returns the cumulative bitwise \"xor\" across the lanes of the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdUint","id":"2:23142:7061","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:5:848-0:4142:1708":{"id":"b:5:848-0:4142:1708","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleWindows","id":"0:4142:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[99,8],"end":[99,16]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::Batching","name":"Batching","id":"0:3007:1636","glob":false}},"1:4475:4961":{"id":"1:4475:4961","crate_id":1,"name":"write_fmt","span":null,"visibility":"default","docs":"Writes a formatted string into this writer, returning any error\nencountered.\n\nThis method is primarily used to interface with the\n[`format_args!()`] macro, and it is rare that this should\nexplicitly be called. The [`write!()`] macro should be favored to\ninvoke this method instead.\n\nThis function internally uses the [`write_all`] method on\nthis trait and hence will continuously write data so long as no errors\nare received. This also means that partial writes are not indicated in\nthis signature.\n\n[`write_all`]: Write::write_all\n\n# Errors\n\nThis function will return any I/O error reported while formatting.\n\n# Examples\n\n```no_run\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() -> std::io::Result<()> {\n    let mut buffer = File::create(\"foo.txt\")?;\n\n    // this call\n    write!(buffer, \"{:.*}\", 2, 1.234567)?;\n    // turns into this:\n    buffer.write_fmt(format_args!(\"{:.*}\", 2, 1.234567))?;\n    Ok(())\n}\n```","links":{"`write!()`":"2:14:2499","Write::write_all":"1:4473:15627","`format_args!()`":"2:21:679"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"resolved_path","inner":{"name":"Arguments","id":"2:48946:73","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1551:932":{"id":"0:1551:932","crate_id":0,"name":"next","span":{"filename":"src/groupbylazy.rs","begin":[565,4],"end":[570,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1929":{"id":"0:1929","crate_id":0,"name":null,"span":{"filename":"src/permutations.rs","begin":[55,0],"end":[60,1]},"visibility":{"restricted":{"parent":"0:1904:1688","path":"::permutations"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Permutations","id":"0:1917:1689","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:4034:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4777":{"id":"0:4777","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[131,0],"end":[131,29]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"}]}}],"bindings":[]}}}},"items":["0:4783:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2868-0:4037:1691":{"id":"b:2:2868-0:4037:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ProcessResults","id":"0:4037:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3515:184":{"id":"2:3515:184","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `<<` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"b:2:3207-0:4142:1708":{"id":"b:2:3207-0:4142:1708","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleWindows","id":"0:4142:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5522:6523":{"id":"1:5522:6523","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5523:9944","1:5524:23368","1:5525:8505","1:5526:23369","1:5527:6858","1:5528:6859","1:5529:23370","1:5530:1322","1:5531:23371","1:5532:23372","1:5533:23373","1:5534:23374","1:5535:23375","1:5536:23376","1:5537:23377","1:5538:23378"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9043:2321":{"id":"2:9043:2321","crate_id":2,"name":"min","span":null,"visibility":"default","docs":"Returns the minimum element of an iterator.\n\nIf several elements are equally minimum, the first element is returned.\nIf the iterator is empty, [`None`] is returned.\n\nNote that [`f32`]/[`f64`] doesn't implement [`Ord`] due to NaN being\nincomparable. You can work around this by using [`Iterator::reduce`]:\n```\nassert_eq!(\n    [2.4, f32::NAN, 1.3]\n        .into_iter()\n        .reduce(f32::min)\n        .unwrap(),\n    1.3\n);\n```\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\nlet b: Vec<u32> = Vec::new();\n\nassert_eq!(a.iter().min(), Some(&1));\nassert_eq!(b.iter().min(), None);\n```","links":{"`f64`":"1:15887:4447","`None`":"2:47811:177","`f32`":"1:15886:4446","`Iterator::reduce`":"2:8983:3500","`Ord`":"2:2956:180"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:625":{"id":"0:625","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[309,0],"end":[365,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Product","id":"0:2992:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["0:628:1849","0:629:932","0:631:1754","0:633:2582"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3218-0:4075:1701":{"id":"b:2:3218-0:4075:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatCall","id":"0:4075:1701","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8686:5132":{"id":"2:8686:5132","crate_id":2,"name":"extend_reserve","span":null,"visibility":"default","docs":"Reserves capacity in a collection for the given number of additional elements.\n\nThe default implementation does nothing.","links":{},"attrs":["#[unstable(feature = \"extend_one\", issue = \"72631\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["additional",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3430:611":{"id":"0:3430:611","crate_id":0,"name":"eq","span":{"filename":"src/either_or_both.rs","begin":[6,16],"end":[6,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6567:10407":{"id":"1:6567:10407","crate_id":1,"name":"pidfd","span":null,"visibility":"default","docs":"Obtains a reference to the [`PidFd`] created for this [`Child`], if available.\n\nA pidfd will only be available if its creation was requested with\n[`create_pidfd`] when the corresponding [`Command`] was created.\n\nEven if requested, a pidfd may not be available due to an older\nversion of Linux being in use, or if some other error occurred.\n\n[`Command`]: process::Command\n[`create_pidfd`]: CommandExt::create_pidfd\n[`Child`]: process::Child","links":{"`PidFd`":"1:11281:6610","process::Child":"1:7415:6726","process::Command":"1:7477:6730","CommandExt::create_pidfd":"1:6570:11008"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"PidFd","id":"1:11281:6610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4619:4373":{"id":"0:4619:4373","crate_id":0,"name":"First","span":{"filename":"src/with_position.rs","begin":[40,4],"end":[40,12]},"visibility":"default","docs":"This is the first element.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:4621:1564"]}},"a:2:9532:4793-0:3861:1674":{"id":"a:2:9532:4793-0:3861:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"ElemF","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"ElemF"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"ElemF"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1021:2494":{"id":"0:1021:2494","crate_id":0,"name":"join","span":{"filename":"src/free.rs","begin":[262,0],"end":[267,1]},"visibility":"public","docs":"Combine all iterator elements into one String, separated by `sep`.\n\n[`IntoIterator`] enabled version of [`Itertools::join`].\n\n```\nuse itertools::join;\n\nassert_eq!(join(&[1, 2, 3], \", \"), \"1, 2, 3\");\n```","links":{"`IntoIterator`":"2:8672:152","`Itertools::join`":"0:2653:2494"},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}],["sep",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8479:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3993":{"id":"0:3993","crate_id":0,"name":null,"span":{"filename":"src/peeking_take_while.rs","begin":[148,0],"end":[148,79]},"visibility":{"restricted":{"parent":"0:1858:1686","path":"::peeking_take_while"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PeekingNext","id":"0:1868:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"alloc::collections::linked_list::Iter","id":"5:3825:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:3996:4024"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3203-0:4670:1724":{"id":"b:2:3203-0:4670:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2719:1752":{"id":"0:2719:1752","crate_id":0,"name":"k_smallest","span":{"filename":"src/lib.rs","begin":[2735,4],"end":[2742,5]},"visibility":"default","docs":"Sort the k smallest elements into a new iterator, in ascending order.\n\n**Note:** This consumes the entire iterator, and returns the result\nas a new iterator that owns its elements.  If the input contains\nless than k elements, the result is equivalent to `self.sorted()`.\n\nThis is guaranteed to use `k * sizeof(Self::Item) + O(1)` memory\nand `O(n log k)` time, with `n` the number of elements in the input.\n\nThe sorted iterator, if directly collected to a `Vec`, is converted\nwithout any extra copying or allocation cost.\n\n**Note:** This is functionally-equivalent to `self.sorted().take(k)`\nbut much more efficient.\n\n```\nuse itertools::Itertools;\n\n// A random permutation of 0..15\nlet numbers = vec![6, 9, 1, 14, 0, 4, 8, 7, 11, 2, 10, 3, 13, 12, 5];\n\nlet five_smallest = numbers\n    .into_iter()\n    .k_smallest(5);\n\nitertools::assert_equal(five_smallest, 0..5);\n```","links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["k",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"alloc::vec::IntoIter","id":"5:7484:1621","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13276:127":{"id":"2:13276:127","crate_id":2,"name":"Err","span":null,"visibility":"default","docs":"The associated error which can be returned from parsing.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"b:2:2868-0:3036:1642":{"id":"b:2:2868-0:3036:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WhileSome","id":"0:3036:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:3737:1655":{"id":"b:2:2868-0:3737:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:868":{"id":"0:868","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[1126,0],"end":[1130,2]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4488:15652":{"id":"1:4488:15652","crate_id":1,"name":"stream_len","span":null,"visibility":"default","docs":"Returns the length of this stream (in bytes).\n\nThis method is implemented using up to three seek operations. If this\nmethod returns successfully, the seek position is unchanged (i.e. the\nposition before calling this method is the same as afterwards).\nHowever, if this method returns an error, the seek position is\nunspecified.\n\nIf you need to obtain the length of *many* streams and you don't care\nabout the seek position afterwards, you can reduce the number of seek\noperations by simply calling `seek(SeekFrom::End(0))` and using its\nreturn value (it is also the stream length).\n\nNote that length of a stream can change over time (for example, when\ndata is appended to a file). So calling this method multiple times does\nnot necessarily return the same length each time.\n\n# Example\n\n```no_run\n#![feature(seek_stream_len)]\nuse std::{\n    io::{self, Seek},\n    fs::File,\n};\n\nfn main() -> io::Result<()> {\n    let mut f = File::open(\"foo.txt\")?;\n\n    let len = f.stream_len()?;\n    println!(\"The file is currently {len} bytes long\");\n    Ok(())\n}\n```","links":{},"attrs":["#[unstable(feature = \"seek_stream_len\", issue = \"59359\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3283:5309":{"id":"2:3283:5309","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":"Provides type based access to context intended for error reports.\n\nUsed in conjunction with [`Demand::provide_value`] and [`Demand::provide_ref`] to extract\nreferences to member variables from `dyn Error` trait objects.\n\n# Example\n\n```rust\n#![feature(provide_any)]\n#![feature(error_generic_member_access)]\nuse core::fmt;\nuse core::any::Demand;\n\n#[derive(Debug)]\nstruct MyBacktrace {\n    // ...\n}\n\nimpl MyBacktrace {\n    fn new() -> MyBacktrace {\n        // ...\n        # MyBacktrace {}\n    }\n}\n\n#[derive(Debug)]\nstruct SourceError {\n    // ...\n}\n\nimpl fmt::Display for SourceError {\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n        write!(f, \"Example Source Error\")\n    }\n}\n\nimpl std::error::Error for SourceError {}\n\n#[derive(Debug)]\nstruct Error {\n    source: SourceError,\n    backtrace: MyBacktrace,\n}\n\nimpl fmt::Display for Error {\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n        write!(f, \"Example Error\")\n    }\n}\n\nimpl std::error::Error for Error {\n    fn provide<'a>(&'a self, demand: &mut Demand<'a>) {\n        demand\n            .provide_ref::<MyBacktrace>(&self.backtrace)\n            .provide_ref::<dyn std::error::Error + 'static>(&self.source);\n    }\n}\n\nfn main() {\n    let backtrace = MyBacktrace::new();\n    let source = SourceError {};\n    let error = Error { source, backtrace };\n    let dyn_error = &error as &dyn std::error::Error;\n    let backtrace_ref = dyn_error.request_ref::<MyBacktrace>().unwrap();\n\n    assert!(core::ptr::eq(&error.backtrace, backtrace_ref));\n}\n```","links":{"`Demand::provide_value`":"2:4176:70270","`Demand::provide_ref`":"2:4181:70273"},"attrs":["#[unstable(feature = \"error_generic_member_access\", issue = \"99301\")]","#[allow(unused_variables)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["demand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:4168:7058","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:4065:1699":{"id":"b:2:2865-0:4065:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3382:225-0:3777:1658":{"id":"a:2:3382:225-0:3777:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:3748:1653":{"id":"0:3748:1653","crate_id":0,"name":"CombinationsWithReplacement","span":{"filename":"src/combinations_with_replacement.rs","begin":[12,0],"end":[20,1]},"visibility":"public","docs":"An iterator to iterate through all the `n`-length combinations in an iterator, with replacement.\n\nSee [`.combinations_with_replacement()`](crate::Itertools::combinations_with_replacement)\nfor more information.","links":{"crate::Itertools::combinations_with_replacement":"0:2610:1652"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:3748:1653","a:2:9532:4793-0:3748:1653","a:2:3382:225-0:3748:1653","a:2:3370:216-0:3748:1653","a:2:3411:4706-0:3748:1653","b:0:2854-0:3748:1653","b:2:8676-0:3748:1653","b:2:4104-0:3748:1653","b:2:2865-0:3748:1653","b:2:3203-0:3748:1653","b:2:3207-0:3748:1653","b:2:3218-0:3748:1653","b:2:2868-0:3748:1653","b:2:3213-0:3748:1653","b:5:848-0:3748:1653","0:3753","0:1091","0:1099","0:1103"]}},"0:927":{"id":"0:927","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[186,0],"end":[186,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::either_or_both::EitherOrBoth","name":"EitherOrBoth","id":"0:3407:1748","glob":false}},"a:2:9532:4793-0:3904:1735":{"id":"a:2:9532:4793-0:3904:1735","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1747:2437":{"id":"0:1747:2437","crate_id":0,"name":"nth","span":{"filename":"src/merge_join.rs","begin":[151,4],"end":[168,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5085":{"id":"0:5085","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[138,0],"end":[138,50]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]}}],"bindings":[]}}}},"items":["0:5098:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3213-0:3861:1674":{"id":"b:2:3213-0:3861:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"ElemF"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23072:16123":{"id":"2:23072:16123","crate_id":2,"name":"simd_min","span":null,"visibility":"default","docs":"Returns the minimum of each lane.\n\nIf one of the values is `NAN`, then the other value is returned.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:973":{"id":"0:973","crate_id":0,"name":null,"span":{"filename":"src/free.rs","begin":[30,0],"end":[30,34]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::peek_nth::peek_nth","name":"peek_nth","id":"0:1839:1682","glob":false}},"b:2:4104-0:1723:1679":{"id":"b:2:4104-0:1723:1679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeJoinBy","id":"0:1723:1679","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1941:1754":{"id":"0:1941:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/permutations.rs","begin":[154,4],"end":[164,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:633:2582":{"id":"0:633:2582","crate_id":0,"name":"fold","span":{"filename":"src/adaptors/mod.rs","begin":[344,4],"end":[364,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["accum",{"kind":"generic","inner":"Acc"}],["f",{"kind":"generic","inner":"G"}]],"output":{"kind":"generic","inner":"Acc"},"c_variadic":false},"generics":{"params":[{"name":"Acc","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Acc"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"generic","inner":"Acc"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:3757:1657":{"id":"b:5:848-0:3757:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:9138:5156":{"id":"2:9138:5156","crate_id":2,"name":"is_sorted_by_key","span":null,"visibility":"default","docs":"Checks if the elements of this iterator are sorted using the given key extraction\nfunction.\n\nInstead of comparing the iterator's elements directly, this function compares the keys of\nthe elements, as determined by `f`. Apart from that, it's equivalent to [`is_sorted`]; see\nits documentation for more information.\n\n[`is_sorted`]: Iterator::is_sorted\n\n# Examples\n\n```\n#![feature(is_sorted)]\n\nassert!([\"c\", \"bb\", \"aaa\"].iter().is_sorted_by_key(|s| s.len()));\nassert!(![-2i32, -1, 0, 3].iter().is_sorted_by_key(|n| n.abs()));\n```","links":{"Iterator::is_sorted":"2:9129:5154"},"attrs":["#[unstable(feature = \"is_sorted\", reason = \"new API\", issue = \"53485\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"generic","inner":"K"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6739:23397":{"id":"1:6739:23397","crate_id":1,"name":"as_fd","span":null,"visibility":"default","docs":"Borrows the file descriptor.\n\n# Example\n\n```rust,no_run\nuse std::fs::File;\n# use std::io;\n# #[cfg(target_os = \"wasi\")]\n# use std::os::wasi::io::{AsFd, BorrowedFd};\n# #[cfg(unix)]\n# use std::os::unix::io::{AsFd, BorrowedFd};\n\nlet mut f = File::open(\"foo.txt\")?;\n# #[cfg(any(unix, target_os = \"wasi\"))]\nlet borrowed_fd: BorrowedFd<'_> = f.as_fd();\n# Ok::<(), io::Error>(())\n```","links":{},"attrs":["#[stable(feature = \"io_safety\", since = \"1.63.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"BorrowedFd","id":"1:11307:6552","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:8893:1864":{"id":"2:8893:1864","crate_id":2,"name":"intersperse_with","span":null,"visibility":"default","docs":"Creates a new iterator which places an item generated by `separator`\nbetween adjacent items of the original iterator.\n\nThe closure will be called exactly once each time an item is placed\nbetween two adjacent items from the underlying iterator; specifically,\nthe closure is not called if the underlying iterator yields less than\ntwo items and after the last item is yielded.\n\nIf the iterator's item implements [`Clone`], it may be easier to use\n[`intersperse`].\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(iter_intersperse)]\n\n#[derive(PartialEq, Debug)]\nstruct NotClone(usize);\n\nlet v = [NotClone(0), NotClone(1), NotClone(2)];\nlet mut it = v.into_iter().intersperse_with(|| NotClone(99));\n\nassert_eq!(it.next(), Some(NotClone(0)));  // The first element from `v`.\nassert_eq!(it.next(), Some(NotClone(99))); // The separator.\nassert_eq!(it.next(), Some(NotClone(1)));  // The next element from `v`.\nassert_eq!(it.next(), Some(NotClone(99))); // The separator.\nassert_eq!(it.next(), Some(NotClone(2)));  // The last element from from `v`.\nassert_eq!(it.next(), None);               // The iterator is finished.\n```\n\n`intersperse_with` can be used in situations where the separator needs\nto be computed:\n```\n#![feature(iter_intersperse)]\n\nlet src = [\"Hello\", \"to\", \"all\", \"people\", \"!!\"].iter().copied();\n\n// The closure mutably borrows its context to generate an item.\nlet mut happy_emojis = [\" ❤️ \", \" 😀 \"].iter().copied();\nlet separator = || happy_emojis.next().unwrap_or(\" 🦀 \");\n\nlet result = src.intersperse_with(separator).collect::<String>();\nassert_eq!(result, \"Hello ❤️ to 😀 all 🦀 people 🦀 !!\");\n```\n[`Clone`]: crate::clone::Clone\n[`intersperse`]: Iterator::intersperse","links":{"Iterator::intersperse":"2:8892:1672","crate::clone::Clone":"2:2884:105"},"attrs":["#[unstable(feature = \"iter_intersperse\", reason = \"recently added\", issue =\n\"79524\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["separator",{"kind":"generic","inner":"G"}]],"output":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"2:7158:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"G"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[],"output":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3420":{"id":"0:3420","crate_id":0,"name":null,"span":{"filename":"src/either_or_both.rs","begin":[6,9],"end":[6,14]},"visibility":{"restricted":{"parent":"0:878:1747","path":"::either_or_both"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":["0:3423:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2598:2212":{"id":"0:2598:2212","crate_id":0,"name":"unique_by","span":{"filename":"src/lib.rs","begin":[1340,4],"end":[1346,5]},"visibility":"default","docs":"Return an iterator adaptor that filters out elements that have\nalready been produced once during the iteration.\n\nDuplicates are detected by comparing the key they map to\nwith the keying function `f` by hash and equality.\nThe keys are stored in a hash set in the iterator.\n\nThe iterator is stable, returning the non-duplicate items in the order\nin which they occur in the adapted iterator. In a set of duplicate\nitems, the first item encountered is the item retained.\n\n```\nuse itertools::Itertools;\n\nlet data = vec![\"a\", \"bb\", \"aa\", \"c\", \"ccc\"];\nitertools::assert_equal(data.into_iter().unique_by(|s| s.len()),\n                        vec![\"a\", \"bb\", \"ccc\"]);\n```","links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"generic","inner":"V"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3382:225-0:4083:1702":{"id":"a:2:3382:225-0:4083:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"St","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"St"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unfold","id":"0:4083:1702","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3375:1850":{"id":"2:3375:1850","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13710":{"id":"2:13710","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12789:1358","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13711:802","2:13712:3424","2:13713:61707","2:13714:61708","2:13716:61709","2:13719:23351","2:13720:61710","2:13721:311","2:13722:57815","2:13723:3884","2:13725:3881","2:13727:21636","2:13729:21637","2:13731:6679","2:13732:61711","2:13733:57832","2:13734:57833","2:13735:5442","2:13736:6973","2:13737:4562","2:13738:38008","2:13739:37998","2:13740:7603","2:13741:61712","2:13742:37993","2:13743:2406","2:13746:57510","2:13749:57512","2:13752:2389","2:13756:5130","2:13760:15667","2:13763:37957","2:13766:57842","2:13769:61713","2:13772:61714","2:13775:57844","2:13778:57846","2:13781:61715","2:13784:61716","2:13787:4517","2:13790:61717","2:13793:61718","2:13796:61719","2:13799:61720","2:13801:61721","2:13803:61722","2:13805:61723","2:13806:61724","2:13807:61725","2:13810:61726","2:13813:27294","2:13816:57848","2:13819:61727","2:13822:61728","2:13825:61729","2:13828:7143","2:13830:7359","2:13831:15397","2:13832:15398","2:13833:15399","2:13834:61730","2:13836:6616","2:13837:61731"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1102:932":{"id":"0:1102:932","crate_id":0,"name":"next","span":{"filename":"src/combinations_with_replacement.rs","begin":[63,4],"end":[102,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13366:5416":{"id":"2:13366:5416","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13361:5417","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9532:4793-0:3386:1645":{"id":"a:2:9532:4793-0:3386:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:6568:23455":{"id":"1:6568:23455","crate_id":1,"name":"take_pidfd","span":null,"visibility":"default","docs":"Takes ownership of the [`PidFd`] created for this [`Child`], if available.\n\nA pidfd will only be available if its creation was requested with\n[`create_pidfd`] when the corresponding [`Command`] was created.\n\nEven if requested, a pidfd may not be available due to an older\nversion of Linux being in use, or if some other error occurred.\n\n[`Command`]: process::Command\n[`create_pidfd`]: CommandExt::create_pidfd\n[`Child`]: process::Child","links":{"process::Child":"1:7415:6726","CommandExt::create_pidfd":"1:6570:11008","`PidFd`":"1:11281:6610","process::Command":"1:7477:6730"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"PidFd","id":"1:11281:6610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9533:4792-0:4065:1699":{"id":"a:2:9533:4792-0:4065:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10803:5306":{"id":"2:10803:5306","crate_id":2,"name":"hash_slice","span":null,"visibility":"default","docs":"Feeds a slice of this type into the given [`Hasher`].\n\nThis method is meant as a convenience, but its implementation is\nalso explicitly left unspecified. It isn't guaranteed to be\nequivalent to repeated calls of [`hash`] and implementations of\n[`Hash`] should keep that in mind and call [`hash`] themselves\nif the slice isn't treated as a whole unit in the [`PartialEq`]\nimplementation.\n\nFor example, a [`VecDeque`] implementation might naïvely call\n[`as_slices`] and then [`hash_slice`] on each slice, but this\nis wrong since the two slices can change with a call to\n[`make_contiguous`] without affecting the [`PartialEq`]\nresult. Since these slices aren't treated as singular\nunits, and instead part of a larger deque, this method cannot\nbe used.\n\n# Examples\n\n```\nuse std::collections::hash_map::DefaultHasher;\nuse std::hash::{Hash, Hasher};\n\nlet mut hasher = DefaultHasher::new();\nlet numbers = [6, 28, 496, 8128];\nHash::hash_slice(&numbers, &mut hasher);\nprintln!(\"Hash is {:x}!\", hasher.finish());\n```\n\n[`VecDeque`]: ../../std/collections/struct.VecDeque.html\n[`as_slices`]: ../../std/collections/struct.VecDeque.html#method.as_slices\n[`make_contiguous`]: ../../std/collections/struct.VecDeque.html#method.make_contiguous\n[`hash`]: Hash::hash\n[`hash_slice`]: Hash::hash_slice","links":{"`PartialEq`":"2:2920:186","Hash::hash":"2:10801:722","`Hasher`":"2:10810:147","Hash::hash_slice":"2:10803:5306"},"attrs":["#[stable(feature = \"hash_slice\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["data",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"Self"}}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"Hasher","id":"2:10810:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8676-0:2992:1634":{"id":"b:2:8676-0:2992:1634","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Product","id":"0:2992:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"1:4422:4562":{"id":"1:4422:4562","crate_id":1,"name":"bytes","span":null,"visibility":"default","docs":"Transforms this `Read` instance to an [`Iterator`] over its bytes.\n\nThe returned type implements [`Iterator`] where the [`Item`] is\n<code>[Result]<[u8], [io::Error]></code>.\nThe yielded item is [`Ok`] if a byte was successfully read and [`Err`]\notherwise. EOF is mapped to returning [`None`] from this iterator.\n\nThe default implementation calls `read` for each byte,\nwhich can be very inefficient for data that's not in memory,\nsuch as [`File`]. Consider using a [`BufReader`] in such cases.\n\n# Examples\n\n[`File`]s implement `Read`:\n\n[`Item`]: Iterator::Item\n[`File`]: crate::fs::File \"fs::File\"\n[Result]: crate::result::Result \"Result\"\n[io::Error]: self::Error \"io::Error\"\n\n```no_run\nuse std::io;\nuse std::io::prelude::*;\nuse std::io::BufReader;\nuse std::fs::File;\n\nfn main() -> io::Result<()> {\n    let f = BufReader::new(File::open(\"foo.txt\")?);\n\n    for byte in f.bytes() {\n        println!(\"{}\", byte.unwrap());\n    }\n    Ok(())\n}\n```","links":{"self::Error":"1:3803:128","`BufReader`":"1:3284:6585","crate::fs::File":"1:2909:129","`Err`":"2:47940:127","crate::result::Result":"2:47934:208","u8":"1:15893:4453","Iterator::Item":"2:8874:1849","`None`":"2:47811:177","`Iterator`":"2:8873:159","`Ok`":"2:47937:178"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"1:10973:4069","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13810:61726":{"id":"2:13810:61726","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15876:4439","self::pattern":"2:13336:4565"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:1527:1668":{"id":"b:2:2865-0:1527:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunks","id":"0:1527:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1673:1754":{"id":"0:1673:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/kmerge_impl.rs","begin":[215,4],"end":[221,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:3017:1648":{"id":"b:2:3213-0:3017:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Step","id":"0:3017:1648","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2733:2771":{"id":"0:2733:2771","crate_id":0,"name":"into_group_map","span":{"filename":"src/lib.rs","begin":[2826,4],"end":[2831,5]},"visibility":"default","docs":"Return a `HashMap` of keys mapped to `Vec`s of values. Keys and values\nare taken from `(Key, Value)` tuple pairs yielded by the input iterator.\n\nEssentially a shorthand for `.into_grouping_map().collect::<Vec<_>>()`.\n\n```\nuse itertools::Itertools;\n\nlet data = vec![(0, 10), (2, 12), (3, 13), (0, 20), (3, 33), (2, 42)];\nlet lookup = data.into_iter().into_group_map();\n\nassert_eq!(lookup[&0], vec![10, 20]);\nassert_eq!(lookup.get(&1), None);\nassert_eq!(lookup[&2], vec![12, 42]);\nassert_eq!(lookup[&3], vec![13, 33]);\n```","links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7898:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"K"},{"kind":"generic","inner":"V"}]}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2137":{"id":"0:2137","crate_id":0,"name":null,"span":{"filename":"src/sources.rs","begin":[109,0],"end":[113,1]},"visibility":{"restricted":{"parent":"0:2115:1700","path":"::sources"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"St","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"St"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unfold","id":"0:4083:1702","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:4082:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4864":{"id":"0:4864","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[134,0],"end":[134,38]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]","#[allow(unused_assignments)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"}]}}],"bindings":[]}}}},"items":["0:4873:1849","0:4874:932","0:4875:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6194:15396":{"id":"5:6194:15396","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13833:15399"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8479:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:897:3459":{"id":"0:897:3459","crate_id":0,"name":"map_left","span":{"filename":"src/either_or_both.rs","begin":[104,4],"end":[113,5]},"visibility":"public","docs":"Apply the function `f` on the value `a` in `Left(a)` or `Both(a, b)` variants. If it is\npresent rewrapping the result in `self`'s original variant.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"M"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"A"}],"output":{"kind":"generic","inner":"M"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:0:2854-0:4129:1710":{"id":"b:0:2854-0:4129:1710","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tuples","id":"0:4129:1710","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3218-0:4155:1709":{"id":"b:2:3218-0:4155:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CircularTupleWindows","id":"0:4155:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4514:1744":{"id":"0:4514:1744","crate_id":0,"name":"multiunzip","span":{"filename":"src/unziptuple.rs","begin":[76,0],"end":[76,112]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"},{"kind":"generic","inner":"FromC"},{"kind":"generic","inner":"FromD"},{"kind":"generic","inner":"FromE"},{"kind":"generic","inner":"FromF"},{"kind":"generic","inner":"FromG"},{"kind":"generic","inner":"FromH"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:281":{"id":"0:281","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[169,0],"end":[169,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::concat_impl::concat","name":"concat","id":"0:1030:440","glob":false}},"0:2084:1754":{"id":"0:2084:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/repeatn.rs","begin":[39,4],"end":[41,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:3939:1685":{"id":"b:2:3207-0:3939:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3544:1253":{"id":"2:3544:1253","crate_id":2,"name":"shr_assign","span":null,"visibility":"default","docs":"Performs the `>>=` operation.\n\n# Examples\n\n```\nlet mut x: u8 = 5;\nx >>= 1;\nassert_eq!(x, 2);\n\nlet mut x: u8 = 2;\nx >>= 1;\nassert_eq!(x, 1);\n```","links":{},"attrs":["#[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:4104-0:1917:1689":{"id":"b:2:4104-0:1917:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Permutations","id":"0:1917:1689","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6213:6858":{"id":"1:6213:6858","crate_id":1,"name":"uid","span":null,"visibility":"default","docs":"Sets the child process's user ID. This translates to a\n`setuid` call in the child process. Failure in the `setuid`\ncall will cause the spawn to fail.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"1:7477:6730","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2563:2042":{"id":"0:2563:2042","crate_id":0,"name":"filter_map_ok","span":{"filename":"src/lib.rs","begin":[898,4],"end":[903,5]},"visibility":"default","docs":"Return an iterator adaptor that filters and transforms every\n`Result::Ok` value with the provided closure. `Result::Err`\nvalues are unchanged.\n\n```\nuse itertools::Itertools;\n\nlet input = vec![Ok(22), Err(false), Ok(11)];\nlet it = input.into_iter().filter_map_ok(|i| if i > 20 { Some(i * 2) } else { None });\nitertools::assert_equal(it, vec![Ok(44), Err(false)]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"FilterMapOk","id":"0:791:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"T"}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2720:2752":{"id":"0:2720:2752","crate_id":0,"name":"partition_map","span":{"filename":"src/lib.rs","begin":[2765,4],"end":[2780,5]},"visibility":"default","docs":"Collect all iterator elements into one of two\npartitions. Unlike [`Iterator::partition`], each partition may\nhave a distinct type.\n\n```\nuse itertools::{Itertools, Either};\n\nlet successes_and_failures = vec![Ok(1), Err(false), Err(true), Ok(2)];\n\nlet (successes, failures): (Vec<_>, Vec<_>) = successes_and_failures\n    .into_iter()\n    .partition_map(|r| {\n        match r {\n            Ok(v) => Either::Left(v),\n            Err(v) => Either::Right(v),\n        }\n    });\n\nassert_eq!(successes, [1, 2]);\nassert_eq!(failures, [false, true]);\n```","links":{"`Iterator::partition`":"2:8940:3063"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["predicate",{"kind":"generic","inner":"F"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"}]},"c_variadic":false},"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"resolved_path","inner":{"name":"Either","id":"20:216:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5578:6527":{"id":"1:5578:6527","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5579:8505"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3682:761":{"id":"2:3682:761","crate_id":2,"name":"index","span":null,"visibility":"default","docs":"Performs the indexing (`container[index]`) operation.\n\n# Panics\n\nMay panic if the index is out of bounds.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"generic","inner":"Idx"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Index","id":"2:3679:3976","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:629:932":{"id":"0:629:932","crate_id":0,"name":"next","span":{"filename":"src/adaptors/mod.rs","begin":[316,4],"end":[331,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3961:667":{"id":"0:3961:667","crate_id":0,"name":"fmt","span":{"filename":"src/peeking_take_while.rs","begin":[90,4],"end":[90,45]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"::std::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8676-0:4058:1697":{"id":"b:2:8676-0:4058:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:23075:16126":{"id":"2:23075:16126","crate_id":2,"name":"reduce_sum","span":null,"visibility":"default","docs":"Returns the sum of the lanes of the vector.\n\n# Examples\n\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{f32x2, SimdFloat};\nlet v = f32x2::from_array([1., 2.]);\nassert_eq!(v.reduce_sum(), 3.);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23053:7076","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:497:3191":{"id":"0:497:3191","crate_id":0,"name":"multi_product","span":{"filename":"src/adaptors/multi_product.rs","begin":[1,0],"end":[230,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":["#![cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2928:1649"],"is_stripped":true}},"1:4484:3938":{"id":"1:4484:3938","crate_id":1,"name":"by_ref","span":null,"visibility":"default","docs":"Creates a \"by reference\" adapter for this instance of `Write`.\n\nThe returned adapter also implements `Write` and will simply borrow this\ncurrent writer.\n\n# Examples\n\n```no_run\nuse std::io::Write;\nuse std::fs::File;\n\nfn main() -> std::io::Result<()> {\n    let mut buffer = File::create(\"foo.txt\")?;\n\n    let reference = buffer.by_ref();\n\n    // we can use reference just like our original buffer\n    reference.write_all(b\"some bytes\")?;\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13816:57848":{"id":"2:13816:57848","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13336:4565","prim@char":"1:15876:4439"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13361:5417","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3203-0:2982:1635":{"id":"b:2:3203-0:2982:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1226:667":{"id":"0:1226:667","crate_id":0,"name":"fmt","span":{"filename":"src/flatten_ok.rs","begin":[150,4],"end":[156,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:4792-0:3951:1683":{"id":"a:2:9533:4792-0:3951:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3213-0:4155:1709":{"id":"b:2:3213-0:4155:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CircularTupleWindows","id":"0:4155:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:440:3379":{"id":"0:440:3379","crate_id":0,"name":"Out","span":{"filename":"src/adaptors/map.rs","begin":[12,4],"end":[12,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:3416:1564":{"id":"0:3416:1564","crate_id":0,"name":"0","span":{"filename":"src/either_or_both.rs","begin":[11,9],"end":[11,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"A"}},"0:1165:1566":{"id":"0:1165:1566","crate_id":0,"name":"2","span":{"filename":"src/diff.rs","begin":[21,37],"end":[21,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}}},"b:2:3207-0:1527:1668":{"id":"b:2:3207-0:1527:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunks","id":"0:1527:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3411:4706-0:4119:1707":{"id":"a:2:3411:4706-0:4119:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Buffer","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TupleCollect","id":"0:2245:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleBuffer","id":"0:4119:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13729:21637":{"id":"2:13729:21637","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11209:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11209:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4104-0:1981:1693":{"id":"b:2:4104-0:1981:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Powerset","id":"0:1981:1693","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3207-0:1452:1669":{"id":"b:2:3207-0:1452:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupBy","id":"0:1452:1669","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:1981:1693":{"id":"b:2:2865-0:1981:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Powerset","id":"0:1981:1693","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3500:184":{"id":"2:3500:184","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `&` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"a:2:9533:4792-0:3007:1636":{"id":"a:2:9533:4792-0:3007:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Batching","id":"0:3007:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3819:4753":{"id":"2:3819:4753","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3750:4554","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2446":{"id":"0:2446","crate_id":0,"name":null,"span":{"filename":"src/with_position.rs","begin":[95,0],"end":[97,3]},"visibility":{"restricted":{"parent":"0:2419:1717","path":"::with_position"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WithPosition","id":"0:2430:1718","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4799:1849":{"id":"0:4799:1849","crate_id":0,"name":"Item","span":{"filename":"src/ziptuple.rs","begin":[132,0],"end":[132,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"C"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"D"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"E"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]}}},"0:2831:2962":{"id":"0:2831:2962","crate_id":0,"name":"position_minmax_by","span":{"filename":"src/lib.rs","begin":[3463,4],"end":[3472,5]},"visibility":"default","docs":"Return the postions of the minimum and maximum elements of an\niterator, as determined by the specified comparison function.\n\nThe return value is a variant of [`MinMaxResult`] like for\n[`position_minmax`].\n\nFor the minimum, if several elements are equally minimum, the\nposition of the first of them is returned. For the maximum, if\nseveral elements are equally maximum, the position of the last\nof them is returned.\n\n# Examples\n\n```\nuse itertools::Itertools;\nuse itertools::MinMaxResult::{NoElements, OneElement, MinMax};\n\nlet a: [i32; 0] = [];\nassert_eq!(a.iter().position_minmax_by(|x, y| x.cmp(y)), NoElements);\n\nlet a = [10_i32];\nassert_eq!(a.iter().position_minmax_by(|x, y| x.cmp(y)), OneElement(0));\n\nlet a = [-3_i32, 0, 1, 5, -10];\nassert_eq!(a.iter().position_minmax_by(|x, y| x.cmp(y)), MinMax(4, 3));\n\nlet a = [1_i32, 1, -1, -1];\nassert_eq!(a.iter().position_minmax_by(|x, y| x.cmp(y)), MinMax(2, 1));\n```\n\n[`position_minmax`]: Self::position_minmax","links":{"Self::position_minmax":"0:2804:2942","`MinMaxResult`":"0:3904:1735"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["compare",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13772:61714":{"id":"2:13772:61714","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split":"2:13760:15667","prim@char":"1:15876:4439","self::pattern":"2:13336:4565","str::split_terminator":"2:13769:61713"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49858:5437","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13361:5417","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2856:3042":{"id":"0:2856:3042","crate_id":0,"name":"equal","span":{"filename":"src/lib.rs","begin":[3674,0],"end":[3680,1]},"visibility":"public","docs":"Return `true` if both iterables produce equal sequences\n(elements pairwise equal and sequences of the same length),\n`false` otherwise.\n\n[`IntoIterator`] enabled version of [`Iterator::eq`].\n\n```\nassert!(itertools::equal(vec![1, 2, 3], 1..4));\nassert!(!itertools::equal(&[0, 0], &[0, 0, 0]));\n```","links":{"`IntoIterator`":"2:8672:152","`Iterator::eq`":"2:9113:611"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["a",{"kind":"generic","inner":"I"}],["b",{"kind":"generic","inner":"J"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:3203-0:3375:1633":{"id":"b:2:3203-0:3375:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOk","id":"0:3375:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1783:4024":{"id":"0:1783:4024","crate_id":0,"name":"peeking_next","span":{"filename":"src/multipeek_impl.rs","begin":[67,4],"end":[78,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["accept",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23774:16123":{"id":"2:23774:16123","crate_id":2,"name":"simd_min","span":null,"visibility":"default","docs":"Returns the lane-wise minimum with `other`.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3207-0:3904:1735":{"id":"b:2:3207-0:3904:1735","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:8676-0:2928:1649":{"id":"b:2:8676-0:2928:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiProduct","id":"0:2928:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:2865-0:3928:1681":{"id":"b:2:2865-0:3928:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3452:902":{"id":"2:3452:902","crate_id":2,"name":"mul","span":null,"visibility":"default","docs":"Performs the `*` operation.\n\n# Example\n\n```\nassert_eq!(12 * 2, 24);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Mul","id":"2:3449:3712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:10811:659":{"id":"2:10811:659","crate_id":2,"name":"finish","span":null,"visibility":"default","docs":"Returns the hash value for the values written so far.\n\nDespite its name, the method does not reset the hasher’s internal\nstate. Additional [`write`]s will continue from the current value.\nIf you need to start a fresh hash value, you will have to create\na new hasher.\n\n# Examples\n\n```\nuse std::collections::hash_map::DefaultHasher;\nuse std::hash::Hasher;\n\nlet mut hasher = DefaultHasher::new();\nhasher.write(b\"Cool!\");\n\nprintln!(\"Hash is {:x}!\", hasher.finish());\n```\n\n[`write`]: Hasher::write","links":{"Hasher::write":"2:10812:2499"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:14546:21213":{"id":"2:14546:21213","crate_id":2,"name":"allocate_zeroed","span":null,"visibility":"default","docs":"Behaves like `allocate`, but also ensures that the returned memory is zero-initialized.\n\n# Errors\n\nReturning `Err` indicates that either memory is exhausted or `layout` does not meet\nallocator's size or alignment constraints.\n\nImplementations are encouraged to return `Err` on memory exhaustion rather than panicking or\naborting, but this is not a strict requirement. (Specifically: it is *legal* to implement\nthis trait atop an underlying native allocation library that aborts on memory exhaustion.)\n\nClients wishing to abort computation in response to an allocation error are encouraged to\ncall the [`handle_alloc_error`] function, rather than directly invoking `panic!` or similar.\n\n[`handle_alloc_error`]: ../../alloc/alloc/fn.handle_alloc_error.html","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50749:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NonNull","id":"2:2391:4591","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"AllocError","id":"2:50778:4797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2146":{"id":"0:2146","crate_id":0,"name":null,"span":{"filename":"src/sources.rs","begin":[146,0],"end":[150,1]},"visibility":{"restricted":{"parent":"0:2115:1700","path":"::sources"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"St","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"St"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iterate","id":"0:4092:1703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:4101:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:313":{"id":"0:313","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[180,38],"end":[180,44]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::sources::unfold","name":"unfold","id":"0:2133:1740","glob":false}},"a:2:3411:4706-0:3397:1646":{"id":"a:2:3411:4706-0:3397:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4801:1754":{"id":"0:4801:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/ziptuple.rs","begin":[132,0],"end":[132,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3626:1849":{"id":"0:3626:1849","crate_id":0,"name":"Item","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"X"}]}}},"0:2404:3067":{"id":"0:2404:3067","crate_id":0,"name":"next_back","span":{"filename":"src/unique_impl.rs","begin":[135,4],"end":[144,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8911:3287":{"id":"2:8911:3287","crate_id":2,"name":"peekable","span":null,"visibility":"default","docs":"Creates an iterator which can use the [`peek`] and [`peek_mut`] methods\nto look at the next element of the iterator without consuming it. See\ntheir documentation for more information.\n\nNote that the underlying iterator is still advanced when [`peek`] or\n[`peek_mut`] are called for the first time: In order to retrieve the\nnext element, [`next`] is called on the underlying iterator, hence any\nside effects (i.e. anything other than fetching the next value) of\nthe [`next`] method will occur.\n\n\n# Examples\n\nBasic usage:\n\n```\nlet xs = [1, 2, 3];\n\nlet mut iter = xs.iter().peekable();\n\n// peek() lets us see into the future\nassert_eq!(iter.peek(), Some(&&1));\nassert_eq!(iter.next(), Some(&1));\n\nassert_eq!(iter.next(), Some(&2));\n\n// we can peek() multiple times, the iterator won't advance\nassert_eq!(iter.peek(), Some(&&3));\nassert_eq!(iter.peek(), Some(&&3));\n\nassert_eq!(iter.next(), Some(&3));\n\n// after the iterator is finished, so is peek()\nassert_eq!(iter.peek(), None);\nassert_eq!(iter.next(), None);\n```\n\nUsing [`peek_mut`] to mutate the next item without advancing the\niterator:\n\n```\nlet xs = [1, 2, 3];\n\nlet mut iter = xs.iter().peekable();\n\n// `peek_mut()` lets us see into the future\nassert_eq!(iter.peek_mut(), Some(&mut &1));\nassert_eq!(iter.peek_mut(), Some(&mut &1));\nassert_eq!(iter.next(), Some(&1));\n\nif let Some(mut p) = iter.peek_mut() {\n    assert_eq!(*p, &2);\n    // put a value into the iterator\n    *p = &1000;\n}\n\n// The value reappears as the iterator continues\nassert_eq!(iter.collect::<Vec<_>>(), vec![&1000, &3]);\n```\n[`peek`]: Peekable::peek\n[`peek_mut`]: Peekable::peek_mut\n[`next`]: Iterator::next","links":{"Peekable::peek_mut":"2:7418:3940","Iterator::next":"2:8875:932","Peekable::peek":"2:7416:3289"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Peekable","id":"2:47034:3193","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[145,4],"end":[145,39]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::rciter_impl::RcIter","name":"RcIter","id":"0:4058:1697","glob":false}},"0:1521":{"id":"0:1521","crate_id":0,"name":null,"span":{"filename":"src/groupbylazy.rs","begin":[489,0],"end":[501,1]},"visibility":{"restricted":{"parent":"0:1387:1665","path":"::groupbylazy"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"outlives":"'a"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"IntoChunks","id":"0:1513:1666","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}}},"items":["0:1524:1849","0:1525:1621","0:1526:777"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4446:1744":{"id":"0:4446:1744","crate_id":0,"name":"multiunzip","span":{"filename":"src/unziptuple.rs","begin":[72,0],"end":[72,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"},{"kind":"generic","inner":"FromC"},{"kind":"generic","inner":"FromD"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6473:10302":{"id":"1:6473:10302","crate_id":1,"name":"st_mtime_nsec","span":null,"visibility":"default","docs":"Returns the last modification time of the file, in nanoseconds since [`st_mtime`].\n\n[`st_mtime`]: Self::st_mtime\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_mtime_nsec());\n    Ok(())\n}\n```","links":{"Self::st_mtime":"1:6472:10301"},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2868-0:1651:1677":{"id":"b:2:2868-0:1651:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4104-0:1537:1667":{"id":"b:2:4104-0:1537:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunk","id":"0:1537:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:1981:1693":{"id":"b:2:3213-0:1981:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Powerset","id":"0:1981:1693","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2519:1831":{"id":"0:2519:1831","crate_id":0,"name":"chain","span":{"filename":"src/lib.rs","begin":[400,0],"end":[416,1]},"visibility":"public","docs":"[Chain][`chain`] zero or more iterators together into one sequence.\n\nThe comma-separated arguments must implement [`IntoIterator`].\nThe final argument may be followed by a trailing comma.\n\n[`chain`]: Iterator::chain\n\n# Examples\n\nEmpty invocations of `chain!` expand to an invocation of [`std::iter::empty`]:\n```\nuse std::iter;\nuse itertools::chain;\n\nlet _: iter::Empty<()> = chain!();\nlet _: iter::Empty<i8> = chain!();\n```\n\nInvocations of `chain!` with one argument expand to [`arg.into_iter()`](IntoIterator):\n```\nuse std::{ops::Range, slice};\nuse itertools::chain;\nlet _: <Range<_> as IntoIterator>::IntoIter = chain!((2..6),); // trailing comma optional!\nlet _:     <&[_] as IntoIterator>::IntoIter = chain!(&[2, 3, 4]);\n```\n\nInvocations of `chain!` with multiple arguments [`.into_iter()`](IntoIterator) each\nargument, and then [`chain`] them together:\n```\nuse std::{iter::*, ops::Range, slice};\nuse itertools::{assert_equal, chain};\n\n// e.g., this:\nlet with_macro:  Chain<Chain<Once<_>, Take<Repeat<_>>>, slice::Iter<_>> =\n    chain![once(&0), repeat(&1).take(2), &[2, 3, 5],];\n\n// ...is equivalent to this:\nlet with_method: Chain<Chain<Once<_>, Take<Repeat<_>>>, slice::Iter<_>> =\n    once(&0)\n        .chain(repeat(&1).take(2))\n        .chain(&[2, 3, 5]);\n\nassert_equal(with_macro, with_method);\n```","links":{"IntoIterator":"2:8672:152","`IntoIterator`":"2:8672:152","Iterator::chain":"2:8888:1831","`std::iter::empty`":"2:8369:1832"},"attrs":["#[macro_export]"],"deprecation":null,"kind":"macro","inner":"macro_rules! chain {\n    () => { ... };\n    ($first:expr $(, $rest:expr )* $(,)?) => { ... };\n}"},"2:8685:5131":{"id":"2:8685:5131","crate_id":2,"name":"extend_one","span":null,"visibility":"default","docs":"Extends a collection with exactly one element.","links":{},"attrs":["#[unstable(feature = \"extend_one\", issue = \"72631\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["item",{"kind":"generic","inner":"A"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3922":{"id":"0:3922","crate_id":0,"name":null,"span":{"filename":"src/minmax.rs","begin":[5,22],"end":[5,31]},"visibility":{"restricted":{"parent":"0:1748:1734","path":"::minmax"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:3924:611"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3851:3928":{"id":"0:3851:3928","crate_id":0,"name":"IntersperseElementSimple","span":{"filename":"src/intersperse.rs","begin":[9,0],"end":[9,48]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"b:2:3203-0:4657:1722":{"id":"b:2:3203-0:4657:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3370:216-0:674:1640":{"id":"a:2:3370:216-0:674:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeBy","id":"0:674:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2655:678":{"id":"0:2655:678","crate_id":0,"name":"format","span":{"filename":"src/lib.rs","begin":[2093,4],"end":[2097,5]},"visibility":"default","docs":"Format all iterator elements, separated by `sep`.\n\nAll elements are formatted (any formatting trait)\nwith `sep` inserted between each element.\n\n**Panics** if the formatter helper is formatted more than once.\n\n```\nuse itertools::Itertools;\n\nlet data = [1.1, 2.71828, -3.];\nassert_eq!(\n    format!(\"{:.2}\", data.iter().format(\", \")),\n           \"1.10, 2.72, -3.00\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["sep",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:682":{"id":"0:682","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[526,0],"end":[531,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeBy","id":"0:674:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:3033:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2532:1901":{"id":"0:2532:1901","crate_id":0,"name":"batching","span":{"filename":"src/lib.rs","begin":[581,4],"end":[586,5]},"visibility":"default","docs":"A “meta iterator adaptor”. Its closure receives a reference to the\niterator and may pick off as many elements as it likes, to produce the\nnext iterator element.\n\nIterator element type is `B`.\n\n```\nuse itertools::Itertools;\n\n// An adaptor that gathers elements in pairs\nlet pit = (0..4).batching(|it| {\n           match it.next() {\n               None => None,\n               Some(x) => match it.next() {\n                   None => None,\n                   Some(y) => Some((x, y)),\n               }\n           }\n       });\n\nitertools::assert_equal(pit, vec![(0, 1), (2, 3)]);\n```\n","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Batching","id":"0:3007:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3962":{"id":"0:3962","crate_id":0,"name":null,"span":{"filename":"src/peeking_take_while.rs","begin":[140,0],"end":[140,60]},"visibility":{"restricted":{"parent":"0:1858:1686","path":"::peeking_take_while"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PeekingNext","id":"0:1868:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"::std::slice::Iter","id":"2:11389:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:3965:4024"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1148:667":{"id":"0:1148:667","crate_id":0,"name":"fmt","span":{"filename":"src/exactly_one_err.rs","begin":[92,4],"end":[104,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"FmtResult","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2887:3372":{"id":"0:2887:3372","crate_id":0,"name":"DedupPredWithCount2CoalescePred","span":{"filename":"src/adaptors/coalesce.rs","begin":[192,0],"end":[192,51]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"DP","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"a:2:3382:225-0:1537:1667":{"id":"a:2:3382:225-0:1537:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunk","id":"0:1537:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"1:4493:15663":{"id":"1:4493:15663","crate_id":1,"name":"fill_buf","span":null,"visibility":"default","docs":"Returns the contents of the internal buffer, filling it with more data\nfrom the inner reader if it is empty.\n\nThis function is a lower-level call. It needs to be paired with the\n[`consume`] method to function properly. When calling this\nmethod, none of the contents will be \"read\" in the sense that later\ncalling `read` may return the same contents. As such, [`consume`] must\nbe called with the number of bytes that are consumed from this buffer to\nensure that the bytes are never returned twice.\n\n[`consume`]: BufRead::consume\n\nAn empty buffer returned indicates that the stream has reached EOF.\n\n# Errors\n\nThis function will return an I/O error if the underlying reader was\nread, but returned an error.\n\n# Examples\n\nA locked standard input implements `BufRead`:\n\n```no_run\nuse std::io;\nuse std::io::prelude::*;\n\nlet stdin = io::stdin();\nlet mut stdin = stdin.lock();\n\nlet buffer = stdin.fill_buf().unwrap();\n\n// work with buffer\nprintln!(\"{buffer:?}\");\n\n// ensure the bytes we worked with aren't returned again later\nlet length = buffer.len();\nstdin.consume(length);\n```","links":{"BufRead::consume":"1:4494:15664"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:612:932":{"id":"0:612:932","crate_id":0,"name":"next","span":{"filename":"src/adaptors/mod.rs","begin":[220,4],"end":[225,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10584:667":{"id":"2:10584:667","crate_id":2,"name":"fmt","span":null,"visibility":"default","docs":"Formats the value using the given formatter.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48872:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2868-0:2928:1649":{"id":"b:2:2868-0:2928:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiProduct","id":"0:2928:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3681:1754":{"id":"0:3681:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:709:1641":{"id":"0:709:1641","crate_id":0,"name":"TakeWhileRef","span":{"filename":"src/adaptors/mod.rs","begin":[610,0],"end":[613,1]},"visibility":"public","docs":"An iterator adaptor that borrows from a `Clone`-able iterator\nto only pick off elements while the predicate returns `true`.\n\nSee [`.take_while_ref()`](crate::Itertools::take_while_ref) for more information.","links":{"crate::Itertools::take_while_ref":"0:2603:2232"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:709:1641","a:2:9532:4793-0:709:1641","a:2:3382:225-0:709:1641","a:2:3370:216-0:709:1641","a:2:3411:4706-0:709:1641","b:0:2854-0:709:1641","b:2:8676-0:709:1641","b:2:4104-0:709:1641","b:2:2865-0:709:1641","b:2:3203-0:709:1641","b:2:3207-0:709:1641","b:2:3218-0:709:1641","b:2:2868-0:709:1641","b:2:3213-0:709:1641","0:715","0:722"]}},"b:5:848-0:4388:1716":{"id":"b:5:848-0:4388:1716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9532:4793-0:3407:1748":{"id":"a:2:9532:4793-0:3407:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3601:2582":{"id":"0:3601:2582","crate_id":0,"name":"fold","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["accum",{"kind":"generic","inner":"Acc"}],["f",{"kind":"generic","inner":"Fold"}]],"output":{"kind":"generic","inner":"Acc"},"c_variadic":false},"generics":{"params":[{"name":"Acc","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Fold","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Fold"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Acc"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"generic","inner":"Acc"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2070:777":{"id":"0:2070:777","crate_id":0,"name":"into_iter","span":{"filename":"src/rciter_impl.rs","begin":[91,4],"end":[93,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:3007:1636":{"id":"b:2:3213-0:3007:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Batching","id":"0:3007:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1790:1754":{"id":"0:1790:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/multipeek_impl.rs","begin":[91,4],"end":[93,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4665:415":{"id":"0:4665:415","crate_id":0,"name":"clone","span":{"filename":"src/zip_longest.rs","begin":[15,9],"end":[15,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3370:216-0:4617:1742":{"id":"a:2:3370:216-0:4617:1742","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3914:1565":{"id":"0:3914:1565","crate_id":0,"name":"1","span":{"filename":"src/minmax.rs","begin":[15,14],"end":[15,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:3969:4024":{"id":"0:3969:4024","crate_id":0,"name":"peeking_next","span":{"filename":"src/peeking_take_while.rs","begin":[141,0],"end":[141,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["accept",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:101":{"id":"0:101","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[104,8],"end":[104,20]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::TakeWhileRef","name":"TakeWhileRef","id":"0:709:1641","glob":false}},"0:2783:2897":{"id":"0:2783:2897","crate_id":0,"name":"position_max_by_key","span":{"filename":"src/lib.rs","begin":[3215,4],"end":[3221,5]},"visibility":"default","docs":"Return the position of the maximum element in the iterator, as\ndetermined by the specified function.\n\nIf several elements are equally maximum, the position of the\nlast of them is returned.\n\n# Examples\n\n```\nuse itertools::Itertools;\n\nlet a: [i32; 0] = [];\nassert_eq!(a.iter().position_max_by_key(|x| x.abs()), None);\n\nlet a = [-3_i32, 0, 1, 5, -10];\nassert_eq!(a.iter().position_max_by_key(|x| x.abs()), Some(4));\n\nlet a = [1_i32, 1, -1, -1];\nassert_eq!(a.iter().position_max_by_key(|x| x.abs()), Some(3));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["key",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"generic","inner":"K"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:395:3360":{"id":"0:395:3360","crate_id":0,"name":"DedupPredicate","span":{"filename":"src/adaptors/coalesce.rs","begin":[125,0],"end":[128,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:397:3361"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:8676-0:1651:1677":{"id":"b:2:8676-0:1651:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:4054:667":{"id":"0:4054:667","crate_id":0,"name":"fmt","span":{"filename":"src/put_back_n_impl.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4100:415":{"id":"0:4100:415","crate_id":0,"name":"clone","span":{"filename":"src/sources.rs","begin":[139,9],"end":[139,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Iterate","id":"0:4092:1703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13720:61710":{"id":"2:13720:61710","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:1166:3648":{"id":"0:1166:3648","crate_id":0,"name":"Shorter","span":{"filename":"src/diff.rs","begin":[23,4],"end":[23,30]},"visibility":"default","docs":"The total number of elements that were in `J` along with the remaining elements of `I`.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:1168:1564","0:1169:1565"]}},"a:2:3382:225-0:3748:1653":{"id":"a:2:3382:225-0:3748:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CombinationsWithReplacement","id":"0:3748:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9532:4793-0:4617:1742":{"id":"a:2:9532:4793-0:4617:1742","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:273":{"id":"0:273","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[159,4],"end":[159,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::ziptuple::Zip","name":"Zip","id":"0:4670:1724","glob":false}},"0:2910:3382":{"id":"0:2910:3382","crate_id":0,"name":"MapSpecialCaseFnOk","span":{"filename":"src/adaptors/map.rs","begin":[85,0],"end":[85,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"0:1476:1671":{"id":"0:1476:1671","crate_id":0,"name":"Groups","span":{"filename":"src/groupbylazy.rs","begin":[359,0],"end":[364,1]},"visibility":"public","docs":"An iterator that yields the Group iterators.\n\nIterator element type is `(K, Group)`:\nthe group's key `K` and the group's iterator.\n\nSee [`.group_by()`](crate::Itertools::group_by) for more information.","links":{"crate::Itertools::group_by":"0:2535:1926"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"outlives":"'a"}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:1476:1671","a:2:9532:4793-0:1476:1671","a:2:3382:225-0:1476:1671","a:2:3370:216-0:1476:1671","a:2:3411:4706-0:1476:1671","b:0:2854-0:1476:1671","b:2:8676-0:1476:1671","b:2:4104-0:1476:1671","b:2:2865-0:1476:1671","b:2:3203-0:1476:1671","b:2:3207-0:1476:1671","b:2:3218-0:1476:1671","b:2:2868-0:1476:1671","b:2:3213-0:1476:1671","0:1482"]}},"0:886:3437":{"id":"0:886:3437","crate_id":0,"name":"has_left","span":{"filename":"src/either_or_both.rs","begin":[18,4],"end":[20,5]},"visibility":"public","docs":"If `Left`, or `Both`, return true, otherwise, return false.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2663:2532":{"id":"0:2663:2532","crate_id":0,"name":"fold_ok","span":{"filename":"src/lib.rs","begin":[2189,4],"end":[2200,5]},"visibility":"default","docs":"Fold `Result` values from an iterator.\n\nOnly `Ok` values are folded. If no error is encountered, the folded\nvalue is returned inside `Ok`. Otherwise, the operation terminates\nand returns the first `Err` value it encounters. No iterator elements are\nconsumed after the first error.\n\nThe first accumulator value is the `start` parameter.\nEach iteration passes the accumulator value and the next value inside `Ok`\nto the fold function `f` and its return value becomes the new accumulator value.\n\nFor example the sequence *Ok(1), Ok(2), Ok(3)* will result in a\ncomputation like this:\n\n```ignore\nlet mut accum = start;\naccum = f(accum, 1);\naccum = f(accum, 2);\naccum = f(accum, 3);\n```\n\nWith a `start` value of 0 and an addition as folding function,\nthis effectively results in *((0 + 1) + 2) + 3*\n\n```\nuse std::ops::Add;\nuse itertools::Itertools;\n\nlet values = [1, 2, -2, -1, 2, 1];\nassert_eq!(\n    values.iter()\n          .map(Ok::<_, ()>)\n          .fold_ok(0, Add::add),\n    Ok(3)\n);\nassert!(\n    values.iter()\n          .map(|&x| if x >= 0 { Ok(x) } else { Err(\"Negative number\") })\n          .fold_ok(0, Add::add)\n          .is_err()\n);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["start",{"kind":"generic","inner":"B"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"B"},{"kind":"generic","inner":"A"}],"output":{"kind":"generic","inner":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4138":{"id":"0:4138","crate_id":0,"name":null,"span":{"filename":"src/tuple_impl.rs","begin":[80,16],"end":[80,21]},"visibility":{"restricted":{"parent":"0:2180:1706","path":"::tuple_impl"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"HomogeneousTuple","id":"0:2196:1727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Buffer","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tuples","id":"0:4129:1710","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:4141:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1670:1849":{"id":"0:1670:1849","crate_id":0,"name":"Item","span":{"filename":"src/kmerge_impl.rs","begin":[199,4],"end":[199,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1149":{"id":"0:1149","crate_id":0,"name":null,"span":{"filename":"src/exactly_one_err.rs","begin":[108,0],"end":[108,83]},"visibility":{"restricted":{"parent":"0:1105:1656","path":"::exactly_one_err"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["provide","cause","type_id","source","description"],"trait":{"name":"Error","id":"2:3278:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9532:4793-0:3836:1663":{"id":"a:2:9532:4793-0:3836:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupingMap","id":"0:3836:1663","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3207-0:4065:1699":{"id":"b:2:3207-0:4065:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4104-0:4065:1699":{"id":"b:2:4104-0:4065:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3218-0:3045:1644":{"id":"b:2:3218-0:3045:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleCombinations","id":"0:3045:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:4617:1742":{"id":"b:2:3213-0:4617:1742","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4929":{"id":"0:4929","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[135,0],"end":[135,41]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"}]}}],"bindings":[]}}}},"items":["0:4939:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:554":{"id":"0:554","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[15,0],"end":[15,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"self::multi_product","name":"multi_product","id":"0:497:3191","glob":true}},"0:1531":{"id":"0:1531","crate_id":0,"name":null,"span":{"filename":"src/groupbylazy.rs","begin":[517,0],"end":[536,1]},"visibility":{"restricted":{"parent":"0:1387:1665","path":"::groupbylazy"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"outlives":"'a"}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunks","id":"0:1527:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1534:1849","0:1535:932"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9532:4793-0:791:1632":{"id":"a:2:9532:4793-0:791:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterMapOk","id":"0:791:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:4492:4623":{"id":"1:4492:4623","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4493:15663","1:4494:15664","1:4495:15665","1:4497:6580","1:4498:15666","1:4500:15667","1:4501:7603"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4410:4624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3224:3316":{"id":"0:3224:3316","crate_id":0,"name":"Tuple7Combination","span":{"filename":"src/adaptors/mod.rs","begin":[827,0],"end":[827,73]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"a:2:3382:225-0:1723:1679":{"id":"a:2:3382:225-0:1723:1679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeJoinBy","id":"0:1723:1679","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:0:2854-0:4048:1695":{"id":"b:0:2854-0:4048:1695","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:616:2437":{"id":"0:616:2437","crate_id":0,"name":"nth","span":{"filename":"src/adaptors/mod.rs","begin":[240,4],"end":[252,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:326":{"id":"0:326","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,40],"end":[182,50]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::unziptuple::MultiUnzip","name":"MultiUnzip","id":"0:2415:1745","glob":false}},"2:23074:16125":{"id":"2:23074:16125","crate_id":2,"name":"simd_clamp","span":null,"visibility":"default","docs":"Restrict each lane to a certain interval unless it is NaN.\n\nFor each lane in `self`, returns the corresponding lane in `max` if the lane is\ngreater than `max`, and the corresponding lane in `min` if the lane is less\nthan `min`.  Otherwise returns the lane in `self`.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["min",{"kind":"generic","inner":"Self"}],["max",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9532:4793-0:1513:1666":{"id":"a:2:9532:4793-0:1513:1666","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoChunks","id":"0:1513:1666","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3203-0:4388:1716":{"id":"b:2:3203-0:4388:1716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3207-0:4075:1701":{"id":"b:2:3207-0:4075:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatCall","id":"0:4075:1701","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13740:7603":{"id":"2:13740:7603","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50044:5431","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:1527:1668":{"id":"a:2:3411:4706-0:1527:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunks","id":"0:1527:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2865-0:3407:1748":{"id":"b:2:2865-0:3407:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:4792-0:709:1641":{"id":"a:2:9533:4792-0:709:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TakeWhileRef","id":"0:709:1641","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:919":{"id":"0:919","crate_id":0,"name":null,"span":{"filename":"src/either_or_both.rs","begin":[232,0],"end":[244,1]},"visibility":{"restricted":{"parent":"0:878:1747","path":"::either_or_both"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:921:3500"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4742:932":{"id":"0:4742:932","crate_id":0,"name":"next","span":{"filename":"src/ziptuple.rs","begin":[130,0],"end":[130,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2675:2613":{"id":"0:2675:2613","crate_id":0,"name":"tree_fold1","span":{"filename":"src/lib.rs","begin":[2302,4],"end":[2359,5]},"visibility":"default","docs":"Accumulate the elements in the iterator in a tree-like manner.\n\nYou can think of it as, while there's more than one item, repeatedly\ncombining adjacent items.  It does so in bottom-up-merge-sort order,\nhowever, so that it needs only logarithmic stack space.\n\nThis produces a call tree like the following (where the calls under\nan item are done after reading that item):\n\n```text\n1 2 3 4 5 6 7\n│ │ │ │ │ │ │\n└─f └─f └─f │\n  │   │   │ │\n  └───f   └─f\n      │     │\n      └─────f\n```\n\nWhich, for non-associative functions, will typically produce a different\nresult than the linear call tree used by [`Iterator::reduce`]:\n\n```text\n1 2 3 4 5 6 7\n│ │ │ │ │ │ │\n└─f─f─f─f─f─f\n```\n\nIf `f` is associative, prefer the normal [`Iterator::reduce`] instead.\n\n```\nuse itertools::Itertools;\n\n// The same tree as above\nlet num_strings = (1..8).map(|x| x.to_string());\nassert_eq!(num_strings.tree_fold1(|x, y| format!(\"f({}, {})\", x, y)),\n    Some(String::from(\"f(f(f(1, 2), f(3, 4)), f(f(5, 6), 7))\")));\n\n// Like fold1, an empty iterator produces None\nassert_eq!((0..0).tree_fold1(|x, y| x * y), None);\n\n// tree_fold1 matches fold1 for associative operations...\nassert_eq!((0..10).tree_fold1(|x, y| x + y),\n    (0..10).fold1(|x, y| x + y));\n// ...but not for non-associative ones\nassert_ne!((0..10).tree_fold1(|x, y| x - y),\n    (0..10).fold1(|x, y| x - y));\n```","links":{"`Iterator::reduce`":"2:8983:3500"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:715":{"id":"0:715","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[615,0],"end":[619,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TakeWhileRef","id":"0:709:1641","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:3035:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3287:5309":{"id":"2:3287:5309","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["demand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:4168:7058","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4104-0:2954:1630":{"id":"b:2:4104-0:2954:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:921:3500":{"id":"0:921:3500","crate_id":0,"name":"reduce","span":{"filename":"src/either_or_both.rs","begin":[234,4],"end":[243,5]},"visibility":"public","docs":"Return either value of left, right, or the product of `f` applied where `Both` are present.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"T"},{"kind":"generic","inner":"T"}],"output":{"kind":"generic","inner":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4104-0:3951:1683":{"id":"b:2:4104-0:3951:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:4420:15596":{"id":"1:4420:15596","crate_id":1,"name":"read_buf_exact","span":null,"visibility":"default","docs":"Read the exact number of bytes required to fill `cursor`.\n\nThis is equivalent to the [`read_exact`](Read::read_exact) method, except that it is passed a [`BorrowedCursor`] rather than `[u8]` to\nallow use with uninitialized buffers.","links":{"`BorrowedCursor`":"1:10895:6602","Read::read_exact":"1:4417:15594"},"attrs":["#[unstable(feature = \"read_buf\", issue = \"78485\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cursor",{"kind":"resolved_path","inner":{"name":"BorrowedCursor","id":"1:10895:6602","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:0:2854-0:4657:1722":{"id":"b:0:2854-0:4657:1722","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8892:1672":{"id":"2:8892:1672","crate_id":2,"name":"intersperse","span":null,"visibility":"default","docs":"Creates a new iterator which places a copy of `separator` between adjacent\nitems of the original iterator.\n\nIn case `separator` does not implement [`Clone`] or needs to be\ncomputed every time, use [`intersperse_with`].\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(iter_intersperse)]\n\nlet mut a = [0, 1, 2].iter().intersperse(&100);\nassert_eq!(a.next(), Some(&0));   // The first element from `a`.\nassert_eq!(a.next(), Some(&100)); // The separator.\nassert_eq!(a.next(), Some(&1));   // The next element from `a`.\nassert_eq!(a.next(), Some(&100)); // The separator.\nassert_eq!(a.next(), Some(&2));   // The last element from `a`.\nassert_eq!(a.next(), None);       // The iterator is finished.\n```\n\n`intersperse` can be very useful to join an iterator's items using a common element:\n```\n#![feature(iter_intersperse)]\n\nlet hello = [\"Hello\", \"World\", \"!\"].iter().copied().intersperse(\" \").collect::<String>();\nassert_eq!(hello, \"Hello World !\");\n```\n\n[`Clone`]: crate::clone::Clone\n[`intersperse_with`]: Iterator::intersperse_with","links":{"crate::clone::Clone":"2:2884:105","Iterator::intersperse_with":"2:8893:1864"},"attrs":["#[unstable(feature = \"iter_intersperse\", reason = \"recently added\", issue =\n\"79524\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["separator",{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Intersperse","id":"2:47005:1673","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3384:667":{"id":"0:3384:667","crate_id":0,"name":"fmt","span":{"filename":"src/adaptors/mod.rs","begin":[848,4],"end":[848,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"::std::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5913:5378":{"id":"5:5913:5378","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5915:184","5:5916:440"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:3203-0:1158:1732":{"id":"b:2:3203-0:1158:1732","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Diff","id":"0:1158:1732","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:54:1624":{"id":"0:54:1624","crate_id":0,"name":"structs","span":{"filename":"src/lib.rs","begin":[87,0],"end":[87,15]},"visibility":"public","docs":"The concrete iterator types.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:56","0:59","0:62","0:65","0:68","0:71","0:74","0:77","0:80","0:83","0:86","0:89","0:92","0:95","0:98","0:101","0:104","0:107","0:110","0:113","0:116","0:120","0:123","0:126","0:129","0:132","0:135","0:138","0:142","0:145","0:148","0:152","0:155","0:159","0:162","0:165","0:168","0:171","0:174","0:178","0:181","0:185","0:188","0:191","0:194","0:197","0:200","0:203","0:206","0:209","0:212","0:215","0:218","0:221","0:225","0:228","0:231","0:234","0:238","0:241","0:244","0:247","0:251","0:254","0:258","0:261","0:264","0:267","0:270","0:273"],"is_stripped":false}},"0:606:3238":{"id":"0:606:3238","crate_id":0,"name":"with_value","span":{"filename":"src/adaptors/mod.rs","begin":[194,4],"end":[197,5]},"visibility":"public","docs":"put back value `value` (builder method)","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["value",{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8672:152":{"id":"2:8672:152","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8673:1849","2:8674:1621","2:8675:777"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1173:1565":{"id":"0:1173:1565","crate_id":0,"name":"1","span":{"filename":"src/diff.rs","begin":[25,18],"end":[25,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}}},"0:4048:1695":{"id":"0:4048:1695","crate_id":0,"name":"PutBackN","span":{"filename":"src/put_back_n_impl.rs","begin":[10,0],"end":[13,1]},"visibility":"public","docs":"An iterator adaptor that allows putting multiple\nitems in front of the iterator.\n\nIterator element type is `I::Item`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:2029","a:2:9533:4792-0:4048:1695","a:2:9532:4793-0:4048:1695","a:2:3382:225-0:4048:1695","a:2:3370:216-0:4048:1695","a:2:3411:4706-0:4048:1695","b:0:2854-0:4048:1695","b:2:8676-0:4048:1695","b:2:4104-0:4048:1695","b:2:2865-0:4048:1695","b:2:3203-0:4048:1695","b:2:3207-0:4048:1695","b:2:3218-0:4048:1695","b:2:2868-0:4048:1695","b:2:3213-0:4048:1695","b:5:848-0:4048:1695","0:1879","0:4052","0:4055","0:2032"]}},"b:2:4104-0:1198:1661":{"id":"b:2:4104-0:1198:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FlattenOk","id":"0:1198:1661","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13350:23286":{"id":"2:13350:23286","crate_id":2,"name":"is_contained_in","span":null,"visibility":"default","docs":"Checks whether the pattern matches anywhere in the haystack","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2588:2165":{"id":"0:2588:2165","crate_id":0,"name":"dedup_by","span":{"filename":"src/lib.rs","begin":[1194,4],"end":[1199,5]},"visibility":"default","docs":"Remove duplicates from sections of consecutive identical elements,\ndetermining equality using a comparison function.\nIf the iterator is sorted, all elements will be unique.\n\nIterator element type is `Self::Item`.\n\nThis iterator is *fused*.\n\n```\nuse itertools::Itertools;\n\nlet data = vec![(0, 1.), (1, 1.), (0, 2.), (0, 3.), (1, 3.), (1, 2.), (2, 2.)];\nitertools::assert_equal(data.into_iter().dedup_by(|x, y| x.1 == y.1),\n                        vec![(0, 1.), (0, 2.), (0, 3.), (1, 2.)]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["cmp",{"kind":"generic","inner":"Cmp"}]],"output":{"kind":"resolved_path","inner":{"name":"DedupBy","id":"0:390:1627","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"Cmp"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Cmp","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Cmp"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:3407:1748":{"id":"b:2:3207-0:3407:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1170:3650":{"id":"0:1170:3650","crate_id":0,"name":"Longer","span":{"filename":"src/diff.rs","begin":[25,4],"end":[25,29]},"visibility":"default","docs":"The total number of elements that were in `I` along with the remaining elements of `J`.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:1172:1564","0:1173:1565"]}},"0:1017:3564":{"id":"0:1017:3564","crate_id":0,"name":"max","span":{"filename":"src/free.rs","begin":[228,0],"end":[233,1]},"visibility":"public","docs":"Return the maximum value of the iterable.\n\n[`IntoIterator`] enabled version of [`Iterator::max`].\n\n```\nuse itertools::max;\n\nassert_eq!(max(0..10), Some(9));\n```","links":{"`Iterator::max`":"2:9042:3564","`IntoIterator`":"2:8672:152"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1503:585":{"id":"0:1503:585","crate_id":0,"name":"drop","span":{"filename":"src/groupbylazy.rs","begin":[406,4],"end":[408,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:617:283":{"id":"0:617:283","crate_id":0,"name":"all","span":{"filename":"src/adaptors/mod.rs","begin":[254,4],"end":[263,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"G"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:59":{"id":"0:59","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,8],"end":[90,15]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::DedupBy","name":"DedupBy","id":"0:390:1627","glob":false}},"1:6835:23451":{"id":"1:6835:23451","crate_id":1,"name":"set_quickack","span":null,"visibility":"default","docs":"Enable or disable `TCP_QUICKACK`.\n\nThis flag causes Linux to eagerly send ACKs rather than delaying them.\nLinux may reset this flag after further operations on the socket.\n\nSee [`man 7 tcp`](https://man7.org/linux/man-pages/man7/tcp.7.html) and\n[TCP delayed acknowledgement](https://en.wikipedia.org/wiki/TCP_delayed_acknowledgment)\nfor more information.\n\n# Examples\n\n```no_run\n#![feature(tcp_quickack)]\nuse std::net::TcpStream;\nuse std::os::linux::net::TcpStreamExt;\n\nlet stream = TcpStream::connect(\"127.0.0.1:8080\")\n        .expect(\"Couldn't connect to the server...\");\nstream.set_quickack(true).expect(\"set_quickack call failed\");\n```","links":{},"attrs":["#[unstable(feature = \"tcp_quickack\", issue = \"96256\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["quickack",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3411:4706-0:3757:1657":{"id":"a:2:3411:4706-0:3757:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3044:667":{"id":"0:3044:667","crate_id":0,"name":"fmt","span":{"filename":"src/adaptors/mod.rs","begin":[658,16],"end":[658,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:4119:1707":{"id":"b:2:3207-0:4119:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleBuffer","id":"0:4119:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3382:225-0:791:1632":{"id":"a:2:3382:225-0:791:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterMapOk","id":"0:791:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:251":{"id":"0:251","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[153,37],"end":[153,47]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::duplicates_impl::Duplicates","name":"Duplicates","id":"0:2346:1712","glob":false}},"2:8887:5135":{"id":"2:8887:5135","crate_id":2,"name":"step_by","span":null,"visibility":"default","docs":"Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.\n\nNote 1: The first element of the iterator will always be returned,\nregardless of the step given.\n\nNote 2: The time at which ignored elements are pulled is not fixed.\n`StepBy` behaves like the sequence `self.next()`, `self.nth(step-1)`,\n`self.nth(step-1)`, …, but is also free to behave like the sequence\n`advance_n_and_return_first(&mut self, step)`,\n`advance_n_and_return_first(&mut self, step)`, …\nWhich way is used may change for some iterators for performance reasons.\nThe second way will advance the iterator earlier and may consume more items.\n\n`advance_n_and_return_first` is the equivalent of:\n```\nfn advance_n_and_return_first<I>(iter: &mut I, n: usize) -> Option<I::Item>\nwhere\n    I: Iterator,\n{\n    let next = iter.next();\n    if n > 1 {\n        iter.nth(n - 2);\n    }\n    next\n}\n```\n\n# Panics\n\nThe method will panic if the given step is `0`.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [0, 1, 2, 3, 4, 5];\nlet mut iter = a.iter().step_by(2);\n\nassert_eq!(iter.next(), Some(&0));\nassert_eq!(iter.next(), Some(&2));\nassert_eq!(iter.next(), Some(&4));\nassert_eq!(iter.next(), None);\n```","links":{},"attrs":["#[stable(feature = \"iterator_step_by\", since = \"1.28.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["step",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"StepBy","id":"2:47085:4659","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3958":{"id":"0:3958","crate_id":0,"name":null,"span":{"filename":"src/peek_nth.rs","begin":[7,16],"end":[7,21]},"visibility":{"restricted":{"parent":"0:1826:1682","path":"::peek_nth"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3960:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3411:4706-0:4617:1742":{"id":"a:2:3411:4706-0:4617:1742","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:0:2854-0:1198:1661":{"id":"b:0:2854-0:1198:1661","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FlattenOk","id":"0:1198:1661","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2253:4296":{"id":"0:2253:4296","crate_id":0,"name":"left_shift_push","span":{"filename":"src/tuple_impl.rs","begin":[251,4],"end":[251,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["item",{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:2245:1980","args":null}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3411:4706-0:4037:1691":{"id":"a:2:3411:4706-0:4037:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ProcessResults","id":"0:4037:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:0:2854-0:3386:1645":{"id":"b:0:2854-0:3386:1645","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:68":{"id":"0:68","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[93,8],"end":[93,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::Interleave","name":"Interleave","id":"0:2954:1630","glob":false}},"2:13365:23341":{"id":"2:13365:23341","crate_id":2,"name":"next_reject_back","span":null,"visibility":"default","docs":"Finds the next [`Reject`][SearchStep::Reject] result.\nSee [`next_back()`][ReverseSearcher::next_back].","links":{"ReverseSearcher::next_back":"2:13363:3067","SearchStep::Reject":"2:50175:10535"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2754:2830":{"id":"0:2754:2830","crate_id":0,"name":"min_set_by_key","span":{"filename":"src/lib.rs","begin":[2992,4],"end":[2996,5]},"visibility":"default","docs":"Return all minimum elements of an iterator, as determined by\nthe specified function.\n\n# Examples\n\n```\nuse itertools::Itertools;\n\nlet a: [(i32, i32); 0] = [];\nassert_eq!(a.iter().min_set_by_key(|_| ()), Vec::<&(i32, i32)>::new());\n\nlet a = [(1, 2)];\nassert_eq!(a.iter().min_set_by_key(|&&(k,_)| k), vec![&(1, 2)]);\n\nlet a = [(1, 2), (2, 2), (3, 9), (4, 8), (5, 9)];\nassert_eq!(a.iter().min_set_by_key(|&&(_, k)| k), vec![&(1, 2), &(2, 2)]);\n\nlet a = [(1, 2), (1, 3), (1, 4), (1, 5)];\nassert_eq!(a.iter().min_set_by_key(|&&(k, _)| k), vec![&(1, 2), &(1, 3), &(1, 4), &(1, 5)]);\n```\n\nThe elements can be floats but no particular result is guaranteed\nif an element is NaN.","links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["key",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7898:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"generic","inner":"K"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2645:2479":{"id":"0:2645:2479","crate_id":0,"name":"try_collect","span":{"filename":"src/lib.rs","begin":[2009,4],"end":[2015,5]},"visibility":"default","docs":"`.try_collect()` is more convenient way of writing\n`.collect::<Result<_, _>>()`\n\n# Example\n\n```\nuse std::{fs, io};\nuse itertools::Itertools;\n\nfn process_dir_entries(entries: &[fs::DirEntry]) {\n    // ...\n}\n\nfn do_stuff() -> std::io::Result<()> {\n    let entries: Vec<_> = fs::read_dir(\".\")?.try_collect()?;\n    process_dir_entries(&entries);\n\n    Ok(())\n}\n```","links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"FromIterator","id":"2:8668:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3462:932":{"id":"0:3462:932","crate_id":0,"name":"next","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1332:2468":{"id":"0:1332:2468","crate_id":0,"name":"collect","span":{"filename":"src/grouping_map.rs","begin":[205,4],"end":[215,5]},"visibility":"public","docs":"Groups elements from the `GroupingMap` source by key and collects the elements of each group in\nan instance of `C`. The iteration order is preserved when inserting elements. \n \nReturn a `HashMap` associating the key of each group with the collection containing that group's elements.\n \n```\nuse itertools::Itertools;\nuse std::collections::HashSet;\n \nlet lookup = vec![0, 1, 2, 3, 4, 5, 6, 2, 3, 6].into_iter()\n    .into_grouping_map_by(|&n| n % 3)\n    .collect::<HashSet<_>>();\n \nassert_eq!(lookup[&0], vec![0, 3, 6].into_iter().collect::<HashSet<_>>());\nassert_eq!(lookup[&1], vec![1, 4].into_iter().collect::<HashSet<_>>());\nassert_eq!(lookup[&2], vec![2, 5].into_iter().collect::<HashSet<_>>());\nassert_eq!(lookup.len(), 3);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"C"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23769:1287":{"id":"2:23769:1287","crate_id":2,"name":"simd_le","span":null,"visibility":"default","docs":"Test if each lane is less than or equal to the corresponding lane in `other`.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdPartialEq","id":"2:23179:7077","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3382:225-0:4670:1724":{"id":"a:2:3382:225-0:4670:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3485":{"id":"0:3485","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"X","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Iter","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Iter"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Iter"}},{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}],"bindings":[]}}}},"items":["0:3498:1849","0:3499:932","0:3501:1754","0:3502:2582"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3218-0:1981:1693":{"id":"b:2:3218-0:1981:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Powerset","id":"0:1981:1693","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3913:1564":{"id":"0:3913:1564","crate_id":0,"name":"0","span":{"filename":"src/minmax.rs","begin":[15,11],"end":[15,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"a:2:9533:4792-0:2982:1635":{"id":"a:2:9533:4792-0:2982:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:92":{"id":"0:92","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[101,8],"end":[101,13]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::MapOk","name":"MapOk","id":"0:464:1638","glob":false}},"1:6470:10299":{"id":"1:6470:10299","crate_id":1,"name":"st_atime","span":null,"visibility":"default","docs":"Returns the last access time of the file, in seconds since Unix Epoch.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_atime());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2576:2091":{"id":"0:2576:2091","crate_id":0,"name":"merge_join_by","span":{"filename":"src/lib.rs","begin":[1003,4],"end":[1009,5]},"visibility":"default","docs":"Create an iterator that merges items from both this and the specified\niterator in ascending order.\n\nIt chooses whether to pair elements based on the `Ordering` returned by the\nspecified compare function. At any point, inspecting the tip of the\niterators `I` and `J` as items `i` of type `I::Item` and `j` of type\n`J::Item` respectively, the resulting iterator will:\n\n- Emit `EitherOrBoth::Left(i)` when `i < j`,\n  and remove `i` from its source iterator\n- Emit `EitherOrBoth::Right(j)` when `i > j`,\n  and remove `j` from its source iterator\n- Emit `EitherOrBoth::Both(i, j)` when  `i == j`,\n  and remove both `i` and `j` from their respective source iterators\n\n```\nuse itertools::Itertools;\nuse itertools::EitherOrBoth::{Left, Right, Both};\n\nlet multiples_of_2 = (0..10).step(2);\nlet multiples_of_3 = (0..10).step(3);\n\nitertools::assert_equal(\n    multiples_of_2.merge_join_by(multiples_of_3, |i, j| i.cmp(j)),\n    vec![Both(0, 0), Left(2), Right(3), Left(4), Both(6, 6), Left(8), Right(9)]\n);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"J"}],["cmp_fn",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"MergeJoinBy","id":"0:1723:1679","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}}}}],"output":{"kind":"resolved_path","inner":{"name":"std::cmp::Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3466:4735":{"id":"2:3466:4735","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3467:184","2:3468:923"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4104-0:4388:1716":{"id":"b:2:4104-0:4388:1716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3566:1849":{"id":"0:3566:1849","crate_id":0,"name":"Item","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"X"}]}}},"2:13364:23340":{"id":"2:13364:23340","crate_id":2,"name":"next_match_back","span":null,"visibility":"default","docs":"Finds the next [`Match`][SearchStep::Match] result.\nSee [`next_back()`][ReverseSearcher::next_back].","links":{"ReverseSearcher::next_back":"2:13363:3067","SearchStep::Match":"2:50171:5332"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:525":{"id":"0:525","crate_id":0,"name":null,"span":{"filename":"src/adaptors/multi_product.rs","begin":[156,0],"end":[230,1]},"visibility":{"restricted":{"parent":"0:497:3191","path":"::adaptors::multi_product"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiProduct","id":"0:2928:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:527:1849","0:528:932","0:529:502","0:532:1754","0:535:3247"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9532:4793-0:4092:1703":{"id":"a:2:9532:4793-0:4092:1703","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"St","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"St"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iterate","id":"0:4092:1703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3438":{"id":"0:3438","crate_id":0,"name":null,"span":{"filename":"src/either_or_both.rs","begin":[6,31],"end":[6,35]},"visibility":{"restricted":{"parent":"0:878:1747","path":"::either_or_both"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":["0:3441:722"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9099:2678":{"id":"2:9099:2678","crate_id":2,"name":"product","span":null,"visibility":"default","docs":"Iterates over the entire iterator, multiplying all the elements\n\nAn empty iterator returns the one value of the type.\n\n# Panics\n\nWhen calling `product()` and a primitive integer type is being returned,\nmethod will panic if the computation overflows and debug assertions are\nenabled.\n\n# Examples\n\n```\nfn factorial(n: u32) -> u32 {\n    (1..=n).product()\n}\nassert_eq!(factorial(0), 1);\nassert_eq!(factorial(1), 1);\nassert_eq!(factorial(5), 120);\n```","links":{},"attrs":["#[stable(feature = \"iter_arith\", since = \"1.11.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"P"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Product","id":"2:8635:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5556:6524":{"id":"1:5556:6524","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5557:23380","1:5558:23381","1:5559:23382","1:5560:23383"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3186:1436":{"id":"2:3186:1436","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":"Performs the conversion.","links":{},"attrs":["#[stable(feature = \"try_from\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3209:688":{"id":"2:3209:688","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:1537:1667":{"id":"a:2:3411:4706-0:1537:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunk","id":"0:1537:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3218-0:1158:1732":{"id":"b:2:3218-0:1158:1732","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Diff","id":"0:1158:1732","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:1036:15397":{"id":"1:1036:15397","crate_id":1,"name":"eq_ignore_ascii_case","span":null,"visibility":"default","docs":"Checks that two values are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Note\n\nThis method is deprecated in favor of the identically-named\ninherent methods on `u8`, `char`, `[u8]` and `str`.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":{"since":"1.26.0","note":"use inherent methods instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"5:6505:229":{"id":"5:6505:229","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6506:1415"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1474:1621":{"id":"0:1474:1621","crate_id":0,"name":"IntoIter","span":{"filename":"src/groupbylazy.rs","begin":[344,4],"end":[344,40]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Groups","id":"0:1476:1671","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}}}},"1:9138:16066":{"id":"1:9138:16066","crate_id":1,"name":"sqrt","span":null,"visibility":"default","docs":"Produces a vector where every lane has the square root value\nof the equivalently-indexed lane in `self`","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3203-0:3407:1748":{"id":"b:2:3203-0:3407:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:0:2854-0:4083:1702":{"id":"b:0:2854-0:4083:1702","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unfold","id":"0:4083:1702","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4118:667":{"id":"0:4118:667","crate_id":0,"name":"fmt","span":{"filename":"src/tee.rs","begin":[20,9],"end":[20,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4835:932":{"id":"0:4835:932","crate_id":0,"name":"next","span":{"filename":"src/ziptuple.rs","begin":[133,0],"end":[133,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5916:440":{"id":"5:5916:440","crate_id":5,"name":"concat","span":null,"visibility":"default","docs":"Implementation of [`[T]::concat`](slice::concat)","links":{"slice::concat":"5:5904:440"},"attrs":["#[unstable(feature = \"slice_concat_trait\", issue = \"27747\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["slice",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Concat","id":"5:5913:5378","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Item"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2027:3504":{"id":"0:2027:3504","crate_id":0,"name":"put_back_n","span":{"filename":"src/put_back_n_impl.rs","begin":[19,0],"end":[26,1]},"visibility":"public","docs":"Create an iterator where you can put back multiple values to the front\nof the iteration.\n\nIterator element type is `I::Item`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:2865-0:4083:1702":{"id":"b:2:2865-0:4083:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unfold","id":"0:4083:1702","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13732:61711":{"id":"2:13732:61711","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:15882:4444","crate::ops::IndexMut":"2:3683:4553","str::slice_unchecked":"2:13731:6679"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:3634":{"id":"0:3634","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"X","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Iter","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Iter"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Iter"}},{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}],"bindings":[]}}}},"items":["0:3643:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8925:5140":{"id":"2:8925:5140","crate_id":2,"name":"flat_map","span":null,"visibility":"default","docs":"Creates an iterator that works like map, but flattens nested structure.\n\nThe [`map`] adapter is very useful, but only when the closure\nargument produces values. If it produces an iterator instead, there's\nan extra layer of indirection. `flat_map()` will remove this extra layer\non its own.\n\nYou can think of `flat_map(f)` as the semantic equivalent\nof [`map`]ping, and then [`flatten`]ing as in `map(f).flatten()`.\n\nAnother way of thinking about `flat_map()`: [`map`]'s closure returns\none item for each element, and `flat_map()`'s closure returns an\niterator for each element.\n\n[`map`]: Iterator::map\n[`flatten`]: Iterator::flatten\n\n# Examples\n\nBasic usage:\n\n```\nlet words = [\"alpha\", \"beta\", \"gamma\"];\n\n// chars() returns an iterator\nlet merged: String = words.iter()\n                          .flat_map(|s| s.chars())\n                          .collect();\nassert_eq!(merged, \"alphabetagamma\");\n```","links":{"Iterator::flatten":"2:8928:1767","Iterator::map":"2:8895:851"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"FlatMap","id":"2:6639:4664","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"generic","inner":"U"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:4792-0:2430:1718":{"id":"a:2:9533:4792-0:2430:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WithPosition","id":"0:2430:1718","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:416:1629":{"id":"0:416:1629","crate_id":0,"name":"DedupByWithCount","span":{"filename":"src/adaptors/coalesce.rs","begin":[188,0],"end":[189,89]},"visibility":"public","docs":"An iterator adaptor that removes repeated duplicates, while keeping a count of how many\nrepeated elements were present. This will determine equality using a comparison function.\n\nSee [`.dedup_by_with_count()`](crate::Itertools::dedup_by_with_count) or\n[`.dedup_with_count()`](crate::Itertools::dedup_with_count) for more information.","links":{"crate::Itertools::dedup_by_with_count":"0:2591:2178","crate::Itertools::dedup_with_count":"0:2590:2173"},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"CoalesceBy","id":"0:343:3340","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"resolved_path","inner":{"name":"DedupPredWithCount2CoalescePred","id":"0:2887:3372","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Pred"}}],"bindings":[]}}}}},{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]}}],"bindings":[]}}}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Pred","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"b:2:3207-0:4092:1703":{"id":"b:2:3207-0:4092:1703","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iterate","id":"0:4092:1703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3411:4706-0:1723:1679":{"id":"a:2:3411:4706-0:1723:1679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeJoinBy","id":"0:1723:1679","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9533:4792-0:3748:1653":{"id":"a:2:9533:4792-0:3748:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CombinationsWithReplacement","id":"0:3748:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9532:4793-0:1054:1651":{"id":"a:2:9532:4793-0:1054:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Combinations","id":"0:1054:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:911:3473":{"id":"0:911:3473","crate_id":0,"name":"right_and_then","span":{"filename":"src/either_or_both.rs","begin":[157,4],"end":[165,5]},"visibility":"public","docs":"Apply the function `f` on the value `b`\nin `Right(b)` or `Both(_, b)` variants if it is present.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"B"}],"output":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:1537:1667":{"id":"b:2:2865-0:1537:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunk","id":"0:1537:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13766:57842":{"id":"2:13766:57842","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:13336:4565","prim@char":"1:15876:4439","`DoubleEndedIterator`":"2:8716:121","str::split":"2:13760:15667"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49808:5401","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13361:5417","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3015:415":{"id":"0:3015:415","crate_id":0,"name":"clone","span":{"filename":"src/adaptors/mod.rs","begin":[379,9],"end":[379,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Batching","id":"0:3007:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3042":{"id":"0:3042","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[658,16],"end":[658,21]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WhileSome","id":"0:3036:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3044:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1719:2091":{"id":"0:1719:2091","crate_id":0,"name":"merge_join_by","span":{"filename":"src/merge_join.rs","begin":[13,0],"end":[24,1]},"visibility":"public","docs":"Return an iterator adaptor that merge-joins items from the two base iterators in ascending order.\n\n[`IntoIterator`] enabled version of [`Itertools::merge_join_by`].","links":{"`IntoIterator`":"2:8672:152","`Itertools::merge_join_by`":"0:2576:2091"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["left",{"kind":"generic","inner":"I"}],["right",{"kind":"generic","inner":"J"}],["cmp_fn",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"MergeJoinBy","id":"0:1723:1679","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}},{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:4414:15592":{"id":"1:4414:15592","crate_id":1,"name":"is_read_vectored","span":null,"visibility":"default","docs":"Determines if this `Read`er has an efficient `read_vectored`\nimplementation.\n\nIf a `Read`er does not override the default `read_vectored`\nimplementation, code using it may want to avoid the method all together\nand coalesce writes into a single buffer for higher performance.\n\nThe default implementation returns `false`.","links":{},"attrs":["#[unstable(feature = \"can_vector\", issue = \"69941\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:123":{"id":"0:123","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[112,42],"end":[112,46]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::Step","name":"Step","id":"0:3017:1648","glob":false}},"1:5535:23375":{"id":"1:5535:23375","crate_id":1,"name":"ctime","span":null,"visibility":"default","docs":"Returns the last status change time of the file, in seconds since Unix Epoch.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let last_status_change_time = meta.ctime();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2758:2838":{"id":"0:2758:2838","crate_id":0,"name":"max_set","span":{"filename":"src/lib.rs","begin":[3021,4],"end":[3025,5]},"visibility":"default","docs":"Return all maximum elements of an iterator.\n\n# Examples\n\n```\nuse itertools::Itertools;\n\nlet a: [i32; 0] = [];\nassert_eq!(a.iter().max_set(), Vec::<&i32>::new());\n\nlet a = [1];\nassert_eq!(a.iter().max_set(), vec![&1]);\n\nlet a = [1, 2, 3, 4, 5];\nassert_eq!(a.iter().max_set(), vec![&5]);\n\nlet a = [1, 1, 1, 1];\nassert_eq!(a.iter().max_set(), vec![&1, &1, &1, &1]);\n```\n\nThe elements can be floats but no particular result is guaranteed\nif an element is NaN.","links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7898:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13346:4555":{"id":"2:13346:4555","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13348:5418","2:13349:23285","2:13350:23286","2:13351:23287","2:13352:23288","2:13353:23289","2:13354:23290"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9532:4793-0:3017:1648":{"id":"a:2:9532:4793-0:3017:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Step","id":"0:3017:1648","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3012":{"id":"0:3012","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[379,9],"end":[379,14]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Batching","id":"0:3007:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:3015:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3587":{"id":"0:3587","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"X","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Iter","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Iter"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Iter"}},{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}],"bindings":[]}}}},"items":["0:3597:1849","0:3598:932","0:3600:1754","0:3601:2582"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:657:932":{"id":"0:657:932","crate_id":0,"name":"next","span":{"filename":"src/adaptors/mod.rs","begin":[442,4],"end":[448,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13735:5442":{"id":"2:13735:5442","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15876:4439"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49760:4067","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13799:61720":{"id":"2:13799:61720","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14460:142":{"id":"2:14460:142","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14461:284","2:14462:525","2:14463:287","2:14464:1091"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3207-0:3928:1681":{"id":"b:2:3207-0:3928:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3443":{"id":"0:3443","crate_id":0,"name":null,"span":{"filename":"src/either_or_both.rs","begin":[6,37],"end":[6,42]},"visibility":{"restricted":{"parent":"0:878:1747","path":"::either_or_both"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":["0:3446:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3370:216-0:1537:1667":{"id":"a:2:3370:216-0:1537:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunk","id":"0:1537:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:0:2854-0:3928:1681":{"id":"b:0:2854-0:3928:1681","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6836:23452":{"id":"1:6836:23452","crate_id":1,"name":"quickack","span":null,"visibility":"default","docs":"Gets the value of the `TCP_QUICKACK` option on this socket.\n\nFor more information about this option, see [`TcpStreamExt::set_quickack`].\n\n# Examples\n\n```no_run\n#![feature(tcp_quickack)]\nuse std::net::TcpStream;\nuse std::os::linux::net::TcpStreamExt;\n\nlet stream = TcpStream::connect(\"127.0.0.1:8080\")\n        .expect(\"Couldn't connect to the server...\");\nstream.set_quickack(true).expect(\"set_quickack call failed\");\nassert_eq!(stream.quickack().unwrap_or(false), true);\n```","links":{"`TcpStreamExt::set_quickack`":"1:6835:23451"},"attrs":["#[unstable(feature = \"tcp_quickack\", issue = \"96256\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"bool"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4736":{"id":"0:4736","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[130,0],"end":[130,26]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]","#[allow(unused_assignments)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"}]}}],"bindings":[]}}}},"items":["0:4741:1849","0:4742:932","0:4743:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3464:1754":{"id":"0:3464:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:3017:1648":{"id":"b:2:2865-0:3017:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Step","id":"0:3017:1648","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:2954:1630":{"id":"b:2:2868-0:2954:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4761:688":{"id":"0:4761:688","crate_id":0,"name":"from","span":{"filename":"src/ziptuple.rs","begin":[131,0],"end":[131,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10822:22123":{"id":"2:10822:22123","crate_id":2,"name":"write_i64","span":null,"visibility":"default","docs":"Writes a single `i64` into this hasher.","links":{},"attrs":["#[stable(feature = \"hasher_write\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:607:3241":{"id":"0:607:3241","crate_id":0,"name":"into_parts","span":{"filename":"src/adaptors/mod.rs","begin":[201,4],"end":[204,5]},"visibility":"public","docs":"Split the `PutBack` into its parts.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},{"kind":"generic","inner":"I"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8717:3067":{"id":"2:8717:3067","crate_id":2,"name":"next_back","span":null,"visibility":"default","docs":"Removes and returns an element from the end of the iterator.\n\nReturns `None` when there are no more elements.\n\nThe [trait-level] docs contain more details.\n\n[trait-level]: DoubleEndedIterator\n\n# Examples\n\nBasic usage:\n\n```\nlet numbers = vec![1, 2, 3, 4, 5, 6];\n\nlet mut iter = numbers.iter();\n\nassert_eq!(Some(&1), iter.next());\nassert_eq!(Some(&6), iter.next_back());\nassert_eq!(Some(&5), iter.next_back());\nassert_eq!(Some(&2), iter.next());\nassert_eq!(Some(&3), iter.next());\nassert_eq!(Some(&4), iter.next());\nassert_eq!(None, iter.next());\nassert_eq!(None, iter.next_back());\n```\n\n# Remarks\n\nThe elements yielded by `DoubleEndedIterator`'s methods may differ from\nthe ones yielded by [`Iterator`]'s methods:\n\n```\nlet vec = vec![(1, 'a'), (1, 'b'), (1, 'c'), (2, 'a'), (2, 'b')];\nlet uniq_by_fst_comp = || {\n    let mut seen = std::collections::HashSet::new();\n    vec.iter().copied().filter(move |x| seen.insert(x.0))\n};\n\nassert_eq!(uniq_by_fst_comp().last(), Some((2, 'a')));\nassert_eq!(uniq_by_fst_comp().next_back(), Some((2, 'b')));\n\nassert_eq!(\n    uniq_by_fst_comp().fold(vec![], |mut v, x| {v.push(x); v}),\n    vec![(1, 'a'), (2, 'a')]\n);\nassert_eq!(\n    uniq_by_fst_comp().rfold(vec![], |mut v, x| {v.push(x); v}),\n    vec![(2, 'b'), (1, 'c')]\n);\n```","links":{"`Iterator`":"2:8873:159","DoubleEndedIterator":"2:8716:121"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3915":{"id":"0:3915","crate_id":0,"name":null,"span":{"filename":"src/minmax.rs","begin":[5,9],"end":[5,13]},"visibility":{"restricted":{"parent":"0:1748:1734","path":"::minmax"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:0:2854-0:1981:1693":{"id":"b:0:2854-0:1981:1693","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Powerset","id":"0:1981:1693","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3595:227":{"id":"2:3595:227","crate_id":2,"name":"Target","span":null,"visibility":"default","docs":"The resulting type after dereferencing.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"deref_target\"]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null}},"0:4052":{"id":"0:4052","crate_id":0,"name":null,"span":{"filename":"src/put_back_n_impl.rs","begin":[9,9],"end":[9,14]},"visibility":{"restricted":{"parent":"0:2020:1694","path":"::put_back_n_impl"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:4054:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:908:3470":{"id":"0:908:3470","crate_id":0,"name":"left_and_then","span":{"filename":"src/either_or_both.rs","begin":[145,4],"end":[153,5]},"visibility":"public","docs":"Apply the function `f` on the value `a` in `Left(a)` or `Both(a, _)` variants if it is\npresent.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"A"}],"output":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2624:2372":{"id":"0:2624:2372","crate_id":0,"name":"find_position","span":{"filename":"src/lib.rs","begin":[1748,4],"end":[1757,5]},"visibility":"default","docs":"Find the position and value of the first element satisfying a predicate.\n\nThe iterator is not advanced past the first element found.\n\n```\nuse itertools::Itertools;\n\nlet text = \"Hα\";\nassert_eq!(text.chars().find_position(|ch| ch.is_lowercase()), Some((1, 'α')));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["pred",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2795:2915":{"id":"0:2795:2915","crate_id":0,"name":"position_min_by_key","span":{"filename":"src/lib.rs","begin":[3298,4],"end":[3304,5]},"visibility":"default","docs":"Return the position of the minimum element in the iterator, as\ndetermined by the specified function.\n\nIf several elements are equally minimum, the position of the\nfirst of them is returned.\n\n# Examples\n\n```\nuse itertools::Itertools;\n\nlet a: [i32; 0] = [];\nassert_eq!(a.iter().position_min_by_key(|x| x.abs()), None);\n\nlet a = [-3_i32, 0, 1, 5, -10];\nassert_eq!(a.iter().position_min_by_key(|x| x.abs()), Some(1));\n\nlet a = [1_i32, 1, -1, -1];\nassert_eq!(a.iter().position_min_by_key(|x| x.abs()), Some(0));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["key",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"generic","inner":"K"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9141:16069":{"id":"1:9141:16069","crate_id":1,"name":"round","span":null,"visibility":"default","docs":"Rounds to the nearest integer value. Ties round toward zero.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4692":{"id":"0:4692","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[128,0],"end":[128,20]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"}]}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"","id":"2:8672:152","args":null}}}]}}],"bindings":[]}}}},"items":["0:4695:688"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9532:4793-0:4083:1702":{"id":"a:2:9532:4793-0:4083:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"St","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"St"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unfold","id":"0:4083:1702","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2986":{"id":"0:2986","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[168,9],"end":[168,14]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:2988:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13781:61715":{"id":"2:13781:61715","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3386:1645":{"id":"0:3386:1645","crate_id":0,"name":"Positions","span":{"filename":"src/adaptors/mod.rs","begin":[998,0],"end":[1002,1]},"visibility":"public","docs":"An iterator adapter to get the positions of each element that matches a predicate.\n\nSee [`.positions()`](crate::Itertools::positions) for more information.","links":{"crate::Itertools::positions":"0:2616:2340"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:3386:1645","a:2:9532:4793-0:3386:1645","a:2:3382:225-0:3386:1645","a:2:3370:216-0:3386:1645","a:2:3411:4706-0:3386:1645","b:0:2854-0:3386:1645","b:2:8676-0:3386:1645","b:2:4104-0:3386:1645","b:2:2865-0:3386:1645","b:2:3203-0:3386:1645","b:2:3207-0:3386:1645","b:2:3218-0:3386:1645","b:2:2868-0:3386:1645","b:2:3213-0:3386:1645","b:5:848-0:3386:1645","0:3392","0:830","0:836","0:842","0:846"]}},"2:11214:21636":{"id":"2:11214:21636","crate_id":2,"name":"get_unchecked","span":null,"visibility":"default","docs":"Returns a shared reference to the output at this location, without\nperforming any bounds checking.\nCalling this method with an out-of-bounds index or a dangling `slice` pointer\nis *[undefined behavior]* even if the resulting reference is not used.\n\n[undefined behavior]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html","links":{},"attrs":["#[unstable(feature = \"slice_index_methods\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["slice",{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SliceIndex","id":"2:11209:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3203-0:3861:1674":{"id":"b:2:3203-0:3861:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"ElemF"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13361:5417":{"id":"2:13361:5417","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13363:3067","2:13364:23340","2:13365:23341"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"2:13355:5418","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:14062:184":{"id":"2:14062:184","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The type of value produced on completion.","links":{},"attrs":["#[stable(feature = \"futures_api\", since = \"1.36.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"2:13806:61724":{"id":"2:13806:61724","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:310":{"id":"0:310","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[180,25],"end":[180,36]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::sources::repeat_call","name":"repeat_call","id":"0:2124:1739","glob":false}},"2:13756:5130":{"id":"2:13756:5130","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:47811:177","prim@char":"1:15876:4439","self::pattern":"2:13336:4565"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13361:5417","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:290":{"id":"0:290","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,0],"end":[172,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::diff::Diff","name":"Diff","id":"0:1158:1732","glob":false}},"1:4469:15625":{"id":"1:4469:15625","crate_id":1,"name":"write_vectored","span":null,"visibility":"default","docs":"Like [`write`], except that it writes from a slice of buffers.\n\nData is copied from each buffer in order, with the final buffer\nread from possibly being only partially consumed. This method must\nbehave as a call to [`write`] with the buffers concatenated would.\n\nThe default implementation calls [`write`] with either the first nonempty\nbuffer provided, or an empty one if none exists.\n\n# Examples\n\n```no_run\nuse std::io::IoSlice;\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() -> std::io::Result<()> {\n    let data1 = [1; 8];\n    let data2 = [15; 8];\n    let io_slice1 = IoSlice::new(&data1);\n    let io_slice2 = IoSlice::new(&data2);\n\n    let mut buffer = File::create(\"foo.txt\")?;\n\n    // Writes some prefix of the byte string, not necessarily all of it.\n    buffer.write_vectored(&[io_slice1, io_slice2])?;\n    Ok(())\n}\n```\n\n[`write`]: Write::write","links":{"Write::write":"1:4468:2499"},"attrs":["#[stable(feature = \"iovec\", since = \"1.36.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["bufs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"IoSlice","id":"1:10923:6578","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4104-0:1054:1651":{"id":"b:2:4104-0:1054:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Combinations","id":"0:1054:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3842":{"id":"0:3842","crate_id":0,"name":null,"span":{"filename":"src/grouping_map.rs","begin":[49,16],"end":[49,21]},"visibility":{"restricted":{"parent":"0:1274:1662","path":"::grouping_map"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupingMap","id":"0:3836:1663","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3844:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3203-0:4112:1705":{"id":"b:2:3203-0:4112:1705","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tee","id":"0:4112:1705","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4685:932":{"id":"0:4685:932","crate_id":0,"name":"next","span":{"filename":"src/ziptuple.rs","begin":[127,0],"end":[127,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6170":{"id":"5:6170","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5983:1358","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6171:62366","5:6172:3941","5:6175:62367","5:6178:62368","5:6190:62369","5:6191:62370","5:6192:4644","5:6193:15395","5:6194:15396"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3793:667":{"id":"0:3793:667","crate_id":0,"name":"fmt","span":{"filename":"src/format.rs","begin":[112,0],"end":[113,70]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:3951:1683":{"id":"b:2:3218-0:3951:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4088":{"id":"0:4088","crate_id":0,"name":null,"span":{"filename":"src/sources.rs","begin":[116,9],"end":[116,14]},"visibility":{"restricted":{"parent":"0:2115:1700","path":"::sources"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"St","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unfold","id":"0:4083:1702","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:4091:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:0:2854-0:3861:1674":{"id":"b:0:2854-0:3861:1674","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"ElemF"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:3861:1674":{"id":"b:2:2865-0:3861:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"ElemF"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3623:383":{"id":"2:3623:383","crate_id":2,"name":"call","span":null,"visibility":"default","docs":"Performs the call operation.","links":{},"attrs":["#[unstable(feature = \"fn_traits\", issue = \"29625\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["args",{"kind":"generic","inner":"Args"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"FnOnce","id":"2:3627:133","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":{"Other":"\"rust-call\""}},"has_body":false}},"0:319":{"id":"0:319","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[181,0],"end":[181,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::with_position::Position","name":"Position","id":"0:4617:1742","glob":false}},"5:851:5159":{"id":"5:851:5159","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4696":{"id":"0:4696","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[128,0],"end":[128,20]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]","#[allow(unused_assignments)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"}]}}],"bindings":[]}}}},"items":["0:4699:1849","0:4700:932","0:4701:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:333:2153":{"id":"0:333:2153","crate_id":0,"name":"coalesce","span":{"filename":"src/adaptors/coalesce.rs","begin":[1,0],"end":[235,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:343:3340","0:358:3341","0:379:1643","0:390:1627","0:2873:3358","0:395:3360","0:2881:3362","0:412:1626","0:416:1629","0:2887:3372","0:423:1628"],"is_stripped":true}},"0:3726:2582":{"id":"0:3726:2582","crate_id":0,"name":"fold","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["accum",{"kind":"generic","inner":"Acc"}],["f",{"kind":"generic","inner":"Fold"}]],"output":{"kind":"generic","inner":"Acc"},"c_variadic":false},"generics":{"params":[{"name":"Acc","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Fold","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Fold"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Acc"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"generic","inner":"Acc"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2704:2689":{"id":"0:2704:2689","crate_id":0,"name":"sorted_unstable","span":{"filename":"src/lib.rs","begin":[2497,4],"end":[2506,5]},"visibility":"default","docs":"Sort all iterator elements into a new iterator in ascending order.\n\n**Note:** This consumes the entire iterator, uses the\n[`slice::sort_unstable`] method and returns the result as a new\niterator that owns its elements.\n\nThe sorted iterator, if directly collected to a `Vec`, is converted\nwithout any extra copying or allocation cost.\n\n```\nuse itertools::Itertools;\n\n// sort the letters of the text in ascending order\nlet text = \"bdacfe\";\nitertools::assert_equal(text.chars().sorted_unstable(),\n                        \"abcdef\".chars());\n```","links":{"`slice::sort_unstable`":"2:12672:2690"},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"alloc::vec::IntoIter","id":"5:7484:1621","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4635:415":{"id":"0:4635:415","crate_id":0,"name":"clone","span":{"filename":"src/with_position.rs","begin":[37,15],"end":[37,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:4401:1715":{"id":"a:2:3411:4706-0:4401:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3203-0:4083:1702":{"id":"b:2:3203-0:4083:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unfold","id":"0:4083:1702","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:4792-0:3757:1657":{"id":"a:2:9533:4792-0:3757:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3370:216-0:4657:1722":{"id":"a:2:3370:216-0:4657:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3109:6984":{"id":"2:3109:6984","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:3108:6539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3218-0:4083:1702":{"id":"b:2:3218-0:4083:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unfold","id":"0:4083:1702","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:1527:1668":{"id":"b:2:2868-0:1527:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunks","id":"0:1527:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1873:4024":{"id":"0:1873:4024","crate_id":0,"name":"peeking_next","span":{"filename":"src/peeking_take_while.rs","begin":[25,4],"end":[34,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["accept",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1853":{"id":"0:1853","crate_id":0,"name":null,"span":{"filename":"src/peek_nth.rs","begin":[91,0],"end":[102,1]},"visibility":{"restricted":{"parent":"0:1826:1682","path":"::peek_nth"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"PeekingNext","id":"0:1868:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1855:4024"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3185:128":{"id":"2:3185:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":"The type returned in the event of a conversion error.","links":{},"attrs":["#[stable(feature = \"try_from\", since = \"1.34.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:4800:932":{"id":"0:4800:932","crate_id":0,"name":"next","span":{"filename":"src/ziptuple.rs","begin":[132,0],"end":[132,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:577:1848":{"id":"0:577:1848","crate_id":0,"name":"interleave","span":{"filename":"src/adaptors/mod.rs","begin":[39,0],"end":[48,1]},"visibility":"public","docs":"Create an iterator that interleaves elements in `i` and `j`.\n\n[`IntoIterator`] enabled version of `[Itertools::interleave]`.","links":{"`IntoIterator`":"2:8672:152"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["i",{"kind":"generic","inner":"I"}],["j",{"kind":"generic","inner":"J"}]],"output":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"a:2:3411:4706-0:3928:1681":{"id":"a:2:3411:4706-0:3928:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8929:3204":{"id":"2:8929:3204","crate_id":2,"name":"fuse","span":null,"visibility":"default","docs":"Creates an iterator which ends after the first [`None`].\n\nAfter an iterator returns [`None`], future calls may or may not yield\n[`Some(T)`] again. `fuse()` adapts an iterator, ensuring that after a\n[`None`] is given, it will always return [`None`] forever.\n\nNote that the [`Fuse`] wrapper is a no-op on iterators that implement\nthe [`FusedIterator`] trait. `fuse()` may therefore behave incorrectly\nif the [`FusedIterator`] trait is improperly implemented.\n\n[`Some(T)`]: Some\n[`FusedIterator`]: crate::iter::FusedIterator\n\n# Examples\n\nBasic usage:\n\n```\n// an iterator which alternates between Some and None\nstruct Alternate {\n    state: i32,\n}\n\nimpl Iterator for Alternate {\n    type Item = i32;\n\n    fn next(&mut self) -> Option<i32> {\n        let val = self.state;\n        self.state = self.state + 1;\n\n        // if it's even, Some(i32), else None\n        if val % 2 == 0 {\n            Some(val)\n        } else {\n            None\n        }\n    }\n}\n\nlet mut iter = Alternate { state: 0 };\n\n// we can see our iterator going back and forth\nassert_eq!(iter.next(), Some(0));\nassert_eq!(iter.next(), None);\nassert_eq!(iter.next(), Some(2));\nassert_eq!(iter.next(), None);\n\n// however, once we fuse it...\nlet mut iter = iter.fuse();\n\nassert_eq!(iter.next(), Some(4));\nassert_eq!(iter.next(), None);\n\n// it will always return `None` after the first time.\nassert_eq!(iter.next(), None);\nassert_eq!(iter.next(), None);\nassert_eq!(iter.next(), None);\n```","links":{"crate::iter::FusedIterator":"2:9153:3194","Some":"2:47813:220","`Fuse`":"2:46987:3192","`None`":"2:47811:177"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Fuse","id":"2:46987:3192","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4104-0:1883:1687":{"id":"b:2:4104-0:1883:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekingTakeWhile","id":"0:1883:1687","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4104-0:4092:1703":{"id":"b:2:4104-0:4092:1703","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iterate","id":"0:4092:1703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3203-0:791:1632":{"id":"b:2:3203-0:791:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterMapOk","id":"0:791:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:776:1849":{"id":"0:776:1849","crate_id":0,"name":"Item","span":{"filename":"src/adaptors/mod.rs","begin":[866,4],"end":[866,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}},"0:1738":{"id":"0:1738","crate_id":0,"name":null,"span":{"filename":"src/merge_join.rs","begin":[55,0],"end":[169,1]},"visibility":{"restricted":{"parent":"0:1696:1678","path":"::merge_join"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeJoinBy","id":"0:1723:1679","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:1742:1849","0:1743:932","0:1744:1754","0:1745:502","0:1746:3247","0:1747:2437"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:997:1801":{"id":"0:997:1801","crate_id":0,"name":"zip","span":{"filename":"src/free.rs","begin":[125,0],"end":[130,1]},"visibility":"public","docs":"Converts the arguments to iterators and zips them.\n\n[`IntoIterator`] enabled version of [`Iterator::zip`].\n \n## Example\n\n```\nuse itertools::zip;\n\nlet mut result: Vec<(i32, char)> = Vec::new();\n\nfor (a, b) in zip(&[1, 2, 3, 4, 5], &['a', 'b', 'c']) {\n    result.push((*a, *b));\n}\nassert_eq!(result, vec![(1, 'a'),(2, 'b'),(3, 'c')]);\n```","links":{"`IntoIterator`":"2:8672:152","`Iterator::zip`":"2:8890:1801"},"attrs":["#[deprecated(note =\n\"Use [std::iter::zip](https://doc.rust-lang.org/std/iter/fn.zip.html) instead\",\nsince = \"0.10.4\")]"],"deprecation":{"since":"0.10.4","note":"Use [std::iter::zip](https://doc.rust-lang.org/std/iter/fn.zip.html) instead"},"kind":"function","inner":{"decl":{"inputs":[["i",{"kind":"generic","inner":"I"}],["j",{"kind":"generic","inner":"J"}]],"output":{"kind":"resolved_path","inner":{"name":"Zip","id":"2:47116:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}},{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1935:1849":{"id":"0:1935:1849","crate_id":0,"name":"Item","span":{"filename":"src/permutations.rs","begin":[101,4],"end":[101,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7898:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8224:4593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:2881:3362":{"id":"0:2881:3362","crate_id":0,"name":"DedupEq","span":{"filename":"src/adaptors/coalesce.rs","begin":[144,0],"end":[144,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":[]}},"0:2701:2677":{"id":"0:2701:2677","crate_id":0,"name":"product1","span":{"filename":"src/lib.rs","begin":[2471,4],"end":[2477,5]},"visibility":"default","docs":"Iterate over the entire iterator and multiply all the elements.\n\nAn empty iterator returns `None`, otherwise `Some(product)`.\n\n# Panics\n\nWhen calling `product1()` and a primitive integer type is being returned,\nmethod will panic if the computation overflows and debug assertions are\nenabled.\n\n# Examples\n```\nuse itertools::Itertools;\n\nlet empty_product = (1..1).product1::<i32>();\nassert_eq!(empty_product, None);\n\nlet nonempty_product = (1..11).product1::<i32>();\nassert_eq!(nonempty_product, Some(3628800));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"std::iter::Product","id":"2:8635:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3370:216-0:1527:1668":{"id":"a:2:3370:216-0:1527:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunks","id":"0:1527:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:3920":{"id":"0:3920","crate_id":0,"name":null,"span":{"filename":"src/minmax.rs","begin":[5,22],"end":[5,31]},"visibility":{"restricted":{"parent":"0:1748:1734","path":"::minmax"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3378:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:786":{"id":"0:786","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[905,0],"end":[908,2]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOk","id":"0:3375:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9002:2389":{"id":"2:9002:2389","crate_id":2,"name":"find","span":null,"visibility":"default","docs":"Searches for an element of an iterator that satisfies a predicate.\n\n`find()` takes a closure that returns `true` or `false`. It applies\nthis closure to each element of the iterator, and if any of them return\n`true`, then `find()` returns [`Some(element)`]. If they all return\n`false`, it returns [`None`].\n\n`find()` is short-circuiting; in other words, it will stop processing\nas soon as the closure returns `true`.\n\nBecause `find()` takes a reference, and many iterators iterate over\nreferences, this leads to a possibly confusing situation where the\nargument is a double reference. You can see this effect in the\nexamples below, with `&&x`.\n\n[`Some(element)`]: Some\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nassert_eq!(a.iter().find(|&&x| x == 2), Some(&2));\n\nassert_eq!(a.iter().find(|&&x| x == 5), None);\n```\n\nStopping at the first `true`:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter();\n\nassert_eq!(iter.find(|&&x| x == 2), Some(&2));\n\n// we can still use `iter`, as there are more elements.\nassert_eq!(iter.next(), Some(&3));\n```\n\nNote that `iter.find(f)` is equivalent to `iter.filter(f).next()`.","links":{"`None`":"2:47811:177","Some":"2:47813:220"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9532:4793-0:3939:1685":{"id":"a:2:9532:4793-0:3939:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3663:243":{"id":"2:3663:243","crate_id":2,"name":"Yield","span":null,"visibility":"default","docs":"The type of value this generator yields.\n\nThis associated type corresponds to the `yield` expression and the\nvalues which are allowed to be returned each time a generator yields.\nFor example an iterator-as-a-generator would likely have this type as\n`T`, the type being iterated over.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"b:2:2868-0:3748:1653":{"id":"b:2:2868-0:3748:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CombinationsWithReplacement","id":"0:3748:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6467:10294":{"id":"1:6467:10294","crate_id":1,"name":"st_gid","span":null,"visibility":"default","docs":"Returns the group ID of the file owner.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_gid());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4894:3067":{"id":"0:4894:3067","crate_id":0,"name":"next_back","span":{"filename":"src/ziptuple.rs","begin":[134,0],"end":[134,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3370:216-0:2430:1718":{"id":"a:2:3370:216-0:2430:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WithPosition","id":"0:2430:1718","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4826":{"id":"0:4826","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[133,0],"end":[133,35]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]","#[allow(unused_assignments)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"}]}}],"bindings":[]}}}},"items":["0:4834:1849","0:4835:932","0:4836:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:830":{"id":"0:830","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[1004,0],"end":[1009,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:3396:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3213-0:3737:1655":{"id":"b:2:3213-0:3737:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:914:982":{"id":"0:914:982","crate_id":0,"name":"or","span":{"filename":"src/either_or_both.rs","begin":[186,4],"end":[192,5]},"visibility":"public","docs":"Returns a tuple consisting of the `l` and `r` in `Both(l, r)`, if present.\nOtherwise, returns the wrapped value for the present element, and the supplied\nvalue for the other. The first (`l`) argument is used for a missing `Left`\nvalue. The second (`r`) argument is used for a missing `Right` value.\n\nArguments passed to `or` are eagerly evaluated; if you are passing\nthe result of a function call, it is recommended to use [`or_else`],\nwhich is lazily evaluated.\n\n[`or_else`]: EitherOrBoth::or_else\n\n# Examples\n\n```\n# use itertools::EitherOrBoth;\nassert_eq!(EitherOrBoth::Both(\"tree\", 1).or(\"stone\", 5), (\"tree\", 1));\nassert_eq!(EitherOrBoth::Left(\"tree\").or(\"stone\", 5), (\"tree\", 5));\nassert_eq!(EitherOrBoth::Right(1).or(\"stone\", 5), (\"stone\", 1));\n```","links":{"EitherOrBoth::or_else":"0:916:3498"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["l",{"kind":"generic","inner":"A"}],["r",{"kind":"generic","inner":"B"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2573:2069":{"id":"0:2573:2069","crate_id":0,"name":"merge_by","span":{"filename":"src/lib.rs","begin":[967,4],"end":[973,5]},"visibility":"default","docs":"Return an iterator adaptor that merges the two base iterators in order.\nThis is much like [`.merge()`](Itertools::merge) but allows for a custom ordering.\n\nThis can be especially useful for sequences of tuples.\n\nIterator element type is `Self::Item`.\n\n```\nuse itertools::Itertools;\n\nlet a = (0..).zip(\"bc\".chars());\nlet b = (0..).zip(\"ad\".chars());\nlet it = a.merge_by(b, |x, y| x.1 <= y.1);\nitertools::assert_equal(it, vec![(0, 'a'), (0, 'b'), (1, 'c'), (1, 'd')]);\n```","links":{"Itertools::merge":"0:2571:2061"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"J"}],["is_first",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"MergeBy","id":"0:674:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1524:1849":{"id":"0:1524:1849","crate_id":0,"name":"Item","span":{"filename":"src/groupbylazy.rs","begin":[493,4],"end":[493,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Chunk","id":"0:1537:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}}},"0:2776:2878":{"id":"0:2776:2878","crate_id":0,"name":"minmax_by","span":{"filename":"src/lib.rs","begin":[3158,4],"end":[3166,5]},"visibility":"default","docs":"Return the minimum and maximum element of an iterator, as determined by\nthe specified comparison function.\n\nThe return value is a variant of [`MinMaxResult`] like for [`.minmax()`](Itertools::minmax).\n\nFor the minimum, the first minimal element is returned.  For the maximum,\nthe last maximal element wins.  This matches the behavior of the standard\n[`Iterator::min`] and [`Iterator::max`] methods.","links":{"`MinMaxResult`":"0:3904:1735","Itertools::minmax":"0:2769:1734","`Iterator::min`":"2:9043:2321","`Iterator::max`":"2:9042:3564"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["compare",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2392":{"id":"0:2392","crate_id":0,"name":null,"span":{"filename":"src/unique_impl.rs","begin":[97,0],"end":[101,2]},"visibility":{"restricted":{"parent":"0:2350:1714","path":"::unique_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"generic","inner":"V"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3483:3067":{"id":"0:3483:3067","crate_id":0,"name":"next_back","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4416:1744":{"id":"0:4416:1744","crate_id":0,"name":"multiunzip","span":{"filename":"src/unziptuple.rs","begin":[69,0],"end":[69,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2968:1631":{"id":"0:2968:1631","crate_id":0,"name":"InterleaveShortest","span":{"filename":"src/adaptors/mod.rs","begin":[90,0],"end":[97,1]},"visibility":"public","docs":"An iterator adaptor that alternates elements from the two iterators until\none of them runs out.\n\nThis iterator is *fused*.\n\nSee [`.interleave_shortest()`](crate::Itertools::interleave_shortest)\nfor more information.","links":{"crate::Itertools::interleave_shortest":"0:2523:1855"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:2968:1631","a:2:9532:4793-0:2968:1631","a:2:3382:225-0:2968:1631","a:2:3370:216-0:2968:1631","a:2:3411:4706-0:2968:1631","b:0:2854-0:2968:1631","b:2:8676-0:2968:1631","b:2:4104-0:2968:1631","b:2:2865-0:2968:1631","b:2:3203-0:2968:1631","b:2:3207-0:2968:1631","b:2:3218-0:2968:1631","b:2:2868-0:2968:1631","b:2:3213-0:2968:1631","b:5:848-0:2968:1631","0:2974","0:2978","0:592","0:599"]}},"a:2:9532:4793-0:3036:1642":{"id":"a:2:9532:4793-0:3036:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WhileSome","id":"0:3036:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10512:1619":{"id":"2:10512:1619","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10513:1555","2:10514:5538","2:10516:4961"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4426":{"id":"0:4426","crate_id":0,"name":null,"span":{"filename":"src/unziptuple.rs","begin":[71,0],"end":[71,52]},"visibility":{"restricted":{"parent":"0:2411:1743","path":"::unziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"IT","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"C"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MultiUnzip","id":"0:2415:1745","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"},{"kind":"generic","inner":"FromC"}]}}],"bindings":[]}}},"for":{"kind":"generic","inner":"IT"},"items":["0:4434:1744"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:306":{"id":"0:306","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[178,0],"end":[178,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::repeatn::repeat_n","name":"repeat_n","id":"0:2078:1738","glob":false}},"0:2626:2380":{"id":"0:2626:2380","crate_id":0,"name":"find_or_last","span":{"filename":"src/lib.rs","begin":[1770,4],"end":[1777,5]},"visibility":"default","docs":"Find the value of the first element satisfying a predicate or return the last element, if any.\n\nThe iterator is not advanced past the first element found.\n\n```\nuse itertools::Itertools;\n\nlet numbers = [1, 2, 3, 4];\nassert_eq!(numbers.iter().find_or_last(|&&x| x > 5), Some(&4));\nassert_eq!(numbers.iter().find_or_last(|&&x| x > 2), Some(&3));\nassert_eq!(std::iter::empty::<i32>().find_or_last(|&x| x > 5), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4104-0:2968:1631":{"id":"b:2:4104-0:2968:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InterleaveShortest","id":"0:2968:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3218-0:1452:1669":{"id":"b:2:3218-0:1452:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupBy","id":"0:1452:1669","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8965:5144":{"id":"2:8965:5144","crate_id":2,"name":"is_partitioned","span":null,"visibility":"default","docs":"Checks if the elements of this iterator are partitioned according to the given predicate,\nsuch that all those that return `true` precede all those that return `false`.\n\nSee also [`partition()`] and [`partition_in_place()`].\n\n[`partition()`]: Iterator::partition\n[`partition_in_place()`]: Iterator::partition_in_place\n\n# Examples\n\n```\n#![feature(iter_is_partitioned)]\n\nassert!(\"Iterator\".chars().is_partitioned(char::is_uppercase));\nassert!(!\"IntoIterator\".chars().is_partitioned(char::is_uppercase));\n```","links":{"Iterator::partition_in_place":"2:8950:5143","Iterator::partition":"2:8940:3063"},"attrs":["#[unstable(feature = \"iter_is_partitioned\", reason = \"new API\", issue =\n\"62544\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4639":{"id":"0:4639","crate_id":0,"name":null,"span":{"filename":"src/with_position.rs","begin":[37,29],"end":[37,38]},"visibility":{"restricted":{"parent":"0:2419:1717","path":"::with_position"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3378:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10582:667":{"id":"2:10582:667","crate_id":2,"name":"fmt","span":null,"visibility":"default","docs":"Formats the value using the given formatter.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48872:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1498":{"id":"0:1498","crate_id":0,"name":null,"span":{"filename":"src/groupbylazy.rs","begin":[402,0],"end":[409,1]},"visibility":{"restricted":{"parent":"0:1387:1665","path":"::groupbylazy"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"outlives":"'a"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:3618:3915","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Group","id":"0:1490:1670","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:1503:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3203-0:3939:1685":{"id":"b:2:3203-0:3939:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1346:2910":{"id":"0:1346:2910","crate_id":0,"name":"min_by","span":{"filename":"src/grouping_map.rs","begin":[338,4],"end":[345,5]},"visibility":"public","docs":"Groups elements from the `GroupingMap` source by key and finds the minimum of each group\nwith respect to the specified comparison function.\n \nIf several elements are equally minimum, the first element is picked.\n \nReturns a `HashMap` associating the key of each group with the minimum of that group's elements.\n \n```\nuse itertools::Itertools;\n \nlet lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()\n    .into_grouping_map_by(|&n| n % 3)\n    .min_by(|_key, x, y| y.cmp(x));\n \nassert_eq!(lookup[&0], 12);\nassert_eq!(lookup[&1], 7);\nassert_eq!(lookup[&2], 8);\nassert_eq!(lookup.len(), 3);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["compare",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"K"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"V"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"V"}}}],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:5099:2652":{"id":"a:2:3411:4706-0:5099:2652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2122":{"id":"0:2122","crate_id":0,"name":null,"span":{"filename":"src/sources.rs","begin":[15,0],"end":[18,1]},"visibility":{"restricted":{"parent":"0:2115:1700","path":"::sources"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatCall","id":"0:4075:1701","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:4081:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5534:23374":{"id":"1:5534:23374","crate_id":1,"name":"mtime_nsec","span":null,"visibility":"default","docs":"Returns the last modification time of the file, in nanoseconds since [`mtime`].\n\n[`mtime`]: MetadataExt::mtime\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let nano_last_modification_time = meta.mtime_nsec();\n    Ok(())\n}\n```","links":{"MetadataExt::mtime":"1:5533:23373"},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:892:2755":{"id":"0:892:2755","crate_id":0,"name":"right","span":{"filename":"src/either_or_both.rs","begin":[60,4],"end":[65,5]},"visibility":"public","docs":"If `Right`, or `Both`, return `Some` with the right value, otherwise, return `None`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:1158:1732":{"id":"b:2:2865-0:1158:1732","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Diff","id":"0:1158:1732","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3382:225-0:3904:1735":{"id":"a:2:3382:225-0:3904:1735","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3505:184":{"id":"2:3505:184","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `|` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:3023:415":{"id":"0:3023:415","crate_id":0,"name":"clone","span":{"filename":"src/adaptors/mod.rs","begin":[415,9],"end":[415,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Step","id":"0:3017:1648","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1881:4024":{"id":"0:1881:4024","crate_id":0,"name":"peeking_next","span":{"filename":"src/peeking_take_while.rs","begin":[59,4],"end":[71,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["accept",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:4792-0:3036:1642":{"id":"a:2:9533:4792-0:3036:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WhileSome","id":"0:3036:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2868-0:4129:1710":{"id":"b:2:2868-0:4129:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tuples","id":"0:4129:1710","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:995:2445":{"id":"0:995:2445","crate_id":0,"name":"rev","span":{"filename":"src/free.rs","begin":[101,0],"end":[106,1]},"visibility":"public","docs":"Iterate `iterable` in reverse.\n\n[`IntoIterator`] enabled version of [`Iterator::rev`].\n\n```\nuse itertools::rev;\n\nfor elt in rev(&[1, 2, 3]) {\n    /* loop body */\n}\n```","links":{"`IntoIterator`":"2:8672:152","`Iterator::rev`":"2:9082:2445"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"iter::Rev","id":"2:47044:3524","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2065":{"id":"0:2065","crate_id":0,"name":null,"span":{"filename":"src/rciter_impl.rs","begin":[85,0],"end":[94,1]},"visibility":{"restricted":{"parent":"0:2038:1696","path":"::rciter_impl"}},"docs":"Return an iterator from `&RcIter<I>` (by simply cloning it).","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}}},"items":["0:2068:1849","0:2069:1621","0:2070:777"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4714":{"id":"0:4714","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[129,0],"end":[129,23]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]","#[allow(unused_assignments)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"}]}}],"bindings":[]}}}},"items":["0:4718:1849","0:4719:932","0:4720:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1651:1677":{"id":"0:1651:1677","crate_id":0,"name":"KMergeBy","span":{"filename":"src/kmerge_impl.rs","begin":[156,0],"end":[161,1]},"visibility":"public","docs":"An iterator adaptor that merges an abitrary number of base iterators\naccording to an ordering function.\n\nIterator element type is `I::Item`.\n\nSee [`.kmerge_by()`](crate::Itertools::kmerge_by) for more\ninformation.","links":{"crate::Itertools::kmerge_by":"0:2580:1733"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:1651:1677","a:2:9532:4793-0:1651:1677","a:2:3382:225-0:1651:1677","a:2:3370:216-0:1651:1677","a:2:3411:4706-0:1651:1677","b:0:2854-0:1651:1677","b:2:8676-0:1651:1677","b:2:4104-0:1651:1677","b:2:2865-0:1651:1677","b:2:3203-0:1651:1677","b:2:3207-0:1651:1677","b:2:3218-0:1651:1677","b:2:2868-0:1651:1677","b:2:3213-0:1651:1677","b:5:848-0:1651:1677","0:1656","0:1664","0:1667","0:1675"]}},"0:1585:1754":{"id":"0:1585:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/intersperse.rs","begin":[89,4],"end":[94,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:1032:5158":{"id":"1:1032:5158","crate_id":1,"name":"Owned","span":null,"visibility":"default","docs":"Container type for copied ASCII characters.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":{"since":"1.26.0","note":"use inherent methods instead"},"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"2:3370:216":{"id":"2:3370:216","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9532:4793-0:1723:1679":{"id":"a:2:9532:4793-0:1723:1679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeJoinBy","id":"0:1723:1679","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9532:4793-0:3777:1658":{"id":"a:2:9532:4793-0:3777:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6509:1415":{"id":"5:6509:1415","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8479:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:4401:1715":{"id":"b:2:2865-0:4401:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3382:225-0:2992:1634":{"id":"a:2:3382:225-0:2992:1634","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Product","id":"0:2992:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:74":{"id":"0:74","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[95,8],"end":[95,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::FilterMapOk","name":"FilterMapOk","id":"0:791:1632","glob":false}},"5:847:5160":{"id":"5:847:5160","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":"Uses borrowed data to replace owned data, usually by cloning.\n\nThis is borrow-generalized version of [`Clone::clone_from`].\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s: String = String::new();\n\"hello\".clone_into(&mut s);\n\nlet mut v: Vec<i32> = Vec::new();\n[1, 2][..].clone_into(&mut v);\n```","links":{"`Clone::clone_from`":"2:2886:417"},"attrs":["#[stable(feature = \"toowned_clone_into\", since = \"1.63.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3982:4024":{"id":"0:3982:4024","crate_id":0,"name":"peeking_next","span":{"filename":"src/peeking_take_while.rs","begin":[144,0],"end":[144,61]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["accept",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3536:1754":{"id":"0:3536:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:874:3067":{"id":"0:874:3067","crate_id":0,"name":"next_back","span":{"filename":"src/adaptors/mod.rs","begin":[1137,4],"end":[1144,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:3939:1685":{"id":"b:2:2868-0:3939:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:976":{"id":"0:976","crate_id":0,"name":null,"span":{"filename":"src/free.rs","begin":[32,0],"end":[32,35]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::kmerge_impl::kmerge","name":"kmerge","id":"0:1649:2101","glob":false}},"0:441:383":{"id":"0:441:383","crate_id":0,"name":"call","span":{"filename":"src/adaptors/map.rs","begin":[13,4],"end":[13,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"qualified_path","inner":{"name":"Out","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:438:3378","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:5101:106":{"id":"0:5101:106","crate_id":0,"name":"Continue","span":{"filename":"src/lib.rs","begin":[3764,4],"end":[3764,15]},"visibility":"default","docs":"Continue folding with this value","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:5103:1564"]}},"b:2:3218-0:674:1640":{"id":"b:2:3218-0:674:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeBy","id":"0:674:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5504:23360":{"id":"1:5504:23360","crate_id":1,"name":"write_all_at","span":null,"visibility":"default","docs":"Attempts to write an entire buffer starting from a given offset.\n\nThe offset is relative to the start of the file and thus independent\nfrom the current cursor.\n\nThe current file cursor is not affected by this function.\n\nThis method will continuously call [`write_at`] until there is no more data\nto be written or an error of non-[`io::ErrorKind::Interrupted`] kind is\nreturned. This method will not return until the entire buffer has been\nsuccessfully written or such an error occurs. The first error that is\nnot of [`io::ErrorKind::Interrupted`] kind generated from this method will be\nreturned.\n\n# Errors\n\nThis function will return the first error of\nnon-[`io::ErrorKind::Interrupted`] kind that [`write_at`] returns.\n\n[`write_at`]: FileExt::write_at\n\n# Examples\n\n```no_run\nuse std::fs::File;\nuse std::io;\nuse std::os::unix::prelude::FileExt;\n\nfn main() -> io::Result<()> {\n    let file = File::open(\"foo.txt\")?;\n\n    // We now write at the offset 10.\n    file.write_all_at(b\"sushi\", 10)?;\n    Ok(())\n}\n```","links":{"`io::ErrorKind::Interrupted`":"1:10863:10656","FileExt::write_at":"1:5503:23359"},"attrs":["#[stable(feature = \"rw_exact_all_at\", since = \"1.33.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["offset",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3168:3314":{"id":"0:3168:3314","crate_id":0,"name":"Tuple5Combination","span":{"filename":"src/adaptors/mod.rs","begin":[825,0],"end":[825,69]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"1:6234:6547":{"id":"1:6234:6547","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6235:23427","1:6236:10367","1:6237:23428","1:6238:23429","1:6239:23430","1:6240:23431"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10409:6539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:4104-0:3777:1658":{"id":"b:2:4104-0:3777:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3203-0:709:1641":{"id":"b:2:3203-0:709:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TakeWhileRef","id":"0:709:1641","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:9063:3811":{"id":"2:9063:3811","crate_id":2,"name":"min_by_key","span":null,"visibility":"default","docs":"Returns the element that gives the minimum value from the\nspecified function.\n\nIf several elements are equally minimum, the first element is\nreturned. If the iterator is empty, [`None`] is returned.\n\n# Examples\n\n```\nlet a = [-3_i32, 0, 1, 5, -10];\nassert_eq!(*a.iter().min_by_key(|x| x.abs()).unwrap(), 0);\n```","links":{"`None`":"2:47811:177"},"attrs":["#[stable(feature = \"iter_cmp_by_key\", since = \"1.6.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"generic","inner":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2149":{"id":"0:2149","crate_id":0,"name":null,"span":{"filename":"src/sources.rs","begin":[152,0],"end":[167,1]},"visibility":{"restricted":{"parent":"0:2115:1700","path":"::sources"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"St","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"St"}}}],"output":{"kind":"generic","inner":"St"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iterate","id":"0:4092:1703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:2152:1849","0:2153:932","0:2154:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3411:4706-0:3904:1735":{"id":"a:2:3411:4706-0:3904:1735","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9533:4792-0:1723:1679":{"id":"a:2:9533:4792-0:1723:1679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeJoinBy","id":"0:1723:1679","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:23242:6640":{"id":"2:23242:6640","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23232:6539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3213-0:4129:1710":{"id":"b:2:3213-0:4129:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tuples","id":"0:4129:1710","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3182:688":{"id":"2:3182:688","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Converts to this type from the input type.","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:8888:1831":{"id":"2:8888:1831","crate_id":2,"name":"chain","span":null,"visibility":"default","docs":"Takes two iterators and creates a new iterator over both in sequence.\n\n`chain()` will return a new iterator which will first iterate over\nvalues from the first iterator and then over values from the second\niterator.\n\nIn other words, it links two iterators together, in a chain. 🔗\n\n[`once`] is commonly used to adapt a single value into a chain of\nother kinds of iteration.\n\n# Examples\n\nBasic usage:\n\n```\nlet a1 = [1, 2, 3];\nlet a2 = [4, 5, 6];\n\nlet mut iter = a1.iter().chain(a2.iter());\n\nassert_eq!(iter.next(), Some(&1));\nassert_eq!(iter.next(), Some(&2));\nassert_eq!(iter.next(), Some(&3));\nassert_eq!(iter.next(), Some(&4));\nassert_eq!(iter.next(), Some(&5));\nassert_eq!(iter.next(), Some(&6));\nassert_eq!(iter.next(), None);\n```\n\nSince the argument to `chain()` uses [`IntoIterator`], we can pass\nanything that can be converted into an [`Iterator`], not just an\n[`Iterator`] itself. For example, slices (`&[T]`) implement\n[`IntoIterator`], and so can be passed to `chain()` directly:\n\n```\nlet s1 = &[1, 2, 3];\nlet s2 = &[4, 5, 6];\n\nlet mut iter = s1.iter().chain(s2);\n\nassert_eq!(iter.next(), Some(&1));\nassert_eq!(iter.next(), Some(&2));\nassert_eq!(iter.next(), Some(&3));\nassert_eq!(iter.next(), Some(&4));\nassert_eq!(iter.next(), Some(&5));\nassert_eq!(iter.next(), Some(&6));\nassert_eq!(iter.next(), None);\n```\n\nIf you work with Windows API, you may wish to convert [`OsStr`] to `Vec<u16>`:\n\n```\n#[cfg(windows)]\nfn os_str_to_utf16(s: &std::ffi::OsStr) -> Vec<u16> {\n    use std::os::windows::ffi::OsStrExt;\n    s.encode_wide().chain(std::iter::once(0)).collect()\n}\n```\n\n[`once`]: crate::iter::once\n[`OsStr`]: ../../std/ffi/struct.OsStr.html","links":{"crate::iter::once":"2:8448:1618","`IntoIterator`":"2:8672:152","`Iterator`":"2:8873:159"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Chain","id":"2:46904:3541","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4906":{"id":"0:4906","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[135,0],"end":[135,41]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]","#[allow(unused_assignments)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"}]}}],"bindings":[]}}}},"items":["0:4916:1849","0:4917:932","0:4918:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3468:923":{"id":"2:3468:923","crate_id":2,"name":"neg","span":null,"visibility":"default","docs":"Performs the unary `-` operation.\n\n# Example\n\n```\nlet x: i32 = 12;\nassert_eq!(-x, -12);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Neg","id":"2:3466:4735","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:6641:23409":{"id":"1:6641:23409","crate_id":1,"name":"from_raw_fd","span":null,"visibility":"default","docs":"Constructs a new instance of `Self` from the given raw file\ndescriptor.\n\nThis function is typically used to **consume ownership** of the\nspecified file descriptor. When used in this way, the returned object\nwill take responsibility for closing it when the object goes out of\nscope.\n\nHowever, consuming ownership is not strictly required. Use a\n[`From<OwnedFd>::from`] implementation for an API which strictly\nconsumes ownership.\n\n# Safety\n\nThe `fd` passed in must be a valid and open file descriptor.\n\n# Example\n\n```no_run\nuse std::fs::File;\n# use std::io;\n#[cfg(unix)]\nuse std::os::unix::io::{FromRawFd, IntoRawFd, RawFd};\n#[cfg(target_os = \"wasi\")]\nuse std::os::wasi::io::{FromRawFd, IntoRawFd, RawFd};\n\nlet f = File::open(\"foo.txt\")?;\n# #[cfg(any(unix, target_os = \"wasi\"))]\nlet raw_fd: RawFd = f.into_raw_fd();\n// SAFETY: no other functions should call `from_raw_fd`, so there\n// is only one owner for the file descriptor.\n# #[cfg(any(unix, target_os = \"wasi\"))]\nlet f = unsafe { File::from_raw_fd(raw_fd) };\n# Ok::<(), io::Error>(())\n```","links":{"`From<OwnedFd>::from`":"2:3182:688"},"attrs":["#[stable(feature = \"from_raw_os\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["fd",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}},"0:808":{"id":"0:808","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[945,0],"end":[986,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"T"}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterMapOk","id":"0:791:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:814:1849","0:815:932","0:816:1754","0:817:2582","0:821:2468"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3906:2943":{"id":"0:3906:2943","crate_id":0,"name":"NoElements","span":{"filename":"src/minmax.rs","begin":[8,4],"end":[8,14]},"visibility":"default","docs":"Empty iterator","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:1819:3067":{"id":"0:1819:3067","crate_id":0,"name":"next_back","span":{"filename":"src/pad_tail.rs","begin":[74,4],"end":[84,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4837":{"id":"0:4837","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[133,0],"end":[133,35]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"}]}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3213-0:1883:1687":{"id":"b:2:3213-0:1883:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekingTakeWhile","id":"0:1883:1687","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3629:1754":{"id":"0:3629:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6476:10297":{"id":"1:6476:10297","crate_id":1,"name":"st_blksize","span":null,"visibility":"default","docs":"Returns the \"preferred\" block size for efficient filesystem I/O.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_blksize());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4388:1716":{"id":"0:4388:1716","crate_id":0,"name":"UniqueBy","span":{"filename":"src/unique_impl.rs","begin":[12,0],"end":[19,1]},"visibility":"public","docs":"An iterator adapter to filter out duplicate elements.\n\nSee [`.unique_by()`](crate::Itertools::unique) for more information.","links":{"crate::Itertools::unique":"0:2597:2205"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:4388:1716","a:2:9532:4793-0:4388:1716","a:2:3382:225-0:4388:1716","a:2:3370:216-0:4388:1716","a:2:3411:4706-0:4388:1716","b:0:2854-0:4388:1716","b:2:8676-0:4388:1716","b:2:4104-0:4388:1716","b:2:2865-0:4388:1716","b:2:3203-0:4388:1716","b:2:3207-0:4388:1716","b:2:3218-0:4388:1716","b:2:2868-0:4388:1716","b:2:3213-0:4388:1716","b:5:848-0:4388:1716","0:4395","0:2366","0:2378","0:2387","0:2392"]}},"0:2461:932":{"id":"0:2461:932","crate_id":0,"name":"next","span":{"filename":"src/zip_eq_impl.rs","begin":[43,4],"end":[50,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4436":{"id":"0:4436","crate_id":0,"name":null,"span":{"filename":"src/unziptuple.rs","begin":[72,0],"end":[72,64]},"visibility":{"restricted":{"parent":"0:2411:1743","path":"::unziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"IT","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"C"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"D"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MultiUnzip","id":"0:2415:1745","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"},{"kind":"generic","inner":"FromC"},{"kind":"generic","inner":"FromD"}]}}],"bindings":[]}}},"for":{"kind":"generic","inner":"IT"},"items":["0:4446:1744"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:0:2854-0:2968:1631":{"id":"b:0:2854-0:2968:1631","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InterleaveShortest","id":"0:2968:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5122":{"id":"0:5122","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3761,33],"end":[3761,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:5124:611"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:0:2854-0:709:1641":{"id":"b:0:2854-0:709:1641","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TakeWhileRef","id":"0:709:1641","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:702:1849":{"id":"0:702:1849","crate_id":0,"name":"Item","span":{"filename":"src/adaptors/mod.rs","begin":[568,4],"end":[568,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:3207-0:3036:1642":{"id":"b:2:3207-0:3036:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WhileSome","id":"0:3036:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4965:1754":{"id":"0:4965:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/ziptuple.rs","begin":[136,0],"end":[136,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:662:3274":{"id":"0:662:3274","crate_id":0,"name":"MergePredicate","span":{"filename":"src/adaptors/mod.rs","begin":[469,0],"end":[471,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:664:3275"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3203-0:3045:1644":{"id":"b:2:3203-0:3045:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleCombinations","id":"0:3045:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1889":{"id":"0:1889","crate_id":0,"name":null,"span":{"filename":"src/peeking_take_while.rs","begin":[86,0],"end":[91,1]},"visibility":{"restricted":{"parent":"0:1858:1686","path":"::peeking_take_while"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"std::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekingTakeWhile","id":"0:1883:1687","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:3961:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5571:23391":{"id":"1:5571:23391","crate_id":1,"name":"file_name_ref","span":null,"visibility":"default","docs":"Returns a reference to the underlying `OsStr` of this entry's filename.\n\n# Examples\n\n```\n#![feature(dir_entry_ext2)]\nuse std::os::unix::fs::DirEntryExt2;\nuse std::{fs, io};\n\nfn main() -> io::Result<()> {\n    let mut entries = fs::read_dir(\".\")?.collect::<Result<Vec<_>, io::Error>>()?;\n    entries.sort_unstable_by(|a, b| a.file_name_ref().cmp(b.file_name_ref()));\n\n    for p in entries {\n        println!(\"{p:?}\");\n    }\n\n    Ok(())\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2654:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3382:225-0:4142:1708":{"id":"a:2:3382:225-0:4142:1708","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleWindows","id":"0:4142:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2087:3067":{"id":"0:2087:3067","crate_id":0,"name":"next_back","span":{"filename":"src/repeatn.rs","begin":[48,4],"end":[50,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3203-0:3017:1648":{"id":"b:2:3203-0:3017:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Step","id":"0:3017:1648","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3370:216-0:4644:1720":{"id":"a:2:3370:216-0:4644:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4617:1742":{"id":"0:4617:1742","crate_id":0,"name":"Position","span":{"filename":"src/with_position.rs","begin":[38,0],"end":[47,1]},"visibility":"public","docs":"A value yielded by `WithPosition`.\nIndicates the position of this element in the iterator results.\n\nSee [`.with_position()`](crate::Itertools::with_position) for more information.","links":{"crate::Itertools::with_position":"0:2615:1717"},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:4619:4373","0:4622:4375","0:4625:4377","0:4628:4379"],"impls":["0:2438","a:2:9533:4792-0:4617:1742","a:2:9532:4793-0:4617:1742","a:2:3382:225-0:4617:1742","a:2:3370:216-0:4617:1742","a:2:3411:4706-0:4617:1742","b:2:4104-0:4617:1742","b:2:2865-0:4617:1742","b:2:3203-0:4617:1742","b:2:3207-0:4617:1742","b:2:3218-0:4617:1742","b:2:2868-0:4617:1742","b:2:3213-0:4617:1742","b:5:848-0:4617:1742","0:4631","0:4633","0:4636","0:4639","0:4641"]}},"2:2973:801":{"id":"2:2973:801","crate_id":2,"name":"le","span":null,"visibility":"default","docs":"This method tests less than or equal to (for `self` and `other`) and is used by the `<=`\noperator.\n\n# Examples\n\n```\nlet result = 1.0 <= 2.0;\nassert_eq!(result, true);\n\nlet result = 2.0 <= 2.0;\nassert_eq!(result, true);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Rhs"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8676-0:3748:1653":{"id":"b:2:8676-0:3748:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CombinationsWithReplacement","id":"0:3748:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:23070:16121":{"id":"2:23070:16121","crate_id":2,"name":"signum","span":null,"visibility":"default","docs":"Replaces each lane with a number that represents its sign.\n\n* `1.0` if the number is positive, `+0.0`, or `INFINITY`\n* `-1.0` if the number is negative, `-0.0`, or `NEG_INFINITY`\n* `NAN` if the number is `NAN`","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2396":{"id":"0:2396","crate_id":0,"name":null,"span":{"filename":"src/unique_impl.rs","begin":[103,0],"end":[129,1]},"visibility":{"restricted":{"parent":"0:2350:1714","path":"::unique_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:2398:1849","0:2399:932","0:2400:1754","0:2401:502"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1775":{"id":"0:1775","crate_id":0,"name":null,"span":{"filename":"src/multipeek_impl.rs","begin":[32,0],"end":[39,1]},"visibility":{"restricted":{"parent":"0:1757:1680","path":"::multipeek_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1777:4017"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2865-0:2928:1649":{"id":"b:2:2865-0:2928:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiProduct","id":"0:2928:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:734:1849":{"id":"0:734:1849","crate_id":0,"name":"Item","span":{"filename":"src/adaptors/mod.rs","begin":[672,4],"end":[672,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"A"}}},"a:2:9533:4792-0:4388:1716":{"id":"a:2:9533:4792-0:4388:1716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2868-0:4092:1703":{"id":"b:2:2868-0:4092:1703","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iterate","id":"0:4092:1703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3382:225-0:709:1641":{"id":"a:2:3382:225-0:709:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TakeWhileRef","id":"0:709:1641","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9533:4792-0:4617:1742":{"id":"a:2:9533:4792-0:4617:1742","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3382:225-0:1054:1651":{"id":"a:2:3382:225-0:1054:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Combinations","id":"0:1054:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3567:932":{"id":"0:3567:932","crate_id":0,"name":"next","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:664:3275":{"id":"0:664:3275","crate_id":0,"name":"merge_pred","span":{"filename":"src/adaptors/mod.rs","begin":[470,4],"end":[470,51]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["a",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}],["b",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3207-0:1723:1679":{"id":"b:2:3207-0:1723:1679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeJoinBy","id":"0:1723:1679","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3370:216-0:2968:1631":{"id":"a:2:3370:216-0:2968:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InterleaveShortest","id":"0:2968:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4951:688":{"id":"0:4951:688","crate_id":0,"name":"from","span":{"filename":"src/ziptuple.rs","begin":[136,0],"end":[136,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9532:4793-0:2954:1630":{"id":"a:2:9532:4793-0:2954:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[91,8],"end":[91,22]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::DedupWithCount","name":"DedupWithCount","id":"0:423:1628","glob":false}},"0:1781":{"id":"0:1781","crate_id":0,"name":null,"span":{"filename":"src/multipeek_impl.rs","begin":[64,0],"end":[79,1]},"visibility":{"restricted":{"parent":"0:1757:1680","path":"::multipeek_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"PeekingNext","id":"0:1868:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1783:4024"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:0:2854-0:3375:1633":{"id":"b:0:2854-0:3375:1633","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOk","id":"0:3375:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1475:777":{"id":"0:1475:777","crate_id":0,"name":"into_iter","span":{"filename":"src/groupbylazy.rs","begin":[346,4],"end":[348,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8672:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2304:4317":{"id":"0:2304:4317","crate_id":0,"name":"make","span":{"filename":"src/duplicates_impl.rs","begin":[121,8],"end":[121,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"generic","inner":"V"}]],"output":{"kind":"qualified_path","inner":{"name":"Container","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:2300:4315","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:4467:1619":{"id":"1:4467:1619","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4468:2499","1:4469:15625","1:4471:15626","1:4472:7526","1:4473:15627","1:4474:15628","1:4475:4961","1:4484:3938"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3832:184":{"id":"2:3832:184","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The type of the value produced by `?` when *not* short-circuiting.","links":{},"attrs":["#[unstable(feature = \"try_trait_v2\", issue = \"84277\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"b:2:2868-0:4048:1695":{"id":"b:2:2868-0:4048:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10816:22117":{"id":"2:10816:22117","crate_id":2,"name":"write_u64","span":null,"visibility":"default","docs":"Writes a single `u64` into this hasher.","links":{},"attrs":["#[stable(feature = \"hasher_write\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13712:3424":{"id":"2:13712:3424","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13743:2406":{"id":"2:13743:2406","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:13336:4565","prim@char":"1:15876:4439"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2496:1849":{"id":"0:2496:1849","crate_id":0,"name":"Item","span":{"filename":"src/zip_longest.rs","begin":[37,4],"end":[37,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:1921":{"id":"0:1921","crate_id":0,"name":null,"span":{"filename":"src/permutations.rs","begin":[18,0],"end":[23,1]},"visibility":{"restricted":{"parent":"0:1904:1688","path":"::permutations"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Permutations","id":"0:1917:1689","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:4007:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8635:1634":{"id":"2:8635:1634","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8637:2678"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1667":{"id":"0:1667","crate_id":0,"name":null,"span":{"filename":"src/kmerge_impl.rs","begin":[195,0],"end":[222,1]},"visibility":{"restricted":{"parent":"0:1604:1675","path":"::kmerge_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"KMergePredicate","id":"0:1639:3963","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:1670:1849","0:1671:932","0:1673:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3370:216-0:3861:1674":{"id":"a:2:3370:216-0:3861:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"ElemF","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"ElemF"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"ElemF"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4616:415":{"id":"0:4616:415","crate_id":0,"name":"clone","span":{"filename":"src/with_position.rs","begin":[20,4],"end":[20,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3254:116":{"id":"2:3254:116","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3255:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4720:1754":{"id":"0:4720:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/ziptuple.rs","begin":[129,0],"end":[129,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14549:21216":{"id":"2:14549:21216","crate_id":2,"name":"grow_zeroed","span":null,"visibility":"default","docs":"Behaves like `grow`, but also ensures that the new contents are set to zero before being\nreturned.\n\nThe memory block will contain the following contents after a successful call to\n`grow_zeroed`:\n  * Bytes `0..old_layout.size()` are preserved from the original allocation.\n  * Bytes `old_layout.size()..old_size` will either be preserved or zeroed, depending on\n    the allocator implementation. `old_size` refers to the size of the memory block prior\n    to the `grow_zeroed` call, which may be larger than the size that was originally\n    requested when it was allocated.\n  * Bytes `old_size..new_size` are zeroed. `new_size` refers to the size of the memory\n    block returned by the `grow_zeroed` call.\n\n# Safety\n\n* `ptr` must denote a block of memory [*currently allocated*] via this allocator.\n* `old_layout` must [*fit*] that block of memory (The `new_layout` argument need not fit it.).\n* `new_layout.size()` must be greater than or equal to `old_layout.size()`.\n\nNote that `new_layout.align()` need not be the same as `old_layout.align()`.\n\n[*currently allocated*]: #currently-allocated-memory\n[*fit*]: #memory-fitting\n\n# Errors\n\nReturns `Err` if the new layout does not meet the allocator's size and alignment\nconstraints of the allocator, or if growing otherwise fails.\n\nImplementations are encouraged to return `Err` on memory exhaustion rather than panicking or\naborting, but this is not a strict requirement. (Specifically: it is *legal* to implement\nthis trait atop an underlying native allocation library that aborts on memory exhaustion.)\n\nClients wishing to abort computation in response to an allocation error are encouraged to\ncall the [`handle_alloc_error`] function, rather than directly invoking `panic!` or similar.\n\n[`handle_alloc_error`]: ../../alloc/alloc/fn.handle_alloc_error.html","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ptr",{"kind":"resolved_path","inner":{"name":"NonNull","id":"2:2391:4591","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}],["old_layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50749:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["new_layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50749:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NonNull","id":"2:2391:4591","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"AllocError","id":"2:50778:4797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:3682:2582":{"id":"0:3682:2582","crate_id":0,"name":"fold","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["accum",{"kind":"generic","inner":"Acc"}],["f",{"kind":"generic","inner":"Fold"}]],"output":{"kind":"generic","inner":"Acc"},"c_variadic":false},"generics":{"params":[{"name":"Acc","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Fold","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Fold"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Acc"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"generic","inner":"Acc"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3203-0:4644:1720":{"id":"b:2:3203-0:4644:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:14550:21217":{"id":"2:14550:21217","crate_id":2,"name":"shrink","span":null,"visibility":"default","docs":"Attempts to shrink the memory block.\n\nReturns a new [`NonNull<[u8]>`][NonNull] containing a pointer and the actual size of the allocated\nmemory. The pointer is suitable for holding data described by `new_layout`. To accomplish\nthis, the allocator may shrink the allocation referenced by `ptr` to fit the new layout.\n\nIf this returns `Ok`, then ownership of the memory block referenced by `ptr` has been\ntransferred to this allocator. The memory may or may not have been freed, and should be\nconsidered unusable.\n\nIf this method returns `Err`, then ownership of the memory block has not been transferred to\nthis allocator, and the contents of the memory block are unaltered.\n\n# Safety\n\n* `ptr` must denote a block of memory [*currently allocated*] via this allocator.\n* `old_layout` must [*fit*] that block of memory (The `new_layout` argument need not fit it.).\n* `new_layout.size()` must be smaller than or equal to `old_layout.size()`.\n\nNote that `new_layout.align()` need not be the same as `old_layout.align()`.\n\n[*currently allocated*]: #currently-allocated-memory\n[*fit*]: #memory-fitting\n\n# Errors\n\nReturns `Err` if the new layout does not meet the allocator's size and alignment\nconstraints of the allocator, or if shrinking otherwise fails.\n\nImplementations are encouraged to return `Err` on memory exhaustion rather than panicking or\naborting, but this is not a strict requirement. (Specifically: it is *legal* to implement\nthis trait atop an underlying native allocation library that aborts on memory exhaustion.)\n\nClients wishing to abort computation in response to an allocation error are encouraged to\ncall the [`handle_alloc_error`] function, rather than directly invoking `panic!` or similar.\n\n[`handle_alloc_error`]: ../../alloc/alloc/fn.handle_alloc_error.html","links":{"NonNull":"2:2391:4591"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ptr",{"kind":"resolved_path","inner":{"name":"NonNull","id":"2:2391:4591","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}],["old_layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50749:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["new_layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50749:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NonNull","id":"2:2391:4591","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"AllocError","id":"2:50778:4797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:9156:4651":{"id":"2:9156:4651","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3838:694":{"id":"2:3838:694","crate_id":2,"name":"from_residual","span":null,"visibility":"default","docs":"Constructs the type from a compatible `Residual` type.\n\nThis should be implemented consistently with the `branch` method such\nthat applying the `?` operator will get back an equivalent residual:\n`FromResidual::from_residual(r).branch() --> ControlFlow::Break(r)`.\n(It must not be an *identical* residual when interconversion is involved.)\n\n# Examples\n\n```\n#![feature(try_trait_v2)]\nuse std::ops::{ControlFlow, FromResidual};\n\nassert_eq!(Result::<String, i64>::from_residual(Err(3_u8)), Err(3));\nassert_eq!(Option::<String>::from_residual(None), None);\nassert_eq!(\n    ControlFlow::<_, String>::from_residual(ControlFlow::Break(5)),\n    ControlFlow::Break(5),\n);\n```","links":{},"attrs":["#[unstable(feature = \"try_trait_v2\", issue = \"84277\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["residual",{"kind":"generic","inner":"R"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:148":{"id":"0:148","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[122,4],"end":[122,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::flatten_ok::FlattenOk","name":"FlattenOk","id":"0:1198:1661","glob":false}},"a:2:3382:225-0:4657:1722":{"id":"a:2:3382:225-0:4657:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3207-0:1537:1667":{"id":"b:2:3207-0:1537:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunk","id":"0:1537:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8905:3329":{"id":"2:8905:3329","crate_id":2,"name":"filter","span":null,"visibility":"default","docs":"Creates an iterator which uses a closure to determine if an element\nshould be yielded.\n\nGiven an element the closure must return `true` or `false`. The returned\niterator will yield only the elements for which the closure returns\ntrue.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [0i32, 1, 2];\n\nlet mut iter = a.iter().filter(|x| x.is_positive());\n\nassert_eq!(iter.next(), Some(&1));\nassert_eq!(iter.next(), Some(&2));\nassert_eq!(iter.next(), None);\n```\n\nBecause the closure passed to `filter()` takes a reference, and many\niterators iterate over references, this leads to a possibly confusing\nsituation, where the type of the closure is a double reference:\n\n```\nlet a = [0, 1, 2];\n\nlet mut iter = a.iter().filter(|x| **x > 1); // need two *s!\n\nassert_eq!(iter.next(), Some(&2));\nassert_eq!(iter.next(), None);\n```\n\nIt's common to instead use destructuring on the argument to strip away\none:\n\n```\nlet a = [0, 1, 2];\n\nlet mut iter = a.iter().filter(|&x| *x > 1); // both & and *\n\nassert_eq!(iter.next(), Some(&2));\nassert_eq!(iter.next(), None);\n```\n\nor both:\n\n```\nlet a = [0, 1, 2];\n\nlet mut iter = a.iter().filter(|&&x| x > 1); // two &s\n\nassert_eq!(iter.next(), Some(&2));\nassert_eq!(iter.next(), None);\n```\n\nof these layers.\n\nNote that `iter.filter(f).next()` is equivalent to `iter.find(f)`.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Filter","id":"2:46955:4662","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4471:15626":{"id":"1:4471:15626","crate_id":1,"name":"is_write_vectored","span":null,"visibility":"default","docs":"Determines if this `Write`r has an efficient [`write_vectored`]\nimplementation.\n\nIf a `Write`r does not override the default [`write_vectored`]\nimplementation, code using it may want to avoid the method all together\nand coalesce writes into a single buffer for higher performance.\n\nThe default implementation returns `false`.\n\n[`write_vectored`]: Write::write_vectored","links":{"Write::write_vectored":"1:4469:15625"},"attrs":["#[unstable(feature = \"can_vector\", issue = \"69941\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8985:5145":{"id":"2:8985:5145","crate_id":2,"name":"try_reduce","span":null,"visibility":"default","docs":"Reduces the elements to a single one by repeatedly applying a reducing operation. If the\nclosure returns a failure, the failure is propagated back to the caller immediately.\n\nThe return type of this method depends on the return type of the closure. If the closure\nreturns `Result<Self::Item, E>`, then this function will return `Result<Option<Self::Item>,\nE>`. If the closure returns `Option<Self::Item>`, then this function will return\n`Option<Option<Self::Item>>`.\n\nWhen called on an empty iterator, this function will return either `Some(None)` or\n`Ok(None)` depending on the type of the provided closure.\n\nFor iterators with at least one element, this is essentially the same as calling\n[`try_fold()`] with the first element of the iterator as the initial accumulator value.\n\n[`try_fold()`]: Iterator::try_fold\n\n# Examples\n\nSafely calculate the sum of a series of numbers:\n\n```\n#![feature(iterator_try_reduce)]\n\nlet numbers: Vec<usize> = vec![10, 20, 5, 23, 0];\nlet sum = numbers.into_iter().try_reduce(|x, y| x.checked_add(y));\nassert_eq!(sum, Some(Some(58)));\n```\n\nDetermine when a reduction short circuited:\n\n```\n#![feature(iterator_try_reduce)]\n\nlet numbers = vec![1, 2, 3, usize::MAX, 4, 5];\nlet sum = numbers.into_iter().try_reduce(|x, y| x.checked_add(y));\nassert_eq!(sum, None);\n```\n\nDetermine when a reduction was not performed because there are no elements:\n\n```\n#![feature(iterator_try_reduce)]\n\nlet numbers: Vec<usize> = Vec::new();\nlet sum = numbers.into_iter().try_reduce(|x, y| x.checked_add(y));\nassert_eq!(sum, Some(None));\n```\n\nUse a [`Result`] instead of an [`Option`]:\n\n```\n#![feature(iterator_try_reduce)]\n\nlet numbers = vec![\"1\", \"2\", \"3\", \"4\", \"5\"];\nlet max: Result<Option<_>, <usize as std::str::FromStr>::Err> =\n    numbers.into_iter().try_reduce(|x, y| {\n        if x.parse::<usize>()? > y.parse::<usize>()? { Ok(x) } else { Ok(y) }\n    });\nassert_eq!(max, Ok(Some(\"5\")));\n```","links":{"`Option`":"2:47809:179","`Result`":"2:47934:208","Iterator::try_fold":"2:8967:2653"},"attrs":["#[unstable(feature = \"iterator_try_reduce\", reason = \"new API\", issue =\n\"87053\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"qualified_path","inner":{"name":"TryType","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"Residual","id":"2:3842:4755","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"generic","inner":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Residual","id":"2:3842:4755","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8880:502":{"id":"2:8880:502","crate_id":2,"name":"count","span":null,"visibility":"default","docs":"Consumes the iterator, counting the number of iterations and returning it.\n\nThis method will call [`next`] repeatedly until [`None`] is encountered,\nreturning the number of times it saw [`Some`]. Note that [`next`] has to be\ncalled at least once even if the iterator does not have any elements.\n\n[`next`]: Iterator::next\n\n# Overflow Behavior\n\nThe method does no guarding against overflows, so counting elements of\nan iterator with more than [`usize::MAX`] elements either produces the\nwrong result or panics. If debug assertions are enabled, a panic is\nguaranteed.\n\n# Panics\n\nThis function might panic if the iterator has more than [`usize::MAX`]\nelements.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\nassert_eq!(a.iter().count(), 3);\n\nlet a = [1, 2, 3, 4, 5];\nassert_eq!(a.iter().count(), 5);\n```","links":{"`None`":"2:47811:177","Iterator::next":"2:8875:932","`usize::MAX`":"2:32349:4098","`Some`":"2:47813:220"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3661":{"id":"0:3661","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"X","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Iter","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Iter"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Iter"}},{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}],"bindings":[]}}}},"items":["0:3669:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2974:720":{"id":"2:2974:720","crate_id":2,"name":"gt","span":null,"visibility":"default","docs":"This method tests greater than (for `self` and `other`) and is used by the `>` operator.\n\n# Examples\n\n```\nlet result = 1.0 > 2.0;\nassert_eq!(result, false);\n\nlet result = 2.0 > 2.0;\nassert_eq!(result, false);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Rhs"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[157,4],"end":[157,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::zip_eq_impl::ZipEq","name":"ZipEq","id":"0:4644:1720","glob":false}},"0:2974":{"id":"0:2974","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[88,9],"end":[88,14]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InterleaveShortest","id":"0:2968:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["0:2977:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2991:667":{"id":"0:2991:667","crate_id":0,"name":"fmt","span":{"filename":"src/adaptors/mod.rs","begin":[168,16],"end":[168,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4460:1744":{"id":"0:4460:1744","crate_id":0,"name":"multiunzip","span":{"filename":"src/unziptuple.rs","begin":[73,0],"end":[73,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"},{"kind":"generic","inner":"FromC"},{"kind":"generic","inner":"FromD"},{"kind":"generic","inner":"FromE"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2844:2972":{"id":"0:2844:2972","crate_id":0,"name":"exactly_one","span":{"filename":"src/lib.rs","begin":[3491,4],"end":[3508,5]},"visibility":"default","docs":"If the iterator yields exactly one element, that element will be returned, otherwise\nan error will be returned containing an iterator that has the same output as the input\niterator.\n\nThis provides an additional layer of validation over just calling `Iterator::next()`.\nIf your assumption that there should only be one element yielded is false this provides\nthe opportunity to detect and handle that, preventing errors at a distance.\n\n# Examples\n```\nuse itertools::Itertools;\n\nassert_eq!((0..10).filter(|&x| x == 2).exactly_one().unwrap(), 2);\nassert!((0..10).filter(|&x| x > 1 && x < 4).exactly_one().unwrap_err().eq(2..4));\nassert!((0..10).filter(|&x| x > 1 && x < 5).exactly_one().unwrap_err().eq(2..5));\nassert!((0..10).filter(|&_| false).exactly_one().unwrap_err().eq(0..0));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}},{"type":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4988:3067":{"id":"0:4988:3067","crate_id":0,"name":"next_back","span":{"filename":"src/ziptuple.rs","begin":[136,0],"end":[136,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:1158:1732":{"id":"a:2:3411:4706-0:1158:1732","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Diff","id":"0:1158:1732","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1583:1849":{"id":"0:1583:1849","crate_id":0,"name":"Item","span":{"filename":"src/intersperse.rs","begin":[74,4],"end":[74,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:23770:1285":{"id":"2:23770:1285","crate_id":2,"name":"simd_gt","span":null,"visibility":"default","docs":"Test if each lane is greater than the corresponding lane in `other`.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdPartialEq","id":"2:23179:7077","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:5017":{"id":"0:5017","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[137,0],"end":[137,47]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"}]}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1547":{"id":"0:1547","crate_id":0,"name":null,"span":{"filename":"src/groupbylazy.rs","begin":[559,0],"end":[571,1]},"visibility":{"restricted":{"parent":"0:1387:1665","path":"::groupbylazy"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"outlives":"'a"}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunk","id":"0:1537:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1550:1849","0:1551:932"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3470:4549":{"id":"2:3470:4549","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3472:272"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:746:1849":{"id":"0:746:1849","crate_id":0,"name":"Item","span":{"filename":"src/adaptors/mod.rs","begin":[721,4],"end":[721,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"b:2:8676-0:3375:1633":{"id":"b:2:8676-0:3375:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOk","id":"0:3375:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:2804:2942":{"id":"0:2804:2942","crate_id":0,"name":"position_minmax","span":{"filename":"src/lib.rs","begin":[3376,4],"end":[3385,5]},"visibility":"default","docs":"Return the positions of the minimum and maximum elements in\nthe iterator.\n\nThe return type [`MinMaxResult`] is an enum of three variants:\n\n- `NoElements` if the iterator is empty.\n- `OneElement(xpos)` if the iterator has exactly one element.\n- `MinMax(xpos, ypos)` is returned otherwise, where the\n   element at `xpos` ≤ the element at `ypos`. While the\n   referenced elements themselves may be equal, `xpos` cannot\n   be equal to `ypos`.\n\nOn an iterator of length `n`, `position_minmax` does `1.5 * n`\ncomparisons, and so is faster than calling `position_min` and\n`position_max` separately which does `2 * n` comparisons.\n\nFor the minimum, if several elements are equally minimum, the\nposition of the first of them is returned. For the maximum, if\nseveral elements are equally maximum, the position of the last\nof them is returned.\n\nThe elements can be floats but no particular result is\nguaranteed if an element is NaN.\n\n# Examples\n\n```\nuse itertools::Itertools;\nuse itertools::MinMaxResult::{NoElements, OneElement, MinMax};\n\nlet a: [i32; 0] = [];\nassert_eq!(a.iter().position_minmax(), NoElements);\n\nlet a = [10];\nassert_eq!(a.iter().position_minmax(), OneElement(0));\n\nlet a = [-3, 0, 1, 5, -10];\nassert_eq!(a.iter().position_minmax(), MinMax(4, 3));\n\nlet a = [1, 1, -1, -1];\nassert_eq!(a.iter().position_minmax(), MinMax(2, 1));\n```","links":{"`MinMaxResult`":"0:3904:1735"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8980:2582":{"id":"2:8980:2582","crate_id":2,"name":"fold","span":null,"visibility":"default","docs":"Folds every element into an accumulator by applying an operation,\nreturning the final result.\n\n`fold()` takes two arguments: an initial value, and a closure with two\narguments: an 'accumulator', and an element. The closure returns the value that\nthe accumulator should have for the next iteration.\n\nThe initial value is the value the accumulator will have on the first\ncall.\n\nAfter applying this closure to every element of the iterator, `fold()`\nreturns the accumulator.\n\nThis operation is sometimes called 'reduce' or 'inject'.\n\nFolding is useful whenever you have a collection of something, and want\nto produce a single value from it.\n\nNote: `fold()`, and similar methods that traverse the entire iterator,\nmight not terminate for infinite iterators, even on traits for which a\nresult is determinable in finite time.\n\nNote: [`reduce()`] can be used to use the first element as the initial\nvalue, if the accumulator type and item type is the same.\n\nNote: `fold()` combines elements in a *left-associative* fashion. For associative\noperators like `+`, the order the elements are combined in is not important, but for non-associative\noperators like `-` the order will affect the final result.\nFor a *right-associative* version of `fold()`, see [`DoubleEndedIterator::rfold()`].\n\n# Note to Implementors\n\nSeveral of the other (forward) methods have default implementations in\nterms of this one, so try to implement this explicitly if it can\ndo something better than the default `for` loop implementation.\n\nIn particular, try to have this call `fold()` on the internal parts\nfrom which this iterator is composed.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\n// the sum of all of the elements of the array\nlet sum = a.iter().fold(0, |acc, x| acc + x);\n\nassert_eq!(sum, 6);\n```\n\nLet's walk through each step of the iteration here:\n\n| element | acc | x | result |\n|---------|-----|---|--------|\n|         | 0   |   |        |\n| 1       | 0   | 1 | 1      |\n| 2       | 1   | 2 | 3      |\n| 3       | 3   | 3 | 6      |\n\nAnd so, our final result, `6`.\n\nThis example demonstrates the left-associative nature of `fold()`:\nit builds a string, starting with an initial value\nand continuing with each element from the front until the back:\n\n```\nlet numbers = [1, 2, 3, 4, 5];\n\nlet zero = \"0\".to_string();\n\nlet result = numbers.iter().fold(zero, |acc, &x| {\n    format!(\"({acc} + {x})\")\n});\n\nassert_eq!(result, \"(((((0 + 1) + 2) + 3) + 4) + 5)\");\n```\nIt's common for people who haven't used iterators a lot to\nuse a `for` loop with a list of things to build up a result. Those\ncan be turned into `fold()`s:\n\n[`for`]: ../../book/ch03-05-control-flow.html#looping-through-a-collection-with-for\n\n```\nlet numbers = [1, 2, 3, 4, 5];\n\nlet mut result = 0;\n\n// for loop:\nfor i in &numbers {\n    result = result + i;\n}\n\n// fold:\nlet result2 = numbers.iter().fold(0, |acc, &x| acc + x);\n\n// they're the same\nassert_eq!(result, result2);\n```\n\n[`reduce()`]: Iterator::reduce","links":{"`DoubleEndedIterator::rfold()`":"2:8724:5129","Iterator::reduce":"2:8983:3500"},"attrs":["#[doc(alias = \"inject\", alias = \"foldl\")]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["init",{"kind":"generic","inner":"B"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"B"},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"B"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"generic","inner":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4153:7059":{"id":"2:4153:7059","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4154:5309"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3207-0:3748:1653":{"id":"b:2:3207-0:3748:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CombinationsWithReplacement","id":"0:3748:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[139,4],"end":[139,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::process_results_impl::ProcessResults","name":"ProcessResults","id":"0:4037:1691","glob":false}},"0:2209":{"id":"0:2209","crate_id":0,"name":null,"span":{"filename":"src/tuple_impl.rs","begin":[72,0],"end":[75,1]},"visibility":{"restricted":{"parent":"0:2180:1706","path":"::tuple_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"HomogeneousTuple","id":"0:2196:1727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleBuffer","id":"0:4119:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1546:585":{"id":"0:1546:585","crate_id":0,"name":"drop","span":{"filename":"src/groupbylazy.rs","begin":[554,4],"end":[556,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5072":{"id":"0:5072","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[138,0],"end":[138,50]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3411:4706-0:4065:1699":{"id":"a:2:3411:4706-0:4065:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13354:23290":{"id":"2:13354:23290","crate_id":2,"name":"strip_suffix_of","span":null,"visibility":"default","docs":"Removes the pattern from the back of haystack, if it matches.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13361:5417","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3382:225-0:2928:1649":{"id":"a:2:3382:225-0:2928:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiProduct","id":"0:2928:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2402":{"id":"0:2402","crate_id":0,"name":null,"span":{"filename":"src/unique_impl.rs","begin":[131,0],"end":[145,1]},"visibility":{"restricted":{"parent":"0:2350:1714","path":"::unique_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:2404:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3207-0:4155:1709":{"id":"b:2:3207-0:4155:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CircularTupleWindows","id":"0:4155:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8874:1849":{"id":"2:8874:1849","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":"The type of the elements being iterated over.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"1:4486:15650":{"id":"1:4486:15650","crate_id":1,"name":"seek","span":null,"visibility":"default","docs":"Seek to an offset, in bytes, in a stream.\n\nA seek beyond the end of a stream is allowed, but behavior is defined\nby the implementation.\n\nIf the seek operation completed successfully,\nthis method returns the new position from the start of the stream.\nThat position can be used later with [`SeekFrom::Start`].\n\n# Errors\n\nSeeking can fail, for example because it might involve flushing a buffer.\n\nSeeking to a negative offset is considered an error.","links":{"`SeekFrom::Start`":"1:10936:4083"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["pos",{"kind":"resolved_path","inner":{"name":"SeekFrom","id":"1:10935:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9533:4792-0:4112:1705":{"id":"a:2:9533:4792-0:4112:1705","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tee","id":"0:4112:1705","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:1526:777":{"id":"0:1526:777","crate_id":0,"name":"into_iter","span":{"filename":"src/groupbylazy.rs","begin":[496,4],"end":[500,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8672:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:390:1627":{"id":"0:390:1627","crate_id":0,"name":"DedupBy","span":{"filename":"src/adaptors/coalesce.rs","begin":[116,0],"end":[116,95]},"visibility":"public","docs":"An iterator adaptor that removes repeated duplicates, determining equality using a comparison function.\n\nSee [`.dedup_by()`](crate::Itertools::dedup_by) or [`.dedup()`](crate::Itertools::dedup) for more information.","links":{"crate::Itertools::dedup":"0:2587:2159","crate::Itertools::dedup_by":"0:2588:2165"},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"CoalesceBy","id":"0:343:3340","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"resolved_path","inner":{"name":"DedupPred2CoalescePred","id":"0:2873:3358","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Pred"}}],"bindings":[]}}}}},{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Pred","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"0:3717":{"id":"0:3717","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"X","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Iter","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Iter"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Iter"}},{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}],"bindings":[]}}}},"items":["0:3722:1849","0:3723:932","0:3725:1754","0:3726:2582"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3960:667":{"id":"0:3960:667","crate_id":0,"name":"fmt","span":{"filename":"src/peek_nth.rs","begin":[7,16],"end":[7,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4154:667":{"id":"0:4154:667","crate_id":0,"name":"fmt","span":{"filename":"src/tuple_impl.rs","begin":[137,16],"end":[137,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5070:932":{"id":"0:5070:932","crate_id":0,"name":"next","span":{"filename":"src/ziptuple.rs","begin":[138,0],"end":[138,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:668:1639":{"id":"0:668:1639","crate_id":0,"name":"Merge","span":{"filename":"src/adaptors/mod.rs","begin":[488,0],"end":[488,47]},"visibility":"public","docs":"An iterator adaptor that merges the two base iterators in ascending order.\nIf both base iterators are sorted (ascending), the result is sorted.\n\nIterator element type is `I::Item`.\n\nSee [`.merge()`](crate::Itertools::merge_by) for more information.","links":{"crate::Itertools::merge_by":"0:2573:2069"},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"MergeBy","id":"0:674:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"resolved_path","inner":{"name":"MergeLte","id":"0:3027:3276","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"0:1138:1849":{"id":"0:1138:1849","crate_id":0,"name":"Item","span":{"filename":"src/exactly_one_err.rs","begin":[50,4],"end":[50,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:8676-0:4075:1701":{"id":"b:2:8676-0:4075:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatCall","id":"0:4075:1701","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"a:2:9532:4793-0:4388:1716":{"id":"a:2:9532:4793-0:4388:1716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:23064:16115":{"id":"2:23064:16115","crate_id":2,"name":"is_sign_negative","span":null,"visibility":"default","docs":"Returns true for each lane if it has a negative sign, including\n`-0.0`, `NaN`s with negative sign bit and negative infinity.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23053:7076","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2865-0:4617:1742":{"id":"b:2:2865-0:4617:1742","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4448":{"id":"0:4448","crate_id":0,"name":null,"span":{"filename":"src/unziptuple.rs","begin":[73,0],"end":[73,76]},"visibility":{"restricted":{"parent":"0:2411:1743","path":"::unziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"IT","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"C"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"D"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MultiUnzip","id":"0:2415:1745","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"},{"kind":"generic","inner":"FromC"},{"kind":"generic","inner":"FromD"},{"kind":"generic","inner":"FromE"}]}}],"bindings":[]}}},"for":{"kind":"generic","inner":"IT"},"items":["0:4460:1744"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3206:3309":{"id":"2:3206:3309","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3180:136"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4876":{"id":"0:4876","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[134,0],"end":[134,38]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"}]}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1785":{"id":"0:1785","crate_id":0,"name":null,"span":{"filename":"src/multipeek_impl.rs","begin":[81,0],"end":[94,1]},"visibility":{"restricted":{"parent":"0:1757:1680","path":"::multipeek_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1787:1849","0:1788:932","0:1790:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3645":{"id":"0:3645","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"X","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Iter","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Iter"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Iter"}},{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}],"bindings":[]}}}},"items":["0:3653:1849","0:3654:932","0:3656:1754","0:3657:2582"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4406:415":{"id":"0:4406:415","crate_id":0,"name":"clone","span":{"filename":"src/unique_impl.rs","begin":[155,9],"end":[155,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14463:287":{"id":"2:14463:287","crate_id":2,"name":"alloc_zeroed","span":null,"visibility":"default","docs":"Behaves like `alloc`, but also ensures that the contents\nare set to zero before being returned.\n\n# Safety\n\nThis function is unsafe for the same reasons that `alloc` is.\nHowever the allocated block of memory is guaranteed to be initialized.\n\n# Errors\n\nReturning a null pointer indicates that either memory is exhausted\nor `layout` does not meet allocator's size or alignment constraints,\njust as in `alloc`.\n\nClients wishing to abort computation in response to an\nallocation error are encouraged to call the [`handle_alloc_error`] function,\nrather than directly invoking `panic!` or similar.\n\n[`handle_alloc_error`]: ../../alloc/alloc/fn.handle_alloc_error.html","links":{},"attrs":["#[stable(feature = \"global_alloc\", since = \"1.28.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50749:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:2383:932":{"id":"0:2383:932","crate_id":0,"name":"next","span":{"filename":"src/unique_impl.rs","begin":[59,4],"end":[67,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:2992:1634":{"id":"a:2:3411:4706-0:2992:1634","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Product","id":"0:2992:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:777:932":{"id":"0:777:932","crate_id":0,"name":"next","span":{"filename":"src/adaptors/mod.rs","begin":[868,4],"end":[880,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3989":{"id":"0:3989","crate_id":0,"name":null,"span":{"filename":"src/peeking_take_while.rs","begin":[146,0],"end":[146,52]},"visibility":{"restricted":{"parent":"0:1858:1686","path":"::peeking_take_while"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PeekingNext","id":"0:1868:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"::std::iter::Empty","id":"2:8375:4070","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:3991:4024"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3203-0:2954:1630":{"id":"b:2:3203-0:2954:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4001:4024":{"id":"0:4001:4024","crate_id":0,"name":"peeking_next","span":{"filename":"src/peeking_take_while.rs","begin":[150,0],"end":[150,77]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["accept",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9125:720":{"id":"2:9125:720","crate_id":2,"name":"gt","span":null,"visibility":"default","docs":"Determines if the elements of this [`Iterator`] are [lexicographically](Ord#lexicographical-comparison)\ngreater than those of another.\n\n# Examples\n\n```\nassert_eq!([1].iter().gt([1].iter()), false);\nassert_eq!([1].iter().gt([1, 2].iter()), false);\nassert_eq!([1, 2].iter().gt([1].iter()), true);\nassert_eq!([1, 2].iter().gt([1, 2].iter()), false);\n```","links":{"`Iterator`":"2:8873:159","Ord#lexicographical-comparison":"2:2956:180"},"attrs":["#[stable(feature = \"iter_order\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2440:3076":{"id":"0:2440:3076","crate_id":0,"name":"into_inner","span":{"filename":"src/with_position.rs","begin":[51,4],"end":[58,5]},"visibility":"public","docs":"Return the inner value.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:4644:1720":{"id":"b:2:3207-0:4644:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:4792-0:4644:1720":{"id":"a:2:9533:4792-0:4644:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:9130:5155":{"id":"2:9130:5155","crate_id":2,"name":"is_sorted_by","span":null,"visibility":"default","docs":"Checks if the elements of this iterator are sorted using the given comparator function.\n\nInstead of using `PartialOrd::partial_cmp`, this function uses the given `compare`\nfunction to determine the ordering of two elements. Apart from that, it's equivalent to\n[`is_sorted`]; see its documentation for more information.\n\n# Examples\n\n```\n#![feature(is_sorted)]\n\nassert!([1, 2, 2, 9].iter().is_sorted_by(|a, b| a.partial_cmp(b)));\nassert!(![1, 3, 2, 4].iter().is_sorted_by(|a, b| a.partial_cmp(b)));\nassert!([0].iter().is_sorted_by(|a, b| a.partial_cmp(b)));\nassert!(std::iter::empty::<i32>().is_sorted_by(|a, b| a.partial_cmp(b)));\nassert!(![0.0, 1.0, f32::NAN].iter().is_sorted_by(|a, b| a.partial_cmp(b)));\n```\n\n[`is_sorted`]: Iterator::is_sorted","links":{"Iterator::is_sorted":"2:9129:5154"},"attrs":["#[unstable(feature = \"is_sorted\", reason = \"new API\", issue = \"53485\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["compare",{"kind":"generic","inner":"F"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13275:4561":{"id":"2:13275:4561","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13276:127","2:13277:21670"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23107:7004":{"id":"2:23107:7004","crate_id":2,"name":"Mask","span":null,"visibility":"default","docs":"Mask type used for manipulating this SIMD vector type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"b:2:2868-0:3007:1636":{"id":"b:2:2868-0:3007:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Batching","id":"0:3007:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:849":{"id":"0:849","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[1074,0],"end":[1079,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:3406:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2865-0:1198:1661":{"id":"b:2:2865-0:1198:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FlattenOk","id":"0:1198:1661","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1217:3067":{"id":"0:1217:3067","crate_id":0,"name":"next_back","span":{"filename":"src/flatten_ok.rs","begin":[100,4],"end":[132,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:6507-0:3766:1659":{"id":"b:5:6507-0:3766:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6505:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatWith","id":"0:3766:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["5:6509:1415"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1488:932":{"id":"0:1488:932","crate_id":0,"name":"next","span":{"filename":"src/groupbylazy.rs","begin":[375,4],"end":[387,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3746:415":{"id":"0:3746:415","crate_id":0,"name":"clone","span":{"filename":"src/combinations.rs","begin":[21,4],"end":[21,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2705:2700":{"id":"0:2705:2700","crate_id":0,"name":"sorted_unstable_by","span":{"filename":"src/lib.rs","begin":[2532,4],"end":[2539,5]},"visibility":"default","docs":"Sort all iterator elements into a new iterator in ascending order.\n\n**Note:** This consumes the entire iterator, uses the\n[`slice::sort_unstable_by`] method and returns the result as a new\niterator that owns its elements.\n\nThe sorted iterator, if directly collected to a `Vec`, is converted\nwithout any extra copying or allocation cost.\n\n```\nuse itertools::Itertools;\n\n// sort people in descending order by age\nlet people = vec![(\"Jane\", 20), (\"John\", 18), (\"Jill\", 30), (\"Jack\", 27)];\n\nlet oldest_people_first = people\n    .into_iter()\n    .sorted_unstable_by(|a, b| Ord::cmp(&b.1, &a.1))\n    .map(|(person, _age)| person);\n\nitertools::assert_equal(oldest_people_first,\n                        vec![\"Jill\", \"Jack\", \"Jane\", \"John\"]);\n```","links":{"`slice::sort_unstable_by`":"2:12674:2701"},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["cmp",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"alloc::vec::IntoIter","id":"5:7484:1621","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23068:16119":{"id":"2:23068:16119","crate_id":2,"name":"is_subnormal","span":null,"visibility":"default","docs":"Returns true for each lane if its value is subnormal.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23053:7076","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:817:2582":{"id":"0:817:2582","crate_id":0,"name":"fold","span":{"filename":"src/adaptors/mod.rs","begin":[969,4],"end":[976,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["init",{"kind":"generic","inner":"Acc"}],["fold_f",{"kind":"generic","inner":"Fold"}]],"output":{"kind":"generic","inner":"Acc"},"c_variadic":false},"generics":{"params":[{"name":"Acc","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Fold","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Fold"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Acc"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"generic","inner":"Acc"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8895:851":{"id":"2:8895:851","crate_id":2,"name":"map","span":null,"visibility":"default","docs":"Takes a closure and creates an iterator which calls that closure on each\nelement.\n\n`map()` transforms one iterator into another, by means of its argument:\nsomething that implements [`FnMut`]. It produces a new iterator which\ncalls this closure on each element of the original iterator.\n\nIf you are good at thinking in types, you can think of `map()` like this:\nIf you have an iterator that gives you elements of some type `A`, and\nyou want an iterator of some other type `B`, you can use `map()`,\npassing a closure that takes an `A` and returns a `B`.\n\n`map()` is conceptually similar to a [`for`] loop. However, as `map()` is\nlazy, it is best used when you're already working with other iterators.\nIf you're doing some sort of looping for a side effect, it's considered\nmore idiomatic to use [`for`] than `map()`.\n\n[`for`]: ../../book/ch03-05-control-flow.html#looping-through-a-collection-with-for\n[`FnMut`]: crate::ops::FnMut\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter().map(|x| 2 * x);\n\nassert_eq!(iter.next(), Some(2));\nassert_eq!(iter.next(), Some(4));\nassert_eq!(iter.next(), Some(6));\nassert_eq!(iter.next(), None);\n```\n\nIf you're doing some sort of side effect, prefer [`for`] to `map()`:\n\n```\n# #![allow(unused_must_use)]\n// don't do this:\n(0..5).map(|x| println!(\"{x}\"));\n\n// it won't even execute, as it is lazy. Rust will warn you about this.\n\n// Instead, use for:\nfor x in 0..5 {\n    println!(\"{x}\");\n}\n```","links":{"crate::ops::FnMut":"2:3624:132"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Map","id":"2:47016:4666","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"generic","inner":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:709:1641":{"id":"b:2:2868-0:709:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TakeWhileRef","id":"0:709:1641","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8919:1326":{"id":"2:8919:1326","crate_id":2,"name":"skip","span":null,"visibility":"default","docs":"Creates an iterator that skips the first `n` elements.\n\n`skip(n)` skips elements until `n` elements are skipped or the end of the\niterator is reached (whichever happens first). After that, all the remaining\nelements are yielded. In particular, if the original iterator is too short,\nthen the returned iterator is empty.\n\nRather than overriding this method directly, instead override the `nth` method.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter().skip(2);\n\nassert_eq!(iter.next(), Some(&3));\nassert_eq!(iter.next(), None);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Skip","id":"2:47065:4668","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2727:2760":{"id":"0:2727:2760","crate_id":0,"name":"partition_result","span":{"filename":"src/lib.rs","begin":[2797,4],"end":[2807,5]},"visibility":"default","docs":"Partition a sequence of `Result`s into one list of all the `Ok` elements\nand another list of all the `Err` elements.\n\n```\nuse itertools::Itertools;\n\nlet successes_and_failures = vec![Ok(1), Err(false), Err(true), Ok(2)];\n\nlet (successes, failures): (Vec<_>, Vec<_>) = successes_and_failures\n    .into_iter()\n    .partition_result();\n\nassert_eq!(successes, [1, 2]);\nassert_eq!(failures, [false, true]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"}]},"c_variadic":false},"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8676-0:3757:1657":{"id":"b:2:8676-0:3757:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"1:1037:15398":{"id":"1:1037:15398","crate_id":1,"name":"make_ascii_uppercase","span":null,"visibility":"default","docs":"Converts this type to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase`].\n\n# Note\n\nThis method is deprecated in favor of the identically-named\ninherent methods on `u8`, `char`, `[u8]` and `str`.\n\n[`to_ascii_uppercase`]: AsciiExt::to_ascii_uppercase","links":{"AsciiExt::to_ascii_uppercase":"1:1034:15395"},"attrs":["#[stable(feature = \"ascii\", since = \"1.9.0\")]"],"deprecation":{"since":"1.26.0","note":"use inherent methods instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3499:932":{"id":"0:3499:932","crate_id":0,"name":"next","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2711:2712":{"id":"0:2711:2712","crate_id":0,"name":"sorted_by","span":{"filename":"src/lib.rs","begin":[2628,4],"end":[2635,5]},"visibility":"default","docs":"Sort all iterator elements into a new iterator in ascending order.\n\n**Note:** This consumes the entire iterator, uses the\n[`slice::sort_by`] method and returns the result as a new\niterator that owns its elements.\n\nThe sorted iterator, if directly collected to a `Vec`, is converted\nwithout any extra copying or allocation cost.\n\n```\nuse itertools::Itertools;\n\n// sort people in descending order by age\nlet people = vec![(\"Jane\", 20), (\"John\", 18), (\"Jill\", 30), (\"Jack\", 27)];\n\nlet oldest_people_first = people\n    .into_iter()\n    .sorted_by(|a, b| Ord::cmp(&b.1, &a.1))\n    .map(|(person, _age)| person);\n\nitertools::assert_equal(oldest_people_first,\n                        vec![\"Jill\", \"Jack\", \"Jane\", \"John\"]);\n```","links":{"`slice::sort_by`":"5:5887:2713"},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["cmp",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"alloc::vec::IntoIter","id":"5:7484:1621","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5538:23378":{"id":"1:5538:23378","crate_id":1,"name":"blocks","span":null,"visibility":"default","docs":"Returns the number of blocks allocated to the file, in 512-byte units.\n\nPlease note that this may be smaller than `st_size / 512` when the file has holes.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let blocks = meta.blocks();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3370:216-0:2992:1634":{"id":"a:2:3370:216-0:2992:1634","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Product","id":"0:2992:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9532:4793-0:4129:1710":{"id":"a:2:9532:4793-0:4129:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Buffer","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TupleCollect","id":"0:2245:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tuples","id":"0:4129:1710","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:865:2468":{"id":"0:865:2468","crate_id":0,"name":"collect","span":{"filename":"src/adaptors/mod.rs","begin":[1118,4],"end":[1123,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"C"},"c_variadic":false},"generics":{"params":[{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"FromIterator","id":"2:8668:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3776:415":{"id":"0:3776:415","crate_id":0,"name":"clone","span":{"filename":"src/format.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FormatWith","id":"0:3766:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:155":{"id":"0:155","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[124,47],"end":[124,60]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::grouping_map::GroupingMapBy","name":"GroupingMapBy","id":"0:1313:1664","glob":false}},"0:583:1849":{"id":"0:583:1849","crate_id":0,"name":"Item","span":{"filename":"src/adaptors/mod.rs","begin":[54,4],"end":[54,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:4770:1754":{"id":"0:4770:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/ziptuple.rs","begin":[131,0],"end":[131,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3382:225-0:1513:1666":{"id":"a:2:3382:225-0:1513:1666","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoChunks","id":"0:1513:1666","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:4744":{"id":"0:4744","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[130,0],"end":[130,26]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"}]}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3939:1685":{"id":"0:3939:1685","crate_id":0,"name":"PadUsing","span":{"filename":"src/pad_tail.rs","begin":[12,0],"end":[17,1]},"visibility":"public","docs":"An iterator adaptor that pads a sequence to a minimum length by filling\nmissing elements using a closure.\n\nIterator element type is `I::Item`.\n\nSee [`.pad_using()`](crate::Itertools::pad_using) for more information.","links":{"crate::Itertools::pad_using":"0:2613:2320"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:3939:1685","a:2:9532:4793-0:3939:1685","a:2:3382:225-0:3939:1685","a:2:3370:216-0:3939:1685","a:2:3411:4706-0:3939:1685","b:0:2854-0:3939:1685","b:2:8676-0:3939:1685","b:2:4104-0:3939:1685","b:2:2865-0:3939:1685","b:2:3203-0:3939:1685","b:2:3207-0:3939:1685","b:2:3218-0:3939:1685","b:2:2868-0:3939:1685","b:2:3213-0:3939:1685","b:5:848-0:3939:1685","0:3946","0:1804","0:1810","0:1816","0:1820","0:1823"]}},"0:3364:3323":{"id":"0:3364:3323","crate_id":0,"name":"Tuple12Combination","span":{"filename":"src/adaptors/mod.rs","begin":[832,0],"end":[832,85]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"b:2:4104-0:4075:1701":{"id":"b:2:4104-0:4075:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatCall","id":"0:4075:1701","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:4792-0:1883:1687":{"id":"a:2:9533:4792-0:1883:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekingTakeWhile","id":"0:1883:1687","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:1033:7359":{"id":"1:1033:7359","crate_id":1,"name":"is_ascii","span":null,"visibility":"default","docs":"Checks if the value is within the ASCII range.\n\n# Note\n\nThis method is deprecated in favor of the identically-named\ninherent methods on `u8`, `char`, `[u8]` and `str`.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":{"since":"1.26.0","note":"use inherent methods instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2865-0:4657:1722":{"id":"b:2:2865-0:4657:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5511:23364":{"id":"1:5511:23364","crate_id":1,"name":"from_mode","span":null,"visibility":"default","docs":"Creates a new instance of `Permissions` from the given set of Unix\npermission bits.\n\n# Examples\n\n```\nuse std::fs::Permissions;\nuse std::os::unix::fs::PermissionsExt;\n\n// Read/write for owner and read for others.\nlet permissions = Permissions::from_mode(0o644);\nassert_eq!(permissions.mode(), 0o644);\n```","links":{},"attrs":["#[stable(feature = \"fs_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["mode",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13741:61712":{"id":"2:13741:61712","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50054:5432","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:4083:1702":{"id":"b:2:3213-0:4083:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unfold","id":"0:4083:1702","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4104-0:4037:1691":{"id":"b:2:4104-0:4037:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ProcessResults","id":"0:4037:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:1651:1677":{"id":"b:2:3213-0:1651:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1358:2874":{"id":"0:1358:2874","crate_id":0,"name":"minmax_by_key","span":{"filename":"src/grouping_map.rs","begin":[479,4],"end":[484,5]},"visibility":"public","docs":"Groups elements from the `GroupingMap` source by key and find the elements of each group\nthat gives the minimum and maximum from the specified function.\n \nIf several elements are equally maximum, the last element is picked.\nIf several elements are equally minimum, the first element is picked.\n \nIt has the same differences from the non-grouping version as `minmax`.\n \nReturns a `HashMap` associating the key of each group with the minimum and maximum of that group's elements.\n \n```\nuse itertools::Itertools;\nuse itertools::MinMaxResult::{OneElement, MinMax};\n \nlet lookup = vec![1, 3, 4, 5, 7, 9, 12].into_iter()\n    .into_grouping_map_by(|&n| n % 3)\n    .minmax_by_key(|_key, &val| val % 4);\n \nassert_eq!(lookup[&0], MinMax(12, 3));\nassert_eq!(lookup[&1], MinMax(4, 7));\nassert_eq!(lookup[&2], OneElement(5));\nassert_eq!(lookup.len(), 3);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"CK","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"K"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"V"}}}],"output":{"kind":"generic","inner":"CK"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"CK"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1168:1564":{"id":"0:1168:1564","crate_id":0,"name":"0","span":{"filename":"src/diff.rs","begin":[23,12],"end":[23,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:438:3378":{"id":"0:438:3378","crate_id":0,"name":"MapSpecialCaseFn","span":{"filename":"src/adaptors/map.rs","begin":[11,0],"end":[14,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:440:3379","0:441:383"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1329:3771":{"id":"0:1329:3771","crate_id":0,"name":"fold_first","span":{"filename":"src/grouping_map.rs","begin":[176,4],"end":[185,5]},"visibility":"public","docs":"Groups elements from the `GroupingMap` source by key and applies `operation` to the elements\nof each group sequentially, passing the previously accumulated value, a reference to the key\nand the current element as arguments, and stores the results in a new map.\n\nThis is similar to [`fold`] but the initial value of the accumulator is the first element of the group.\n\n`operation` is a function that is invoked on each element with the following parameters:\n - the current value of the accumulator of the group;\n - a reference to the key of the group this element belongs to;\n - the element from the source being accumulated.\n\nReturn a `HashMap` associating the key of each group with the result of folding that group's elements.\n \n[`fold`]: GroupingMap::fold\n \n```\nuse itertools::Itertools;\n \nlet lookup = (1..=7)\n    .into_grouping_map_by(|&n| n % 3)\n    .fold_first(|acc, _key, val| acc + val);\n \nassert_eq!(lookup[&0], 3 + 6);\nassert_eq!(lookup[&1], 1 + 4 + 7);\nassert_eq!(lookup[&2], 2 + 5);\nassert_eq!(lookup.len(), 3);\n```","links":{"GroupingMap::fold":"0:1324:2582"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["operation",{"kind":"generic","inner":"FO"}]],"output":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"FO","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"FO"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"V"},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"K"}}},{"kind":"generic","inner":"V"}],"output":{"kind":"generic","inner":"V"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23066:16117":{"id":"2:23066:16117","crate_id":2,"name":"is_infinite","span":null,"visibility":"default","docs":"Returns true for each lane if its value is positive infinity or negative infinity.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23053:7076","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:6332:6557":{"id":"1:6332:6557","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6333:23441","1:6334:23442"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4104-0:3904:1735":{"id":"b:2:4104-0:3904:1735","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:4644:1720":{"id":"b:2:2865-0:4644:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2716:2722":{"id":"0:2716:2722","crate_id":0,"name":"sorted_by_cached_key","span":{"filename":"src/lib.rs","begin":[2696,4],"end":[2705,5]},"visibility":"default","docs":"Sort all iterator elements into a new iterator in ascending order. The key function is\ncalled exactly once per key.\n\n**Note:** This consumes the entire iterator, uses the\n[`slice::sort_by_cached_key`] method and returns the result as a new\niterator that owns its elements.\n\nThe sorted iterator, if directly collected to a `Vec`, is converted\nwithout any extra copying or allocation cost.\n\n```\nuse itertools::Itertools;\n\n// sort people in descending order by age\nlet people = vec![(\"Jane\", 20), (\"John\", 18), (\"Jill\", 30), (\"Jack\", 27)];\n\nlet oldest_people_first = people\n    .into_iter()\n    .sorted_by_cached_key(|x| -x.1)\n    .map(|(person, _age)| person);\n\nitertools::assert_equal(oldest_people_first,\n                        vec![\"Jill\", \"Jack\", \"Jane\", \"John\"]);\n```","links":{"`slice::sort_by_cached_key`":"5:5894:2723"},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"alloc::vec::IntoIter","id":"5:7484:1621","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"generic","inner":"K"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:1490:1670":{"id":"b:2:3218-0:1490:1670","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Group","id":"0:1490:1670","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:0:2854-0:2992:1634":{"id":"b:0:2854-0:2992:1634","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Product","id":"0:2992:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:3386:1645":{"id":"b:2:3213-0:3386:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3006:415":{"id":"0:3006:415","crate_id":0,"name":"clone","span":{"filename":"src/adaptors/mod.rs","begin":[276,16],"end":[276,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Product","id":"0:2992:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:0:2854-0:4065:1699":{"id":"b:0:2854-0:4065:1699","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23394:16101":{"id":"2:23394:16101","crate_id":2,"name":"from_bitmask","span":null,"visibility":"default","docs":"Converts a bitmask to a mask.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["bitmask",{"kind":"qualified_path","inner":{"name":"BitMask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"ToBitMask","id":"2:23391:12757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3867":{"id":"0:3867","crate_id":0,"name":null,"span":{"filename":"src/intersperse.rs","begin":[49,9],"end":[49,14]},"visibility":{"restricted":{"parent":"0:1552:1672","path":"::intersperse"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"ElemF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"ElemF"}}],"bindings":[]}}}},"items":["0:3870:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3370:216-0:3904:1735":{"id":"a:2:3370:216-0:3904:1735","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:8676-0:3045:1644":{"id":"b:2:8676-0:3045:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleCombinations","id":"0:3045:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:1896":{"id":"0:1896","crate_id":0,"name":null,"span":{"filename":"src/peeking_take_while.rs","begin":[103,0],"end":[116,1]},"visibility":{"restricted":{"parent":"0:1858:1686","path":"::peeking_take_while"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"PeekingNext","id":"0:1868:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekingTakeWhile","id":"0:1883:1687","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:1900:1849","0:1901:932","0:1902:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5502:23358":{"id":"1:5502:23358","crate_id":1,"name":"read_exact_at","span":null,"visibility":"default","docs":"Reads the exact number of byte required to fill `buf` from the given offset.\n\nThe offset is relative to the start of the file and thus independent\nfrom the current cursor.\n\nThe current file cursor is not affected by this function.\n\nSimilar to [`io::Read::read_exact`] but uses [`read_at`] instead of `read`.\n\n[`read_at`]: FileExt::read_at\n\n# Errors\n\nIf this function encounters an error of the kind\n[`io::ErrorKind::Interrupted`] then the error is ignored and the operation\nwill continue.\n\nIf this function encounters an \"end of file\" before completely filling\nthe buffer, it returns an error of the kind [`io::ErrorKind::UnexpectedEof`].\nThe contents of `buf` are unspecified in this case.\n\nIf any other read error is encountered then this function immediately\nreturns. The contents of `buf` are unspecified in this case.\n\nIf this function returns an error, it is unspecified how many bytes it\nhas read, but it will never read more than would be necessary to\ncompletely fill the buffer.\n\n# Examples\n\n```no_run\nuse std::io;\nuse std::fs::File;\nuse std::os::unix::prelude::FileExt;\n\nfn main() -> io::Result<()> {\n    let mut buf = [0u8; 8];\n    let file = File::open(\"foo.txt\")?;\n\n    // We now read exactly 8 bytes from the offset 10.\n    file.read_exact_at(&mut buf, 10)?;\n    println!(\"read {} bytes: {:?}\", buf.len(), buf);\n    Ok(())\n}\n```","links":{"`io::Read::read_exact`":"1:4417:15594","`io::ErrorKind::UnexpectedEof`":"1:10867:9354","FileExt::read_at":"1:5501:23357","`io::ErrorKind::Interrupted`":"1:10863:10656"},"attrs":["#[stable(feature = \"rw_exact_all_at\", since = \"1.33.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["offset",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:4792-0:3928:1681":{"id":"a:2:9533:4792-0:3928:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3370:216-0:4670:1724":{"id":"a:2:3370:216-0:4670:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4917:932":{"id":"0:4917:932","crate_id":0,"name":"next","span":{"filename":"src/ziptuple.rs","begin":[135,0],"end":[135,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1565:3927":{"id":"0:1565:3927","crate_id":0,"name":"generate","span":{"filename":"src/intersperse.rs","begin":[5,4],"end":[5,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Item"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13363:3067":{"id":"2:13363:3067","crate_id":2,"name":"next_back","span":null,"visibility":"default","docs":"Performs the next search step starting from the back.\n\n- Returns [`Match(a, b)`][SearchStep::Match] if `haystack[a..b]`\n  matches the pattern.\n- Returns [`Reject(a, b)`][SearchStep::Reject] if `haystack[a..b]`\n  can not match the pattern, even partially.\n- Returns [`Done`][SearchStep::Done] if every byte of the haystack\n  has been visited\n\nThe stream of [`Match`][SearchStep::Match] and\n[`Reject`][SearchStep::Reject] values up to a [`Done`][SearchStep::Done]\nwill contain index ranges that are adjacent, non-overlapping,\ncovering the whole haystack, and laying on utf8 boundaries.\n\nA [`Match`][SearchStep::Match] result needs to contain the whole matched\npattern, however [`Reject`][SearchStep::Reject] results may be split up\ninto arbitrary many adjacent fragments. Both ranges may have zero length.\n\nAs an example, the pattern `\"aaa\"` and the haystack `\"cbaaaaab\"`\nmight produce the stream\n`[Reject(7, 8), Match(4, 7), Reject(1, 4), Reject(0, 1)]`.","links":{"SearchStep::Match":"2:50171:5332","SearchStep::Reject":"2:50175:10535","SearchStep::Done":"2:50179:2655"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SearchStep","id":"2:50170:6948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2963:415":{"id":"0:2963:415","crate_id":0,"name":"clone","span":{"filename":"src/adaptors/mod.rs","begin":[28,9],"end":[28,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13790:61717":{"id":"2:13790:61717","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"`DoubleEndedIterator`":"2:8716:121","str::matches":"2:13787:4517","self::pattern":"2:13336:4565","prim@char":"1:15876:4439"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50012:5436","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13361:5417","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[98,8],"end":[98,15]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::PutBack","name":"PutBack","id":"0:2982:1635","glob":false}},"b:2:8676-0:4037:1691":{"id":"b:2:8676-0:4037:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ProcessResults","id":"0:4037:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:2868-0:1513:1666":{"id":"b:2:2868-0:1513:1666","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoChunks","id":"0:1513:1666","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6475:10304":{"id":"1:6475:10304","crate_id":1,"name":"st_ctime_nsec","span":null,"visibility":"default","docs":"Returns the last status change time of the file, in nanoseconds since [`st_ctime`].\n\n[`st_ctime`]: Self::st_ctime\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_ctime_nsec());\n    Ok(())\n}\n```","links":{"Self::st_ctime":"1:6474:10303"},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3203-0:4617:1742":{"id":"b:2:3203-0:4617:1742","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3370:216-0:4037:1691":{"id":"a:2:3370:216-0:4037:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ProcessResults","id":"0:4037:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3597:1849":{"id":"0:3597:1849","crate_id":0,"name":"Item","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"X"}]}}},"2:13719:23351":{"id":"2:13719:23351","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12800:5423"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1810":{"id":"0:1810","crate_id":0,"name":null,"span":{"filename":"src/pad_tail.rs","begin":[39,0],"end":[68,1]},"visibility":{"restricted":{"parent":"0:1793:1684","path":"::pad_tail"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"primitive","inner":"usize"}],"output":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:1813:1849","0:1814:932","0:1815:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:763":{"id":"0:763","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[844,0],"end":[849,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOk","id":"0:3375:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:3384:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3419:1564":{"id":"0:3419:1564","crate_id":0,"name":"0","span":{"filename":"src/either_or_both.rs","begin":[13,10],"end":[13,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"B"}},"1:5069:15750":{"id":"1:5069:15750","crate_id":1,"name":"to_socket_addrs","span":null,"visibility":"default","docs":"Converts this object to an iterator of resolved [`SocketAddr`]s.\n\nThe returned iterator might not actually yield any values depending on the\noutcome of any resolution performed.\n\nNote that this function may block the current thread while resolution is\nperformed.","links":{"`SocketAddr`":"1:11134:6619"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"ToSocketAddrs","id":"1:5067:6617","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:5:848-0:2954:1630":{"id":"b:5:848-0:2954:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:221":{"id":"0:221","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[146,4],"end":[146,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::repeatn::RepeatN","name":"RepeatN","id":"0:4065:1699","glob":false}},"b:0:2854-0:1537:1667":{"id":"b:0:2854-0:1537:1667","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunk","id":"0:1537:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4104-0:4058:1697":{"id":"b:2:4104-0:4058:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4082:667":{"id":"0:4082:667","crate_id":0,"name":"fmt","span":{"filename":"src/sources.rs","begin":[112,4],"end":[112,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"::std::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2964":{"id":"0:2964","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[28,16],"end":[28,21]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["0:2967:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4538":{"id":"0:4538","crate_id":0,"name":null,"span":{"filename":"src/unziptuple.rs","begin":[78,0],"end":[78,136]},"visibility":{"restricted":{"parent":"0:2411:1743","path":"::unziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"IT","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"C"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"D"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"G"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"H"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MultiUnzip","id":"0:2415:1745","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"},{"kind":"generic","inner":"FromC"},{"kind":"generic","inner":"FromD"},{"kind":"generic","inner":"FromE"},{"kind":"generic","inner":"FromF"},{"kind":"generic","inner":"FromG"},{"kind":"generic","inner":"FromH"},{"kind":"generic","inner":"FromI"},{"kind":"generic","inner":"FromJ"}]}}],"bindings":[]}}},"for":{"kind":"generic","inner":"IT"},"items":["0:4560:1744"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3442:271":{"id":"2:3442:271","crate_id":2,"name":"add","span":null,"visibility":"default","docs":"Performs the `+` operation.\n\n# Example\n\n```\nassert_eq!(12 + 1, 13);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Add","id":"2:3439:3711","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:5:848-0:1981:1693":{"id":"b:5:848-0:1981:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Powerset","id":"0:1981:1693","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3382:225-0:3407:1748":{"id":"a:2:3382:225-0:3407:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4669:667":{"id":"0:4669:667","crate_id":0,"name":"fmt","span":{"filename":"src/zip_longest.rs","begin":[15,16],"end":[15,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3370:216-0:791:1632":{"id":"a:2:3370:216-0:791:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterMapOk","id":"0:791:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:8676-0:4644:1720":{"id":"b:2:8676-0:4644:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:3817:667":{"id":"0:3817:667","crate_id":0,"name":"fmt","span":{"filename":"src/format.rs","begin":[112,0],"end":[113,70]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:3007:1636":{"id":"b:5:848-0:3007:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Batching","id":"0:3007:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3844:22895":{"id":"2:3844:22895","crate_id":2,"name":"TryType","span":null,"visibility":"default","docs":"The \"return\" type of this meta-function.","links":{},"attrs":["#[unstable(feature = \"try_trait_v2_residual\", issue = \"91285\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[{"eq_predicate":{"lhs":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"TryType","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Residual","id":"2:3842:4755","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O"}}],"bindings":[]}}}}},"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"rhs":{"type":{"kind":"generic","inner":"O"}}}},{"eq_predicate":{"lhs":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"TryType","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Residual","id":"2:3842:4755","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O"}}],"bindings":[]}}}}},"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"rhs":{"type":{"kind":"generic","inner":"Self"}}}}]},"bounds":[{"trait_bound":{"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:4624:1564":{"id":"0:4624:1564","crate_id":0,"name":"0","span":{"filename":"src/with_position.rs","begin":[42,11],"end":[42,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"a:2:9533:4792-0:4058:1697":{"id":"a:2:9533:4792-0:4058:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:3203-0:4075:1701":{"id":"b:2:3203-0:4075:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatCall","id":"0:4075:1701","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5501:23357":{"id":"1:5501:23357","crate_id":1,"name":"read_at","span":null,"visibility":"default","docs":"Reads a number of bytes starting from a given offset.\n\nReturns the number of bytes read.\n\nThe offset is relative to the start of the file and thus independent\nfrom the current cursor.\n\nThe current file cursor is not affected by this function.\n\nNote that similar to [`File::read`], it is not an error to return with a\nshort read.\n\n[`File::read`]: fs::File::read\n\n# Examples\n\n```no_run\nuse std::io;\nuse std::fs::File;\nuse std::os::unix::prelude::FileExt;\n\nfn main() -> io::Result<()> {\n    let mut buf = [0u8; 8];\n    let file = File::open(\"foo.txt\")?;\n\n    // We now read 8 bytes from the offset 10.\n    let num_bytes_read = file.read_at(&mut buf, 10)?;\n    println!(\"read {num_bytes_read} bytes: {buf:?}\");\n    Ok(())\n}\n```","links":{"fs::File::read":"1:2951:6796"},"attrs":["#[stable(feature = \"file_offset\", since = \"1.15.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["offset",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:1034:15395":{"id":"1:1034:15395","crate_id":1,"name":"to_ascii_uppercase","span":null,"visibility":"default","docs":"Makes a copy of the value in its ASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`str::to_uppercase`].\n\n# Note\n\nThis method is deprecated in favor of the identically-named\ninherent methods on `u8`, `char`, `[u8]` and `str`.\n\n[`make_ascii_uppercase`]: AsciiExt::make_ascii_uppercase","links":{"`str::to_uppercase`":"5:6190:62369","AsciiExt::make_ascii_uppercase":"1:1037:15398"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.26.0","note":"use inherent methods instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"AsciiExt","id":"1:1031:6614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:98":{"id":"0:98","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[103,8],"end":[103,15]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::MergeBy","name":"MergeBy","id":"0:674:1640","glob":false}},"2:13711:802":{"id":"2:13711:802","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15876:4439"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2615:1717":{"id":"0:2615:1717","crate_id":0,"name":"with_position","span":{"filename":"src/lib.rs","begin":[1642,4],"end":[1646,5]},"visibility":"default","docs":"Return an iterator adaptor that wraps each element in a `Position` to\nease special-case handling of the first or last elements.\n\nIterator element type is\n[`Position<Self::Item>`](Position)\n\n```\nuse itertools::{Itertools, Position};\n\nlet it = (0..4).with_position();\nitertools::assert_equal(it,\n                        vec![Position::First(0),\n                             Position::Middle(1),\n                             Position::Middle(2),\n                             Position::Last(3)]);\n\nlet it = (0..1).with_position();\nitertools::assert_equal(it, vec![Position::Only(0)]);\n```","links":{"Position":"0:4617:1742"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"WithPosition","id":"0:2430:1718","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4630:1564":{"id":"0:4630:1564","crate_id":0,"name":"0","span":{"filename":"src/with_position.rs","begin":[46,9],"end":[46,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"0:2506":{"id":"0:2506","crate_id":0,"name":null,"span":{"filename":"src/zip_longest.rs","begin":[80,0],"end":[83,2]},"visibility":{"restricted":{"parent":"0:2466:1721","path":"::zip_longest"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3370:216-0:3777:1658":{"id":"a:2:3370:216-0:3777:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3833:4755":{"id":"2:3833:4755","crate_id":2,"name":"Residual","span":null,"visibility":"default","docs":"The type of the value passed to [`FromResidual::from_residual`]\nas part of `?` when short-circuiting.\n\nThis represents the possible values of the `Self` type which are *not*\nrepresented by the `Output` type.\n\n# Note to Implementors\n\nThe choice of this type is critical to interconversion.\nUnlike the `Output` type, which will often be a raw generic type,\nthis type is typically a newtype of some sort to \"color\" the type\nso that it's distinguishable from the residuals of other types.\n\nThis is why `Result<T, E>::Residual` is not `E`, but `Result<Infallible, E>`.\nThat way it's distinct from `ControlFlow<E>::Residual`, for example,\nand thus `?` on `ControlFlow` cannot be used in a method returning `Result`.\n\nIf you're making a generic type `Foo<T>` that implements `Try<Output = T>`,\nthen typically you can use `Foo<std::convert::Infallible>` as its `Residual`\ntype: that type will have a \"hole\" in the correct place, and will maintain the\n\"foo-ness\" of the residual so other types need to opt-in to interconversion.","links":{"`FromResidual::from_residual`":"2:3838:694"},"attrs":["#[unstable(feature = \"try_trait_v2\", issue = \"84277\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"a:2:3382:225-0:4617:1742":{"id":"a:2:3382:225-0:4617:1742","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2133:1740":{"id":"0:2133:1740","crate_id":0,"name":"unfold","span":{"filename":"src/sources.rs","begin":[100,0],"end":[107,1]},"visibility":"public","docs":"Creates a new unfold source with the specified closure as the \"iterator\nfunction\" and an initial state to eventually pass to the closure\n\n`unfold` is a general iterator builder: it has a mutable state value,\nand a closure with access to the state that produces the next value.\n\nThis more or less equivalent to a regular struct with an [`Iterator`]\nimplementation, and is useful for one-off iterators.\n\n```\n// an iterator that yields sequential Fibonacci numbers,\n// and stops at the maximum representable value.\n\nuse itertools::unfold;\n\nlet mut fibonacci = unfold((1u32, 1u32), |(x1, x2)| {\n    // Attempt to get the next Fibonacci number\n    let next = x1.saturating_add(*x2);\n\n    // Shift left: ret <- x1 <- x2 <- next\n    let ret = *x1;\n    *x1 = *x2;\n    *x2 = next;\n\n    // If addition has saturated at the maximum, we are finished\n    if ret == *x1 && ret > 1 {\n        None\n    } else {\n        Some(ret)\n    }\n});\n\nitertools::assert_equal(fibonacci.by_ref().take(8),\n                        vec![1, 1, 2, 3, 5, 8, 13, 21]);\nassert_eq!(fibonacci.last(), Some(2_971_215_073))\n```","links":{"`Iterator`":"2:8873:159"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["initial_state",{"kind":"generic","inner":"St"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Unfold","id":"0:4083:1702","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"St","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"St"}}}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:3207-0:4058:1697":{"id":"b:2:3207-0:4058:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6239:23430":{"id":"1:6239:23430","crate_id":1,"name":"continued","span":null,"visibility":"default","docs":"Whether the process was continued from a stopped status.\n\nIe, `WIFCONTINUED`.  This is only possible if the status came from a `wait` system call\nwhich was passed `WCONTINUED`, and was then converted into an `ExitStatus`.","links":{},"attrs":["#[stable(feature = \"unix_process_wait_more\", since = \"1.58.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3213-0:4092:1703":{"id":"b:2:3213-0:4092:1703","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iterate","id":"0:4092:1703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:747:932":{"id":"0:747:932","crate_id":0,"name":"next","span":{"filename":"src/adaptors/mod.rs","begin":[723,4],"end":[725,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1504":{"id":"0:1504","crate_id":0,"name":null,"span":{"filename":"src/groupbylazy.rs","begin":[411,0],"end":[425,1]},"visibility":{"restricted":{"parent":"0:1387:1665","path":"::groupbylazy"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"outlives":"'a"}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"generic","inner":"K"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Group","id":"0:1490:1670","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:1509:1849","0:1510:932"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3218-0:3017:1648":{"id":"b:2:3218-0:3017:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Step","id":"0:3017:1648","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:3397:1646":{"id":"b:2:2868-0:3397:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1174:1731":{"id":"0:1174:1731","crate_id":0,"name":"diff_with","span":{"filename":"src/diff.rs","begin":[40,0],"end":[61,1]},"visibility":"public","docs":"Compares every element yielded by both `i` and `j` with the given function in lock-step and\nreturns a [`Diff`] which describes how `j` differs from `i`.\n\nIf the number of elements yielded by `j` is less than the number of elements yielded by `i`,\nthe number of `j` elements yielded will be returned along with `i`'s remaining elements as\n`Diff::Shorter`.\n\nIf the two elements of a step differ, the index of those elements along with the remaining\nelements of both `i` and `j` are returned as `Diff::FirstMismatch`.\n\nIf `i` becomes exhausted before `j` becomes exhausted, the number of elements in `i` along with\nthe remaining `j` elements will be returned as `Diff::Longer`.","links":{"`Diff`":"0:1158:1732"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["i",{"kind":"generic","inner":"I"}],["j",{"kind":"generic","inner":"J"}],["is_equal",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Diff","id":"0:1158:1732","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}},{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:168":{"id":"0:168","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[126,60],"end":[126,67]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::groupbylazy::GroupBy","name":"GroupBy","id":"0:1452:1669","glob":false}},"a:2:3411:4706-0:1883:1687":{"id":"a:2:3411:4706-0:1883:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekingTakeWhile","id":"0:1883:1687","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4058:1697":{"id":"0:4058:1697","crate_id":0,"name":"RcIter","span":{"filename":"src/rciter_impl.rs","begin":[8,0],"end":[11,1]},"visibility":"public","docs":"A wrapper for `Rc<RefCell<I>>`, that implements the `Iterator` trait.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:4060:3505"],"fields_stripped":false}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:4058:1697","a:2:9532:4793-0:4058:1697","a:2:3382:225-0:4058:1697","a:2:3370:216-0:4058:1697","a:2:3411:4706-0:4058:1697","b:0:2854-0:4058:1697","b:2:8676-0:4058:1697","b:2:4104-0:4058:1697","b:2:2865-0:4058:1697","b:2:3203-0:4058:1697","b:2:3207-0:4058:1697","b:2:3218-0:4058:1697","b:2:2868-0:4058:1697","b:2:3213-0:4058:1697","b:5:848-0:4058:1697","0:4061","0:2054","0:2056","0:2062","0:2065","0:2071"]}},"0:982":{"id":"0:982","crate_id":0,"name":null,"span":{"filename":"src/free.rs","begin":[34,0],"end":[34,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::merge_join::merge_join_by","name":"merge_join_by","id":"0:1719:2091","glob":false}},"a:2:9532:4793-0:1651:1677":{"id":"a:2:9532:4793-0:1651:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2245:1980":{"id":"0:2245:1980","crate_id":0,"name":"TupleCollect","span":{"filename":"src/tuple_impl.rs","begin":[239,0],"end":[252,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:2246:1849","0:2247:4281","0:2248:4285","0:2250:2356","0:2252:4295","0:2253:4296"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3382:225-0:674:1640":{"id":"a:2:3382:225-0:674:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeBy","id":"0:674:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1158:1732":{"id":"0:1158:1732","crate_id":0,"name":"Diff","span":{"filename":"src/diff.rs","begin":[15,0],"end":[26,1]},"visibility":"public","docs":"A type returned by the [`diff_with`] function.\n\n`Diff` represents the way in which the elements yielded by the iterator `I` differ to some\niterator `J`.","links":{"`diff_with`":"0:1174:1731"},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"variants_stripped":false,"variants":["0:1161:3646","0:1166:3648","0:1170:3650"],"impls":["a:2:9533:4792-0:1158:1732","a:2:9532:4793-0:1158:1732","a:2:3382:225-0:1158:1732","a:2:3370:216-0:1158:1732","a:2:3411:4706-0:1158:1732","b:2:4104-0:1158:1732","b:2:2865-0:1158:1732","b:2:3203-0:1158:1732","b:2:3207-0:1158:1732","b:2:3218-0:1158:1732","b:2:2868-0:1158:1732","b:2:3213-0:1158:1732"]}},"2:23053:7076":{"id":"2:23053:7076","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23054:7004","2:23055:16106","2:23056:16107","2:23057:16108","2:23058:16109","2:23059:16110","2:23060:16111","2:23061:16112","2:23062:16113","2:23063:16114","2:23064:16115","2:23065:16116","2:23066:16117","2:23067:16118","2:23068:16119","2:23069:16120","2:23070:16121","2:23071:16122","2:23072:16123","2:23073:16124","2:23074:16125","2:23075:16126","2:23076:16127","2:23077:16128","2:23078:16129"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23155:6539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9533:4792-0:4083:1702":{"id":"a:2:9533:4792-0:4083:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"St","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"St"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unfold","id":"0:4083:1702","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:238":{"id":"0:238","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[151,32],"end":[151,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::tuple_impl::TupleBuffer","name":"TupleBuffer","id":"0:4119:1707","glob":false}},"0:816:1754":{"id":"0:816:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/adaptors/mod.rs","begin":[965,4],"end":[967,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:4401:1715":{"id":"b:2:3218-0:4401:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4104-0:3861:1674":{"id":"b:2:4104-0:3861:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"ElemF"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4621:1564":{"id":"0:4621:1564","crate_id":0,"name":"0","span":{"filename":"src/with_position.rs","begin":[40,10],"end":[40,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"2:3681:184":{"id":"2:3681:184","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The returned type after indexing.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null}},"0:1073:1849":{"id":"0:1073:1849","crate_id":0,"name":"Item","span":{"filename":"src/combinations.rs","begin":[86,4],"end":[86,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7898:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8224:4593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"2:3462:184":{"id":"2:3462:184","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `%` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:1011:283":{"id":"0:1011:283","crate_id":0,"name":"all","span":{"filename":"src/free.rs","begin":[196,0],"end":[201,1]},"visibility":"public","docs":"Test whether the predicate holds for all elements in the iterable.\n\n[`IntoIterator`] enabled version of [`Iterator::all`].\n\n```\nuse itertools::all;\n\nassert!(all(&[1, 2, 3], |elt| *elt > 0));\n```","links":{"`IntoIterator`":"2:8672:152","`Iterator::all`":"2:8988:283"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2054":{"id":"0:2054","crate_id":0,"name":null,"span":{"filename":"src/rciter_impl.rs","begin":[53,0],"end":[55,1]},"visibility":{"restricted":{"parent":"0:2038:1696","path":"::rciter_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:4064:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1362:2669":{"id":"0:1362:2669","crate_id":0,"name":"sum","span":{"filename":"src/grouping_map.rs","begin":[505,4],"end":[509,5]},"visibility":"public","docs":"Groups elements from the `GroupingMap` source by key and sums them.\n \nThis is just a shorthand for `self.fold_first(|acc, _, val| acc + val)`.\nIt is more limited than `Iterator::sum` since it doesn't use the `Sum` trait.\n \nReturns a `HashMap` associating the key of each group with the sum of that group's elements.\n \n```\nuse itertools::Itertools;\n \nlet lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()\n    .into_grouping_map_by(|&n| n % 3)\n    .sum();\n \nassert_eq!(lookup[&0], 3 + 9 + 12);\nassert_eq!(lookup[&1], 1 + 4 + 7);\nassert_eq!(lookup[&2], 5 + 8);\nassert_eq!(lookup.len(), 3);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Add","id":"2:3439:3711","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"V"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3777:1658":{"id":"0:3777:1658","crate_id":0,"name":"Format","span":{"filename":"src/format.rs","begin":[25,0],"end":[29,1]},"visibility":"public","docs":"Format all iterator elements lazily, separated by `sep`.\n\nThe format value can only be formatted once, after that the iterator is\nexhausted.\n\nSee [`.format()`](crate::Itertools::format)\nfor more information.","links":{"crate::Itertools::format":"0:2655:678"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:3777:1658","a:2:9532:4793-0:3777:1658","a:2:3382:225-0:3777:1658","a:2:3370:216-0:3777:1658","a:2:3411:4706-0:3777:1658","b:2:4104-0:3777:1658","b:2:2865-0:3777:1658","b:2:3203-0:3777:1658","b:2:3207-0:3777:1658","b:2:3218-0:3777:1658","b:2:2868-0:3777:1658","b:2:3213-0:3777:1658","b:5:848-0:3777:1658","b:5:6507-0:3777:1658","0:3782","0:3786","0:3790","0:3794","0:3798","0:3802","0:3806","0:3810","0:3814","0:3818"]}},"2:9532:4793":{"id":"2:9532:4793","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4873:1849":{"id":"0:4873:1849","crate_id":0,"name":"Item","span":{"filename":"src/ziptuple.rs","begin":[134,0],"end":[134,38]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"C"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"D"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"E"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"G"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"H"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]}}},"0:2385:502":{"id":"0:2385:502","crate_id":0,"name":"count","span":{"filename":"src/unique_impl.rs","begin":[75,4],"end":[78,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3786":{"id":"0:3786","crate_id":0,"name":null,"span":{"filename":"src/format.rs","begin":[112,0],"end":[113,70]},"visibility":{"restricted":{"parent":"0:1247:678","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3789:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2868-0:1476:1671":{"id":"b:2:2868-0:1476:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Groups","id":"0:1476:1671","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:4129:1710":{"id":"b:2:2865-0:4129:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tuples","id":"0:4129:1710","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:8676-0:3928:1681":{"id":"b:2:8676-0:3928:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:4091:415":{"id":"0:4091:415","crate_id":0,"name":"clone","span":{"filename":"src/sources.rs","begin":[116,9],"end":[116,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Unfold","id":"0:4083:1702","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:4048:1695":{"id":"a:2:3411:4706-0:4048:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3911:2945":{"id":"0:3911:2945","crate_id":0,"name":"MinMax","span":{"filename":"src/minmax.rs","begin":[15,4],"end":[15,16]},"visibility":"default","docs":"More than one element in the iterator, the first element is not larger\nthan the second","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:3913:1564","0:3914:1565"]}},"0:2498:1754":{"id":"0:2498:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/zip_longest.rs","begin":[50,4],"end":[52,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:875":{"id":"0:875","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[1147,0],"end":[1151,2]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4399:415":{"id":"0:4399:415","crate_id":0,"name":"clone","span":{"filename":"src/unique_impl.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:771":{"id":"0:771","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[862,0],"end":[903,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOk","id":"0:3375:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:776:1849","0:777:932","0:778:1754","0:779:2582","0:783:2468"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8890:1801":{"id":"2:8890:1801","crate_id":2,"name":"zip","span":null,"visibility":"default","docs":"'Zips up' two iterators into a single iterator of pairs.\n\n`zip()` returns a new iterator that will iterate over two other\niterators, returning a tuple where the first element comes from the\nfirst iterator, and the second element comes from the second iterator.\n\nIn other words, it zips two iterators together, into a single one.\n\nIf either iterator returns [`None`], [`next`] from the zipped iterator\nwill return [`None`].\nIf the zipped iterator has no more elements to return then each further attempt to advance\nit will first try to advance the first iterator at most one time and if it still yielded an item\ntry to advance the second iterator at most one time.\n\nTo 'undo' the result of zipping up two iterators, see [`unzip`].\n\n[`unzip`]: Iterator::unzip\n\n# Examples\n\nBasic usage:\n\n```\nlet a1 = [1, 2, 3];\nlet a2 = [4, 5, 6];\n\nlet mut iter = a1.iter().zip(a2.iter());\n\nassert_eq!(iter.next(), Some((&1, &4)));\nassert_eq!(iter.next(), Some((&2, &5)));\nassert_eq!(iter.next(), Some((&3, &6)));\nassert_eq!(iter.next(), None);\n```\n\nSince the argument to `zip()` uses [`IntoIterator`], we can pass\nanything that can be converted into an [`Iterator`], not just an\n[`Iterator`] itself. For example, slices (`&[T]`) implement\n[`IntoIterator`], and so can be passed to `zip()` directly:\n\n```\nlet s1 = &[1, 2, 3];\nlet s2 = &[4, 5, 6];\n\nlet mut iter = s1.iter().zip(s2);\n\nassert_eq!(iter.next(), Some((&1, &4)));\nassert_eq!(iter.next(), Some((&2, &5)));\nassert_eq!(iter.next(), Some((&3, &6)));\nassert_eq!(iter.next(), None);\n```\n\n`zip()` is often used to zip an infinite iterator to a finite one.\nThis works because the finite iterator will eventually return [`None`],\nending the zipper. Zipping with `(0..)` can look a lot like [`enumerate`]:\n\n```\nlet enumerate: Vec<_> = \"foo\".chars().enumerate().collect();\n\nlet zipper: Vec<_> = (0..).zip(\"foo\".chars()).collect();\n\nassert_eq!((0, 'f'), enumerate[0]);\nassert_eq!((0, 'f'), zipper[0]);\n\nassert_eq!((1, 'o'), enumerate[1]);\nassert_eq!((1, 'o'), zipper[1]);\n\nassert_eq!((2, 'o'), enumerate[2]);\nassert_eq!((2, 'o'), zipper[2]);\n```\n\nIf both iterators have roughly equivalent syntax, it may be more readable to use [`zip`]:\n\n```\nuse std::iter::zip;\n\nlet a = [1, 2, 3];\nlet b = [2, 3, 4];\n\nlet mut zipped = zip(\n    a.into_iter().map(|x| x * 2).skip(1),\n    b.into_iter().map(|x| x * 2).skip(1),\n);\n\nassert_eq!(zipped.next(), Some((4, 6)));\nassert_eq!(zipped.next(), Some((6, 8)));\nassert_eq!(zipped.next(), None);\n```\n\ncompared to:\n\n```\n# let a = [1, 2, 3];\n# let b = [2, 3, 4];\n#\nlet mut zipped = a\n    .into_iter()\n    .map(|x| x * 2)\n    .skip(1)\n    .zip(b.into_iter().map(|x| x * 2).skip(1));\n#\n# assert_eq!(zipped.next(), Some((4, 6)));\n# assert_eq!(zipped.next(), Some((6, 8)));\n# assert_eq!(zipped.next(), None);\n```\n\n[`enumerate`]: Iterator::enumerate\n[`next`]: Iterator::next\n[`zip`]: crate::iter::zip","links":{"Iterator::enumerate":"2:8910:2374","Iterator::next":"2:8875:932","Iterator::unzip":"2:9083:5148","`IntoIterator`":"2:8672:152","`Iterator`":"2:8873:159","`None`":"2:47811:177","crate::iter::zip":"2:7935:1801"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Zip","id":"2:47116:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11215:21637":{"id":"2:11215:21637","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"default","docs":"Returns a mutable reference to the output at this location, without\nperforming any bounds checking.\nCalling this method with an out-of-bounds index or a dangling `slice` pointer\nis *[undefined behavior]* even if the resulting reference is not used.\n\n[undefined behavior]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html","links":{},"attrs":["#[unstable(feature = \"slice_index_methods\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["slice",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SliceIndex","id":"2:11209:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}},"2:13801:61721":{"id":"2:13801:61721","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3190:1435":{"id":"2:3190:1435","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":"Performs the conversion.","links":{},"attrs":["#[stable(feature = \"try_from\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4653":{"id":"0:4653","crate_id":0,"name":null,"span":{"filename":"src/zip_eq_impl.rs","begin":[6,16],"end":[6,21]},"visibility":{"restricted":{"parent":"0:2450:1719","path":"::zip_eq_impl"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["0:4656:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3973:4024":{"id":"0:3973:4024","crate_id":0,"name":"peeking_next","span":{"filename":"src/peeking_take_while.rs","begin":[142,0],"end":[142,59]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["accept",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:3777:1658":{"id":"b:2:3213-0:3777:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:848-0:4065:1699":{"id":"b:5:848-0:4065:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1749":{"id":"0:1749","crate_id":0,"name":null,"span":{"filename":"src/minmax.rs","begin":[18,0],"end":[46,1]},"visibility":{"restricted":{"parent":"0:1748:1734","path":"::minmax"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:1751:4008"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3218-0:3386:1645":{"id":"b:2:3218-0:3386:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3218-0:1527:1668":{"id":"b:2:3218-0:1527:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunks","id":"0:1527:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3203-0:674:1640":{"id":"b:2:3203-0:674:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeBy","id":"0:674:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3411:4706-0:709:1641":{"id":"a:2:3411:4706-0:709:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TakeWhileRef","id":"0:709:1641","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3693:3067":{"id":"0:3693:3067","crate_id":0,"name":"next_back","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2967:667":{"id":"0:2967:667","crate_id":0,"name":"fmt","span":{"filename":"src/adaptors/mod.rs","begin":[28,16],"end":[28,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5068:3584":{"id":"1:5068:3584","crate_id":1,"name":"Iter","span":null,"visibility":"default","docs":"Returned iterator over socket addresses which this type may correspond\nto.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[{"eq_predicate":{"lhs":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"ToSocketAddrs","id":"1:5067:6617","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"rhs":{"type":{"kind":"resolved_path","inner":{"name":"SocketAddr","id":"1:11134:6619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:4034:667":{"id":"0:4034:667","crate_id":0,"name":"fmt","span":{"filename":"src/permutations.rs","begin":[59,4],"end":[59,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"::std::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3370:216-0:4155:1709":{"id":"a:2:3370:216-0:4155:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CircularTupleWindows","id":"0:4155:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4476:1744":{"id":"0:4476:1744","crate_id":0,"name":"multiunzip","span":{"filename":"src/unziptuple.rs","begin":[74,0],"end":[74,88]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"},{"kind":"generic","inner":"FromC"},{"kind":"generic","inner":"FromD"},{"kind":"generic","inner":"FromE"},{"kind":"generic","inner":"FromF"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:507":{"id":"0:507","crate_id":0,"name":null,"span":{"filename":"src/adaptors/multi_product.rs","begin":[21,0],"end":[27,1]},"visibility":{"restricted":{"parent":"0:497:3191","path":"::adaptors::multi_product"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"std::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"std::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiProduct","id":"0:2928:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:2935:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5111:415":{"id":"0:5111:415","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[3761,15],"end":[3761,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1145:667":{"id":"0:1145:667","crate_id":0,"name":"fmt","span":{"filename":"src/exactly_one_err.rs","begin":[78,4],"end":[85,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"FmtResult","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:783:2468":{"id":"0:783:2468","crate_id":0,"name":"collect","span":{"filename":"src/adaptors/mod.rs","begin":[895,4],"end":[902,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"C"},"c_variadic":false},"generics":{"params":[{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"FromIterator","id":"2:8668:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:846":{"id":"0:846","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[1059,0],"end":[1062,2]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4762":{"id":"0:4762","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[131,0],"end":[131,29]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]","#[allow(unused_assignments)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"}]}}],"bindings":[]}}}},"items":["0:4768:1849","0:4769:932","0:4770:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9044:3800":{"id":"2:9044:3800","crate_id":2,"name":"max_by_key","span":null,"visibility":"default","docs":"Returns the element that gives the maximum value from the\nspecified function.\n\nIf several elements are equally maximum, the last element is\nreturned. If the iterator is empty, [`None`] is returned.\n\n# Examples\n\n```\nlet a = [-3_i32, 0, 1, 5, -10];\nassert_eq!(*a.iter().max_by_key(|x| x.abs()).unwrap(), -10);\n```","links":{"`None`":"2:47811:177"},"attrs":["#[stable(feature = \"iter_cmp_by_key\", since = \"1.6.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"generic","inner":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3427":{"id":"0:3427","crate_id":0,"name":null,"span":{"filename":"src/either_or_both.rs","begin":[6,16],"end":[6,25]},"visibility":{"restricted":{"parent":"0:878:1747","path":"::either_or_both"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":["0:3430:611"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10576:667":{"id":"2:10576:667","crate_id":2,"name":"fmt","span":null,"visibility":"default","docs":"Formats the value using the given formatter.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48872:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:548":{"id":"0:548","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[11,47],"end":[11,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::map::MapOk","name":"MapOk","id":"0:464:1638","glob":false}},"0:4755":{"id":"0:4755","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[131,0],"end":[131,29]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"}]}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"C"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"D"},"trait":{"name":"","id":"2:8672:152","args":null}}},{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"E"},"trait":{"name":"","id":"2:8672:152","args":null}}}]}}],"bindings":[]}}}},"items":["0:4761:688"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2865-0:1490:1670":{"id":"b:2:2865-0:1490:1670","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Group","id":"0:1490:1670","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23121:16135":{"id":"2:23121:16135","crate_id":2,"name":"reduce_and","span":null,"visibility":"default","docs":"Returns the cumulative bitwise \"and\" across the lanes of the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdInt","id":"2:23106:7064","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:8676-0:4155:1709":{"id":"b:2:8676-0:4155:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CircularTupleWindows","id":"0:4155:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:3207-0:5099:2652":{"id":"b:2:3207-0:5099:2652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4104-0:3748:1653":{"id":"b:2:4104-0:3748:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CombinationsWithReplacement","id":"0:3748:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3218-0:3939:1685":{"id":"b:2:3218-0:3939:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3203-0:3737:1655":{"id":"b:2:3203-0:3737:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3039":{"id":"0:3039","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[658,9],"end":[658,14]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WhileSome","id":"0:3036:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3041:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3382:225-0:1476:1671":{"id":"a:2:3382:225-0:1476:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Groups","id":"0:1476:1671","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"5:6172:3941":{"id":"5:6172:3941","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8479:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8479:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9091:3546":{"id":"2:9091:3546","crate_id":2,"name":"cloned","span":null,"visibility":"default","docs":"Creates an iterator which [`clone`]s all of its elements.\n\nThis is useful when you have an iterator over `&T`, but you need an\niterator over `T`.\n\nThere is no guarantee whatsoever about the `clone` method actually\nbeing called *or* optimized away. So code should not depend on\neither.\n\n[`clone`]: Clone::clone\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nlet v_cloned: Vec<_> = a.iter().cloned().collect();\n\n// cloned is the same as .map(|&x| x), for integers\nlet v_map: Vec<_> = a.iter().map(|&x| x).collect();\n\nassert_eq!(v_cloned, vec![1, 2, 3]);\nassert_eq!(v_map, vec![1, 2, 3]);\n```\n\nTo get the best performance, try to clone late:\n\n```\nlet a = [vec![0_u8, 1, 2], vec![3, 4], vec![23]];\n// don't do this:\nlet slower: Vec<_> = a.iter().cloned().filter(|s| s.len() == 1).collect();\nassert_eq!(&[vec![23]], &slower[..]);\n// instead call `cloned` late\nlet faster: Vec<_> = a.iter().filter(|s| s.len() == 1).cloned().collect();\nassert_eq!(&[vec![23]], &faster[..]);\n```","links":{"Clone::clone":"2:2885:415"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Cloned","id":"2:46917:3547","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:1490:1670":{"id":"a:2:3411:4706-0:1490:1670","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Group","id":"0:1490:1670","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9533:4792-0:3386:1645":{"id":"a:2:9533:4792-0:3386:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4147":{"id":"0:4147","crate_id":0,"name":null,"span":{"filename":"src/tuple_impl.rs","begin":[137,9],"end":[137,14]},"visibility":{"restricted":{"parent":"0:2180:1706","path":"::tuple_impl"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"HomogeneousTuple","id":"0:2196:1727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleWindows","id":"0:4142:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:4150:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5107":{"id":"0:5107","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3761,9],"end":[3761,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2865-0:2982:1635":{"id":"b:2:2865-0:2982:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3370:216-0:2928:1649":{"id":"a:2:3370:216-0:2928:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiProduct","id":"0:2928:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:0:2854-0:2928:1649":{"id":"b:0:2854-0:2928:1649","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiProduct","id":"0:2928:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1320:3749":{"id":"0:1320:3749","crate_id":0,"name":"aggregate","span":{"filename":"src/grouping_map.rs","begin":[99,4],"end":[112,5]},"visibility":"public","docs":"This is the generic way to perform any operation on a `GroupingMap`.\nIt's suggested to use this method only to implement custom operations\nwhen the already provided ones are not enough.\n \nGroups elements from the `GroupingMap` source by key and applies `operation` to the elements\nof each group sequentially, passing the previously accumulated value, a reference to the key\nand the current element as arguments, and stores the results in an `HashMap`.\n\nThe `operation` function is invoked on each element with the following parameters:\n - the current value of the accumulator of the group if there is currently one;\n - a reference to the key of the group this element belongs to;\n - the element from the source being aggregated;\n \nIf `operation` returns `Some(element)` then the accumulator is updated with `element`,\notherwise the previous accumulation is discarded.\n\nReturn a `HashMap` associating the key of each group with the result of aggregation of\nthat group's elements. If the aggregation of the last element of a group discards the\naccumulator then there won't be an entry associated to that group's key.\n \n```\nuse itertools::Itertools;\n \nlet data = vec![2, 8, 5, 7, 9, 0, 4, 10];\nlet lookup = data.into_iter()\n    .into_grouping_map_by(|&n| n % 4)\n    .aggregate(|acc, _key, val| {\n        if val == 0 || val == 10 {\n            None\n        } else {\n            Some(acc.unwrap_or(0) + val)\n        }\n    });\n \nassert_eq!(lookup[&0], 4);        // 0 resets the accumulator so only 4 is summed\nassert_eq!(lookup[&1], 5 + 9);\nassert_eq!(lookup.get(&2), None); // 10 resets the accumulator and nothing is summed afterward\nassert_eq!(lookup[&3], 7);\nassert_eq!(lookup.len(), 3);      // The final keys are only 0, 1 and 2\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["operation",{"kind":"generic","inner":"FO"}]],"output":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"FO","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"FO"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"K"}}},{"kind":"generic","inner":"V"}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:3017:1648":{"id":"a:2:3411:4706-0:3017:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Step","id":"0:3017:1648","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[105,8],"end":[105,17]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::WhileSome","name":"WhileSome","id":"0:3036:1642","glob":false}},"a:2:3411:4706-0:3036:1642":{"id":"a:2:3411:4706-0:3036:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WhileSome","id":"0:3036:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4087:1344":{"id":"0:4087:1344","crate_id":0,"name":"state","span":{"filename":"src/sources.rs","begin":[121,4],"end":[121,17]},"visibility":"public","docs":"Internal state that will be passed to the closure on the next iteration","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"St"}},"b:2:8676-0:4048:1695":{"id":"b:2:8676-0:4048:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:3218-0:4657:1722":{"id":"b:2:3218-0:4657:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3378:223":{"id":"2:3378:223","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4695:688":{"id":"0:4695:688","crate_id":0,"name":"from","span":{"filename":"src/ziptuple.rs","begin":[128,0],"end":[128,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:0:2854-0:3007:1636":{"id":"b:0:2854-0:3007:1636","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Batching","id":"0:3007:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5527:6858":{"id":"1:5527:6858","crate_id":1,"name":"uid","span":null,"visibility":"default","docs":"Returns the user ID of the owner of this file.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let user_id = meta.uid();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3382:225-0:2982:1635":{"id":"a:2:3382:225-0:2982:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4104-0:3045:1644":{"id":"b:2:4104-0:3045:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleCombinations","id":"0:3045:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:8676-0:2968:1631":{"id":"b:2:8676-0:2968:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InterleaveShortest","id":"0:2968:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:10813:22114":{"id":"2:10813:22114","crate_id":2,"name":"write_u8","span":null,"visibility":"default","docs":"Writes a single `u8` into this hasher.","links":{},"attrs":["#[stable(feature = \"hasher_write\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3035:667":{"id":"0:3035:667","crate_id":0,"name":"fmt","span":{"filename":"src/adaptors/mod.rs","begin":[618,4],"end":[618,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"::std::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1161:3646":{"id":"0:1161:3646","crate_id":0,"name":"FirstMismatch","span":{"filename":"src/diff.rs","begin":[21,4],"end":[21,48]},"visibility":"default","docs":"The index of the first non-matching element along with both iterator's remaining elements\nstarting with the first mis-match.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:1163:1564","0:1164:1565","0:1165:1566"]}},"2:23775:16125":{"id":"2:23775:16125","crate_id":2,"name":"simd_clamp","span":null,"visibility":"default","docs":"Restrict each lane to a certain interval.\n\nFor each lane, returns `max` if `self` is greater than `max`, and `min` if `self` is\nless than `min`. Otherwise returns `self`.\n\n# Panics\n\nPanics if `min > max` on any lane.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["min",{"kind":"generic","inner":"Self"}],["max",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3213-0:2992:1634":{"id":"b:2:3213-0:2992:1634","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Product","id":"0:2992:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:743":{"id":"0:743","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[717,0],"end":[726,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"HasCombination","id":"0:737:2255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleCombinations","id":"0:3045:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:746:1849","0:747:932"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:0:2854-0:791:1632":{"id":"b:0:2854-0:791:1632","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterMapOk","id":"0:791:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13355:5418":{"id":"2:13355:5418","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13357:6966","2:13358:932","2:13359:23329","2:13360:23330"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3218-0:3748:1653":{"id":"b:2:3218-0:3748:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CombinationsWithReplacement","id":"0:3748:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3723:932":{"id":"0:3723:932","crate_id":0,"name":"next","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:397:3361":{"id":"0:397:3361","crate_id":0,"name":"dedup_pair","span":{"filename":"src/adaptors/coalesce.rs","begin":[127,4],"end":[127,51]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["a",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}],["b",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3842:4755":{"id":"2:3842:4755","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3844:22895"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3535:364":{"id":"2:3535:364","crate_id":2,"name":"bitxor_assign","span":null,"visibility":"default","docs":"Performs the `^=` operation.\n\n# Examples\n\n```\nlet mut x = true;\nx ^= false;\nassert_eq!(x, true);\n\nlet mut x = true;\nx ^= true;\nassert_eq!(x, false);\n\nlet mut x: u8 = 5;\nx ^= 1;\nassert_eq!(x, 4);\n\nlet mut x: u8 = 5;\nx ^= 2;\nassert_eq!(x, 7);\n```","links":{},"attrs":["#[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9532:4793-0:1917:1689":{"id":"a:2:9532:4793-0:1917:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Permutations","id":"0:1917:1689","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2865-0:1917:1689":{"id":"b:2:2865-0:1917:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Permutations","id":"0:1917:1689","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3411:4706-0:4129:1710":{"id":"a:2:3411:4706-0:4129:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Buffer","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TupleCollect","id":"0:2245:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tuples","id":"0:4129:1710","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8914:5137":{"id":"2:8914:5137","crate_id":2,"name":"take_while","span":null,"visibility":"default","docs":"Creates an iterator that yields elements based on a predicate.\n\n`take_while()` takes a closure as an argument. It will call this\nclosure on each element of the iterator, and yield elements\nwhile it returns `true`.\n\nAfter `false` is returned, `take_while()`'s job is over, and the\nrest of the elements are ignored.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [-1i32, 0, 1];\n\nlet mut iter = a.iter().take_while(|x| x.is_negative());\n\nassert_eq!(iter.next(), Some(&-1));\nassert_eq!(iter.next(), None);\n```\n\nBecause the closure passed to `take_while()` takes a reference, and many\niterators iterate over references, this leads to a possibly confusing\nsituation, where the type of the closure is a double reference:\n\n```\nlet a = [-1, 0, 1];\n\nlet mut iter = a.iter().take_while(|x| **x < 0); // need two *s!\n\nassert_eq!(iter.next(), Some(&-1));\nassert_eq!(iter.next(), None);\n```\n\nStopping after an initial `false`:\n\n```\nlet a = [-1, 0, 1, -2];\n\nlet mut iter = a.iter().take_while(|x| **x < 0);\n\nassert_eq!(iter.next(), Some(&-1));\n\n// We have more elements that are less than zero, but since we already\n// got a false, take_while() isn't used any more\nassert_eq!(iter.next(), None);\n```\n\nBecause `take_while()` needs to look at the value in order to see if it\nshould be included or not, consuming iterators will see that it is\nremoved:\n\n```\nlet a = [1, 2, 3, 4];\nlet mut iter = a.iter();\n\nlet result: Vec<i32> = iter.by_ref()\n                           .take_while(|n| **n != 3)\n                           .cloned()\n                           .collect();\n\nassert_eq!(result, &[1, 2]);\n\nlet result: Vec<i32> = iter.cloned().collect();\n\nassert_eq!(result, &[4]);\n```\n\nThe `3` is no longer there, because it was consumed in order to see if\nthe iteration should stop, but wasn't placed back into the iterator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"TakeWhile","id":"2:47106:4670","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1569:1673":{"id":"0:1569:1673","crate_id":0,"name":"Intersperse","span":{"filename":"src/intersperse.rs","begin":[25,0],"end":[25,94]},"visibility":"public","docs":"An iterator adaptor to insert a particular value\nbetween each element of the adapted iterator.\n\nIterator element type is `I::Item`\n\nThis iterator is *fused*.\n\nSee [`.intersperse()`](crate::Itertools::intersperse) for more information.","links":{"crate::Itertools::intersperse":"0:2525:1672"},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"resolved_path","inner":{"name":"IntersperseElementSimple","id":"0:3851:3928","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"b:2:3218-0:4670:1724":{"id":"b:2:3218-0:4670:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1335:3564":{"id":"0:1335:3564","crate_id":0,"name":"max","span":{"filename":"src/grouping_map.rs","begin":[235,4],"end":[239,5]},"visibility":"public","docs":"Groups elements from the `GroupingMap` source by key and finds the maximum of each group.\n \nIf several elements are equally maximum, the last element is picked.\n \nReturns a `HashMap` associating the key of each group with the maximum of that group's elements.\n \n```\nuse itertools::Itertools;\n \nlet lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()\n    .into_grouping_map_by(|&n| n % 3)\n    .max();\n \nassert_eq!(lookup[&0], 12);\nassert_eq!(lookup[&1], 7);\nassert_eq!(lookup[&2], 8);\nassert_eq!(lookup.len(), 3);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4401:1715":{"id":"0:4401:1715","crate_id":0,"name":"Unique","span":{"filename":"src/unique_impl.rs","begin":[157,0],"end":[159,1]},"visibility":"public","docs":"An iterator adapter to filter out duplicate elements.\n\nSee [`.unique()`](crate::Itertools::unique) for more information.","links":{"crate::Itertools::unique":"0:2597:2205"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:4401:1715","a:2:9532:4793-0:4401:1715","a:2:3382:225-0:4401:1715","a:2:3370:216-0:4401:1715","a:2:3411:4706-0:4401:1715","b:0:2854-0:4401:1715","b:2:8676-0:4401:1715","b:2:4104-0:4401:1715","b:2:2865-0:4401:1715","b:2:3203-0:4401:1715","b:2:3207-0:4401:1715","b:2:3218-0:4401:1715","b:2:2868-0:4401:1715","b:2:3213-0:4401:1715","b:5:848-0:4401:1715","0:2396","0:2402","0:2405","0:4404","0:2407"]}},"0:2252:4295":{"id":"0:2252:4295","crate_id":0,"name":"num_items","span":{"filename":"src/tuple_impl.rs","begin":[249,4],"end":[249,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:535:3247":{"id":"0:535:3247","crate_id":0,"name":"last","span":{"filename":"src/adaptors/multi_product.rs","begin":[216,4],"end":[229,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4952":{"id":"0:4952","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[136,0],"end":[136,44]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]","#[allow(unused_assignments)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"}]}}],"bindings":[]}}}},"items":["0:4963:1849","0:4964:932","0:4965:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2597:2205":{"id":"0:2597:2205","crate_id":0,"name":"unique","span":{"filename":"src/lib.rs","begin":[1314,4],"end":[1319,5]},"visibility":"default","docs":"Return an iterator adaptor that filters out elements that have\nalready been produced once during the iteration. Duplicates\nare detected using hash and equality.\n\nClones of visited elements are stored in a hash set in the\niterator.\n\nThe iterator is stable, returning the non-duplicate items in the order\nin which they occur in the adapted iterator. In a set of duplicate\nitems, the first item encountered is the item retained.\n\n```\nuse itertools::Itertools;\n\nlet data = vec![10, 20, 30, 20, 40, 10, 50];\nitertools::assert_equal(data.into_iter().unique(),\n                        vec![10, 20, 30, 40, 50]);\n```","links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:5099:2652":{"id":"b:5:848-0:5099:2652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2214":{"id":"0:2214","crate_id":0,"name":null,"span":{"filename":"src/tuple_impl.rs","begin":[101,0],"end":[110,1]},"visibility":{"restricted":{"parent":"0:2180:1706","path":"::tuple_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"HomogeneousTuple","id":"0:2196:1727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tuples","id":"0:4129:1710","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:2217:1849","0:2218:932"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3382:225-0:4037:1691":{"id":"a:2:3382:225-0:4037:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ProcessResults","id":"0:4037:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:848-0:2982:1635":{"id":"b:5:848-0:2982:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3021":{"id":"0:3021","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[415,9],"end":[415,14]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(deprecated)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Step","id":"0:3017:1648","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3023:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2132:1754":{"id":"0:2132:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/sources.rs","begin":[59,4],"end":[61,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:323":{"id":"0:323","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,28],"end":[182,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::unziptuple::multiunzip","name":"multiunzip","id":"0:2412:1744","glob":false}},"0:3971":{"id":"0:3971","crate_id":0,"name":null,"span":{"filename":"src/peeking_take_while.rs","begin":[142,0],"end":[142,59]},"visibility":{"restricted":{"parent":"0:1858:1686","path":"::peeking_take_while"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PeekingNext","id":"0:1868:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"::std::str::CharIndices","id":"2:49766:4068","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:3973:4024"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3619:585":{"id":"2:3619:585","crate_id":2,"name":"drop","span":null,"visibility":"default","docs":"Executes the destructor for this type.\n\nThis method is called implicitly when the value goes out of scope,\nand cannot be called explicitly (this is compiler error [E0040]).\nHowever, the [`mem::drop`] function in the prelude can be\nused to call the argument's `Drop` implementation.\n\nWhen this method has been called, `self` has not yet been deallocated.\nThat only happens after the method is over.\nIf this wasn't the case, `self` would be a dangling reference.\n\n# Panics\n\nGiven that a [`panic!`] will call `drop` as it unwinds, any [`panic!`]\nin a `drop` implementation will likely abort.\n\nNote that even if this panics, the value is considered to be dropped;\nyou must not cause `drop` to be called again. This is normally automatically\nhandled by the compiler, but when using unsafe code, can sometimes occur\nunintentionally, particularly when using [`ptr::drop_in_place`].\n\n[E0040]: ../../error_codes/E0040.html\n[`panic!`]: crate::panic!\n[`mem::drop`]: drop\n[`ptr::drop_in_place`]: crate::ptr::drop_in_place","links":{"crate::ptr::drop_in_place":"2:2765:586","drop":"2:2181:585","crate::panic!":"2:4:989"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:10570:667":{"id":"2:10570:667","crate_id":2,"name":"fmt","span":null,"visibility":"default","docs":"Formats the value using the given formatter.\n\n# Examples\n\n```\nuse std::fmt;\n\nstruct Position {\n    longitude: f32,\n    latitude: f32,\n}\n\nimpl fmt::Display for Position {\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n        write!(f, \"({}, {})\", self.longitude, self.latitude)\n    }\n}\n\nassert_eq!(\"(1.987, 2.983)\",\n           format!(\"{}\", Position { longitude: 1.987, latitude: 2.983, }));\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48872:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4700:932":{"id":"0:4700:932","crate_id":0,"name":"next","span":{"filename":"src/ziptuple.rs","begin":[128,0],"end":[128,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:0:2854-0:4112:1705":{"id":"b:0:2854-0:4112:1705","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tee","id":"0:4112:1705","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2007:1754":{"id":"0:2007:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/process_results_impl.rs","begin":[30,4],"end":[32,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3382:225-0:3836:1663":{"id":"a:2:3382:225-0:3836:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupingMap","id":"0:3836:1663","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:848-0:2430:1718":{"id":"b:5:848-0:2430:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WithPosition","id":"0:2430:1718","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3203-0:4129:1710":{"id":"b:2:3203-0:4129:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tuples","id":"0:4129:1710","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1742:1849":{"id":"0:1742:1849","crate_id":0,"name":"Item","span":{"filename":"src/merge_join.rs","begin":[60,4],"end":[60,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"b:2:8676-0:3737:1655":{"id":"b:2:8676-0:3737:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:3627:932":{"id":"0:3627:932","crate_id":0,"name":"next","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1590":{"id":"0:1590","crate_id":0,"name":null,"span":{"filename":"src/intersperse.rs","begin":[115,0],"end":[118,2]},"visibility":{"restricted":{"parent":"0:1552:1672","path":"::intersperse"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"ElemF","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"ElemF"},"bounds":[{"trait_bound":{"trait":{"name":"IntersperseElement","id":"0:1563:3926","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"ElemF"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2865-0:2430:1718":{"id":"b:2:2865-0:2430:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WithPosition","id":"0:2430:1718","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3412:1564":{"id":"0:3412:1564","crate_id":0,"name":"0","span":{"filename":"src/either_or_both.rs","begin":[9,9],"end":[9,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"A"}},"b:2:3218-0:2992:1634":{"id":"b:2:3218-0:2992:1634","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Product","id":"0:2992:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3831:230":{"id":"2:3831:230","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3832:184","2:3833:4755","2:3834:693","2:3835:376"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromResidual","id":"2:3836:138","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2865-0:2954:1630":{"id":"b:2:2865-0:2954:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1788:932":{"id":"0:1788:932","crate_id":0,"name":"next","span":{"filename":"src/multipeek_impl.rs","begin":[86,4],"end":[89,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1901:932":{"id":"0:1901:932","crate_id":0,"name":"next","span":{"filename":"src/peeking_take_while.rs","begin":[109,4],"end":[111,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3493:962":{"id":"2:3493:962","crate_id":2,"name":"not","span":null,"visibility":"default","docs":"Performs the unary `!` operation.\n\n# Examples\n\n```\nassert_eq!(!true, false);\nassert_eq!(!false, true);\nassert_eq!(!1u8, 254);\nassert_eq!(!0u8, 255);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Not","id":"2:3491:4745","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1473:1849":{"id":"0:1473:1849","crate_id":0,"name":"Item","span":{"filename":"src/groupbylazy.rs","begin":[343,4],"end":[343,40]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"generic","inner":"K"},{"kind":"resolved_path","inner":{"name":"Group","id":"0:1490:1670","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}}]}}},"2:13277:21670":{"id":"2:13277:21670","crate_id":2,"name":"from_str","span":null,"visibility":"default","docs":"Parses a string `s` to return a value of this type.\n\nIf parsing succeeds, return the value inside [`Ok`], otherwise\nwhen the string is ill-formatted return an error specific to the\ninside [`Err`]. The error type is specific to the implementation of the trait.\n\n# Examples\n\nBasic usage with [`i32`], a type that implements `FromStr`:\n\n```\nuse std::str::FromStr;\n\nlet s = \"5\";\nlet x = i32::from_str(s).unwrap();\n\nassert_eq!(5, x);\n```","links":{"`i32`":"1:15890:4450","`Ok`":"2:47937:178","`Err`":"2:47940:127"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"FromStr","id":"2:13275:4561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:0:2854-0:2982:1635":{"id":"b:0:2854-0:2982:1635","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3218-0:2928:1649":{"id":"b:2:3218-0:2928:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiProduct","id":"0:2928:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:3836:1663":{"id":"b:2:2865-0:3836:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupingMap","id":"0:3836:1663","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3380:107":{"id":"2:3380:107","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:9082:2445":{"id":"2:9082:2445","crate_id":2,"name":"rev","span":null,"visibility":"default","docs":"Reverses an iterator's direction.\n\nUsually, iterators iterate from left to right. After using `rev()`,\nan iterator will instead iterate from right to left.\n\nThis is only possible if the iterator has an end, so `rev()` only\nworks on [`DoubleEndedIterator`]s.\n\n# Examples\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter().rev();\n\nassert_eq!(iter.next(), Some(&3));\nassert_eq!(iter.next(), Some(&2));\nassert_eq!(iter.next(), Some(&1));\n\nassert_eq!(iter.next(), None);\n```","links":{"`DoubleEndedIterator`":"2:8716:121"},"attrs":["#[doc(alias = \"reverse\")]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Rev","id":"2:47044:3524","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3382:225-0:3861:1674":{"id":"a:2:3382:225-0:3861:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"ElemF","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"ElemF"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"ElemF"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3203-0:1917:1689":{"id":"b:2:3203-0:1917:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Permutations","id":"0:1917:1689","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3935:415":{"id":"0:3935:415","crate_id":0,"name":"clone","span":{"filename":"src/multipeek_impl.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2052:3505":{"id":"0:2052:3505","crate_id":0,"name":"rciter","span":{"filename":"src/rciter_impl.rs","begin":[47,0],"end":[51,1]},"visibility":"public","docs":"Return an iterator inside a `Rc<RefCell<_>>` wrapper.\n\nThe returned `RcIter` can be cloned, and each clone will refer back to the\nsame original iterator.\n\n`RcIter` allows doing interesting things like using `.zip()` on an iterator with\nitself, at the cost of runtime borrow checking which may have a performance\npenalty.\n\nIterator element type is `Self::Item`.\n\n```\nuse itertools::rciter;\nuse itertools::zip;\n\n// In this example a range iterator is created and we iterate it using\n// three separate handles (two of them given to zip).\n// We also use the IntoIterator implementation for `&RcIter`.\n\nlet mut iter = rciter(0..9);\nlet mut z = zip(&iter, &iter);\n\nassert_eq!(z.next(), Some((0, 1)));\nassert_eq!(z.next(), Some((2, 3)));\nassert_eq!(z.next(), Some((4, 5)));\nassert_eq!(iter.next(), Some(6));\nassert_eq!(z.next(), Some((7, 8)));\nassert_eq!(z.next(), None);\n```\n\n**Panics** in iterator methods if a borrow error is encountered in the\niterator methods. It can only happen if the `RcIter` is reentered in\n`.next()`, i.e. if it somehow participates in an “iterator knot”\nwhere it is an adaptor of itself.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1482":{"id":"0:1482","crate_id":0,"name":null,"span":{"filename":"src/groupbylazy.rs","begin":[366,0],"end":[388,1]},"visibility":{"restricted":{"parent":"0:1387:1665","path":"::groupbylazy"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"outlives":"'a"}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"generic","inner":"K"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Groups","id":"0:1476:1671","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:1487:1849","0:1488:932"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3382:225-0:4075:1701":{"id":"a:2:3382:225-0:4075:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatCall","id":"0:4075:1701","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:779:2582":{"id":"0:779:2582","crate_id":0,"name":"fold","span":{"filename":"src/adaptors/mod.rs","begin":[886,4],"end":[893,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["init",{"kind":"generic","inner":"Acc"}],["fold_f",{"kind":"generic","inner":"Fold"}]],"output":{"kind":"generic","inner":"Acc"},"c_variadic":false},"generics":{"params":[{"name":"Acc","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Fold","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Fold"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Acc"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"generic","inner":"Acc"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5001:688":{"id":"0:5001:688","crate_id":0,"name":"from","span":{"filename":"src/ziptuple.rs","begin":[137,0],"end":[137,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:4792-0:3045:1644":{"id":"a:2:9533:4792-0:3045:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Combination","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"HasCombination","id":"0:737:2255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleCombinations","id":"0:3045:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2535:1926":{"id":"0:2535:1926","crate_id":0,"name":"group_by","span":{"filename":"src/lib.rs","begin":[623,4],"end":[629,5]},"visibility":"default","docs":"Return an *iterable* that can group iterator elements.\nConsecutive elements that map to the same key (“runs”), are assigned\nto the same group.\n\n`GroupBy` is the storage for the lazy grouping operation.\n\nIf the groups are consumed in order, or if each group's iterator is\ndropped without keeping it around, then `GroupBy` uses no\nallocations.  It needs allocations only if several group iterators\nare alive at the same time.\n\nThis type implements [`IntoIterator`] (it is **not** an iterator\nitself), because the group iterators need to borrow from this\nvalue. It should be stored in a local variable or temporary and\niterated.\n\nIterator element type is `(K, Group)`: the group's key and the\ngroup iterator.\n\n```\nuse itertools::Itertools;\n\n// group data into runs of larger than zero or not.\nlet data = vec![1, 3, -2, -2, 1, 0, 1, 2];\n// groups:     |---->|------>|--------->|\n\n// Note: The `&` is significant here, `GroupBy` is iterable\n// only by reference. You can also call `.into_iter()` explicitly.\nlet mut data_grouped = Vec::new();\nfor (key, group) in &data.into_iter().group_by(|elt| *elt >= 0) {\n    data_grouped.push((key, group.collect()));\n}\nassert_eq!(data_grouped, vec![(true, vec![1, 3]), (false, vec![-2, -2]), (true, vec![1, 0, 1, 2])]);\n```","links":{"`IntoIterator`":"2:8672:152"},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["key",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"GroupBy","id":"0:1452:1669","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"generic","inner":"K"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9532:4793-0:4119:1707":{"id":"a:2:9532:4793-0:4119:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Buffer","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TupleCollect","id":"0:2245:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleBuffer","id":"0:4119:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3411:4706-0:3045:1644":{"id":"a:2:3411:4706-0:3045:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Combination","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"HasCombination","id":"0:737:2255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleCombinations","id":"0:3045:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3411:4706-0:4388:1716":{"id":"a:2:3411:4706-0:4388:1716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2868-0:1198:1661":{"id":"b:2:2868-0:1198:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FlattenOk","id":"0:1198:1661","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[151,59],"end":[151,79]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::tuple_impl::CircularTupleWindows","name":"CircularTupleWindows","id":"0:4155:1709","glob":false}},"2:11211:184":{"id":"2:11211:184","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The output type returned by methods.","links":{},"attrs":["#[stable(feature = \"slice_get_slice\", since = \"1.28.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null}},"0:1734":{"id":"0:1734","crate_id":0,"name":null,"span":{"filename":"src/merge_join.rs","begin":[46,0],"end":[53,1]},"visibility":{"restricted":{"parent":"0:1696:1678","path":"::merge_join"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeJoinBy","id":"0:1723:1679","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:3903:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[148,41],"end":[148,47]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::sources::Unfold","name":"Unfold","id":"0:4083:1702","glob":false}},"b:5:848-0:3928:1681":{"id":"b:5:848-0:3928:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3203-0:1527:1668":{"id":"b:2:3203-0:1527:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunks","id":"0:1527:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8197:5986":{"id":"2:8197:5986","crate_id":2,"name":"steps_between","span":null,"visibility":"default","docs":"Returns the number of *successor* steps required to get from `start` to `end`.\n\nReturns `None` if the number of steps would overflow `usize`\n(or is infinite, or if `end` would never be reached).\n\n# Invariants\n\nFor any `a`, `b`, and `n`:\n\n* `steps_between(&a, &b) == Some(n)` if and only if `Step::forward_checked(&a, n) == Some(b)`\n* `steps_between(&a, &b) == Some(n)` if and only if `Step::backward_checked(&b, n) == Some(a)`\n* `steps_between(&a, &b) == Some(n)` only if `a <= b`\n  * Corollary: `steps_between(&a, &b) == Some(0)` if and only if `a == b`\n  * Note that `a <= b` does _not_ imply `steps_between(&a, &b) != None`;\n    this is the case when it would require more than `usize::MAX` steps to get to `b`\n* `steps_between(&a, &b) == None` if `a > b`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["start",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["end",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:4412:15591":{"id":"1:4412:15591","crate_id":1,"name":"read_vectored","span":null,"visibility":"default","docs":"Like `read`, except that it reads into a slice of buffers.\n\nData is copied to fill each buffer in order, with the final buffer\nwritten to possibly being only partially filled. This method must\nbehave equivalently to a single call to `read` with concatenated\nbuffers.\n\nThe default implementation calls `read` with either the first nonempty\nbuffer provided, or an empty one if none exists.","links":{},"attrs":["#[stable(feature = \"iovec\", since = \"1.36.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["bufs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"IoSliceMut","id":"1:4428:6577","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:964":{"id":"0:964","crate_id":0,"name":null,"span":{"filename":"src/free.rs","begin":[23,4],"end":[23,12]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::put_back","name":"put_back","id":"0:602:3235","glob":false}},"2:3683:4553":{"id":"2:3683:4553","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3685:762"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Index","id":"2:3679:3976","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2960":{"id":"0:2960","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[28,9],"end":[28,14]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["0:2963:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:8676-0:4388:1716":{"id":"b:2:8676-0:4388:1716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:4155:1709":{"id":"0:4155:1709","crate_id":0,"name":"CircularTupleWindows","span":{"filename":"src/tuple_impl.rs","begin":[205,0],"end":[211,1]},"visibility":"public","docs":"An iterator over all windows,wrapping back to the first elements when the\nwindow would otherwise exceed the length of the iterator, producing tuples\nof a specific size.\n\nSee [`.circular_tuple_windows()`](crate::Itertools::circular_tuple_windows) for more\ninformation.","links":{"crate::Itertools::circular_tuple_windows":"0:2541:1978"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"TupleCollect","id":"0:2245:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:4155:1709","a:2:9532:4793-0:4155:1709","a:2:3382:225-0:4155:1709","a:2:3370:216-0:4155:1709","a:2:3411:4706-0:4155:1709","b:0:2854-0:4155:1709","b:2:8676-0:4155:1709","b:2:4104-0:4155:1709","b:2:2865-0:4155:1709","b:2:3203-0:4155:1709","b:2:3207-0:4155:1709","b:2:3218-0:4155:1709","b:2:2868-0:4155:1709","b:2:3213-0:4155:1709","0:4160","0:2240"]}},"b:2:8676-0:1917:1689":{"id":"b:2:8676-0:1917:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Permutations","id":"0:1917:1689","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"a:2:3382:225-0:2430:1718":{"id":"a:2:3382:225-0:2430:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WithPosition","id":"0:2430:1718","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:640":{"id":"0:640","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[386,0],"end":[388,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Batching","id":"0:3007:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:3016:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9532:4793-0:3748:1653":{"id":"a:2:9532:4793-0:3748:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CombinationsWithReplacement","id":"0:3748:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4719:932":{"id":"0:4719:932","crate_id":0,"name":"next","span":{"filename":"src/ziptuple.rs","begin":[129,0],"end":[129,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3382:225-0:3017:1648":{"id":"a:2:3382:225-0:3017:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Step","id":"0:3017:1648","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4691:3067":{"id":"0:4691:3067","crate_id":0,"name":"next_back","span":{"filename":"src/ziptuple.rs","begin":[127,0],"end":[127,17]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13713:61707":{"id":"2:13713:61707","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:3951:1683":{"id":"a:2:3411:4706-0:3951:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3370:216-0:3928:1681":{"id":"a:2:3370:216-0:3928:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3574":{"id":"0:3574","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"X","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Iter","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Iter"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Iter"}},{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}],"bindings":[]}}}},"items":["0:3585:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3513:4746":{"id":"2:3513:4746","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3515:184","2:3516:1249"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10845:4689":{"id":"2:10845:4689","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10846:147","2:10847:22160","2:10848:22161"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9532:4793-0:4142:1708":{"id":"a:2:9532:4793-0:4142:1708","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleWindows","id":"0:4142:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10817:22118":{"id":"2:10817:22118","crate_id":2,"name":"write_u128","span":null,"visibility":"default","docs":"Writes a single `u128` into this hasher.","links":{},"attrs":["#[stable(feature = \"i128\", since = \"1.26.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11216:761":{"id":"2:11216:761","crate_id":2,"name":"index","span":null,"visibility":"default","docs":"Returns a shared reference to the output at this location, panicking\nif out of bounds.","links":{},"attrs":["#[unstable(feature = \"slice_index_methods\", issue = \"none\")]","#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["slice",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SliceIndex","id":"2:11209:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1586:2582":{"id":"0:1586:2582","crate_id":0,"name":"fold","span":{"filename":"src/intersperse.rs","begin":[96,4],"end":[112,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["init",{"kind":"generic","inner":"B"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"B"},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"B"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"generic","inner":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:841:1754":{"id":"0:841:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/adaptors/mod.rs","begin":[1040,4],"end":[1042,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:4792-0:3777:1658":{"id":"a:2:9533:4792-0:3777:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:4834:1849":{"id":"0:4834:1849","crate_id":0,"name":"Item","span":{"filename":"src/ziptuple.rs","begin":[133,0],"end":[133,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"C"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"D"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"E"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"G"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]}}},"0:2457":{"id":"0:2457","crate_id":0,"name":null,"span":{"filename":"src/zip_eq_impl.rs","begin":[37,0],"end":[55,1]},"visibility":{"restricted":{"parent":"0:2450:1719","path":"::zip_eq_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["0:2460:1849","0:2461:932","0:2462:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3217:1436":{"id":"2:3217:1436","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3679:932":{"id":"0:3679:932","crate_id":0,"name":"next","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:1883:1687":{"id":"b:2:3218-0:1883:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekingTakeWhile","id":"0:1883:1687","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3539:1250":{"id":"2:3539:1250","crate_id":2,"name":"shl_assign","span":null,"visibility":"default","docs":"Performs the `<<=` operation.\n\n# Examples\n\n```\nlet mut x: u8 = 5;\nx <<= 1;\nassert_eq!(x, 10);\n\nlet mut x: u8 = 1;\nx <<= 1;\nassert_eq!(x, 2);\n```","links":{},"attrs":["#[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3207-0:1198:1661":{"id":"b:2:3207-0:1198:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FlattenOk","id":"0:1198:1661","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:527:1849":{"id":"0:527:1849","crate_id":0,"name":"Item","span":{"filename":"src/adaptors/multi_product.rs","begin":[160,4],"end":[160,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7898:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8224:4593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"a:2:3382:225-0:3397:1646":{"id":"a:2:3382:225-0:3397:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2078:1738":{"id":"0:2078:1738","crate_id":0,"name":"repeat_n","span":{"filename":"src/repeatn.rs","begin":[14,0],"end":[22,1]},"visibility":"public","docs":"Create an iterator that produces `n` repetitions of `element`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["element",{"kind":"generic","inner":"A"}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3705:2582":{"id":"0:3705:2582","crate_id":0,"name":"fold","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["accum",{"kind":"generic","inner":"Acc"}],["f",{"kind":"generic","inner":"Fold"}]],"output":{"kind":"generic","inner":"Acc"},"c_variadic":false},"generics":{"params":[{"name":"Acc","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Fold","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Fold"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Acc"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"generic","inner":"Acc"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:709:1641":{"id":"b:2:2865-0:709:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TakeWhileRef","id":"0:709:1641","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:8676-0:2954:1630":{"id":"b:2:8676-0:2954:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:13825:61729":{"id":"2:13825:61729","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13336:4565","prim@char":"1:15876:4439"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13361:5417","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9532:4793-0:3375:1633":{"id":"a:2:9532:4793-0:3375:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOk","id":"0:3375:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3501:1754":{"id":"0:3501:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3203-0:4119:1707":{"id":"b:2:3203-0:4119:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleBuffer","id":"0:4119:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2417:1744":{"id":"0:2417:1744","crate_id":0,"name":"multiunzip","span":{"filename":"src/unziptuple.rs","begin":[34,4],"end":[34,33]},"visibility":"default","docs":"Unzip this iterator into multiple collections.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"FromI"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2384:1754":{"id":"0:2384:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/unique_impl.rs","begin":[70,4],"end":[73,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13830:7359":{"id":"2:13830:7359","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:358:3341":{"id":"0:358:3341","crate_id":0,"name":"CoalescePredicate","span":{"filename":"src/adaptors/coalesce.rs","begin":[31,0],"end":[33,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:361:3342"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4638:667":{"id":"0:4638:667","crate_id":0,"name":"fmt","span":{"filename":"src/with_position.rs","begin":[37,22],"end":[37,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2713:2716":{"id":"0:2713:2716","crate_id":0,"name":"sorted_by_key","span":{"filename":"src/lib.rs","begin":[2661,4],"end":[2669,5]},"visibility":"default","docs":"Sort all iterator elements into a new iterator in ascending order.\n\n**Note:** This consumes the entire iterator, uses the\n[`slice::sort_by_key`] method and returns the result as a new\niterator that owns its elements.\n\nThe sorted iterator, if directly collected to a `Vec`, is converted\nwithout any extra copying or allocation cost.\n\n```\nuse itertools::Itertools;\n\n// sort people in descending order by age\nlet people = vec![(\"Jane\", 20), (\"John\", 18), (\"Jill\", 30), (\"Jack\", 27)];\n\nlet oldest_people_first = people\n    .into_iter()\n    .sorted_by_key(|x| -x.1)\n    .map(|(person, _age)| person);\n\nitertools::assert_equal(oldest_people_first,\n                        vec![\"Jill\", \"Jack\", \"Jane\", \"John\"]);\n```","links":{"`slice::sort_by_key`":"5:5890:2717"},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"alloc::vec::IntoIter","id":"5:7484:1621","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"generic","inner":"K"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3045:1644":{"id":"0:3045:1644","crate_id":0,"name":"TupleCombinations","span":{"filename":"src/adaptors/mod.rs","begin":[693,0],"end":[699,1]},"visibility":"public","docs":"An iterator to iterate through all combinations in a `Clone`-able iterator that produces tuples\nof a specific size.\n\nSee [`.tuple_combinations()`](crate::Itertools::tuple_combinations) for more\ninformation.","links":{"crate::Itertools::tuple_combinations":"0:2607:2254"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"HasCombination","id":"0:737:2255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:3045:1644","a:2:9532:4793-0:3045:1644","a:2:3382:225-0:3045:1644","a:2:3370:216-0:3045:1644","a:2:3411:4706-0:3045:1644","b:0:2854-0:3045:1644","b:2:8676-0:3045:1644","b:2:4104-0:3045:1644","b:2:2865-0:3045:1644","b:2:3203-0:3045:1644","b:2:3207-0:3045:1644","b:2:3218-0:3045:1644","b:2:2868-0:3045:1644","b:2:3213-0:3045:1644","b:5:848-0:3045:1644","0:3050","0:3054","0:743","0:748"]}},"2:13722:57815":{"id":"2:13722:57815","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15893:4453"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3664:209":{"id":"2:3664:209","crate_id":2,"name":"Return","span":null,"visibility":"default","docs":"The type of value this generator returns.\n\nThis corresponds to the type returned from a generator either with a\n`return` statement or implicitly as the last expression of a generator\nliteral. For example futures would use this as `Result<T, E>` as it\nrepresents a completed future.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:815:932":{"id":"0:815:932","crate_id":0,"name":"next","span":{"filename":"src/adaptors/mod.rs","begin":[951,4],"end":[963,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3370:216-0:4401:1715":{"id":"a:2:3370:216-0:4401:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4071:415":{"id":"0:4071:415","crate_id":0,"name":"clone","span":{"filename":"src/repeatn.rs","begin":[7,9],"end":[7,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3834:693":{"id":"2:3834:693","crate_id":2,"name":"from_output","span":null,"visibility":"default","docs":"Constructs the type from its `Output` type.\n\nThis should be implemented consistently with the `branch` method\nsuch that applying the `?` operator will get back the original value:\n`Try::from_output(x).branch() --> ControlFlow::Continue(x)`.\n\n# Examples\n\n```\n#![feature(try_trait_v2)]\nuse std::ops::Try;\n\nassert_eq!(<Result<_, String> as Try>::from_output(3), Ok(3));\nassert_eq!(<Option<_> as Try>::from_output(4), Some(4));\nassert_eq!(\n    <std::ops::ControlFlow<String, _> as Try>::from_output(5),\n    std::ops::ControlFlow::Continue(5),\n);\n\n# fn make_question_mark_work() -> Option<()> {\nassert_eq!(Option::from_output(4)?, 4);\n# None }\n# make_question_mark_work();\n\n// This is used, for example, on the accumulator in `try_fold`:\nlet r = std::iter::empty().try_fold(4, |_, ()| -> Option<_> { unreachable!() });\nassert_eq!(r, Some(4));\n```","links":{},"attrs":["#[unstable(feature = \"try_trait_v2\", issue = \"84277\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["output",{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3831:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2037:1754":{"id":"0:2037:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/put_back_n_impl.rs","begin":[57,4],"end":[59,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3654:932":{"id":"0:3654:932","crate_id":0,"name":"next","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23123:16137":{"id":"2:23123:16137","crate_id":2,"name":"reduce_xor","span":null,"visibility":"default","docs":"Returns the cumulative bitwise \"xor\" across the lanes of the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdInt","id":"2:23106:7064","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2640:2444":{"id":"0:2640:2444","crate_id":0,"name":"dropping_back","span":{"filename":"src/lib.rs","begin":[1924,4],"end":[1932,5]},"visibility":"default","docs":"Consume the last `n` elements from the iterator eagerly,\nand return the same iterator again.\n\nThis is only possible on double ended iterators. `n` may be\nlarger than the number of elements.\n\nNote: This method is eager, dropping the back elements immediately and\npreserves the iterator type.\n\n```\nuse itertools::Itertools;\n\nlet init = vec![0, 3, 6, 9].into_iter().dropping_back(1);\nitertools::assert_equal(init, vec![0, 3, 6]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3841:415":{"id":"0:3841:415","crate_id":0,"name":"clone","span":{"filename":"src/grouping_map.rs","begin":[49,9],"end":[49,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"GroupingMap","id":"0:3836:1663","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13716:61709":{"id":"2:13716:61709","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13714:61708"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:4155:1709":{"id":"a:2:3411:4706-0:4155:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CircularTupleWindows","id":"0:4155:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9532:4793-0:4065:1699":{"id":"a:2:9532:4793-0:4065:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:4494:15664":{"id":"1:4494:15664","crate_id":1,"name":"consume","span":null,"visibility":"default","docs":"Tells this buffer that `amt` bytes have been consumed from the buffer,\nso they should no longer be returned in calls to `read`.\n\nThis function is a lower-level call. It needs to be paired with the\n[`fill_buf`] method to function properly. This function does\nnot perform any I/O, it simply informs this object that some amount of\nits buffer, returned from [`fill_buf`], has been consumed and should\nno longer be returned. As such, this function may do odd things if\n[`fill_buf`] isn't called before calling it.\n\nThe `amt` must be `<=` the number of bytes in the buffer returned by\n[`fill_buf`].\n\n# Examples\n\nSince `consume()` is meant to be used with [`fill_buf`],\nthat method's example includes an example of `consume()`.\n\n[`fill_buf`]: BufRead::fill_buf","links":{"BufRead::fill_buf":"1:4493:15663"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["amt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3486:4740":{"id":"2:3486:4740","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3488:1115"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:848-0:3766:1659":{"id":"b:5:848-0:3766:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatWith","id":"0:3766:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3203-0:3928:1681":{"id":"b:2:3203-0:3928:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9532:4793-0:3007:1636":{"id":"a:2:9532:4793-0:3007:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Batching","id":"0:3007:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10516:4961":{"id":"2:10516:4961","crate_id":2,"name":"write_fmt","span":null,"visibility":"default","docs":"Glue for usage of the [`write!`] macro with implementors of this trait.\n\nThis method should generally not be invoked manually, but rather through\nthe [`write!`] macro itself.\n\n# Examples\n\n```\nuse std::fmt::{Error, Write};\n\nfn writer<W: Write>(f: &mut W, s: &str) -> Result<(), Error> {\n    f.write_fmt(format_args!(\"{s}\"))\n}\n\nlet mut buf = String::new();\nwriter(&mut buf, \"world\").unwrap();\nassert_eq!(&buf, \"world\");\n```","links":{"`write!`":"2:14:2499"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["args",{"kind":"resolved_path","inner":{"name":"Arguments","id":"2:48946:73","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48872:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:1158:1732":{"id":"b:2:3207-0:1158:1732","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Diff","id":"0:1158:1732","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1656":{"id":"0:1656","crate_id":0,"name":null,"span":{"filename":"src/kmerge_impl.rs","begin":[163,0],"end":[168,1]},"visibility":{"restricted":{"parent":"0:1604:1675","path":"::kmerge_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:3889:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4104-0:3766:1659":{"id":"b:2:4104-0:3766:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatWith","id":"0:3766:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:4792-0:4155:1709":{"id":"a:2:9533:4792-0:4155:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CircularTupleWindows","id":"0:4155:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3370:216-0:4048:1695":{"id":"a:2:3370:216-0:4048:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3207-0:3951:1683":{"id":"b:2:3207-0:3951:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:3861:1674":{"id":"b:2:2868-0:3861:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"ElemF"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:8676-0:3939:1685":{"id":"b:2:8676-0:3939:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:4104-0:4155:1709":{"id":"b:2:4104-0:4155:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CircularTupleWindows","id":"0:4155:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9532:4793-0:1527:1668":{"id":"a:2:9532:4793-0:1527:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunks","id":"0:1527:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:13352:23288":{"id":"2:13352:23288","crate_id":2,"name":"is_suffix_of","span":null,"visibility":"default","docs":"Checks whether the pattern matches at the back of the haystack","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13361:5417","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3908:2944":{"id":"0:3908:2944","crate_id":0,"name":"OneElement","span":{"filename":"src/minmax.rs","begin":[11,4],"end":[11,17]},"visibility":"default","docs":"Iterator with one element, so the minimum and maximum are the same","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:3910:1564"]}},"0:1071":{"id":"0:1071","crate_id":0,"name":null,"span":{"filename":"src/combinations.rs","begin":[82,0],"end":[123,1]},"visibility":{"restricted":{"parent":"0:1041:1650","path":"::combinations"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Combinations","id":"0:1054:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1073:1849","0:1074:932"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2546:2012":{"id":"0:2546:2012","crate_id":0,"name":"step","span":{"filename":"src/lib.rs","begin":[822,4],"end":[826,5]},"visibility":"default","docs":"Return an iterator adaptor that steps `n` elements in the base iterator\nfor each iteration.\n\nThe iterator steps by yielding the next element from the base iterator,\nthen skipping forward `n - 1` elements.\n\nIterator element type is `Self::Item`.\n\n**Panics** if the step is 0.\n\n```\nuse itertools::Itertools;\n\nlet it = (0..8).step(3);\nitertools::assert_equal(it, vec![0, 3, 6]);\n```","links":{},"attrs":["#[deprecated(note = \"Use std .step_by() instead\", since = \"0.8.0\")]","#[allow(deprecated)]"],"deprecation":{"since":"0.8.0","note":"Use std .step_by() instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Step","id":"0:3017:1648","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1936:932":{"id":"0:1936:932","crate_id":0,"name":"next","span":{"filename":"src/permutations.rs","begin":[103,4],"end":[122,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:107":{"id":"0:107","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[106,8],"end":[106,16]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::Coalesce","name":"Coalesce","id":"0:379:1643","glob":false}},"b:0:2854-0:1054:1651":{"id":"b:0:2854-0:1054:1651","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Combinations","id":"0:1054:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3207-0:4617:1742":{"id":"b:2:3207-0:4617:1742","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:9104:5151":{"id":"2:9104:5151","crate_id":2,"name":"cmp_by","span":null,"visibility":"default","docs":"[Lexicographically](Ord#lexicographical-comparison) compares the elements of this [`Iterator`] with those\nof another with respect to the specified comparison function.\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(iter_order_by)]\n\nuse std::cmp::Ordering;\n\nlet xs = [1, 2, 3, 4];\nlet ys = [1, 4, 9, 16];\n\nassert_eq!(xs.iter().cmp_by(&ys, |&x, &y| x.cmp(&y)), Ordering::Less);\nassert_eq!(xs.iter().cmp_by(&ys, |&x, &y| (x * x).cmp(&y)), Ordering::Equal);\nassert_eq!(xs.iter().cmp_by(&ys, |&x, &y| (2 * x).cmp(&y)), Ordering::Greater);\n```","links":{"`Iterator`":"2:8873:159","Ord#lexicographical-comparison":"2:2956:180"},"attrs":["#[unstable(feature = \"iter_order_by\", issue = \"64295\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}],["cmp",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2068:1849":{"id":"0:2068:1849","crate_id":0,"name":"Item","span":{"filename":"src/rciter_impl.rs","begin":[88,4],"end":[88,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:3411:4706-0:3007:1636":{"id":"a:2:3411:4706-0:3007:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Batching","id":"0:3007:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3207-0:1054:1651":{"id":"b:2:3207-0:1054:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Combinations","id":"0:1054:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3218-0:1723:1679":{"id":"b:2:3218-0:1723:1679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeJoinBy","id":"0:1723:1679","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:4903:5312":{"id":"2:4903:5312","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4904:1849","2:4905:21714","2:4906:1754"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3411:4706-0:3407:1748":{"id":"a:2:3411:4706-0:3407:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2127":{"id":"0:2127","crate_id":0,"name":null,"span":{"filename":"src/sources.rs","begin":[49,0],"end":[62,1]},"visibility":{"restricted":{"parent":"0:2115:1700","path":"::sources"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[],"output":{"kind":"generic","inner":"A"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatCall","id":"0:4075:1701","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:2130:1849","0:2131:932","0:2132:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9533:4792-0:4092:1703":{"id":"a:2:9533:4792-0:4092:1703","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"St","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"St"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iterate","id":"0:4092:1703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4919":{"id":"0:4919","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[135,0],"end":[135,41]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"}]}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:14079:776":{"id":"2:14079:776","crate_id":2,"name":"into_future","span":null,"visibility":"default","docs":"Creates a future from a value.\n\n# Examples\n\nBasic usage:\n\n```no_run\nuse std::future::IntoFuture;\n\n# async fn foo() {\nlet v = async { \"meow\" };\nlet mut fut = v.into_future();\nassert_eq!(\"meow\", fut.await);\n# }\n```","links":{},"attrs":["#[stable(feature = \"into_future\", since = \"1.64.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"IntoFuture","id":"2:14076:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:930:1749":{"id":"0:930:1749","crate_id":0,"name":"free","span":{"filename":"src/free.rs","begin":[1,0],"end":[285,1]},"visibility":"public","docs":"Free functions that create iterator adaptors or call iterator methods.\n\nThe benefit of free functions is that they accept any [`IntoIterator`] as\nargument, so the resulting code may be easier to read.","links":{"`IntoIterator`":"2:8672:152"},"attrs":["#[doc(hidden)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:958","0:961","0:964","0:967","0:970","0:973","0:976","0:979","0:982","0:985","0:988:1672","0:990:1864","0:993:2374","0:995:2445","0:997:1801","0:1000:1831","0:1003:3546","0:1007:2582","0:1011:283","0:1014:301","0:1017:3564","0:1019:2321","0:1021:2494","0:1023:2708"],"is_stripped":true}},"a:2:3370:216-0:3397:1646":{"id":"a:2:3370:216-0:3397:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10848:22161":{"id":"2:10848:22161","crate_id":2,"name":"hash_one","span":null,"visibility":"default","docs":"Calculates the hash of a single value.\n\nThis is intended as a convenience for code which *consumes* hashes, such\nas the implementation of a hash table or in unit tests that check\nwhether a custom [`Hash`] implementation behaves as expected.\n\nThis must not be used in any code which *creates* hashes, such as in an\nimplementation of [`Hash`].  The way to create a combined hash of\nmultiple values is to call [`Hash::hash`] multiple times using the same\n[`Hasher`], not to call this method repeatedly and combine the results.\n\n# Example\n\n```\n#![feature(build_hasher_simple_hash_one)]\n\nuse std::cmp::{max, min};\nuse std::hash::{BuildHasher, Hash, Hasher};\nstruct OrderAmbivalentPair<T: Ord>(T, T);\nimpl<T: Ord + Hash> Hash for OrderAmbivalentPair<T> {\n    fn hash<H: Hasher>(&self, hasher: &mut H) {\n        min(&self.0, &self.1).hash(hasher);\n        max(&self.0, &self.1).hash(hasher);\n    }\n}\n\n// Then later, in a `#[test]` for the type...\nlet bh = std::collections::hash_map::RandomState::new();\nassert_eq!(\n    bh.hash_one(OrderAmbivalentPair(1, 2)),\n    bh.hash_one(OrderAmbivalentPair(2, 1))\n);\nassert_eq!(\n    bh.hash_one(OrderAmbivalentPair(10, 2)),\n    bh.hash_one(&OrderAmbivalentPair(2, 10))\n);\n```","links":{"`Hash::hash`":"2:10801:722","`Hasher`":"2:10810:147","`Hash`":"2:10800:143"},"attrs":["#[unstable(feature = \"build_hasher_simple_hash_one\", issue = \"86161\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["x",{"kind":"generic","inner":"T"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3715:3067":{"id":"0:3715:3067","crate_id":0,"name":"next_back","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5428:6544":{"id":"1:5428:6544","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5429:23355","1:5430:4908"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10409:6539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:896:3456":{"id":"0:896:3456","crate_id":0,"name":"flip","span":{"filename":"src/either_or_both.rs","begin":[94,4],"end":[100,5]},"visibility":"public","docs":"Convert `EitherOrBoth<A, B>` to `EitherOrBoth<B, A>`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6566:6611":{"id":"1:6566:6611","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6567:10407","1:6568:23455"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10409:6539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3207-0:709:1641":{"id":"b:2:3207-0:709:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TakeWhileRef","id":"0:709:1641","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1146":{"id":"0:1146","crate_id":0,"name":null,"span":{"filename":"src/exactly_one_err.rs","begin":[88,0],"end":[105,1]},"visibility":{"restricted":{"parent":"0:1105:1656","path":"::exactly_one_err"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1148:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4104-0:2928:1649":{"id":"b:2:4104-0:2928:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiProduct","id":"0:2928:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6235:23427":{"id":"1:6235:23427","crate_id":1,"name":"from_raw","span":null,"visibility":"default","docs":"Creates a new `ExitStatus` or `ExitStatusError` from the raw underlying integer status\nvalue from `wait`\n\nThe value should be a **wait status, not an exit status**.\n\n# Panics\n\nPanics on an attempt to make an `ExitStatusError` from a wait status of `0`.\n\nMaking an `ExitStatus` always succeeds and never panics.","links":{},"attrs":["#[stable(feature = \"exit_status_from\", since = \"1.12.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["raw",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:614:502":{"id":"0:614:502","crate_id":0,"name":"count","span":{"filename":"src/adaptors/mod.rs","begin":[232,4],"end":[234,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3722:1849":{"id":"0:3722:1849","crate_id":0,"name":"Item","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"X"}]}}},"b:2:3213-0:3928:1681":{"id":"b:2:3213-0:3928:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3203-0:2992:1634":{"id":"b:2:3203-0:2992:1634","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Product","id":"0:2992:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3218-0:4129:1710":{"id":"b:2:3218-0:4129:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tuples","id":"0:4129:1710","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4916:1849":{"id":"0:4916:1849","crate_id":0,"name":"Item","span":{"filename":"src/ziptuple.rs","begin":[135,0],"end":[135,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"C"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"D"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"E"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"G"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"H"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]}}},"b:0:2854-0:1917:1689":{"id":"b:0:2854-0:1917:1689","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Permutations","id":"0:1917:1689","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9532:4793-0:1198:1661":{"id":"a:2:9532:4793-0:1198:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FlattenOk","id":"0:1198:1661","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3671":{"id":"0:3671","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"X","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Iter","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Iter"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Iter"}},{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}],"bindings":[]}}}},"items":["0:3678:1849","0:3679:932","0:3681:1754","0:3682:2582"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[121,36],"end":[121,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::format::FormatWith","name":"FormatWith","id":"0:3766:1659","glob":false}},"0:859:932":{"id":"0:859:932","crate_id":0,"name":"next","span":{"filename":"src/adaptors/mod.rs","begin":[1097,4],"end":[1104,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2454:1885":{"id":"0:2454:1885","crate_id":0,"name":"zip_eq","span":{"filename":"src/zip_eq_impl.rs","begin":[27,0],"end":[35,1]},"visibility":"public","docs":"Iterate `i` and `j` in lock step.\n\n**Panics** if the iterators are not of the same length.\n\n[`IntoIterator`] enabled version of [`Itertools::zip_eq`](crate::Itertools::zip_eq).\n\n```\nuse itertools::zip_eq;\n\nlet data = [1, 2, 3, 4, 5];\nfor (a, b) in zip_eq(&data[..data.len() - 1], &data[1..]) {\n    /* loop body */\n}\n```","links":{"`IntoIterator`":"2:8672:152","crate::Itertools::zip_eq":"0:2530:1885"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["i",{"kind":"generic","inner":"I"}],["j",{"kind":"generic","inner":"J"}]],"output":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}},{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1054:1651":{"id":"0:1054:1651","crate_id":0,"name":"Combinations","span":{"filename":"src/combinations.rs","begin":[11,0],"end":[15,1]},"visibility":"public","docs":"An iterator to iterate through all the `k`-length combinations in an iterator.\n\nSee [`.combinations()`](crate::Itertools::combinations) for more information.","links":{"crate::Itertools::combinations":"0:2609:1650"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:1065","a:2:9533:4792-0:1054:1651","a:2:9532:4793-0:1054:1651","a:2:3382:225-0:1054:1651","a:2:3370:216-0:1054:1651","a:2:3411:4706-0:1054:1651","b:0:2854-0:1054:1651","b:2:8676-0:1054:1651","b:2:4104-0:1054:1651","b:2:2865-0:1054:1651","b:2:3203-0:1054:1651","b:2:3207-0:1054:1651","b:2:3218-0:1054:1651","b:2:2868-0:1054:1651","b:2:3213-0:1054:1651","b:5:848-0:1054:1651","0:1059","0:1061","0:1071","0:1076"]}},"b:2:3213-0:3836:1663":{"id":"b:2:3213-0:3836:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupingMap","id":"0:3836:1663","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3488:1115":{"id":"2:3488:1115","crate_id":2,"name":"rem_assign","span":null,"visibility":"default","docs":"Performs the `%=` operation.\n\n# Example\n\n```\nlet mut x: u32 = 12;\nx %= 10;\nassert_eq!(x, 2);\n```","links":{},"attrs":["#[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2525:1672":{"id":"0:2525:1672","crate_id":0,"name":"intersperse","span":{"filename":"src/lib.rs","begin":[483,4],"end":[488,5]},"visibility":"default","docs":"An iterator adaptor to insert a particular value\nbetween each element of the adapted iterator.\n\nIterator element type is `Self::Item`.\n\nThis iterator is *fused*.\n\n```\nuse itertools::Itertools;\n\nitertools::assert_equal((0..3).intersperse(8), vec![0, 8, 1, 8, 2]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["element",{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}]],"output":{"kind":"resolved_path","inner":{"name":"Intersperse","id":"0:1569:1673","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2407":{"id":"0:2407","crate_id":0,"name":null,"span":{"filename":"src/unique_impl.rs","begin":[161,0],"end":[166,1]},"visibility":{"restricted":{"parent":"0:2350:1714","path":"::unique_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:4407:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:619:2582":{"id":"0:619:2582","crate_id":0,"name":"fold","span":{"filename":"src/adaptors/mod.rs","begin":[265,4],"end":[273,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["init",{"kind":"generic","inner":"Acc"}],["f",{"kind":"generic","inner":"G"}]],"output":{"kind":"generic","inner":"Acc"},"c_variadic":false},"generics":{"params":[{"name":"Acc","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Acc"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"generic","inner":"Acc"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8200:5989":{"id":"2:8200:5989","crate_id":2,"name":"forward_unchecked","span":null,"visibility":"default","docs":"Returns the value that would be obtained by taking the *successor*\nof `self` `count` times.\n\n# Safety\n\nIt is undefined behavior for this operation to overflow the\nrange of values supported by `Self`. If you cannot guarantee that this\nwill not overflow, use `forward` or `forward_checked` instead.\n\n# Invariants\n\nFor any `a`:\n\n* if there exists `b` such that `b > a`, it is safe to call `Step::forward_unchecked(a, 1)`\n* if there exists `b`, `n` such that `steps_between(&a, &b) == Some(n)`,\n  it is safe to call `Step::forward_unchecked(a, m)` for any `m <= n`.\n\nFor any `a` and `n`, where no overflow occurs:\n\n* `Step::forward_unchecked(a, n)` is equivalent to `Step::forward(a, n)`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["start",{"kind":"generic","inner":"Self"}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:3016:667":{"id":"0:3016:667","crate_id":0,"name":"fmt","span":{"filename":"src/adaptors/mod.rs","begin":[387,4],"end":[387,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"::std::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2859:3049":{"id":"0:2859:3049","crate_id":0,"name":"assert_equal","span":{"filename":"src/lib.rs","begin":[3692,0],"end":[3715,1]},"visibility":"public","docs":"Assert that two iterables produce equal sequences, with the same\nsemantics as [`equal(a, b)`](equal).\n\n**Panics** on assertion failure with a message that shows the\ntwo iteration elements.\n\n```ignore\nassert_equal(\"exceed\".split('c'), \"excess\".split('c'));\n// ^PANIC: panicked at 'Failed assertion Some(\"eed\") == Some(\"ess\") for iteration 1',\n```","links":{"equal":"0:2856:3042"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["a",{"kind":"generic","inner":"I"}],["b",{"kind":"generic","inner":"J"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:23180:7004":{"id":"2:23180:7004","crate_id":2,"name":"Mask","span":null,"visibility":"default","docs":"The mask type returned by each comparison.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:3871":{"id":"0:3871","crate_id":0,"name":null,"span":{"filename":"src/intersperse.rs","begin":[49,16],"end":[49,21]},"visibility":{"restricted":{"parent":"0:1552:1672","path":"::intersperse"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"ElemF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"ElemF"}}],"bindings":[]}}}},"items":["0:3874:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:8676-0:4142:1708":{"id":"b:2:8676-0:4142:1708","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleWindows","id":"0:4142:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:2441":{"id":"0:2441","crate_id":0,"name":null,"span":{"filename":"src/with_position.rs","begin":[61,0],"end":[93,1]},"visibility":{"restricted":{"parent":"0:2419:1717","path":"::with_position"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WithPosition","id":"0:2430:1718","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:2443:1849","0:2444:932","0:2445:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[156,4],"end":[156,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::with_position::WithPosition","name":"WithPosition","id":"0:2430:1718","glob":false}},"0:1061":{"id":"0:1061","crate_id":0,"name":null,"span":{"filename":"src/combinations.rs","begin":[24,0],"end":[29,1]},"visibility":{"restricted":{"parent":"0:1041:1650","path":"::combinations"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Combinations","id":"0:1054:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3747:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2868-0:4657:1722":{"id":"b:2:2868-0:4657:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3207-0:3766:1659":{"id":"b:2:3207-0:3766:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatWith","id":"0:3766:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4939:3067":{"id":"0:4939:3067","crate_id":0,"name":"next_back","span":{"filename":"src/ziptuple.rs","begin":[135,0],"end":[135,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13749:57512":{"id":"2:13749:57512","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:15876:4439","self::pattern":"2:13336:4565"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13361:5417","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[151,81],"end":[151,87]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::tuple_impl::Tuples","name":"Tuples","id":"0:4129:1710","glob":false}},"0:4649":{"id":"0:4649","crate_id":0,"name":null,"span":{"filename":"src/zip_eq_impl.rs","begin":[6,9],"end":[6,14]},"visibility":{"restricted":{"parent":"0:2450:1719","path":"::zip_eq_impl"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["0:4652:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2672:2581":{"id":"0:2672:2581","crate_id":0,"name":"fold1","span":{"filename":"src/lib.rs","begin":[2247,4],"end":[2252,5]},"visibility":"default","docs":"Accumulator of the elements in the iterator.\n\nLike `.fold()`, without a base case. If the iterator is\nempty, return `None`. With just one element, return it.\nOtherwise elements are accumulated in sequence using the closure `f`.\n\n```\nuse itertools::Itertools;\n\nassert_eq!((0..10).fold1(|x, y| x + y).unwrap_or(0), 45);\nassert_eq!((0..0).fold1(|x, y| x * y), None);\n```","links":{},"attrs":["#[deprecated(since = \"0.10.2\", note = \"Use `Iterator::reduce` instead\")]"],"deprecation":{"since":"0.10.2","note":"Use `Iterator::reduce` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1038:1729":{"id":"0:1038:1729","crate_id":0,"name":"cons_tuples","span":{"filename":"src/cons_tuples_impl.rs","begin":[60,0],"end":[64,1]},"visibility":"public","docs":"Create an iterator that maps for example iterators of\n`((A, B), C)` to `(A, B, C)`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"J"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:8676-0:1883:1687":{"id":"b:2:8676-0:1883:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekingTakeWhile","id":"0:1883:1687","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:3207-0:2954:1630":{"id":"b:2:3207-0:2954:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4622:4375":{"id":"0:4622:4375","crate_id":0,"name":"Middle","span":{"filename":"src/with_position.rs","begin":[42,4],"end":[42,13]},"visibility":"default","docs":"This is neither the first nor the last element.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:4624:1564"]}},"0:3498:1849":{"id":"0:3498:1849","crate_id":0,"name":"Item","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"X"}]}}},"0:3789:667":{"id":"0:3789:667","crate_id":0,"name":"fmt","span":{"filename":"src/format.rs","begin":[112,0],"end":[113,70]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1639:3963":{"id":"0:1639:3963","crate_id":0,"name":"KMergePredicate","span":{"filename":"src/kmerge_impl.rs","begin":[109,0],"end":[111,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1641:3964"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3928:1681":{"id":"0:3928:1681","crate_id":0,"name":"MultiPeek","span":{"filename":"src/multipeek_impl.rs","begin":[10,0],"end":[16,1]},"visibility":"public","docs":"See [`multipeek()`] for more information.","links":{"`multipeek()`":"0:1773:2989"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["0:1775","0:1778","a:2:9533:4792-0:3928:1681","a:2:9532:4793-0:3928:1681","a:2:3382:225-0:3928:1681","a:2:3370:216-0:3928:1681","a:2:3411:4706-0:3928:1681","b:0:2854-0:3928:1681","b:2:8676-0:3928:1681","b:2:4104-0:3928:1681","b:2:2865-0:3928:1681","b:2:3203-0:3928:1681","b:2:3207-0:3928:1681","b:2:3218-0:3928:1681","b:2:2868-0:3928:1681","b:2:3213-0:3928:1681","b:5:848-0:3928:1681","0:3933","0:3936","0:1781","0:1785","0:1791"]}},"b:2:3213-0:4048:1695":{"id":"b:2:3213-0:4048:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4104-0:3928:1681":{"id":"b:2:4104-0:3928:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2635:2418":{"id":"0:2635:2418","crate_id":0,"name":"all_equal","span":{"filename":"src/lib.rs","begin":[1851,4],"end":[1859,5]},"visibility":"default","docs":"Check whether all elements compare equal.\n\nEmpty iterators are considered to have equal elements:\n\n```\nuse itertools::Itertools;\n\nlet data = vec![1, 1, 1, 2, 2, 3, 3, 3, 4, 5, 5];\nassert!(!data.iter().all_equal());\nassert!(data[0..3].iter().all_equal());\nassert!(data[3..5].iter().all_equal());\nassert!(data[5..8].iter().all_equal());\n\nlet data : Option<usize> = None;\nassert!(data.into_iter().all_equal());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4060:3505":{"id":"0:4060:3505","crate_id":0,"name":"rciter","span":{"filename":"src/rciter_impl.rs","begin":[10,4],"end":[10,30]},"visibility":"public","docs":"The boxed iterator.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Rc","id":"5:5395:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RefCell","id":"2:5150:3687","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}}],"bindings":[]}}}}},"0:3002:667":{"id":"0:3002:667","crate_id":0,"name":"fmt","span":{"filename":"src/adaptors/mod.rs","begin":[276,9],"end":[276,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4875:1754":{"id":"0:4875:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/ziptuple.rs","begin":[134,0],"end":[134,38]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2935:667":{"id":"0:2935:667","crate_id":0,"name":"fmt","span":{"filename":"src/adaptors/multi_product.rs","begin":[26,4],"end":[26,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"::std::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2175:1849":{"id":"0:2175:1849","crate_id":0,"name":"Item","span":{"filename":"src/tee.rs","begin":[41,4],"end":[41,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2218:932":{"id":"0:2218:932","crate_id":0,"name":"next","span":{"filename":"src/tuple_impl.rs","begin":[107,4],"end":[109,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3281:5307":{"id":"2:3281:5307","crate_id":2,"name":"description","span":null,"visibility":"default","docs":"```\nif let Err(e) = \"xc\".parse::<u32>() {\n    // Print `e` itself, no need for description().\n    eprintln!(\"Error: {e}\");\n}\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.42.0\", note = \"use the Display impl or to_string()\")]"],"deprecation":{"since":"1.42.0","note":"use the Display impl or to_string()"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:1651:1677":{"id":"a:2:3411:4706-0:1651:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5526:23369":{"id":"1:5526:23369","crate_id":1,"name":"nlink","span":null,"visibility":"default","docs":"Returns the number of hard links pointing to this file.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let nb_hard_links = meta.nlink();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2400:1754":{"id":"0:2400:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/unique_impl.rs","begin":[121,4],"end":[124,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:916:3498":{"id":"0:916:3498","crate_id":0,"name":"or_else","span":{"filename":"src/either_or_both.rs","begin":[223,4],"end":[229,5]},"visibility":"public","docs":"Returns a tuple consisting of the `l` and `r` in `Both(l, r)`, if present.\nOtherwise, returns the wrapped value for the present element, and computes the\nmissing value with the supplied closure. The first argument (`l`) is used for a\nmissing `Left` value. The second argument (`r`) is used for a missing `Right` value.\n\n# Examples\n\n```\n# use itertools::EitherOrBoth;\nlet k = 10;\nassert_eq!(EitherOrBoth::Both(\"tree\", 1).or_else(|| \"stone\", || 2 * k), (\"tree\", 1));\nassert_eq!(EitherOrBoth::Left(\"tree\").or_else(|| \"stone\", || 2 * k), (\"tree\", 20));\nassert_eq!(EitherOrBoth::Right(1).or_else(|| \"stone\", || 2 * k), (\"stone\", 1));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["l",{"kind":"generic","inner":"L"}],["r",{"kind":"generic","inner":"R"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"}]},"c_variadic":false},"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[],"output":{"kind":"generic","inner":"A"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[],"output":{"kind":"generic","inner":"B"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8885:5134":{"id":"2:8885:5134","crate_id":2,"name":"advance_by","span":null,"visibility":"default","docs":"Advances the iterator by `n` elements.\n\nThis method will eagerly skip `n` elements by calling [`next`] up to `n`\ntimes until [`None`] is encountered.\n\n`advance_by(n)` will return [`Ok(())`][Ok] if the iterator successfully advances by\n`n` elements, or [`Err(k)`][Err] if [`None`] is encountered, where `k` is the number\nof elements the iterator is advanced by before running out of elements (i.e. the\nlength of the iterator). Note that `k` is always less than `n`.\n\nCalling `advance_by(0)` can do meaningful work, for example [`Flatten`]\ncan advance its outer iterator until it finds an inner iterator that is not empty, which\nthen often allows it to return a more accurate `size_hint()` than in its initial state.\n\n[`Flatten`]: crate::iter::Flatten\n[`next`]: Iterator::next\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(iter_advance_by)]\n\nlet a = [1, 2, 3, 4];\nlet mut iter = a.iter();\n\nassert_eq!(iter.advance_by(2), Ok(()));\nassert_eq!(iter.next(), Some(&3));\nassert_eq!(iter.advance_by(0), Ok(()));\nassert_eq!(iter.advance_by(100), Err(1)); // only `&4` was skipped\n```","links":{"Err":"2:47940:127","Ok":"2:47937:178","`None`":"2:47811:177","Iterator::next":"2:8875:932","crate::iter::Flatten":"2:6716:4656"},"attrs":["#[unstable(feature = \"iter_advance_by\", reason = \"recently added\", issue =\n\"77404\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:4644:1720":{"id":"b:2:3213-0:4644:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4128:667":{"id":"0:4128:667","crate_id":0,"name":"fmt","span":{"filename":"src/tuple_impl.rs","begin":[25,16],"end":[25,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:3375:1633":{"id":"b:2:2865-0:3375:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOk","id":"0:3375:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:848-0:3861:1674":{"id":"b:5:848-0:3861:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"ElemF"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5099:2652":{"id":"0:5099:2652","crate_id":0,"name":"FoldWhile","span":{"filename":"src/lib.rs","begin":[3762,0],"end":[3767,1]},"visibility":"public","docs":"An enum used for controlling the execution of `fold_while`.\n\nSee [`.fold_while()`](Itertools::fold_while) for more information.","links":{"Itertools::fold_while":"0:2687:2650"},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:5101:106","0:5104:2655"],"impls":["0:2867","a:2:9533:4792-0:5099:2652","a:2:9532:4793-0:5099:2652","a:2:3382:225-0:5099:2652","a:2:3370:216-0:5099:2652","a:2:3411:4706-0:5099:2652","b:2:4104-0:5099:2652","b:2:2865-0:5099:2652","b:2:3203-0:5099:2652","b:2:3207-0:5099:2652","b:2:3218-0:5099:2652","b:2:2868-0:5099:2652","b:2:3213-0:5099:2652","b:5:848-0:5099:2652","0:5107","0:5109","0:5112","0:5115","0:5117","0:5120","0:5122"]}},"0:2867":{"id":"0:2867","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3769,0],"end":[3784,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:2869:3076","0:2870:3078"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3207-0:1883:1687":{"id":"b:2:3207-0:1883:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekingTakeWhile","id":"0:1883:1687","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8907:3333":{"id":"2:8907:3333","crate_id":2,"name":"filter_map","span":null,"visibility":"default","docs":"Creates an iterator that both filters and maps.\n\nThe returned iterator yields only the `value`s for which the supplied\nclosure returns `Some(value)`.\n\n`filter_map` can be used to make chains of [`filter`] and [`map`] more\nconcise. The example below shows how a `map().filter().map()` can be\nshortened to a single call to `filter_map`.\n\n[`filter`]: Iterator::filter\n[`map`]: Iterator::map\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [\"1\", \"two\", \"NaN\", \"four\", \"5\"];\n\nlet mut iter = a.iter().filter_map(|s| s.parse().ok());\n\nassert_eq!(iter.next(), Some(1));\nassert_eq!(iter.next(), Some(5));\nassert_eq!(iter.next(), None);\n```\n\nHere's the same example, but with [`filter`] and [`map`]:\n\n```\nlet a = [\"1\", \"two\", \"NaN\", \"four\", \"5\"];\nlet mut iter = a.iter().map(|s| s.parse()).filter(|s| s.is_ok()).map(|s| s.unwrap());\nassert_eq!(iter.next(), Some(1));\nassert_eq!(iter.next(), Some(5));\nassert_eq!(iter.next(), None);\n```","links":{"Iterator::filter":"2:8905:3329","Iterator::map":"2:8895:851"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"FilterMap","id":"2:46964:4663","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2989":{"id":"0:2989","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[168,16],"end":[168,21]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:2991:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1014:301":{"id":"0:1014:301","crate_id":0,"name":"any","span":{"filename":"src/free.rs","begin":[212,0],"end":[217,1]},"visibility":"public","docs":"Test whether the predicate holds for any elements in the iterable.\n\n[`IntoIterator`] enabled version of [`Iterator::any`].\n\n```\nuse itertools::any;\n\nassert!(any(&[0, -1, 2], |elt| *elt > 0));\n```","links":{"`Iterator::any`":"2:8995:301","`IntoIterator`":"2:8672:152"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:2865-0:674:1640":{"id":"b:2:2865-0:674:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeBy","id":"0:674:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13736:6973":{"id":"2:13736:6973","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15876:4439"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49766:4068","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9532:4793-0:1537:1667":{"id":"a:2:9532:4793-0:1537:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunk","id":"0:1537:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:13834:61730":{"id":"2:13834:61730","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:5452:61730"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50089:5428","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3441:184":{"id":"2:3441:184","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `+` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"b:5:848-0:3737:1655":{"id":"b:5:848-0:3737:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2780:2888":{"id":"0:2780:2888","crate_id":0,"name":"position_max","span":{"filename":"src/lib.rs","begin":[3187,4],"end":[3193,5]},"visibility":"default","docs":"Return the position of the maximum element in the iterator.\n\nIf several elements are equally maximum, the position of the\nlast of them is returned.\n\n# Examples\n\n```\nuse itertools::Itertools;\n\nlet a: [i32; 0] = [];\nassert_eq!(a.iter().position_max(), None);\n\nlet a = [-3, 0, 1, 5, -10];\nassert_eq!(a.iter().position_max(), Some(3));\n\nlet a = [1, 1, -1, -1];\nassert_eq!(a.iter().position_max(), Some(1));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23771:1284":{"id":"2:23771:1284","crate_id":2,"name":"simd_ge","span":null,"visibility":"default","docs":"Test if each lane is greater than or equal to the corresponding lane in `other`.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdPartialEq","id":"2:23179:7077","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:5:848-0:3407:1748":{"id":"b:5:848-0:3407:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3472:272":{"id":"2:3472:272","crate_id":2,"name":"add_assign","span":null,"visibility":"default","docs":"Performs the `+=` operation.\n\n# Example\n\n```\nlet mut x: u32 = 12;\nx += 1;\nassert_eq!(x, 13);\n```","links":{},"attrs":["#[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:5516:6522":{"id":"1:5516:6522","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5517:8505","1:5518:10826"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9127:703":{"id":"2:9127:703","crate_id":2,"name":"ge","span":null,"visibility":"default","docs":"Determines if the elements of this [`Iterator`] are [lexicographically](Ord#lexicographical-comparison)\ngreater than or equal to those of another.\n\n# Examples\n\n```\nassert_eq!([1].iter().ge([1].iter()), true);\nassert_eq!([1].iter().ge([1, 2].iter()), false);\nassert_eq!([1, 2].iter().ge([1].iter()), true);\nassert_eq!([1, 2].iter().ge([1, 2].iter()), true);\n```","links":{"`Iterator`":"2:8873:159","Ord#lexicographical-comparison":"2:2956:180"},"attrs":["#[stable(feature = \"iter_order\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:4058:1697":{"id":"b:2:2865-0:4058:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4625:4377":{"id":"0:4625:4377","crate_id":0,"name":"Last","span":{"filename":"src/with_position.rs","begin":[44,4],"end":[44,11]},"visibility":"default","docs":"This is the last element.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:4627:1564"]}},"0:4673":{"id":"0:4673","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[4,9],"end":[4,14]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:4675:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2031:3235":{"id":"0:2031:3235","crate_id":0,"name":"put_back","span":{"filename":"src/put_back_n_impl.rs","begin":[44,4],"end":[46,5]},"visibility":"public","docs":"Puts x in front of the iterator.\nThe values are yielded in order of the most recently put back\nvalues first.\n\n```rust\nuse itertools::put_back_n;\n\nlet mut it = put_back_n(1..5);\nit.next();\nit.put_back(1);\nit.put_back(0);\n\nassert!(itertools::equal(it, 0..5));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["x",{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4104-0:5099:2652":{"id":"b:2:4104-0:5099:2652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:4792-0:3861:1674":{"id":"a:2:9533:4792-0:3861:1674","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"ElemF","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"ElemF"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"ElemF"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:8676-0:4657:1722":{"id":"b:2:8676-0:4657:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:4713:688":{"id":"0:4713:688","crate_id":0,"name":"from","span":{"filename":"src/ziptuple.rs","begin":[129,0],"end":[129,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6240:23431":{"id":"1:6240:23431","crate_id":1,"name":"into_raw","span":null,"visibility":"default","docs":"Returns the underlying raw `wait` status.\n\nThe returned integer is a **wait status, not an exit status**.","links":{},"attrs":["#[stable(feature = \"unix_process_wait_more\", since = \"1.58.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2530:1885":{"id":"0:2530:1885","crate_id":0,"name":"zip_eq","span":{"filename":"src/lib.rs","begin":[551,4],"end":[556,5]},"visibility":"default","docs":"Create an iterator which iterates over both this and the specified\niterator simultaneously, yielding pairs of elements.\n\n**Panics** if the iterators reach an end and they are not of equal\nlengths.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"J"}]],"output":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6466:10293":{"id":"1:6466:10293","crate_id":1,"name":"st_uid","span":null,"visibility":"default","docs":"Returns the user ID of the file owner.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_uid());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:778:1754":{"id":"0:778:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/adaptors/mod.rs","begin":[882,4],"end":[884,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10569:120":{"id":"2:10569:120","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10570:667"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2144:1849":{"id":"0:2144:1849","crate_id":0,"name":"Item","span":{"filename":"src/sources.rs","begin":[127,4],"end":[127,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"A"}}},"a:2:3382:225-0:3928:1681":{"id":"a:2:3382:225-0:3928:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3772":{"id":"0:3772","crate_id":0,"name":null,"span":{"filename":"src/format.rs","begin":[10,9],"end":[10,14]},"visibility":{"restricted":{"parent":"0:1247:678","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatWith","id":"0:3766:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:3776:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3382:225-0:1490:1670":{"id":"a:2:3382:225-0:1490:1670","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Group","id":"0:1490:1670","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:13725:3881":{"id":"2:13725:3881","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47811:177"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11209:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11209:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3033:667":{"id":"0:3033:667","crate_id":0,"name":"fmt","span":{"filename":"src/adaptors/mod.rs","begin":[530,4],"end":[530,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"::std::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2934:415":{"id":"0:2934:415","crate_id":0,"name":"clone","span":{"filename":"src/adaptors/multi_product.rs","begin":[8,9],"end":[8,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"MultiProduct","id":"0:2928:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:3045:1644":{"id":"b:2:2868-0:3045:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleCombinations","id":"0:3045:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3278:128":{"id":"2:3278:128","crate_id":2,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3279:4566","2:3281:5307","2:3282:5308","2:3283:5309"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2873:3358":{"id":"0:2873:3358","crate_id":0,"name":"DedupPred2CoalescePred","span":{"filename":"src/adaptors/coalesce.rs","begin":[119,0],"end":[119,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"DP","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"0:3933":{"id":"0:3933","crate_id":0,"name":null,"span":{"filename":"src/multipeek_impl.rs","begin":[9,9],"end":[9,14]},"visibility":{"restricted":{"parent":"0:1757:1680","path":"::multipeek_impl"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3935:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4104-0:4617:1742":{"id":"b:2:4104-0:4617:1742","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2145:932":{"id":"0:2145:932","crate_id":0,"name":"next","span":{"filename":"src/sources.rs","begin":[130,4],"end":[132,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3745:415":{"id":"0:3745:415","crate_id":0,"name":"clone","span":{"filename":"src/cons_tuples_impl.rs","begin":[55,4],"end":[55,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3203-0:3757:1657":{"id":"b:2:3203-0:3757:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1997":{"id":"0:1997","crate_id":0,"name":null,"span":{"filename":"src/powerset.rs","begin":[86,0],"end":[90,2]},"visibility":{"restricted":{"parent":"0:1958:1692","path":"::powerset"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Powerset","id":"0:1981:1693","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9119:917":{"id":"2:9119:917","crate_id":2,"name":"ne","span":null,"visibility":"default","docs":"Determines if the elements of this [`Iterator`] are unequal to those of\nanother.\n\n# Examples\n\n```\nassert_eq!([1].iter().ne([1].iter()), false);\nassert_eq!([1].iter().ne([1, 2].iter()), true);\n```","links":{"`Iterator`":"2:8873:159"},"attrs":["#[stable(feature = \"iter_order\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1939:502":{"id":"0:1939:502","crate_id":0,"name":"count","span":{"filename":"src/permutations.rs","begin":[124,4],"end":[152,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:4670:1724":{"id":"b:2:3213-0:4670:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:845:3067":{"id":"0:845:3067","crate_id":0,"name":"next_back","span":{"filename":"src/adaptors/mod.rs","begin":[1049,4],"end":[1056,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3629:184":{"id":"2:3629:184","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The returned type after the call operator is used.","links":{},"attrs":["#[stable(feature = \"fn_once_output\", since = \"1.12.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:2399:932":{"id":"0:2399:932","crate_id":0,"name":"next","span":{"filename":"src/unique_impl.rs","begin":[109,4],"end":[118,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:4112:1705":{"id":"b:2:3207-0:4112:1705","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tee","id":"0:4112:1705","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:844:228":{"id":"5:844:228","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:845:5158","5:846:5159","5:847:5160"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3661:4758":{"id":"2:3661:4758","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3663:243","2:3664:209","2:3665:22906"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3218-0:1537:1667":{"id":"b:2:3218-0:1537:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunk","id":"0:1537:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3207-0:4129:1710":{"id":"b:2:3207-0:4129:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tuples","id":"0:4129:1710","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13351:23287":{"id":"2:13351:23287","crate_id":2,"name":"is_prefix_of","span":null,"visibility":"default","docs":"Checks whether the pattern matches at the front of the haystack","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:3036:1642":{"id":"b:2:3218-0:3036:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WhileSome","id":"0:3036:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2538:1943":{"id":"0:2538:1943","crate_id":0,"name":"chunks","span":{"filename":"src/lib.rs","begin":[659,4],"end":[664,5]},"visibility":"default","docs":"Return an *iterable* that can chunk the iterator.\n\nYield subiterators (chunks) that each yield a fixed number elements,\ndetermined by `size`. The last chunk will be shorter if there aren't\nenough elements.\n\n`IntoChunks` is based on `GroupBy`: it is iterable (implements\n`IntoIterator`, **not** `Iterator`), and it only buffers if several\nchunk iterators are alive at the same time.\n\nIterator element type is `Chunk`, each chunk's iterator.\n\n**Panics** if `size` is 0.\n\n```\nuse itertools::Itertools;\n\nlet data = vec![1, 1, 2, -2, 6, 0, 3, 1];\n//chunk size=3 |------->|-------->|--->|\n\n// Note: The `&` is significant here, `IntoChunks` is iterable\n// only by reference. You can also call `.into_iter()` explicitly.\nfor chunk in &data.into_iter().chunks(3) {\n    // Check that the sum of each chunk is 4.\n    assert_eq!(4, chunk.sum());\n}\n```","links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["size",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"IntoChunks","id":"0:1513:1666","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[141,4],"end":[141,38]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::powerset::Powerset","name":"Powerset","id":"0:1981:1693","glob":false}},"b:2:2868-0:3904:1735":{"id":"b:2:2868-0:3904:1735","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12778:23115":{"id":"2:12778:23115","crate_id":2,"name":"as_slice","span":null,"visibility":"default","docs":"Currently, the consumers of `SlicePattern` need a slice.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SlicePattern","id":"2:12776:7355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:604":{"id":"0:604","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[190,0],"end":[213,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:606:3238","0:607:3241","0:608:3235"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:0:2854-0:3036:1642":{"id":"b:0:2854-0:3036:1642","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WhileSome","id":"0:3036:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3753:22806":{"id":"2:3753:22806","crate_id":2,"name":"end_bound","span":null,"visibility":"default","docs":"End index bound.\n\nReturns the end value as a `Bound`.\n\n# Examples\n\n```\n# fn main() {\nuse std::ops::Bound::*;\nuse std::ops::RangeBounds;\n\nassert_eq!((3..).end_bound(), Unbounded);\nassert_eq!((3..10).end_bound(), Excluded(&10));\n# }\n```","links":{},"attrs":["#[stable(feature = \"collections_range\", since = \"1.28.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bound","id":"2:46298:4631","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2865-0:3939:1685":{"id":"b:2:2865-0:3939:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3218-0:3928:1681":{"id":"b:2:3218-0:3928:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:2992:1634":{"id":"b:2:2865-0:2992:1634","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Product","id":"0:2992:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1067:2271":{"id":"0:1067:2271","crate_id":0,"name":"k","span":{"filename":"src/combinations.rs","begin":[48,4],"end":[48,51]},"visibility":"public","docs":"Returns the length of a combination produced by this iterator.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23120:16129":{"id":"2:23120:16129","crate_id":2,"name":"reduce_min","span":null,"visibility":"default","docs":"Returns the minimum lane in the vector.\n\n# Examples\n\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{i32x4, SimdInt};\nlet v = i32x4::from_array([1, 2, 3, 4]);\nassert_eq!(v.reduce_min(), 1);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdInt","id":"2:23106:7064","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:5531:23371":{"id":"1:5531:23371","crate_id":1,"name":"atime","span":null,"visibility":"default","docs":"Returns the last access time of the file, in seconds since Unix Epoch.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let last_access_time = meta.atime();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3370:216-0:4065:1699":{"id":"a:2:3370:216-0:4065:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8679:1621":{"id":"2:8679:1621","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"I"}}},"2:13793:61718":{"id":"2:13793:61718","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"`DoubleEndedIterator`":"2:8716:121","self::pattern":"2:13336:4565","str::rmatch_indices":"2:13796:61719","prim@char":"1:15876:4439"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49940:5433","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4676":{"id":"0:4676","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[4,16],"end":[4,21]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:4678:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:727:932":{"id":"0:727:932","crate_id":0,"name":"next","span":{"filename":"src/adaptors/mod.rs","begin":[634,4],"end":[647,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3382:225-0:3939:1685":{"id":"a:2:3382:225-0:3939:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4371:4328":{"id":"0:4371:4328","crate_id":0,"name":"KeyValue","span":{"filename":"src/duplicates_impl.rs","begin":[160,4],"end":[160,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null,null]},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"b:2:3213-0:674:1640":{"id":"b:2:3213-0:674:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeBy","id":"0:674:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3370:216-0:3375:1633":{"id":"a:2:3370:216-0:3375:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOk","id":"0:3375:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3806":{"id":"0:3806","crate_id":0,"name":null,"span":{"filename":"src/format.rs","begin":[112,0],"end":[113,70]},"visibility":{"restricted":{"parent":"0:1247:678","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::LowerHex","id":"2:10575:3708","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:10575:3708","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3809:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8988:283":{"id":"2:8988:283","crate_id":2,"name":"all","span":null,"visibility":"default","docs":"Tests if every element of the iterator matches a predicate.\n\n`all()` takes a closure that returns `true` or `false`. It applies\nthis closure to each element of the iterator, and if they all return\n`true`, then so does `all()`. If any of them return `false`, it\nreturns `false`.\n\n`all()` is short-circuiting; in other words, it will stop processing\nas soon as it finds a `false`, given that no matter what else happens,\nthe result will also be `false`.\n\nAn empty iterator returns `true`.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nassert!(a.iter().all(|&x| x > 0));\n\nassert!(!a.iter().all(|&x| x > 2));\n```\n\nStopping at the first `false`:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter();\n\nassert!(!iter.all(|&x| x != 2));\n\n// we can still use `iter`, as there are more elements.\nassert_eq!(iter.next(), Some(&3));\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13746:57510":{"id":"2:13746:57510","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:13336:4565","prim@char":"1:15876:4439"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13739:37998":{"id":"2:13739:37998","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"2:13738:38008"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:50073:5421","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:3951:1683":{"id":"b:5:848-0:3951:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:1035:15396":{"id":"1:1035:15396","crate_id":1,"name":"to_ascii_lowercase","span":null,"visibility":"default","docs":"Makes a copy of the value in its ASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`str::to_lowercase`].\n\n# Note\n\nThis method is deprecated in favor of the identically-named\ninherent methods on `u8`, `char`, `[u8]` and `str`.\n\n[`make_ascii_lowercase`]: AsciiExt::make_ascii_lowercase","links":{"AsciiExt::make_ascii_lowercase":"1:1038:15399","`str::to_lowercase`":"5:6178:62368"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.26.0","note":"use inherent methods instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"AsciiExt","id":"1:1031:6614","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:5:848-0:4048:1695":{"id":"b:5:848-0:4048:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6570:11008":{"id":"1:6570:11008","crate_id":1,"name":"create_pidfd","span":null,"visibility":"default","docs":"Sets whether a [`PidFd`](struct@PidFd) should be created for the [`Child`]\nspawned by this [`Command`].\nBy default, no pidfd will be created.\n\nThe pidfd can be retrieved from the child with [`pidfd`] or [`take_pidfd`].\n\nA pidfd will only be created if it is possible to do so\nin a guaranteed race-free manner (e.g. if the `clone3` system call\nis supported). Otherwise, [`pidfd`] will return an error.\n\n[`Command`]: process::Command\n[`Child`]: process::Child\n[`pidfd`]: fn@ChildExt::pidfd\n[`take_pidfd`]: ChildExt::take_pidfd","links":{"fn@ChildExt::pidfd":"1:6567:10407","process::Command":"1:7477:6730","struct@PidFd":"1:11281:6610","process::Child":"1:7415:6726","ChildExt::take_pidfd":"1:6568:23455"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"1:7477:6730","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3839":{"id":"0:3839","crate_id":0,"name":null,"span":{"filename":"src/grouping_map.rs","begin":[49,9],"end":[49,14]},"visibility":{"restricted":{"parent":"0:1274:1662","path":"::grouping_map"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupingMap","id":"0:3836:1663","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3841:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2140":{"id":"0:2140","crate_id":0,"name":null,"span":{"filename":"src/sources.rs","begin":[124,0],"end":[133,1]},"visibility":{"restricted":{"parent":"0:2115:1700","path":"::sources"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"St","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"St"}}}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unfold","id":"0:4083:1702","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:2144:1849","0:2145:932"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6477:10298":{"id":"1:6477:10298","crate_id":1,"name":"st_blocks","span":null,"visibility":"default","docs":"Returns the number of blocks allocated to the file, 512-byte units.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_blocks());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3218-0:4037:1691":{"id":"b:2:3218-0:4037:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ProcessResults","id":"0:4037:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:4417:15594":{"id":"1:4417:15594","crate_id":1,"name":"read_exact","span":null,"visibility":"default","docs":"Read the exact number of bytes required to fill `buf`.\n\nThis function reads as many bytes as necessary to completely fill the\nspecified buffer `buf`.\n\nNo guarantees are provided about the contents of `buf` when this\nfunction is called, implementations cannot rely on any property of the\ncontents of `buf` being true. It is recommended that implementations\nonly write data to `buf` instead of reading its contents. The\ndocumentation on [`read`] has a more detailed explanation on this\nsubject.\n\n# Errors\n\nIf this function encounters an error of the kind\n[`ErrorKind::Interrupted`] then the error is ignored and the operation\nwill continue.\n\nIf this function encounters an \"end of file\" before completely filling\nthe buffer, it returns an error of the kind [`ErrorKind::UnexpectedEof`].\nThe contents of `buf` are unspecified in this case.\n\nIf any other read error is encountered then this function immediately\nreturns. The contents of `buf` are unspecified in this case.\n\nIf this function returns an error, it is unspecified how many bytes it\nhas read, but it will never read more than would be necessary to\ncompletely fill the buffer.\n\n# Examples\n\n[`File`]s implement `Read`:\n\n[`read`]: Read::read\n[`File`]: crate::fs::File\n\n```no_run\nuse std::io;\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() -> io::Result<()> {\n    let mut f = File::open(\"foo.txt\")?;\n    let mut buffer = [0; 10];\n\n    // read exactly 10 bytes\n    f.read_exact(&mut buffer)?;\n    Ok(())\n}\n```","links":{"crate::fs::File":"1:2909:129","`ErrorKind::Interrupted`":"1:10863:10656","`ErrorKind::UnexpectedEof`":"1:10867:9354","Read::read":"1:4411:6796"},"attrs":["#[stable(feature = \"read_exact\", since = \"1.6.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3203-0:4058:1697":{"id":"b:2:3203-0:4058:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:848-0:4644:1720":{"id":"b:5:848-0:4644:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3207-0:3386:1645":{"id":"b:2:3207-0:3386:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:4410:4624":{"id":"1:4410:4624","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4411:6796","1:4412:15591","1:4414:15592","1:4415:15593","1:4416:6576","1:4417:15594","1:4418:15595","1:4420:15596","1:4421:3938","1:4422:4562","1:4423:1831","1:4425:3245"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4072":{"id":"0:4072","crate_id":0,"name":null,"span":{"filename":"src/repeatn.rs","begin":[7,16],"end":[7,21]},"visibility":{"restricted":{"parent":"0:2074:1698","path":"::repeatn"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"items":["0:4074:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23108:16106":{"id":"2:23108:16106","crate_id":2,"name":"Scalar","span":null,"visibility":"default","docs":"Scalar type contained by this SIMD vector type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:961":{"id":"0:961","crate_id":0,"name":null,"span":{"filename":"src/free.rs","begin":[22,4],"end":[22,9]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::merge","name":"merge","id":"0:671:2061","glob":false}},"0:903:3467":{"id":"0:903:3467","crate_id":0,"name":"map_any","span":{"filename":"src/either_or_both.rs","begin":[131,4],"end":[141,5]},"visibility":"public","docs":"Apply the functions `f` and `g` on the value `a` and `b` respectively;\nfound in `Left(a)`, `Right(b)`, or `Both(a, b)` variants.\nThe Result is rewrapped `self`'s original variant.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}],["g",{"kind":"generic","inner":"G"}]],"output":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"A"}],"output":{"kind":"generic","inner":"L"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"B"}],"output":{"kind":"generic","inner":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4885":{"id":"0:4885","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[134,0],"end":[134,38]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"}]}}],"bindings":[]}}}},"items":["0:4894:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3189:128":{"id":"2:3189:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":"The type returned in the event of a conversion error.","links":{},"attrs":["#[stable(feature = \"try_from\", since = \"1.34.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"b:2:2865-0:1723:1679":{"id":"b:2:2865-0:1723:1679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeJoinBy","id":"0:1723:1679","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6469:8547":{"id":"1:6469:8547","crate_id":1,"name":"st_size","span":null,"visibility":"default","docs":"Returns the size of the file (if it is a regular file or a symbolic link) in bytes.\n\nThe size of a symbolic link is the length of the pathname it contains,\nwithout a terminating null byte.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_size());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:4104-0:4129:1710":{"id":"b:2:4104-0:4129:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tuples","id":"0:4129:1710","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:4102:68":{"id":"2:4102:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4103:1449"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"2:10819:22120":{"id":"2:10819:22120","crate_id":2,"name":"write_i8","span":null,"visibility":"default","docs":"Writes a single `i8` into this hasher.","links":{},"attrs":["#[stable(feature = \"hasher_write\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"i8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4104-0:3036:1642":{"id":"b:2:4104-0:3036:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WhileSome","id":"0:3036:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8932:3938":{"id":"2:8932:3938","crate_id":2,"name":"by_ref","span":null,"visibility":"default","docs":"Borrows an iterator, rather than consuming it.\n\nThis is useful to allow applying iterator adapters while still\nretaining ownership of the original iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut words = [\"hello\", \"world\", \"of\", \"Rust\"].into_iter();\n\n// Take the first two words.\nlet hello_world: Vec<_> = words.by_ref().take(2).collect();\nassert_eq!(hello_world, vec![\"hello\", \"world\"]);\n\n// Collect the rest of the words.\n// We can only do this because we used `by_ref` earlier.\nlet of_rust: Vec<_> = words.collect();\nassert_eq!(of_rust, vec![\"of\", \"Rust\"]);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:2928:1649":{"id":"b:2:3207-0:2928:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiProduct","id":"0:2928:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23181:1265":{"id":"2:23181:1265","crate_id":2,"name":"simd_eq","span":null,"visibility":"default","docs":"Test if each lane is equal to the corresponding lane in `other`.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdPartialEq","id":"2:23179:7077","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2060:932":{"id":"0:2060:932","crate_id":0,"name":"next","span":{"filename":"src/rciter_impl.rs","begin":[62,4],"end":[64,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:894:312":{"id":"0:894:312","crate_id":0,"name":"as_ref","span":{"filename":"src/either_or_both.rs","begin":[76,4],"end":[82,5]},"visibility":"public","docs":"Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A, &B>`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"A"}}}},{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"B"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2232:1849":{"id":"0:2232:1849","crate_id":0,"name":"Item","span":{"filename":"src/tuple_impl.rs","begin":[175,4],"end":[175,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"5:6190:62369":{"id":"5:6190:62369","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8479:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8479:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:1476:1671":{"id":"b:2:3218-0:1476:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Groups","id":"0:1476:1671","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:9009:2382":{"id":"2:9009:2382","crate_id":2,"name":"find_map","span":null,"visibility":"default","docs":"Applies function to the elements of iterator and returns\nthe first non-none result.\n\n`iter.find_map(f)` is equivalent to `iter.filter_map(f).next()`.\n\n# Examples\n\n```\nlet a = [\"lol\", \"NaN\", \"2\", \"5\"];\n\nlet first_number = a.iter().find_map(|s| s.parse().ok());\n\nassert_eq!(first_number, Some(2));\n```","links":{},"attrs":["#[stable(feature = \"iterator_find_map\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2971:1008":{"id":"2:2971:1008","crate_id":2,"name":"partial_cmp","span":null,"visibility":"default","docs":"This method returns an ordering between `self` and `other` values if one exists.\n\n# Examples\n\n```\nuse std::cmp::Ordering;\n\nlet result = 1.0.partial_cmp(&2.0);\nassert_eq!(result, Some(Ordering::Less));\n\nlet result = 1.0.partial_cmp(&1.0);\nassert_eq!(result, Some(Ordering::Equal));\n\nlet result = 2.0.partial_cmp(&1.0);\nassert_eq!(result, Some(Ordering::Greater));\n```\n\nWhen comparison is impossible:\n\n```\nlet result = f64::NAN.partial_cmp(&1.0);\nassert_eq!(result, None);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Rhs"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3218-0:4617:1742":{"id":"b:2:3218-0:4617:1742","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3218-0:4065:1699":{"id":"b:2:3218-0:4065:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4104-0:3375:1633":{"id":"b:2:4104-0:3375:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOk","id":"0:3375:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23182:1290":{"id":"2:23182:1290","crate_id":2,"name":"simd_ne","span":null,"visibility":"default","docs":"Test if each lane is equal to the corresponding lane in `other`.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdPartialEq","id":"2:23179:7077","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3695":{"id":"0:3695","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"X","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Iter","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Iter"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Iter"}},{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}],"bindings":[]}}}},"items":["0:3701:1849","0:3702:932","0:3704:1754","0:3705:2582"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1996:1754":{"id":"0:1996:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/powerset.rs","begin":[69,4],"end":[83,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:1651:1677":{"id":"b:2:3218-0:1651:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2229":{"id":"0:2229","crate_id":0,"name":null,"span":{"filename":"src/tuple_impl.rs","begin":[170,0],"end":[189,1]},"visibility":{"restricted":{"parent":"0:2180:1706","path":"::tuple_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"HomogeneousTuple","id":"0:2196:1727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleWindows","id":"0:4142:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:2232:1849","0:2233:932"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:14547:21214":{"id":"2:14547:21214","crate_id":2,"name":"deallocate","span":null,"visibility":"default","docs":"Deallocates the memory referenced by `ptr`.\n\n# Safety\n\n* `ptr` must denote a block of memory [*currently allocated*] via this allocator, and\n* `layout` must [*fit*] that block of memory.\n\n[*currently allocated*]: #currently-allocated-memory\n[*fit*]: #memory-fitting","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ptr",{"kind":"resolved_path","inner":{"name":"NonNull","id":"2:2391:4591","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}],["layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50749:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}},"0:2520:1771":{"id":"0:2520:1771","crate_id":0,"name":"Itertools","span":{"filename":"src/lib.rs","begin":[431,0],"end":[3660,1]},"visibility":"public","docs":"An [`Iterator`] blanket implementation that provides extra adaptors and\nmethods.\n\nThis trait defines a number of methods. They are divided into two groups:\n\n* *Adaptors* take an iterator and parameter as input, and return\na new iterator value. These are listed first in the trait. An example\nof an adaptor is [`.interleave()`](Itertools::interleave)\n\n* *Regular methods* are those that don't return iterators and instead\nreturn a regular value of some other kind.\n[`.next_tuple()`](Itertools::next_tuple) is an example and the first regular\nmethod in the list.","links":{"Itertools::interleave":"0:2521:1848","Itertools::next_tuple":"0:2620:2355","`Iterator`":"2:8873:159"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:2521:1848","0:2523:1855","0:2525:1672","0:2526:1864","0:2528:1721","0:2530:1885","0:2532:1901","0:2535:1926","0:2538:1943","0:2539:1966","0:2541:1978","0:2543:1993","0:2545:1704","0:2546:2012","0:2547:2016","0:2549:2021","0:2554:2024","0:2559:2036","0:2563:2042","0:2568:1660","0:2571:2061","0:2573:2069","0:2576:2091","0:2579:2101","0:2580:1733","0:2582:1772","0:2584:2134","0:2585:2153","0:2587:2159","0:2588:2165","0:2590:2173","0:2591:2178","0:2593:2187","0:2594:2193","0:2597:2205","0:2598:2212","0:2601:1686","0:2603:2232","0:2605:2239","0:2607:2254","0:2609:1650","0:2610:1652","0:2611:1688","0:2612:1692","0:2613:2320","0:2615:1717","0:2616:2340","0:2618:2348","0:2620:2355","0:2622:2366","0:2624:2372","0:2626:2380","0:2629:2388","0:2632:2406","0:2635:2418","0:2637:2426","0:2639:2436","0:2640:2444","0:2641:2455","0:2643:440","0:2644:2467","0:2645:2479","0:2649:2488","0:2653:2494","0:2655:678","0:2656:2527","0:2658:2531","0:2663:2532","0:2668:2572","0:2672:2581","0:2675:2613","0:2687:2650","0:2698:2666","0:2701:2677","0:2704:2689","0:2705:2700","0:2707:2704","0:2710:2708","0:2711:2712","0:2713:2716","0:2716:2722","0:2719:1752","0:2720:2752","0:2727:2760","0:2733:2771","0:2736:2787","0:2740:2795","0:2743:2798","0:2747:2811","0:2750:2824","0:2754:2830","0:2758:2838","0:2761:2845","0:2765:2850","0:2769:1734","0:2772:2874","0:2776:2878","0:2780:2888","0:2783:2897","0:2788:2902","0:2792:2909","0:2795:2915","0:2800:2919","0:2804:2942","0:2817:2956","0:2831:2962","0:2844:2972","0:2845:2981","0:2846:2989","0:2847:2999","0:2849:3024","0:2852:1744"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:2854"]}},"0:5112":{"id":"0:5112","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3761,22],"end":[3761,27]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:5114:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3492:184":{"id":"2:3492:184","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `!` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"b:2:3213-0:1476:1671":{"id":"b:2:3213-0:1476:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Groups","id":"0:1476:1671","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5530:1322":{"id":"1:5530:1322","crate_id":1,"name":"size","span":null,"visibility":"default","docs":"Returns the total size of this file in bytes.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let file_size = meta.size();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:5120":{"id":"0:5120","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3761,33],"end":[3761,42]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3378:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3203-0:3904:1735":{"id":"b:2:3203-0:3904:1735","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2029":{"id":"0:2029","crate_id":0,"name":null,"span":{"filename":"src/put_back_n_impl.rs","begin":[28,0],"end":[47,1]},"visibility":{"restricted":{"parent":"0:2020:1694","path":"::put_back_n_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:2031:3235"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3810":{"id":"0:3810","crate_id":0,"name":null,"span":{"filename":"src/format.rs","begin":[112,0],"end":[113,70]},"visibility":{"restricted":{"parent":"0:1247:678","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Octal","id":"2:10571:3709","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:10571:3709","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3813:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1815:1754":{"id":"0:1815:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/pad_tail.rs","begin":[64,4],"end":[67,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5029":{"id":"0:5029","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[137,0],"end":[137,47]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"}]}}],"bindings":[]}}}},"items":["0:5041:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10573:3710":{"id":"2:10573:3710","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10574:667"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2008:2582":{"id":"0:2008:2582","crate_id":0,"name":"fold","span":{"filename":"src/process_results_impl.rs","begin":[34,4],"end":[49,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["init",{"kind":"generic","inner":"B"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"B"},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"B"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"generic","inner":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8719:5127":{"id":"2:8719:5127","crate_id":2,"name":"nth_back","span":null,"visibility":"default","docs":"Returns the `n`th element from the end of the iterator.\n\nThis is essentially the reversed version of [`Iterator::nth()`].\nAlthough like most indexing operations, the count starts from zero, so\n`nth_back(0)` returns the first value from the end, `nth_back(1)` the\nsecond, and so on.\n\nNote that all elements between the end and the returned element will be\nconsumed, including the returned element. This also means that calling\n`nth_back(0)` multiple times on the same iterator will return different\nelements.\n\n`nth_back()` will return [`None`] if `n` is greater than or equal to the\nlength of the iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\nassert_eq!(a.iter().nth_back(2), Some(&1));\n```\n\nCalling `nth_back()` multiple times doesn't rewind the iterator:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter();\n\nassert_eq!(iter.nth_back(1), Some(&2));\nassert_eq!(iter.nth_back(1), None);\n```\n\nReturning `None` if there are less than `n + 1` elements:\n\n```\nlet a = [1, 2, 3];\nassert_eq!(a.iter().nth_back(10), None);\n```","links":{"`Iterator::nth()`":"2:8886:2437","`None`":"2:47811:177"},"attrs":["#[stable(feature = \"iter_nth_back\", since = \"1.37.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13807:61725":{"id":"2:13807:61725","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:13336:4565","prim@char":"1:15876:4439"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13366:5416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1843:3289":{"id":"0:1843:3289","crate_id":0,"name":"peek","span":{"filename":"src/peek_nth.rs","begin":[38,4],"end":[40,5]},"visibility":"public","docs":"Works exactly like the `peek` method in `std::iter::Peekable`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3177:150":{"id":"2:3177:150","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3179:3309"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2865-0:3757:1657":{"id":"b:2:2865-0:3757:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:0:2854-0:1883:1687":{"id":"b:0:2854-0:1883:1687","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekingTakeWhile","id":"0:1883:1687","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3207-0:4657:1722":{"id":"b:2:3207-0:4657:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2069:1621":{"id":"0:2069:1621","crate_id":0,"name":"IntoIter","span":{"filename":"src/rciter_impl.rs","begin":[89,4],"end":[89,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}}},"2:23060:16111":{"id":"2:23060:16111","crate_id":2,"name":"recip","span":null,"visibility":"default","docs":"Takes the reciprocal (inverse) of each lane, `1/x`.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:4104-0:3757:1657":{"id":"b:2:4104-0:3757:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:8676-0:3007:1636":{"id":"b:2:8676-0:3007:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Batching","id":"0:3007:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:203":{"id":"0:203","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[136,4],"end":[136,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::peeking_take_while::PeekingTakeWhile","name":"PeekingTakeWhile","id":"0:1883:1687","glob":false}},"0:704:1754":{"id":"0:704:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/adaptors/mod.rs","begin":[593,4],"end":[596,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:736:1754":{"id":"0:736:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/adaptors/mod.rs","begin":[681,4],"end":[683,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3382:225-0:2968:1631":{"id":"a:2:3382:225-0:2968:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InterleaveShortest","id":"0:2968:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2580:1733":{"id":"0:2580:1733","crate_id":0,"name":"kmerge_by","span":{"filename":"src/lib.rs","begin":[1057,4],"end":[1065,5]},"visibility":"default","docs":"Return an iterator adaptor that flattens an iterator of iterators by\nmerging them according to the given closure.\n\nThe closure `first` is called with two elements *a*, *b* and should\nreturn `true` if *a* is ordered before *b*.\n\nIf all base iterators are sorted according to `first`, the result is\nsorted.\n\nIterator element type is `Self::Item`.\n\n```\nuse itertools::Itertools;\n\nlet a = vec![-1f64, 2., 3., -5., 6., -7.];\nlet b = vec![0., 2., -4.];\nlet mut it = vec![a, b].into_iter().kmerge_by(|a, b| a.abs() < b.abs());\nassert_eq!(it.next(), Some(0.));\nassert_eq!(it.last(), Some(-7.));\n```","links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["first",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1068:2013":{"id":"0:1068:2013","crate_id":0,"name":"n","span":{"filename":"src/combinations.rs","begin":[53,4],"end":[53,48]},"visibility":"public","docs":"Returns the (current) length of the pool from which combination elements are\nselected. This value can change between invocations of [`next`](Combinations::next).","links":{"Combinations::next":"0:1074:932"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:5099:2652":{"id":"b:2:3218-0:5099:2652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8637:2678":{"id":"2:8637:2678","crate_id":2,"name":"product","span":null,"visibility":"default","docs":"Method which takes an iterator and generates `Self` from the elements by\nmultiplying the items.","links":{},"attrs":["#[stable(feature = \"iter_arith_traits\", since = \"1.12.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["iter",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"A"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4381:4325":{"id":"0:4381:4325","crate_id":0,"name":"JustValue","span":{"filename":"src/duplicates_impl.rs","begin":[174,4],"end":[174,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"0:985":{"id":"0:985","crate_id":0,"name":null,"span":{"filename":"src/free.rs","begin":[36,0],"end":[36,35]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::rciter_impl::rciter","name":"rciter","id":"0:2052:3505","glob":false}},"0:4366:4324":{"id":"0:4366:4324","crate_id":0,"name":"ById","span":{"filename":"src/duplicates_impl.rs","begin":[126,4],"end":[126,20]},"visibility":"public","docs":"Apply the identity function to elements before checking them for equality.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":[]}},"0:839:1849":{"id":"0:839:1849","crate_id":0,"name":"Item","span":{"filename":"src/adaptors/mod.rs","begin":[1027,4],"end":[1027,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"0:3417:210":{"id":"0:3417:210","crate_id":0,"name":"Right","span":{"filename":"src/either_or_both.rs","begin":[13,4],"end":[13,12]},"visibility":"default","docs":"Only the right value of type `B` is present.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:3419:1564"]}},"a:2:9533:4792-0:3375:1633":{"id":"a:2:9533:4792-0:3375:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOk","id":"0:3375:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13738:38008":{"id":"2:13738:38008","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"2:13739:37998"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:50064:5422","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3585:3067":{"id":"0:3585:3067","crate_id":0,"name":"next_back","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4423:1831":{"id":"1:4423:1831","crate_id":1,"name":"chain","span":null,"visibility":"default","docs":"Creates an adapter which will chain this stream with another.\n\nThe returned `Read` instance will first read all bytes from this object\nuntil EOF is encountered. Afterwards the output is equivalent to the\noutput of `next`.\n\n# Examples\n\n[`File`]s implement `Read`:\n\n[`File`]: crate::fs::File\n\n```no_run\nuse std::io;\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() -> io::Result<()> {\n    let f1 = File::open(\"foo.txt\")?;\n    let f2 = File::open(\"bar.txt\")?;\n\n    let mut handle = f1.chain(f2);\n    let mut buffer = String::new();\n\n    // read the value into a String. We could use any Read method here,\n    // this is just one example.\n    handle.read_to_string(&mut buffer)?;\n    Ok(())\n}\n```","links":{"crate::fs::File":"1:2909:129"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["next",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Chain","id":"1:10956:3541","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4410:4624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8676-0:709:1641":{"id":"b:2:8676-0:709:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TakeWhileRef","id":"0:709:1641","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:23392:9452":{"id":"2:23392:9452","crate_id":2,"name":"BitMask","span":null,"visibility":"default","docs":"The integer bitmask type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:1198:1661":{"id":"0:1198:1661","crate_id":0,"name":"FlattenOk","span":{"filename":"src/flatten_ok.rs","begin":[24,0],"end":[32,1]},"visibility":"public","docs":"An iterator adaptor that flattens `Result::Ok` values and\nallows `Result::Err` values through unchanged.\n\nSee [`.flatten_ok()`](crate::Itertools::flatten_ok) for more information.","links":{"crate::Itertools::flatten_ok":"0:2568:1660"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:1198:1661","a:2:9532:4793-0:1198:1661","a:2:3382:225-0:1198:1661","a:2:3370:216-0:1198:1661","a:2:3411:4706-0:1198:1661","b:0:2854-0:1198:1661","b:2:8676-0:1198:1661","b:2:4104-0:1198:1661","b:2:2865-0:1198:1661","b:2:3203-0:1198:1661","b:2:3207-0:1198:1661","b:2:3218-0:1198:1661","b:2:2868-0:1198:1661","b:2:3213-0:1198:1661","b:5:848-0:1198:1661","0:1205","0:1213","0:1218","0:1222","0:1227"]}},"0:3406:667":{"id":"0:3406:667","crate_id":0,"name":"fmt","span":{"filename":"src/adaptors/mod.rs","begin":[1078,4],"end":[1078,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"::std::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:0:2854-0:1651:1677":{"id":"b:0:2854-0:1651:1677","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:258":{"id":"0:258","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[155,33],"end":[155,39]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::unique_impl::Unique","name":"Unique","id":"0:4401:1715","glob":false}},"b:2:8676-0:1527:1668":{"id":"b:2:8676-0:1527:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunks","id":"0:1527:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"a:2:3370:216-0:3036:1642":{"id":"a:2:3370:216-0:3036:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WhileSome","id":"0:3036:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1136":{"id":"0:1136","crate_id":0,"name":null,"span":{"filename":"src/exactly_one_err.rs","begin":[46,0],"end":[70,1]},"visibility":{"restricted":{"parent":"0:1105:1656","path":"::exactly_one_err"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1138:1849","0:1139:932","0:1140:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:8676-0:4112:1705":{"id":"b:2:8676-0:4112:1705","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tee","id":"0:4112:1705","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:4125:415":{"id":"0:4125:415","crate_id":0,"name":"clone","span":{"filename":"src/tuple_impl.rs","begin":[25,9],"end":[25,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TupleBuffer","id":"0:4119:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3936":{"id":"0:3936","crate_id":0,"name":null,"span":{"filename":"src/multipeek_impl.rs","begin":[9,16],"end":[9,21]},"visibility":{"restricted":{"parent":"0:1757:1680","path":"::multipeek_impl"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3938:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3183:234":{"id":"2:3183:234","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3185:128","2:3186:1436"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4154:5309":{"id":"2:4154:5309","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":"Data providers should implement this method to provide *all* values they are able to\nprovide by using `demand`.\n\nNote that the `provide_*` methods on `Demand` have short-circuit semantics: if an earlier\nmethod has successfully provided a value, then later methods will not get an opportunity to\nprovide.\n\n# Examples\n\nProvides a reference to a field with type `String` as a `&str`, and a value of\ntype `i32`.\n\n```rust\n# #![feature(provide_any)]\nuse std::any::{Provider, Demand};\n# struct SomeConcreteType { field: String, num_field: i32 }\n\nimpl Provider for SomeConcreteType {\n    fn provide<'a>(&'a self, demand: &mut Demand<'a>) {\n        demand.provide_ref::<str>(&self.field)\n            .provide_value::<i32>(self.num_field);\n    }\n}\n```","links":{},"attrs":["#[unstable(feature = \"provide_any\", issue = \"96024\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["demand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:4168:7058","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2643:440":{"id":"0:2643:440","crate_id":0,"name":"concat","span":{"filename":"src/lib.rs","begin":[1972,4],"end":[1977,5]},"visibility":"default","docs":"Combine all an iterator's elements into one element by using [`Extend`].\n\nThis combinator will extend the first item with each of the rest of the\nitems of the iterator. If the iterator is empty, the default value of\n`I::Item` is returned.\n\n```rust\nuse itertools::Itertools;\n\nlet input = vec![vec![1], vec![2, 3], vec![4, 5, 6]];\nassert_eq!(input.into_iter().concat(),\n           vec![1, 2, 3, 4, 5, 6]);\n```","links":{"`Extend`":"2:8681:2464"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:4401:1715":{"id":"b:2:3207-0:4401:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3411:4706-0:4142:1708":{"id":"a:2:3411:4706-0:4142:1708","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleWindows","id":"0:4142:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1139:932":{"id":"0:1139:932","crate_id":0,"name":"next","span":{"filename":"src/exactly_one_err.rs","begin":[52,4],"end":[65,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3382:225-0:1452:1669":{"id":"a:2:3382:225-0:1452:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupBy","id":"0:1452:1669","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:8898:2456":{"id":"2:8898:2456","crate_id":2,"name":"for_each","span":null,"visibility":"default","docs":"Calls a closure on each element of an iterator.\n\nThis is equivalent to using a [`for`] loop on the iterator, although\n`break` and `continue` are not possible from a closure. It's generally\nmore idiomatic to use a `for` loop, but `for_each` may be more legible\nwhen processing items at the end of longer iterator chains. In some\ncases `for_each` may also be faster than a loop, because it will use\ninternal iteration on adapters like `Chain`.\n\n[`for`]: ../../book/ch03-05-control-flow.html#looping-through-a-collection-with-for\n\n# Examples\n\nBasic usage:\n\n```\nuse std::sync::mpsc::channel;\n\nlet (tx, rx) = channel();\n(0..5).map(|x| x * 2 + 1)\n      .for_each(move |x| tx.send(x).unwrap());\n\nlet v: Vec<_> =  rx.iter().collect();\nassert_eq!(v, vec![1, 3, 5, 7, 9]);\n```\n\nFor such a small example, a `for` loop may be cleaner, but `for_each`\nmight be preferable to keep a functional style with longer iterators:\n\n```\n(0..5).flat_map(|x| x * 100 .. x * 110)\n      .enumerate()\n      .filter(|&(i, x)| (i + x) % 3 == 0)\n      .for_each(|(i, x)| println!(\"{i}:{x}\"));\n```","links":{},"attrs":["#[stable(feature = \"iterator_for_each\", since = \"1.21.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3617":{"id":"0:3617","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"X","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Iter","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Iter"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Iter"}},{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}],"bindings":[]}}}},"items":["0:3626:1849","0:3627:932","0:3629:1754","0:3630:2582"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4063:667":{"id":"0:4063:667","crate_id":0,"name":"fmt","span":{"filename":"src/rciter_impl.rs","begin":[7,9],"end":[7,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4474:15628":{"id":"1:4474:15628","crate_id":1,"name":"write_all_vectored","span":null,"visibility":"default","docs":"Attempts to write multiple buffers into this writer.\n\nThis method will continuously call [`write_vectored`] until there is no\nmore data to be written or an error of non-[`ErrorKind::Interrupted`]\nkind is returned. This method will not return until all buffers have\nbeen successfully written or such an error occurs. The first error that\nis not of [`ErrorKind::Interrupted`] kind generated from this method\nwill be returned.\n\nIf the buffer contains no data, this will never call [`write_vectored`].\n\n# Notes\n\nUnlike [`write_vectored`], this takes a *mutable* reference to\na slice of [`IoSlice`]s, not an immutable one. That's because we need to\nmodify the slice to keep track of the bytes already written.\n\nOnce this function returns, the contents of `bufs` are unspecified, as\nthis depends on how many calls to [`write_vectored`] were necessary. It is\nbest to understand this function as taking ownership of `bufs` and to\nnot use `bufs` afterwards. The underlying buffers, to which the\n[`IoSlice`]s point (but not the [`IoSlice`]s themselves), are unchanged and\ncan be reused.\n\n[`write_vectored`]: Write::write_vectored\n\n# Examples\n\n```\n#![feature(write_all_vectored)]\n# fn main() -> std::io::Result<()> {\n\nuse std::io::{Write, IoSlice};\n\nlet mut writer = Vec::new();\nlet bufs = &mut [\n    IoSlice::new(&[1]),\n    IoSlice::new(&[2, 3]),\n    IoSlice::new(&[4, 5, 6]),\n];\n\nwriter.write_all_vectored(bufs)?;\n// Note: the contents of `bufs` is now undefined, see the Notes section.\n\nassert_eq!(writer, &[1, 2, 3, 4, 5, 6]);\n# Ok(()) }\n```","links":{"`IoSlice`":"1:10923:6578","Write::write_vectored":"1:4469:15625","`ErrorKind::Interrupted`":"1:10863:10656"},"attrs":["#[unstable(feature = \"write_all_vectored\", issue = \"70436\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["bufs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"IoSlice","id":"1:10923:6578","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:3397:1646":{"id":"b:5:848-0:3397:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:0:2854-0:3939:1685":{"id":"b:0:2854-0:3939:1685","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3382:225-0:1917:1689":{"id":"a:2:3382:225-0:1917:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Permutations","id":"0:1917:1689","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:608:3235":{"id":"0:608:3235","crate_id":0,"name":"put_back","span":{"filename":"src/adaptors/mod.rs","begin":[210,4],"end":[212,5]},"visibility":"public","docs":"Put back a single value to the front of the iterator.\n\nIf a value is already in the put back slot, it is overwritten.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["x",{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2859:97":{"id":"2:2859:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2861:1616"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13721:311":{"id":"2:13721:311","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13722:57815","`u8`":"1:15893:4453"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1751:4008":{"id":"0:1751:4008","crate_id":0,"name":"into_option","span":{"filename":"src/minmax.rs","begin":[39,4],"end":[45,5]},"visibility":"public","docs":"`into_option` creates an `Option` of type `(T, T)`. The returned `Option`\nhas variant `None` if and only if the `MinMaxResult` has variant\n`NoElements`. Otherwise `Some((x, y))` is returned where `x <= y`.\nIf the `MinMaxResult` has variant `OneElement(x)`, performing this\noperation will make one clone of `x`.\n\n# Examples\n\n```\nuse itertools::MinMaxResult::{self, NoElements, OneElement, MinMax};\n\nlet r: MinMaxResult<i32> = NoElements;\nassert_eq!(r.into_option(), None);\n\nlet r = OneElement(1);\nassert_eq!(r.into_option(), Some((1, 1)));\n\nlet r = MinMax(1, 2);\nassert_eq!(r.into_option(), Some((1, 2)));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"T"},{"kind":"generic","inner":"T"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4043":{"id":"0:4043","crate_id":0,"name":null,"span":{"filename":"src/process_results_impl.rs","begin":[8,9],"end":[8,14]},"visibility":{"restricted":{"parent":"0:1999:1690","path":"::process_results_impl"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ProcessResults","id":"0:4037:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:4047:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2865-0:1452:1669":{"id":"b:2:2865-0:1452:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GroupBy","id":"0:1452:1669","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[168,0],"end":[168,26]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::structs","name":"structs","id":"0:54:1624","glob":true}},"a:2:3370:216-0:1198:1661":{"id":"a:2:3370:216-0:1198:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FlattenOk","id":"0:1198:1661","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3555":{"id":"0:3555","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"X","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Iter","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Iter"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Iter"}},{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}],"bindings":[]}}}},"items":["0:3566:1849","0:3567:932","0:3569:1754","0:3570:2582"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:791:1632":{"id":"0:791:1632","crate_id":0,"name":"FilterMapOk","span":{"filename":"src/adaptors/mod.rs","begin":[914,0],"end":[917,1]},"visibility":"public","docs":"An iterator adapter to filter and apply a transformation on values within a nested `Result::Ok`.\n\nSee [`.filter_map_ok()`](crate::Itertools::filter_map_ok) for more information.","links":{"crate::Itertools::filter_map_ok":"0:2563:2042"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:791:1632","a:2:9532:4793-0:791:1632","a:2:3382:225-0:791:1632","a:2:3370:216-0:791:1632","a:2:3411:4706-0:791:1632","b:0:2854-0:791:1632","b:2:8676-0:791:1632","b:2:4104-0:791:1632","b:2:2865-0:791:1632","b:2:3203-0:791:1632","b:2:3207-0:791:1632","b:2:3218-0:791:1632","b:2:2868-0:791:1632","b:2:3213-0:791:1632","0:796","0:808","0:824"]}},"2:14078:151":{"id":"2:14078:151","crate_id":2,"name":"IntoFuture","span":null,"visibility":"default","docs":"Which kind of future are we turning this into?","links":{},"attrs":["#[stable(feature = \"into_future\", since = \"1.64.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[{"eq_predicate":{"lhs":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"IntoFuture","id":"2:14076:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"Future","id":"2:14061:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"rhs":{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"IntoFuture","id":"2:14076:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}]},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:14061:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"b:5:848-0:4092:1703":{"id":"b:5:848-0:4092:1703","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iterate","id":"0:4092:1703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3502:2582":{"id":"0:3502:2582","crate_id":0,"name":"fold","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["accum",{"kind":"generic","inner":"Acc"}],["f",{"kind":"generic","inner":"Fold"}]],"output":{"kind":"generic","inner":"Acc"},"c_variadic":false},"generics":{"params":[{"name":"Acc","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Fold","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Fold"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Acc"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"generic","inner":"Acc"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3203-0:4092:1703":{"id":"b:2:3203-0:4092:1703","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iterate","id":"0:4092:1703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1883:1687":{"id":"0:1883:1687","crate_id":0,"name":"PeekingTakeWhile","span":{"filename":"src/peeking_take_while.rs","begin":[79,0],"end":[84,1]},"visibility":"public","docs":"An iterator adaptor that takes items while a closure returns `true`.\n\nSee [`.peeking_take_while()`](crate::Itertools::peeking_take_while)\nfor more information.","links":{"crate::Itertools::peeking_take_while":"0:2601:1686"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:1883:1687","a:2:9532:4793-0:1883:1687","a:2:3382:225-0:1883:1687","a:2:3370:216-0:1883:1687","a:2:3411:4706-0:1883:1687","b:0:2854-0:1883:1687","b:2:8676-0:1883:1687","b:2:4104-0:1883:1687","b:2:2865-0:1883:1687","b:2:3203-0:1883:1687","b:2:3207-0:1883:1687","b:2:3218-0:1883:1687","b:2:2868-0:1883:1687","b:2:3213-0:1883:1687","0:1889","0:1896"]}},"2:3537:4751":{"id":"2:3537:4751","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3539:1250"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1994:932":{"id":"0:1994:932","crate_id":0,"name":"next","span":{"filename":"src/powerset.rs","begin":[52,4],"end":[67,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4112:1705":{"id":"0:4112:1705","crate_id":0,"name":"Tee","span":{"filename":"src/tee.rs","begin":[21,0],"end":[26,1]},"visibility":"public","docs":"One half of an iterator pair where both return the same elements.\n\nSee [`.tee()`](crate::Itertools::tee) for more information.","links":{"crate::Itertools::tee":"0:2545:1704"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:4112:1705","a:2:9532:4793-0:4112:1705","a:2:3382:225-0:4112:1705","a:2:3370:216-0:4112:1705","a:2:3411:4706-0:4112:1705","b:0:2854-0:4112:1705","b:2:8676-0:4112:1705","b:2:4104-0:4112:1705","b:2:2865-0:4112:1705","b:2:3203-0:4112:1705","b:2:3207-0:4112:1705","b:2:3218-0:4112:1705","b:2:2868-0:4112:1705","b:2:3213-0:4112:1705","0:4116","0:2173","0:2178"]}},"0:126":{"id":"0:126","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[114,4],"end":[114,42]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::MultiProduct","name":"MultiProduct","id":"0:2928:1649","glob":false}},"0:297":{"id":"0:297","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[175,0],"end":[175,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::minmax::MinMaxResult","name":"MinMaxResult","id":"0:3904:1735","glob":false}},"b:2:3213-0:5099:2652":{"id":"b:2:3213-0:5099:2652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:14461:284":{"id":"2:14461:284","crate_id":2,"name":"alloc","span":null,"visibility":"default","docs":"Allocate memory as described by the given `layout`.\n\nReturns a pointer to newly-allocated memory,\nor null to indicate allocation failure.\n\n# Safety\n\nThis function is unsafe because undefined behavior can result\nif the caller does not ensure that `layout` has non-zero size.\n\n(Extension subtraits might provide more specific bounds on\nbehavior, e.g., guarantee a sentinel address or a null pointer\nin response to a zero-size allocation request.)\n\nThe allocated block of memory may or may not be initialized.\n\n# Errors\n\nReturning a null pointer indicates that either memory is exhausted\nor `layout` does not meet this allocator's size or alignment constraints.\n\nImplementations are encouraged to return null on memory\nexhaustion rather than aborting, but this is not\na strict requirement. (Specifically: it is *legal* to\nimplement this trait atop an underlying native allocation\nlibrary that aborts on memory exhaustion.)\n\nClients wishing to abort computation in response to an\nallocation error are encouraged to call the [`handle_alloc_error`] function,\nrather than directly invoking `panic!` or similar.\n\n[`handle_alloc_error`]: ../../alloc/alloc/fn.handle_alloc_error.html","links":{},"attrs":["#[stable(feature = \"global_alloc\", since = \"1.28.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50749:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}},"0:2155:1741":{"id":"0:2155:1741","crate_id":0,"name":"iterate","span":{"filename":"src/sources.rs","begin":[176,0],"end":[183,1]},"visibility":"public","docs":"Creates a new iterator that infinitely applies function to value and yields results.\n\n```\nuse itertools::iterate;\n\nitertools::assert_equal(iterate(1, |&i| i * 3).take(5), vec![1, 3, 9, 27, 81]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["initial_value",{"kind":"generic","inner":"St"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Iterate","id":"0:4092:1703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"St","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"St"}}}],"output":{"kind":"generic","inner":"St"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:178":{"id":"0:178","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[127,33],"end":[127,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::intersperse::Intersperse","name":"Intersperse","id":"0:1569:1673","glob":false}},"b:0:2854-0:674:1640":{"id":"b:0:2854-0:674:1640","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeBy","id":"0:674:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4126":{"id":"0:4126","crate_id":0,"name":null,"span":{"filename":"src/tuple_impl.rs","begin":[25,16],"end":[25,21]},"visibility":{"restricted":{"parent":"0:2180:1706","path":"::tuple_impl"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"HomogeneousTuple","id":"0:2196:1727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Buffer","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleBuffer","id":"0:4119:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:4128:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9533:4792-0:4129:1710":{"id":"a:2:9533:4792-0:4129:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Buffer","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TupleCollect","id":"0:2245:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tuples","id":"0:4129:1710","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3370:216-0:4083:1702":{"id":"a:2:3370:216-0:4083:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"St","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"St"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unfold","id":"0:4083:1702","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4083:1702":{"id":"0:4083:1702","crate_id":0,"name":"Unfold","span":{"filename":"src/sources.rs","begin":[118,0],"end":[122,1]},"visibility":"public","docs":"See [`unfold`](crate::unfold) for more information.","links":{"crate::unfold":"0:2133:1740"},"attrs":["#[must_use = \"iterators are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:4087:1344"],"fields_stripped":true}},"generics":{"params":[{"name":"St","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:4083:1702","a:2:9532:4793-0:4083:1702","a:2:3382:225-0:4083:1702","a:2:3370:216-0:4083:1702","a:2:3411:4706-0:4083:1702","b:0:2854-0:4083:1702","b:2:8676-0:4083:1702","b:2:4104-0:4083:1702","b:2:2865-0:4083:1702","b:2:3203-0:4083:1702","b:2:3207-0:4083:1702","b:2:3218-0:4083:1702","b:2:2868-0:4083:1702","b:2:3213-0:4083:1702","b:5:848-0:4083:1702","0:2137","0:4088","0:2140"]}},"0:595:1849":{"id":"0:595:1849","crate_id":0,"name":"Item","span":{"filename":"src/adaptors/mod.rs","begin":[115,4],"end":[115,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:3382:225-0:3386:1645":{"id":"a:2:3382:225-0:3386:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:848-0:4670:1724":{"id":"b:5:848-0:4670:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:542":{"id":"0:542","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[11,30],"end":[11,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::map::map_ok","name":"map_ok","id":"0:480:2024","glob":false}},"0:993:2374":{"id":"0:993:2374","crate_id":0,"name":"enumerate","span":{"filename":"src/free.rs","begin":[84,0],"end":[88,1]},"visibility":"public","docs":"Iterate `iterable` with a running index.\n\n[`IntoIterator`] enabled version of [`Iterator::enumerate`].\n\n```\nuse itertools::enumerate;\n\nfor (i, elt) in enumerate(&[1, 2, 3]) {\n    /* loop body */\n}\n```","links":{"`Iterator::enumerate`":"2:8910:2374","`IntoIterator`":"2:8672:152"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"iter::Enumerate","id":"2:46945:3519","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2772:2874":{"id":"0:2772:2874","crate_id":0,"name":"minmax_by_key","span":{"filename":"src/lib.rs","begin":[3144,4],"end":[3148,5]},"visibility":"default","docs":"Return the minimum and maximum element of an iterator, as determined by\nthe specified function.\n\nThe return value is a variant of [`MinMaxResult`] like for [`.minmax()`](Itertools::minmax).\n\nFor the minimum, the first minimal element is returned.  For the maximum,\nthe last maximal element wins.  This matches the behavior of the standard\n[`Iterator::min`] and [`Iterator::max`] methods.\n\nThe keys can be floats but no particular result is guaranteed\nif a key is NaN.","links":{"`MinMaxResult`":"0:3904:1735","Itertools::minmax":"0:2769:1734","`Iterator::min`":"2:9043:2321","`Iterator::max`":"2:9042:3564"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["key",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"generic","inner":"K"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:3407:1748":{"id":"b:2:3213-0:3407:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2521:1848":{"id":"0:2521:1848","crate_id":0,"name":"interleave","span":{"filename":"src/lib.rs","begin":[446,4],"end":[451,5]},"visibility":"default","docs":"Alternate elements from two iterators until both have run out.\n\nIterator element type is `Self::Item`.\n\nThis iterator is *fused*.\n\n```\nuse itertools::Itertools;\n\nlet it = (1..7).interleave(vec![-1, -2]);\nitertools::assert_equal(it, vec![1, -1, 2, -2, 3, 4, 5, 6]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"J"}]],"output":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3370:216-0:3007:1636":{"id":"a:2:3370:216-0:3007:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Batching","id":"0:3007:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3112:3312":{"id":"0:3112:3312","crate_id":0,"name":"Tuple3Combination","span":{"filename":"src/adaptors/mod.rs","begin":[823,0],"end":[823,65]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"2:8886:2437":{"id":"2:8886:2437","crate_id":2,"name":"nth","span":null,"visibility":"default","docs":"Returns the `n`th element of the iterator.\n\nLike most indexing operations, the count starts from zero, so `nth(0)`\nreturns the first value, `nth(1)` the second, and so on.\n\nNote that all preceding elements, as well as the returned element, will be\nconsumed from the iterator. That means that the preceding elements will be\ndiscarded, and also that calling `nth(0)` multiple times on the same iterator\nwill return different elements.\n\n`nth()` will return [`None`] if `n` is greater than or equal to the length of the\niterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\nassert_eq!(a.iter().nth(1), Some(&2));\n```\n\nCalling `nth()` multiple times doesn't rewind the iterator:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter();\n\nassert_eq!(iter.nth(1), Some(&2));\nassert_eq!(iter.nth(1), None);\n```\n\nReturning `None` if there are less than `n + 1` elements:\n\n```\nlet a = [1, 2, 3];\nassert_eq!(a.iter().nth(10), None);\n```","links":{"`None`":"2:47811:177"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:2982:1635":{"id":"b:2:3218-0:2982:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2463":{"id":"0:2463","crate_id":0,"name":null,"span":{"filename":"src/zip_eq_impl.rs","begin":[57,0],"end":[60,2]},"visibility":{"restricted":{"parent":"0:2450:1719","path":"::zip_eq_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3382:225-0:4119:1707":{"id":"a:2:3382:225-0:4119:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Buffer","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TupleCollect","id":"0:2245:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleBuffer","id":"0:4119:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3207-0:2982:1635":{"id":"b:2:3207-0:2982:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3174:74":{"id":"2:3174:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3176:3454"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13359:23329":{"id":"2:13359:23329","crate_id":2,"name":"next_match","span":null,"visibility":"default","docs":"Finds the next [`Match`][SearchStep::Match] result. See [`next()`][Searcher::next].\n\nUnlike [`next()`][Searcher::next], there is no guarantee that the returned ranges\nof this and [`next_reject`][Searcher::next_reject] will overlap. This will return\n`(start_match, end_match)`, where start_match is the index of where\nthe match begins, and end_match is the index after the end of the match.","links":{"SearchStep::Match":"2:50171:5332","Searcher::next_reject":"2:13360:23330","Searcher::next":"2:13358:932"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4104-0:4083:1702":{"id":"b:2:4104-0:4083:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unfold","id":"0:4083:1702","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4119:1707":{"id":"0:4119:1707","crate_id":0,"name":"TupleBuffer","span":{"filename":"src/tuple_impl.rs","begin":[26,0],"end":[31,1]},"visibility":"public","docs":"An iterator over a incomplete tuple.\n\nSee [`.tuples()`](crate::Itertools::tuples) and\n[`Tuples::into_buffer()`].","links":{"crate::Itertools::tuples":"0:2543:1993","`Tuples::into_buffer()`":"0:2222:4291"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"HomogeneousTuple","id":"0:2196:1727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:4119:1707","a:2:9532:4793-0:4119:1707","a:2:3382:225-0:4119:1707","a:2:3370:216-0:4119:1707","a:2:3411:4706-0:4119:1707","b:0:2854-0:4119:1707","b:2:8676-0:4119:1707","b:2:4104-0:4119:1707","b:2:2865-0:4119:1707","b:2:3203-0:4119:1707","b:2:3207-0:4119:1707","b:2:3218-0:4119:1707","b:2:2868-0:4119:1707","b:2:3213-0:4119:1707","b:5:848-0:4119:1707","0:4123","0:4126","0:2202","0:2209"]}},"2:23077:16128":{"id":"2:23077:16128","crate_id":2,"name":"reduce_max","span":null,"visibility":"default","docs":"Returns the maximum lane in the vector.\n\nReturns values based on equality, so a vector containing both `0.` and `-0.` may\nreturn either.\n\nThis function will not return `NaN` unless all lanes are `NaN`.\n\n# Examples\n\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{f32x2, SimdFloat};\nlet v = f32x2::from_array([1., 2.]);\nassert_eq!(v.reduce_max(), 2.);\n\n// NaN values are skipped...\nlet v = f32x2::from_array([1., f32::NAN]);\nassert_eq!(v.reduce_max(), 1.);\n\n// ...unless all values are NaN\nlet v = f32x2::from_array([f32::NAN, f32::NAN]);\nassert!(v.reduce_max().is_nan());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23053:7076","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2528:1721":{"id":"0:2528:1721","crate_id":0,"name":"zip_longest","span":{"filename":"src/lib.rs","begin":[538,4],"end":[543,5]},"visibility":"default","docs":"Create an iterator which iterates over both this and the specified\niterator simultaneously, yielding pairs of two optional elements.\n\nThis iterator is *fused*.\n\nAs long as neither input iterator is exhausted yet, it yields two values\nvia `EitherOrBoth::Both`.\n\nWhen the parameter iterator is exhausted, it only yields a value from the\n`self` iterator via `EitherOrBoth::Left`.\n\nWhen the `self` iterator is exhausted, it only yields a value from the\nparameter iterator via `EitherOrBoth::Right`.\n\nWhen both iterators return `None`, all further invocations of `.next()`\nwill return `None`.\n\nIterator element type is\n[`EitherOrBoth<Self::Item, J::Item>`](EitherOrBoth).\n\n```rust\nuse itertools::EitherOrBoth::{Both, Right};\nuse itertools::Itertools;\nlet it = (0..1).zip_longest(1..3);\nitertools::assert_equal(it, vec![Both(0, 1), Right(2)]);\n```","links":{"EitherOrBoth":"0:3407:1748"},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"J"}]],"output":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:796":{"id":"0:796","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[919,0],"end":[924,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterMapOk","id":"0:791:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:3385:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2303:4321":{"id":"0:2303:4321","crate_id":0,"name":"Container","span":{"filename":"src/duplicates_impl.rs","begin":[119,8],"end":[119,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"KeyXorValue","id":"0:2321:4322","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"b:2:2868-0:4075:1701":{"id":"b:2:2868-0:4075:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatCall","id":"0:4075:1701","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:4792-0:2954:1630":{"id":"a:2:9533:4792-0:2954:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:9083:5148":{"id":"2:9083:5148","crate_id":2,"name":"unzip","span":null,"visibility":"default","docs":"Converts an iterator of pairs into a pair of containers.\n\n`unzip()` consumes an entire iterator of pairs, producing two\ncollections: one from the left elements of the pairs, and one\nfrom the right elements.\n\nThis function is, in some sense, the opposite of [`zip`].\n\n[`zip`]: Iterator::zip\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [(1, 2), (3, 4), (5, 6)];\n\nlet (left, right): (Vec<_>, Vec<_>) = a.iter().cloned().unzip();\n\nassert_eq!(left, [1, 3, 5]);\nassert_eq!(right, [2, 4, 6]);\n\n// you can also unzip multiple nested tuples at once\nlet a = [(1, (2, 3)), (4, (5, 6))];\n\nlet (x, (y, z)): (Vec<_>, (Vec<_>, Vec<_>)) = a.iter().cloned().unzip();\nassert_eq!(x, [1, 4]);\nassert_eq!(y, [2, 5]);\nassert_eq!(z, [3, 6]);\n```","links":{"Iterator::zip":"2:8890:1801"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"}]},"c_variadic":false},"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromA","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromB","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"FromA"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"FromB"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1468":{"id":"0:1468","crate_id":0,"name":null,"span":{"filename":"src/groupbylazy.rs","begin":[337,0],"end":[349,1]},"visibility":{"restricted":{"parent":"0:1387:1665","path":"::groupbylazy"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"outlives":"'a"}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"generic","inner":"K"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"GroupBy","id":"0:1452:1669","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}}}},"items":["0:1473:1849","0:1474:1621","0:1475:777"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9533:4792-0:4657:1722":{"id":"a:2:9533:4792-0:4657:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2639:2436":{"id":"0:2639:2436","crate_id":0,"name":"dropping","span":{"filename":"src/lib.rs","begin":[1900,4],"end":[1907,5]},"visibility":"default","docs":"Consume the first `n` elements from the iterator eagerly,\nand return the same iterator again.\n\nIt works similarly to *.skip(* `n` *)* except it is eager and\npreserves the iterator type.\n\n```\nuse itertools::Itertools;\n\nlet mut iter = \"αβγ\".chars().dropping(2);\nitertools::assert_equal(iter, \"γ\".chars());\n```\n\n*Fusing notes: if the iterator is exhausted by dropping,\nthe result of calling `.next()` again depends on the iterator implementation.*","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:132":{"id":"0:132","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[118,4],"end":[118,78]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::combinations_with_replacement::CombinationsWithReplacement","name":"CombinationsWithReplacement","id":"0:3748:1653","glob":false}},"2:13805:61723":{"id":"2:13805:61723","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3510:184":{"id":"2:3510:184","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `^` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"a:2:9532:4793-0:3397:1646":{"id":"a:2:9532:4793-0:3397:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4684:1849":{"id":"0:4684:1849","crate_id":0,"name":"Item","span":{"filename":"src/ziptuple.rs","begin":[127,0],"end":[127,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]}}},"b:2:3203-0:4142:1708":{"id":"b:2:3203-0:4142:1708","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleWindows","id":"0:4142:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:300":{"id":"0:300","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[176,0],"end":[176,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::peeking_take_while::PeekingNext","name":"PeekingNext","id":"0:1868:1736","glob":false}},"b:2:3213-0:709:1641":{"id":"b:2:3213-0:709:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TakeWhileRef","id":"0:709:1641","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:3045:1644":{"id":"b:2:3213-0:3045:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleCombinations","id":"0:3045:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3411:4706-0:2968:1631":{"id":"a:2:3411:4706-0:2968:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InterleaveShortest","id":"0:2968:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8716:121":{"id":"2:8716:121","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8717:3067","2:8718:5126","2:8719:5127","2:8720:5128","2:8724:5129","2:8727:5130"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3615:3067":{"id":"0:3615:3067","crate_id":0,"name":"next_back","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3685:762":{"id":"2:3685:762","crate_id":2,"name":"index_mut","span":null,"visibility":"default","docs":"Performs the mutable indexing (`container[index]`) operation.\n\n# Panics\n\nMay panic if the index is out of bounds.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"generic","inner":"Idx"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Index","id":"2:3679:3976","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3036:1642":{"id":"0:3036:1642","crate_id":0,"name":"WhileSome","span":{"filename":"src/adaptors/mod.rs","begin":[660,0],"end":[662,1]},"visibility":"public","docs":"An iterator adaptor that filters `Option<A>` iterator elements\nand produces `A`. Stops on the first `None` encountered.\n\nSee [`.while_some()`](crate::Itertools::while_some) for more information.","links":{"crate::Itertools::while_some":"0:2605:2239"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:3036:1642","a:2:9532:4793-0:3036:1642","a:2:3382:225-0:3036:1642","a:2:3370:216-0:3036:1642","a:2:3411:4706-0:3036:1642","b:0:2854-0:3036:1642","b:2:8676-0:3036:1642","b:2:4104-0:3036:1642","b:2:2865-0:3036:1642","b:2:3203-0:3036:1642","b:2:3207-0:3036:1642","b:2:3218-0:3036:1642","b:2:2868-0:3036:1642","b:2:3213-0:3036:1642","b:5:848-0:3036:1642","0:3039","0:3042","0:731"]}},"2:2969:187":{"id":"2:2969:187","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2971:1008","2:2972:836","2:2973:801","2:2974:720","2:2975:703"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1773:2989":{"id":"0:1773:2989","crate_id":0,"name":"multipeek","span":{"filename":"src/multipeek_impl.rs","begin":[22,0],"end":[30,1]},"visibility":"public","docs":"An iterator adaptor that allows the user to peek at multiple `.next()`\nvalues without advancing the base iterator.\n\n[`IntoIterator`] enabled version of [`Itertools::multipeek`].","links":{"`IntoIterator`":"2:8672:152","`Itertools::multipeek`":"0:2846:2989"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"MultiPeek","id":"0:3928:1681","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4408":{"id":"0:4408","crate_id":0,"name":null,"span":{"filename":"src/unziptuple.rs","begin":[68,0],"end":[68,18]},"visibility":{"restricted":{"parent":"0:2411:1743","path":"::unziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"IT","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MultiUnzip","id":"0:2415:1745","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}},"for":{"kind":"generic","inner":"IT"},"items":["0:4410:1744"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:923":{"id":"0:923","crate_id":0,"name":null,"span":{"filename":"src/either_or_both.rs","begin":[246,0],"end":[254,1]},"visibility":{"restricted":{"parent":"0:878:1747","path":"::either_or_both"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Either","id":"20:216:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":["0:926:3309"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3370:216-0:1158:1732":{"id":"a:2:3370:216-0:1158:1732","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Diff","id":"0:1158:1732","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:585:1754":{"id":"0:585:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/adaptors/mod.rs","begin":[71,4],"end":[73,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:4058:1697":{"id":"a:2:3411:4706-0:4058:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RcIter","id":"0:4058:1697","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2865-0:3386:1645":{"id":"b:2:2865-0:3386:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3441:722":{"id":"0:3441:722","crate_id":0,"name":"hash","span":{"filename":"src/either_or_both.rs","begin":[6,31],"end":[6,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10810:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23071:16122":{"id":"2:23071:16122","crate_id":2,"name":"copysign","span":null,"visibility":"default","docs":"Returns each lane with the magnitude of `self` and the sign of `sign`.\n\nFor any lane containing a `NAN`, a `NAN` with the sign of `sign` is returned.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["sign",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:5:848-0:2928:1649":{"id":"b:5:848-0:2928:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MultiProduct","id":"0:2928:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:3036:1642":{"id":"b:2:3213-0:3036:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WhileSome","id":"0:3036:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3203-0:4401:1715":{"id":"b:2:3203-0:4401:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Unique","id":"0:4401:1715","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2064:3067":{"id":"0:2064:3067","crate_id":0,"name":"next_back","span":{"filename":"src/rciter_impl.rs","begin":[79,4],"end":[81,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3836:1663":{"id":"0:3836:1663","crate_id":0,"name":"GroupingMap","span":{"filename":"src/grouping_map.rs","begin":[51,0],"end":[53,1]},"visibility":"public","docs":"`GroupingMap` is an intermediate struct for efficient group-and-fold operations.\nIt groups elements by their key and at the same time fold each group\nusing some aggregating operation.\n \nNo method on this struct performs temporary allocations.","links":{},"attrs":["#[must_use = \"GroupingMap is lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:1316","a:2:9533:4792-0:3836:1663","a:2:9532:4793-0:3836:1663","a:2:3382:225-0:3836:1663","a:2:3370:216-0:3836:1663","a:2:3411:4706-0:3836:1663","b:2:4104-0:3836:1663","b:2:2865-0:3836:1663","b:2:3203-0:3836:1663","b:2:3207-0:3836:1663","b:2:3218-0:3836:1663","b:2:2868-0:3836:1663","b:2:3213-0:3836:1663","b:5:848-0:3836:1663","0:3839","0:3842"]}},"1:4473:15627":{"id":"1:4473:15627","crate_id":1,"name":"write_all","span":null,"visibility":"default","docs":"Attempts to write an entire buffer into this writer.\n\nThis method will continuously call [`write`] until there is no more data\nto be written or an error of non-[`ErrorKind::Interrupted`] kind is\nreturned. This method will not return until the entire buffer has been\nsuccessfully written or such an error occurs. The first error that is\nnot of [`ErrorKind::Interrupted`] kind generated from this method will be\nreturned.\n\nIf the buffer contains no data, this will never call [`write`].\n\n# Errors\n\nThis function will return the first error of\nnon-[`ErrorKind::Interrupted`] kind that [`write`] returns.\n\n[`write`]: Write::write\n\n# Examples\n\n```no_run\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() -> std::io::Result<()> {\n    let mut buffer = File::create(\"foo.txt\")?;\n\n    buffer.write_all(b\"some bytes\")?;\n    Ok(())\n}\n```","links":{"Write::write":"1:4468:2499","`ErrorKind::Interrupted`":"1:10863:10656"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9532:4793-0:3951:1683":{"id":"a:2:9532:4793-0:3951:1683","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3903:667":{"id":"0:3903:667","crate_id":0,"name":"fmt","span":{"filename":"src/merge_join.rs","begin":[52,4],"end":[52,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"::std::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5915:184":{"id":"5:5915:184","crate_id":5,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after concatenation","links":{},"attrs":["#[unstable(feature = \"slice_concat_trait\", issue = \"27747\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"a:2:3411:4706-0:4112:1705":{"id":"a:2:3411:4706-0:4112:1705","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tee","id":"0:4112:1705","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:23062:16113":{"id":"2:23062:16113","crate_id":2,"name":"to_radians","span":null,"visibility":"default","docs":"Converts each lane from degrees to radians.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3213-0:1513:1666":{"id":"b:2:3213-0:1513:1666","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoChunks","id":"0:1513:1666","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2918:3388":{"id":"0:2918:3388","crate_id":0,"name":"MapSpecialCaseFnInto","span":{"filename":"src/adaptors/map.rs","begin":[116,0],"end":[116,51]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"0:694":{"id":"0:694","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[553,0],"end":[561,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"Peekable","id":"2:47034:3193","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"Peekable","id":"2:47034:3193","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MergeBy","id":"0:674:1640","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:3034:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2543:1993":{"id":"0:2543:1993","crate_id":0,"name":"tuples","span":{"filename":"src/lib.rs","begin":[772,4],"end":[777,5]},"visibility":"default","docs":"Return an iterator that groups the items in tuples of a specific size\n(up to 12).\n\nSee also the method [`.next_tuple()`](Itertools::next_tuple).\n\n```\nuse itertools::Itertools;\nlet mut v = Vec::new();\nfor (a, b) in (1..5).tuples() {\n    v.push((a, b));\n}\nassert_eq!(v, vec![(1, 2), (3, 4)]);\n\nlet mut it = (1..7).tuples();\nassert_eq!(Some((1, 2, 3)), it.next());\nassert_eq!(Some((4, 5, 6)), it.next());\nassert_eq!(None, it.next());\n\n// this requires a type hint\nlet it = (1..7).tuples::<(_, _, _)>();\nitertools::assert_equal(it, vec![(1, 2, 3), (4, 5, 6)]);\n\n// you can also specify the complete type\nuse itertools::Tuples;\nuse std::ops::Range;\n\nlet it: Tuples<Range<u32>, (u32, u32, u32)> = (1..7).tuples();\nitertools::assert_equal(it, vec![(1, 2, 3), (4, 5, 6)]);\n```\n\nSee also [`Tuples::into_buffer`].","links":{"`Tuples::into_buffer`":"0:2222:4291","Itertools::next_tuple":"0:2620:2355"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Tuples","id":"0:4129:1710","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"traits::HomogeneousTuple","id":"0:2196:1727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23773:16124":{"id":"2:23773:16124","crate_id":2,"name":"simd_max","span":null,"visibility":"default","docs":"Returns the lane-wise maximum with `other`.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3491:4745":{"id":"2:3491:4745","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3492:184","2:3493:962"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:889:3445":{"id":"0:889:3445","crate_id":0,"name":"is_right","span":{"filename":"src/either_or_both.rs","begin":[38,4],"end":[43,5]},"visibility":"public","docs":"If Right, return true otherwise, return false.\nExclusive version of [`has_right`](EitherOrBoth::has_right).","links":{"EitherOrBoth::has_right":"0:887:3439"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1839:1682":{"id":"0:1839:1682","crate_id":0,"name":"peek_nth","span":{"filename":"src/peek_nth.rs","begin":[23,0],"end":[31,1]},"visibility":"public","docs":"A drop-in replacement for [`std::iter::Peekable`] which adds a `peek_nth`\nmethod allowing the user to `peek` at a value several iterations forward\nwithout advancing the base iterator.\n\nThis differs from `multipeek` in that subsequent calls to `peek` or\n`peek_nth` will always return the same value until `next` is called\n(making `reset_peek` unnecessary).","links":{"`std::iter::Peekable`":"2:47034:3193"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"PeekNth","id":"0:3951:1683","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3525:4748":{"id":"2:3525:4748","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3527:359"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[135,4],"end":[135,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::pad_tail::PadUsing","name":"PadUsing","id":"0:3939:1685","glob":false}},"0:3701:1849":{"id":"0:3701:1849","crate_id":0,"name":"Item","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"X"}]}}},"b:2:2865-0:4388:1716":{"id":"b:2:2865-0:4388:1716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:3045:1644":{"id":"b:2:2865-0:3045:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleCombinations","id":"0:3045:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13760:15667":{"id":"2:13760:15667","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:13336:4565","prim@char":"1:15876:4439","str::split_whitespace":"2:13738:38008","`DoubleEndedIterator`":"2:8716:121","str::rsplit":"2:13766:57842"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49790:5394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:703:932":{"id":"0:703:932","crate_id":0,"name":"next","span":{"filename":"src/adaptors/mod.rs","begin":[570,4],"end":[591,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2130:1849":{"id":"0:2130:1849","crate_id":0,"name":"Item","span":{"filename":"src/sources.rs","begin":[52,4],"end":[52,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"A"}}},"a:2:9533:4792-0:1158:1732":{"id":"a:2:9533:4792-0:1158:1732","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Diff","id":"0:1158:1732","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3280:3319":{"id":"0:3280:3319","crate_id":0,"name":"Tuple9Combination","span":{"filename":"src/adaptors/mod.rs","begin":[829,0],"end":[829,77]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"0:2977:415":{"id":"0:2977:415","crate_id":0,"name":"clone","span":{"filename":"src/adaptors/mod.rs","begin":[88,9],"end":[88,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"InterleaveShortest","id":"0:2968:1631","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2862:98":{"id":"2:2862:98","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2864:3696"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:294":{"id":"0:294","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,29],"end":[174,38]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::kmerge_impl::kmerge_by","name":"kmerge_by","id":"0:1659:1733","glob":false}},"0:1344:2321":{"id":"0:1344:2321","crate_id":0,"name":"min","span":{"filename":"src/grouping_map.rs","begin":[313,4],"end":[317,5]},"visibility":"public","docs":"Groups elements from the `GroupingMap` source by key and finds the minimum of each group.\n \nIf several elements are equally minimum, the first element is picked.\n \nReturns a `HashMap` associating the key of each group with the minimum of that group's elements.\n \n```\nuse itertools::Itertools;\n \nlet lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()\n    .into_grouping_map_by(|&n| n % 3)\n    .min();\n \nassert_eq!(lookup[&0], 3);\nassert_eq!(lookup[&1], 1);\nassert_eq!(lookup[&2], 5);\nassert_eq!(lookup.len(), 3);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:883":{"id":"0:883","crate_id":0,"name":null,"span":{"filename":"src/either_or_both.rs","begin":[16,0],"end":[230,1]},"visibility":{"restricted":{"parent":"0:878:1747","path":"::either_or_both"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"EitherOrBoth","id":"0:3407:1748","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"items":["0:886:3437","0:887:3439","0:888:3442","0:889:3445","0:890:3447","0:891:2754","0:892:2755","0:893:3448","0:894:312","0:895:3454","0:896:3456","0:897:3459","0:900:3463","0:903:3467","0:908:3470","0:911:3473","0:914:982","0:915:3001","0:916:3498"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2618:2348":{"id":"0:2618:2348","crate_id":0,"name":"update","span":{"filename":"src/lib.rs","begin":[1678,4],"end":[1683,5]},"visibility":"default","docs":"Return an iterator adaptor that applies a mutating function\nto each element before yielding it.\n\n```\nuse itertools::Itertools;\n\nlet input = vec![vec![1], vec![3, 2, 1]];\nlet it = input.into_iter().update(|mut v| v.push(0));\nitertools::assert_equal(it, vec![vec![1, 0], vec![3, 2, 1, 0]]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["updater",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2202":{"id":"0:2202","crate_id":0,"name":null,"span":{"filename":"src/tuple_impl.rs","begin":[44,0],"end":[70,1]},"visibility":{"restricted":{"parent":"0:2180:1706","path":"::tuple_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"HomogeneousTuple","id":"0:2196:1727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleBuffer","id":"0:4119:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:2204:1849","0:2205:932","0:2206:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3519:4747":{"id":"2:3519:4747","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3521:184","2:3522:1252"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4036:667":{"id":"0:4036:667","crate_id":0,"name":"fmt","span":{"filename":"src/powerset.rs","begin":[31,4],"end":[31,43]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"::std::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3503:4743":{"id":"2:3503:4743","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3505:184","2:3506:360"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8718:5126":{"id":"2:8718:5126","crate_id":2,"name":"advance_back_by","span":null,"visibility":"default","docs":"Advances the iterator from the back by `n` elements.\n\n`advance_back_by` is the reverse version of [`advance_by`]. This method will\neagerly skip `n` elements starting from the back by calling [`next_back`] up\nto `n` times until [`None`] is encountered.\n\n`advance_back_by(n)` will return [`Ok(())`] if the iterator successfully advances by\n`n` elements, or [`Err(k)`] if [`None`] is encountered, where `k` is the number of\nelements the iterator is advanced by before running out of elements (i.e. the length\nof the iterator). Note that `k` is always less than `n`.\n\nCalling `advance_back_by(0)` can do meaningful work, for example [`Flatten`] can advance its\nouter iterator until it finds an inner iterator that is not empty, which then often\nallows it to return a more accurate `size_hint()` than in its initial state.\n\n[`advance_by`]: Iterator::advance_by\n[`Flatten`]: crate::iter::Flatten\n[`next_back`]: DoubleEndedIterator::next_back\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(iter_advance_by)]\n\nlet a = [3, 4, 5, 6];\nlet mut iter = a.iter();\n\nassert_eq!(iter.advance_back_by(2), Ok(()));\nassert_eq!(iter.next_back(), Some(&4));\nassert_eq!(iter.advance_back_by(0), Ok(()));\nassert_eq!(iter.advance_back_by(100), Err(1)); // only `&3` was skipped\n```\n\n[`Ok(())`]: Ok\n[`Err(k)`]: Err","links":{"Err":"2:47940:127","`None`":"2:47811:177","crate::iter::Flatten":"2:6716:4656","DoubleEndedIterator::next_back":"2:8717:3067","Iterator::advance_by":"2:8885:5134","Ok":"2:47937:178"},"attrs":["#[unstable(feature = \"iter_advance_by\", reason = \"recently added\", issue =\n\"77404\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:539":{"id":"0:539","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[11,20],"end":[11,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::map::map_into","name":"map_into","id":"0:494:2016","glob":false}},"0:3782":{"id":"0:3782","crate_id":0,"name":null,"span":{"filename":"src/format.rs","begin":[24,9],"end":[24,14]},"visibility":{"restricted":{"parent":"0:1247:678","path":"::format"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3785:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3657:2582":{"id":"0:3657:2582","crate_id":0,"name":"fold","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["accum",{"kind":"generic","inner":"Acc"}],["f",{"kind":"generic","inner":"Fold"}]],"output":{"kind":"generic","inner":"Acc"},"c_variadic":false},"generics":{"params":[{"name":"Acc","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Fold","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Fold"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Acc"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"generic","inner":"Acc"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3370:216-0:1476:1671":{"id":"a:2:3370:216-0:1476:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Groups","id":"0:1476:1671","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:4104-0:1527:1668":{"id":"b:2:4104-0:1527:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunks","id":"0:1527:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:3748:1653":{"id":"b:2:2865-0:3748:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CombinationsWithReplacement","id":"0:3748:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3411:4706-0:1198:1661":{"id":"a:2:3411:4706-0:1198:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FlattenOk","id":"0:1198:1661","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9533:4792-0:791:1632":{"id":"a:2:9533:4792-0:791:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterMapOk","id":"0:791:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:0:2854-0:4075:1701":{"id":"b:0:2854-0:4075:1701","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatCall","id":"0:4075:1701","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10513:1555":{"id":"2:10513:1555","crate_id":2,"name":"write_str","span":null,"visibility":"default","docs":"Writes a string slice into this writer, returning whether the write\nsucceeded.\n\nThis method can only succeed if the entire string slice was successfully\nwritten, and this method will not return until all data has been\nwritten or an error occurs.\n\n# Errors\n\nThis function will return an instance of [`Error`] on error.\n\nThe purpose of std::fmt::Error is to abort the formatting operation when the underlying\ndestination encounters some error preventing it from accepting more text; it should\ngenerally be propagated rather than handled, at least when implementing formatting traits.\n\n# Examples\n\n```\nuse std::fmt::{Error, Write};\n\nfn writer<W: Write>(f: &mut W, s: &str) -> Result<(), Error> {\n    f.write_str(s)\n}\n\nlet mut buf = String::new();\nwriter(&mut buf, \"hola\").unwrap();\nassert_eq!(&buf, \"hola\");\n```","links":{"`Error`":"2:48872:128"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48872:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3213-0:3397:1646":{"id":"b:2:3213-0:3397:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:316":{"id":"0:316","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[180,46],"end":[180,53]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::sources::iterate","name":"iterate","id":"0:2155:1741","glob":false}},"0:4853:3067":{"id":"0:4853:3067","crate_id":0,"name":"next_back","span":{"filename":"src/ziptuple.rs","begin":[133,0],"end":[133,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2438":{"id":"0:2438","crate_id":0,"name":null,"span":{"filename":"src/with_position.rs","begin":[49,0],"end":[59,1]},"visibility":{"restricted":{"parent":"0:2419:1717","path":"::with_position"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Position","id":"0:4617:1742","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:2440:3076"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2999":{"id":"0:2999","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[276,9],"end":[276,14]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Product","id":"0:2992:1634","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":["0:3002:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4424:1744":{"id":"0:4424:1744","crate_id":0,"name":"multiunzip","span":{"filename":"src/unziptuple.rs","begin":[70,0],"end":[70,40]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:3375:1633":{"id":"a:2:3411:4706-0:3375:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOk","id":"0:3375:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:871":{"id":"0:871","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[1132,0],"end":[1145,1]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:874:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13349:23285":{"id":"2:13349:23285","crate_id":2,"name":"into_searcher","span":null,"visibility":"default","docs":"Constructs the associated searcher from\n`self` and the `haystack` to search in.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1490:1670":{"id":"0:1490:1670","crate_id":0,"name":"Group","span":{"filename":"src/groupbylazy.rs","begin":[393,0],"end":[400,1]},"visibility":"public","docs":"An iterator for the elements in a single group.\n\nIterator element type is `I::Item`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"outlives":"'a"}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:1490:1670","a:2:9532:4793-0:1490:1670","a:2:3382:225-0:1490:1670","a:2:3370:216-0:1490:1670","a:2:3411:4706-0:1490:1670","b:0:2854-0:1490:1670","b:2:8676-0:1490:1670","b:2:4104-0:1490:1670","b:2:2865-0:1490:1670","b:2:3203-0:1490:1670","b:2:3207-0:1490:1670","b:2:3218-0:1490:1670","b:2:2868-0:1490:1670","b:2:3213-0:1490:1670","0:1498","0:1504"]}},"2:13734:57833":{"id":"2:13734:57833","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13733:57832"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2387":{"id":"0:2387","crate_id":0,"name":null,"span":{"filename":"src/unique_impl.rs","begin":[81,0],"end":[95,1]},"visibility":{"restricted":{"parent":"0:2350:1714","path":"::unique_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"2:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"generic","inner":"V"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:2391:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3522:1252":{"id":"2:3522:1252","crate_id":2,"name":"shr","span":null,"visibility":"default","docs":"Performs the `>>` operation.\n\n# Examples\n\n```\nassert_eq!(5u8 >> 1, 2);\nassert_eq!(2u8 >> 1, 1);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Shr","id":"2:3519:4747","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9533:4792-0:1513:1666":{"id":"a:2:9533:4792-0:1513:1666","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoChunks","id":"0:1513:1666","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:9533:4792-0:4048:1695":{"id":"a:2:9533:4792-0:4048:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8873:159":{"id":"2:8873:159","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8874:1849","2:8875:932","2:8876:5133","2:8879:1754","2:8880:502","2:8882:3247","2:8885:5134","2:8886:2437","2:8887:5135","2:8888:1831","2:8890:1801","2:8892:1672","2:8893:1864","2:8895:851","2:8898:2456","2:8905:3329","2:8907:3333","2:8910:2374","2:8911:3287","2:8912:5136","2:8914:5137","2:8916:5138","2:8919:1326","2:8920:3245","2:8921:5139","2:8925:5140","2:8928:1767","2:8929:3204","2:8930:5141","2:8932:3938","2:8933:2468","2:8935:2479","2:8938:5142","2:8940:3063","2:8950:5143","2:8965:5144","2:8967:2653","2:8971:3700","2:8980:2582","2:8983:3500","2:8985:5145","2:8988:283","2:8995:301","2:9002:2389","2:9009:2382","2:9018:5146","2:9028:1025","2:9035:5147","2:9042:3564","2:9043:2321","2:9044:3800","2:9056:2889","2:9063:3811","2:9075:2910","2:9082:2445","2:9083:5148","2:9088:5149","2:9091:3546","2:9094:4300","2:9095:5150","2:9097:2669","2:9099:2678","2:9101:422","2:9104:5151","2:9107:1008","2:9110:5152","2:9113:611","2:9116:5153","2:9119:917","2:9121:836","2:9123:801","2:9125:720","2:9127:703","2:9129:5154","2:9130:5155","2:9138:5156"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3370:216-0:1490:1670":{"id":"a:2:3370:216-0:1490:1670","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Group","id":"0:1490:1670","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:4104-0:3386:1645":{"id":"b:2:4104-0:3386:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Positions","id":"0:3386:1645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8742:802":{"id":"2:8742:802","crate_id":2,"name":"len","span":null,"visibility":"default","docs":"Returns the exact remaining length of the iterator.\n\nThe implementation ensures that the iterator will return exactly `len()`\nmore times a [`Some(T)`] value, before returning [`None`].\nThis method has a default implementation, so you usually should not\nimplement it directly. However, if you can provide a more efficient\nimplementation, you can do so. See the [trait-level] docs for an\nexample.\n\nThis function has the same safety guarantees as the\n[`Iterator::size_hint`] function.\n\n[trait-level]: ExactSizeIterator\n[`Some(T)`]: Some\n\n# Examples\n\nBasic usage:\n\n```\n// a finite range knows exactly how many times it will iterate\nlet mut range = 0..5;\n\nassert_eq!(5, range.len());\nlet _ = range.next();\nassert_eq!(4, range.len());\n```","links":{"Some":"2:47813:220","`Iterator::size_hint`":"2:8879:1754","`None`":"2:47811:177","ExactSizeIterator":"2:8741:1979"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3529:4749":{"id":"2:3529:4749","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3531:361"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23144:1243":{"id":"2:23144:1243","crate_id":2,"name":"saturating_add","span":null,"visibility":"default","docs":"Lanewise saturating add.\n\n# Examples\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{Simd, SimdUint};\nuse core::u32::MAX;\nlet x = Simd::from_array([2, 1, 0, MAX]);\nlet max = Simd::splat(MAX);\nlet unsat = x + max;\nlet sat = x.saturating_add(max);\nassert_eq!(unsat, Simd::from_array([1, 0, MAX, MAX - 1]));\nassert_eq!(sat, max);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["second",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3213-0:1917:1689":{"id":"b:2:3213-0:1917:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Permutations","id":"0:1917:1689","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:1651:1677":{"id":"b:2:2865-0:1651:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3449:3712":{"id":"2:3449:3712","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3451:184","2:3452:902"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3790":{"id":"0:3790","crate_id":0,"name":null,"span":{"filename":"src/format.rs","begin":[112,0],"end":[113,70]},"visibility":{"restricted":{"parent":"0:1247:678","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3793:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8933:2468":{"id":"2:8933:2468","crate_id":2,"name":"collect","span":null,"visibility":"default","docs":"Transforms an iterator into a collection.\n\n`collect()` can take anything iterable, and turn it into a relevant\ncollection. This is one of the more powerful methods in the standard\nlibrary, used in a variety of contexts.\n\nThe most basic pattern in which `collect()` is used is to turn one\ncollection into another. You take a collection, call [`iter`] on it,\ndo a bunch of transformations, and then `collect()` at the end.\n\n`collect()` can also create instances of types that are not typical\ncollections. For example, a [`String`] can be built from [`char`]s,\nand an iterator of [`Result<T, E>`][`Result`] items can be collected\ninto `Result<Collection<T>, E>`. See the examples below for more.\n\nBecause `collect()` is so general, it can cause problems with type\ninference. As such, `collect()` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which collection\nyou're trying to collect into.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nlet doubled: Vec<i32> = a.iter()\n                         .map(|&x| x * 2)\n                         .collect();\n\nassert_eq!(vec![2, 4, 6], doubled);\n```\n\nNote that we needed the `: Vec<i32>` on the left-hand side. This is because\nwe could collect into, for example, a [`VecDeque<T>`] instead:\n\n[`VecDeque<T>`]: ../../std/collections/struct.VecDeque.html\n\n```\nuse std::collections::VecDeque;\n\nlet a = [1, 2, 3];\n\nlet doubled: VecDeque<i32> = a.iter().map(|&x| x * 2).collect();\n\nassert_eq!(2, doubled[0]);\nassert_eq!(4, doubled[1]);\nassert_eq!(6, doubled[2]);\n```\n\nUsing the 'turbofish' instead of annotating `doubled`:\n\n```\nlet a = [1, 2, 3];\n\nlet doubled = a.iter().map(|x| x * 2).collect::<Vec<i32>>();\n\nassert_eq!(vec![2, 4, 6], doubled);\n```\n\nBecause `collect()` only cares about what you're collecting into, you can\nstill use a partial type hint, `_`, with the turbofish:\n\n```\nlet a = [1, 2, 3];\n\nlet doubled = a.iter().map(|x| x * 2).collect::<Vec<_>>();\n\nassert_eq!(vec![2, 4, 6], doubled);\n```\n\nUsing `collect()` to make a [`String`]:\n\n```\nlet chars = ['g', 'd', 'k', 'k', 'n'];\n\nlet hello: String = chars.iter()\n    .map(|&x| x as u8)\n    .map(|x| (x + 1) as char)\n    .collect();\n\nassert_eq!(\"hello\", hello);\n```\n\nIf you have a list of [`Result<T, E>`][`Result`]s, you can use `collect()` to\nsee if any of them failed:\n\n```\nlet results = [Ok(1), Err(\"nope\"), Ok(3), Err(\"bad\")];\n\nlet result: Result<Vec<_>, &str> = results.iter().cloned().collect();\n\n// gives us the first error\nassert_eq!(Err(\"nope\"), result);\n\nlet results = [Ok(1), Ok(3)];\n\nlet result: Result<Vec<_>, &str> = results.iter().cloned().collect();\n\n// gives us the list of answers\nassert_eq!(Ok(vec![1, 3]), result);\n```\n\n[`iter`]: Iterator::next\n[`String`]: ../../std/string/struct.String.html\n[`char`]: type@char","links":{"type@char":"1:15876:4439","`Result`":"2:47934:208","Iterator::next":"2:8875:932"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[must_use =\n\"if you really need to exhaust the iterator, consider `.for_each(drop)` instead\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"B"},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"FromIterator","id":"2:8668:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3336:3322":{"id":"0:3336:3322","crate_id":0,"name":"Tuple11Combination","span":{"filename":"src/adaptors/mod.rs","begin":[831,0],"end":[831,83]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"b:2:3207-0:3397:1646":{"id":"b:2:3207-0:3397:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Update","id":"0:3397:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:276:1726":{"id":"0:276:1726","crate_id":0,"name":"traits","span":{"filename":"src/lib.rs","begin":[163,0],"end":[163,14]},"visibility":"public","docs":"Traits helpful for using certain `Itertools` methods in generic contexts.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:277"],"is_stripped":false}},"0:860:1754":{"id":"0:860:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/adaptors/mod.rs","begin":[1106,4],"end":[1108,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:628:1849":{"id":"0:628:1849","crate_id":0,"name":"Item","span":{"filename":"src/adaptors/mod.rs","begin":[314,4],"end":[314,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"J"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]}}},"0:3027:3276":{"id":"0:3027:3276","crate_id":0,"name":"MergeLte","span":{"filename":"src/adaptors/mod.rs","begin":[474,0],"end":[474,20]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":[]}},"2:13803:61722":{"id":"2:13803:61722","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5435:8053":{"id":"1:5435:8053","crate_id":1,"name":"from_bytes","span":null,"visibility":"default","docs":"Creates an [`OsStr`] from a byte slice.\n\nSee the module documentation for an example.","links":{"`OsStr`":"1:2654:182"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["slice",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2497:932":{"id":"0:2497:932","crate_id":0,"name":"next","span":{"filename":"src/zip_longest.rs","begin":[40,4],"end":[47,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4104-0:4657:1722":{"id":"b:2:4104-0:4657:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipLongest","id":"0:4657:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3407:1748":{"id":"0:3407:1748","crate_id":0,"name":"EitherOrBoth","span":{"filename":"src/either_or_both.rs","begin":[7,0],"end":[14,1]},"visibility":"public","docs":"Value that either holds a single A or B, or both.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:3410:3433","0:3414:161","0:3417:210"],"impls":["0:883","0:919","a:2:9533:4792-0:3407:1748","a:2:9532:4793-0:3407:1748","a:2:3382:225-0:3407:1748","a:2:3370:216-0:3407:1748","a:2:3411:4706-0:3407:1748","b:2:4104-0:3407:1748","b:2:2865-0:3407:1748","b:2:3203-0:3407:1748","b:2:3207-0:3407:1748","b:2:3218-0:3407:1748","b:2:2868-0:3407:1748","b:2:3213-0:3407:1748","b:5:848-0:3407:1748","0:3420","0:3424","0:3427","0:3431","0:3434","0:3438","0:3443","0:923"]}},"0:1917:1689":{"id":"0:1917:1689","crate_id":0,"name":"Permutations","span":{"filename":"src/permutations.rs","begin":[13,0],"end":[16,1]},"visibility":"public","docs":"An iterator adaptor that iterates through all the `k`-permutations of the\nelements from an iterator.\n\nSee [`.permutations()`](crate::Itertools::permutations) for\nmore information.","links":{"crate::Itertools::permutations":"0:2611:1688"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:9533:4792-0:1917:1689","a:2:9532:4793-0:1917:1689","a:2:3382:225-0:1917:1689","a:2:3370:216-0:1917:1689","a:2:3411:4706-0:1917:1689","b:0:2854-0:1917:1689","b:2:8676-0:1917:1689","b:2:4104-0:1917:1689","b:2:2865-0:1917:1689","b:2:3203-0:1917:1689","b:2:3207-0:1917:1689","b:2:3218-0:1917:1689","b:2:2868-0:1917:1689","b:2:3213-0:1917:1689","b:5:848-0:1917:1689","0:1921","0:1929","0:1933"]}},"0:1163:1564":{"id":"0:1163:1564","crate_id":0,"name":"0","span":{"filename":"src/diff.rs","begin":[21,18],"end":[21,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:2611:1688":{"id":"0:2611:1688","crate_id":0,"name":"permutations","span":{"filename":"src/lib.rs","begin":[1556,4],"end":[1561,5]},"visibility":"default","docs":"Return an iterator adaptor that iterates over all k-permutations of the\nelements from an iterator.\n\nIterator element type is `Vec<Self::Item>` with length `k`. The iterator\nproduces a new Vec per iteration, and clones the iterator elements.\n\nIf `k` is greater than the length of the input iterator, the resultant\niterator adaptor will be empty.\n\n```\nuse itertools::Itertools;\n\nlet perms = (5..8).permutations(2);\nitertools::assert_equal(perms, vec![\n    vec![5, 6],\n    vec![5, 7],\n    vec![6, 5],\n    vec![6, 7],\n    vec![7, 5],\n    vec![7, 6],\n]);\n```\n\nNote: Permutations does not take into account the equality of the iterated values.\n\n```\nuse itertools::Itertools;\n\nlet it = vec![2, 2].into_iter().permutations(2);\nitertools::assert_equal(it, vec![\n    vec![2, 2], // Note: these are the same\n    vec![2, 2], // Note: these are the same\n]);\n```\n\nNote: The source iterator is collected lazily, and will not be\nre-iterated if the permutations adaptor is completed and re-iterated.","links":{},"attrs":["#[cfg(feature = \"use_alloc\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["k",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Permutations","id":"0:1917:1689","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3203-0:1476:1671":{"id":"b:2:3203-0:1476:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Groups","id":"0:1476:1671","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4104-0:4670:1724":{"id":"b:2:4104-0:4670:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4102:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4106:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3203-0:1651:1677":{"id":"b:2:3203-0:1651:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:4904:1849":{"id":"2:4904:1849","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":"The type of items yielded by the async iterator.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:2854":{"id":"0:2854","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"T"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:8676-0:2982:1635":{"id":"b:2:8676-0:2982:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:2864:3696":{"id":"2:2864:3696","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":"Mutably borrows from an owned value.\n\n# Examples\n\n```\nuse std::borrow::BorrowMut;\n\nfn check<T: BorrowMut<[i32]>>(mut v: T) {\n    assert_eq!(&mut [1, 2, 3], v.borrow_mut());\n}\n\nlet v = vec![1, 2, 3];\n\ncheck(v);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Borrowed"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3570:2582":{"id":"0:3570:2582","crate_id":0,"name":"fold","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["accum",{"kind":"generic","inner":"Acc"}],["f",{"kind":"generic","inner":"Fold"}]],"output":{"kind":"generic","inner":"Acc"},"c_variadic":false},"generics":{"params":[{"name":"Acc","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Fold","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Fold"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Acc"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}],"output":{"kind":"generic","inner":"Acc"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4682":{"id":"0:4682","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[127,0],"end":[127,17]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]","#[allow(unused_assignments)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"}]}}],"bindings":[]}}}},"items":["0:4684:1849","0:4685:932","0:4686:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9533:4792-0:3017:1648":{"id":"a:2:9533:4792-0:3017:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9533:4792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Step","id":"0:3017:1648","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4718:1849":{"id":"0:4718:1849","crate_id":0,"name":"Item","span":{"filename":"src/ziptuple.rs","begin":[129,0],"end":[129,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"C"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]}}},"0:611:1849":{"id":"0:611:1849","crate_id":0,"name":"Item","span":{"filename":"src/adaptors/mod.rs","begin":[218,4],"end":[218,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:3446:667":{"id":"0:3446:667","crate_id":0,"name":"fmt","span":{"filename":"src/either_or_both.rs","begin":[6,37],"end":[6,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10511:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3382:225-0:3766:1659":{"id":"a:2:3382:225-0:3766:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatWith","id":"0:3766:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:5124:611":{"id":"0:5124:611","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[3761,33],"end":[3761,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:1883:1687":{"id":"b:2:2865-0:1883:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PeekingTakeWhile","id":"0:1883:1687","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2867:1616"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4783:3067":{"id":"0:4783:3067","crate_id":0,"name":"next_back","span":{"filename":"src/ziptuple.rs","begin":[131,0],"end":[131,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1101:1849":{"id":"0:1101:1849","crate_id":0,"name":"Item","span":{"filename":"src/combinations_with_replacement.rs","begin":[62,4],"end":[62,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7898:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8224:4593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"b:5:848-0:3904:1735":{"id":"b:5:848-0:3904:1735","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4129:1710":{"id":"0:4129:1710","crate_id":0,"name":"Tuples","span":{"filename":"src/tuple_impl.rs","begin":[82,0],"end":[88,1]},"visibility":"public","docs":"An iterator that groups the items in tuples of a specific size.\n\nSee [`.tuples()`](crate::Itertools::tuples) for more information.","links":{"crate::Itertools::tuples":"0:2543:1993"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"HomogeneousTuple","id":"0:2196:1727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["0:2219","a:2:9533:4792-0:4129:1710","a:2:9532:4793-0:4129:1710","a:2:3382:225-0:4129:1710","a:2:3370:216-0:4129:1710","a:2:3411:4706-0:4129:1710","b:0:2854-0:4129:1710","b:2:8676-0:4129:1710","b:2:4104-0:4129:1710","b:2:2865-0:4129:1710","b:2:3203-0:4129:1710","b:2:3207-0:4129:1710","b:2:3218-0:4129:1710","b:2:2868-0:4129:1710","b:2:3213-0:4129:1710","b:5:848-0:4129:1710","0:4134","0:4138","0:2214"]}},"0:1172:1564":{"id":"0:1172:1564","crate_id":0,"name":"0","span":{"filename":"src/diff.rs","begin":[25,11],"end":[25,16]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"a:2:3411:4706-0:4075:1701":{"id":"a:2:3411:4706-0:4075:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatCall","id":"0:4075:1701","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2868-0:4388:1716":{"id":"b:2:2868-0:4388:1716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10824:22125":{"id":"2:10824:22125","crate_id":2,"name":"write_isize","span":null,"visibility":"default","docs":"Writes a single `isize` into this hasher.","links":{},"attrs":["#[stable(feature = \"hasher_write\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"isize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23057:16108":{"id":"2:23057:16108","crate_id":2,"name":"to_bits","span":null,"visibility":"default","docs":"Raw transmutation to an unsigned integer vector type with the\nsame size and number of lanes.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23053:7076","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"5:5919:184":{"id":"5:5919:184","crate_id":5,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after concatenation","links":{},"attrs":["#[unstable(feature = \"slice_concat_trait\", issue = \"27747\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"b:2:8676-0:3036:1642":{"id":"b:2:8676-0:3036:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WhileSome","id":"0:3036:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"1:7595:6737":{"id":"1:7595:6737","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7596:15893"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2868-0:791:1632":{"id":"b:2:2868-0:791:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterMapOk","id":"0:791:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23116:16121":{"id":"2:23116:16121","crate_id":2,"name":"signum","span":null,"visibility":"default","docs":"Returns numbers representing the sign of each lane.\n* `0` if the number is zero\n* `1` if the number is positive\n* `-1` if the number is negative","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3207-0:1651:1677":{"id":"b:2:3207-0:1651:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8876:5133":{"id":"2:8876:5133","crate_id":2,"name":"next_chunk","span":null,"visibility":"default","docs":"Advances the iterator and returns an array containing the next `N` values.\n\nIf there are not enough elements to fill the array then `Err` is returned\ncontaining an iterator over the remaining elements.\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(iter_next_chunk)]\n\nlet mut iter = \"lorem\".chars();\n\nassert_eq!(iter.next_chunk().unwrap(), ['l', 'o']);              // N is inferred as 2\nassert_eq!(iter.next_chunk().unwrap(), ['r', 'e', 'm']);         // N is inferred as 3\nassert_eq!(iter.next_chunk::<4>().unwrap_err().as_slice(), &[]); // N is explicitly 4\n```\n\nSplit a string and get the first three items.\n\n```\n#![feature(iter_next_chunk)]\n\nlet quote = \"not all those who wander are lost\";\nlet [first, second, third] = quote.split_whitespace().next_chunk().unwrap();\nassert_eq!(first, \"not\");\nassert_eq!(second, \"all\");\nassert_eq!(third, \"those\");\n```","links":{},"attrs":["#[unstable(feature = \"iter_next_chunk\", reason = \"recently added\", issue =\n\"98326\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"len":"N"}}},{"type":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"2:4496:1621","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"N","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"N","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4416:6576":{"id":"1:4416:6576","crate_id":1,"name":"read_to_string","span":null,"visibility":"default","docs":"Read all bytes until EOF in this source, appending them to `buf`.\n\nIf successful, this function returns the number of bytes which were read\nand appended to `buf`.\n\n# Errors\n\nIf the data in this stream is *not* valid UTF-8 then an error is\nreturned and `buf` is unchanged.\n\nSee [`read_to_end`] for other error semantics.\n\n[`read_to_end`]: Read::read_to_end\n\n# Examples\n\n[`File`]s implement `Read`:\n\n[`File`]: crate::fs::File\n\n```no_run\nuse std::io;\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() -> io::Result<()> {\n    let mut f = File::open(\"foo.txt\")?;\n    let mut buffer = String::new();\n\n    f.read_to_string(&mut buffer)?;\n    Ok(())\n}\n```\n\n(See also the [`std::fs::read_to_string`] convenience function for\nreading from a file.)\n\n[`std::fs::read_to_string`]: crate::fs::read_to_string","links":{"crate::fs::read_to_string":"1:2917:6576","Read::read_to_end":"1:4415:15593","crate::fs::File":"1:2909:129"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8479:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2788:2902":{"id":"0:2788:2902","crate_id":0,"name":"position_max_by","span":{"filename":"src/lib.rs","begin":[3243,4],"end":[3249,5]},"visibility":"default","docs":"Return the position of the maximum element in the iterator, as\ndetermined by the specified comparison function.\n\nIf several elements are equally maximum, the position of the\nlast of them is returned.\n\n# Examples\n\n```\nuse itertools::Itertools;\n\nlet a: [i32; 0] = [];\nassert_eq!(a.iter().position_max_by(|x, y| x.cmp(y)), None);\n\nlet a = [-3_i32, 0, 1, 5, -10];\nassert_eq!(a.iter().position_max_by(|x, y| x.cmp(y)), Some(3));\n\nlet a = [1_i32, 1, -1, -1];\nassert_eq!(a.iter().position_max_by(|x, y| x.cmp(y)), Some(1));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["compare",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8741:1979":{"id":"2:8741:1979","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8742:802","2:8743:3424"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3977:4024":{"id":"0:3977:4024","crate_id":0,"name":"peeking_next","span":{"filename":"src/peeking_take_while.rs","begin":[143,0],"end":[143,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["accept",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5517:8505":{"id":"1:5517:8505","crate_id":1,"name":"mode","span":null,"visibility":"default","docs":"Sets the mode bits that a new file will be created with.\n\nIf a new file is created as part of an `OpenOptions::open` call then this\nspecified `mode` will be used as the permission bits for the new file.\nIf no `mode` is set, the default of `0o666` will be used.\nThe operating system masks out bits with the system's `umask`, to produce\nthe final permissions.\n\n# Examples\n\n```no_run\nuse std::fs::OpenOptions;\nuse std::os::unix::fs::OpenOptionsExt;\n\n# fn main() {\nlet mut options = OpenOptions::new();\noptions.mode(0o644); // Give read/write for owner and read for others.\nlet file = options.open(\"foo.txt\");\n# }\n```","links":{},"attrs":["#[stable(feature = \"fs_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mode",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:5:848-0:3036:1642":{"id":"b:5:848-0:3036:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WhileSome","id":"0:3036:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1580":{"id":"0:1580","crate_id":0,"name":null,"span":{"filename":"src/intersperse.rs","begin":[70,0],"end":[113,1]},"visibility":{"restricted":{"parent":"0:1552:1672","path":"::intersperse"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"ElemF","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"ElemF"},"bounds":[{"trait_bound":{"trait":{"name":"IntersperseElement","id":"0:1563:3926","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"0:3861:1674","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"ElemF"}}],"bindings":[]}}}},"items":["0:1583:1849","0:1584:932","0:1585:1754","0:1586:2582"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3285-0:3757:1657":{"id":"b:2:3285-0:3757:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:3278:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:4153:7059","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3287:5309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"2:8743:3424":{"id":"2:8743:3424","crate_id":2,"name":"is_empty","span":null,"visibility":"default","docs":"Returns `true` if the iterator is empty.\n\nThis method has a default implementation using\n[`ExactSizeIterator::len()`], so you don't need to implement it yourself.\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(exact_size_is_empty)]\n\nlet mut one_element = std::iter::once(0);\nassert!(!one_element.is_empty());\n\nassert_eq!(one_element.next(), Some(0));\nassert!(one_element.is_empty());\n\nassert_eq!(one_element.next(), None);\n```","links":{"`ExactSizeIterator::len()`":"2:8742:802"},"attrs":["#[unstable(feature = \"exact_size_is_empty\", issue = \"35428\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1003:3546":{"id":"0:1003:3546","crate_id":0,"name":"cloned","span":{"filename":"src/free.rs","begin":[164,0],"end":[169,1]},"visibility":"public","docs":"Create an iterator that clones each element from &T to T\n\n[`IntoIterator`] enabled version of [`Iterator::cloned`].\n\n```\nuse itertools::cloned;\n\nassert_eq!(cloned(b\"abc\").next(), Some(b'a'));\n```","links":{"`Iterator::cloned`":"2:9091:3546","`IntoIterator`":"2:8672:152"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["iterable",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"iter::Cloned","id":"2:46917:3547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8672:152","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2205:932":{"id":"0:2205:932","crate_id":0,"name":"next","span":{"filename":"src/tuple_impl.rs","begin":[49,4],"end":[57,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:138":{"id":"0:138","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[120,4],"end":[120,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::exactly_one_err::ExactlyOneError","name":"ExactlyOneError","id":"0:3757:1657","glob":false}},"0:887:3439":{"id":"0:887:3439","crate_id":0,"name":"has_right","span":{"filename":"src/either_or_both.rs","begin":[23,4],"end":[25,5]},"visibility":"public","docs":"If `Right`, or `Both`, return true, otherwise, return false.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3382:225-0:4388:1716":{"id":"a:2:3382:225-0:4388:1716","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"UniqueBy","id":"0:4388:1716","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"V"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2061:1754":{"id":"0:2061:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/rciter_impl.rs","begin":[67,4],"end":[72,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2153:932":{"id":"0:2153:932","crate_id":0,"name":"next","span":{"filename":"src/sources.rs","begin":[158,4],"end":[161,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3203-0:1981:1693":{"id":"b:2:3203-0:1981:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Powerset","id":"0:1981:1693","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2922:611":{"id":"2:2922:611","crate_id":2,"name":"eq","span":null,"visibility":"default","docs":"This method tests for `self` and `other` values to be equal, and is used\nby `==`.","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Rhs"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3213-0:3375:1633":{"id":"b:2:3213-0:3375:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterOk","id":"0:3375:1633","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3818":{"id":"0:3818","crate_id":0,"name":null,"span":{"filename":"src/format.rs","begin":[112,0],"end":[113,70]},"visibility":{"restricted":{"parent":"0:1247:678","path":"::format"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Pointer","id":"2:10579:192","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Pointer","id":"2:10579:192","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Format","id":"0:3777:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3821:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4768:1849":{"id":"0:4768:1849","crate_id":0,"name":"Item","span":{"filename":"src/ziptuple.rs","begin":[131,0],"end":[131,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"B"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"C"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"D"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"E"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]}}},"a:2:3382:225-0:5099:2652":{"id":"a:2:3382:225-0:5099:2652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FoldWhile","id":"0:5099:2652","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:4421:3938":{"id":"1:4421:3938","crate_id":1,"name":"by_ref","span":null,"visibility":"default","docs":"Creates a \"by reference\" adaptor for this instance of `Read`.\n\nThe returned adapter also implements `Read` and will simply borrow this\ncurrent reader.\n\n# Examples\n\n[`File`]s implement `Read`:\n\n[`File`]: crate::fs::File\n\n```no_run\nuse std::io;\nuse std::io::Read;\nuse std::fs::File;\n\nfn main() -> io::Result<()> {\n    let mut f = File::open(\"foo.txt\")?;\n    let mut buffer = Vec::new();\n    let mut other_buffer = Vec::new();\n\n    {\n        let reference = f.by_ref();\n\n        // read at most 5 bytes\n        reference.take(5).read_to_end(&mut buffer)?;\n\n    } // drop our &mut reference so we can use f again\n\n    // original file still usable, read the rest\n    f.read_to_end(&mut other_buffer)?;\n    Ok(())\n}\n```","links":{"crate::fs::File":"1:2909:129"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2000":{"id":"0:2000","crate_id":0,"name":null,"span":{"filename":"src/process_results_impl.rs","begin":[14,0],"end":[50,1]},"visibility":{"restricted":{"parent":"0:1999:1690","path":"::process_results_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ProcessResults","id":"0:4037:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:2005:1849","0:2006:932","0:2007:1754","0:2008:2582"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:287":{"id":"0:287","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[171,0],"end":[171,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::diff::diff_with","name":"diff_with","id":"0:1174:1731","glob":false}},"0:2085":{"id":"0:2085","crate_id":0,"name":null,"span":{"filename":"src/repeatn.rs","begin":[44,0],"end":[51,1]},"visibility":{"restricted":{"parent":"0:2074:1698","path":"::repeatn"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"items":["0:2087:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2957:422":{"id":"2:2957:422","crate_id":2,"name":"cmp","span":null,"visibility":"default","docs":"This method returns an [`Ordering`] between `self` and `other`.\n\nBy convention, `self.cmp(&other)` returns the ordering matching the expression\n`self <operator> other` if true.\n\n# Examples\n\n```\nuse std::cmp::Ordering;\n\nassert_eq!(5.cmp(&10), Ordering::Less);\nassert_eq!(10.cmp(&5), Ordering::Greater);\nassert_eq!(5.cmp(&5), Ordering::Equal);\n```","links":{"`Ordering`":"2:37932:181"},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4142:1708":{"id":"0:4142:1708","crate_id":0,"name":"TupleWindows","span":{"filename":"src/tuple_impl.rs","begin":[138,0],"end":[144,1]},"visibility":"public","docs":"An iterator over all contiguous windows that produces tuples of a specific size.\n\nSee [`.tuple_windows()`](crate::Itertools::tuple_windows) for more\ninformation.","links":{"crate::Itertools::tuple_windows":"0:2539:1966"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"HomogeneousTuple","id":"0:2196:1727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:4142:1708","a:2:9532:4793-0:4142:1708","a:2:3382:225-0:4142:1708","a:2:3370:216-0:4142:1708","a:2:3411:4706-0:4142:1708","b:0:2854-0:4142:1708","b:2:8676-0:4142:1708","b:2:4104-0:4142:1708","b:2:2865-0:4142:1708","b:2:3203-0:4142:1708","b:2:3207-0:4142:1708","b:2:3218-0:4142:1708","b:2:2868-0:4142:1708","b:2:3213-0:4142:1708","b:5:848-0:4142:1708","0:4147","0:4151","0:2229","0:2234"]}},"2:2975:703":{"id":"2:2975:703","crate_id":2,"name":"ge","span":null,"visibility":"default","docs":"This method tests greater than or equal to (for `self` and `other`) and is used by the `>=`\noperator.\n\n# Examples\n\n```\nlet result = 2.0 >= 1.0;\nassert_eq!(result, true);\n\nlet result = 2.0 >= 2.0;\nassert_eq!(result, true);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Rhs"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1868:1736":{"id":"0:1868:1736","crate_id":0,"name":"PeekingNext","span":{"filename":"src/peeking_take_while.rs","begin":[14,0],"end":[20,1]},"visibility":"public","docs":"An iterator that allows peeking at an element before deciding to accept it.\n\nSee [`.peeking_take_while()`](crate::Itertools::peeking_take_while)\nfor more information.\n\nThis is implemented by peeking adaptors like peekable and put back,\nbut also by a few iterators that can be peeked natively, like the slice’s\nby reference iterator (`std::slice::Iter`).","links":{"crate::Itertools::peeking_take_while":"0:2601:1686"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1869:4024"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:1781","0:1853","0:1871","0:1875","0:1879","0:3962","0:3967","0:3971","0:3975","0:3979","0:3984","0:3989","0:3993","0:3998","0:4003"]}},"0:4681:688":{"id":"0:4681:688","crate_id":0,"name":"from","span":{"filename":"src/ziptuple.rs","begin":[127,0],"end":[127,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"tuple","inner":[{"kind":"generic","inner":"A"}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3596:550":{"id":"2:3596:550","crate_id":2,"name":"deref","span":null,"visibility":"default","docs":"Dereferences the value.","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"deref_method\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Deref","id":"2:3594:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1099":{"id":"0:1099","crate_id":0,"name":null,"span":{"filename":"src/combinations_with_replacement.rs","begin":[57,0],"end":[103,1]},"visibility":{"restricted":{"parent":"0:1078:1652","path":"::combinations_with_replacement"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_for_each","__iterator_get_unchecked","by_ref","cmp_by","try_reduce","scan","gt","next_chunk","rev","lt","filter","position","reduce","cmp","min_by_key","partial_cmp_by","try_fold","try_find","peekable","flat_map","eq","advance_by","intersperse","ge","count","product","partial_cmp","take","any","chain","eq_by","min_by","rposition","max_by_key","all","inspect","step_by","cycle","zip","enumerate","ne","le","partition","skip","is_sorted","unzip","collect_into","map","skip_while","fold","fuse","last","try_collect","max","is_sorted_by","copied","cloned","size_hint","partition_in_place","take_while","find_map","min","intersperse_with","nth","filter_map","sum","flatten","collect","is_sorted_by_key","array_chunks","for_each","is_partitioned","map_while","find","max_by"],"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CombinationsWithReplacement","id":"0:3748:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1101:1849","0:1102:932"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10801:722":{"id":"2:10801:722","crate_id":2,"name":"hash","span":null,"visibility":"default","docs":"Feeds this value into the given [`Hasher`].\n\n# Examples\n\n```\nuse std::collections::hash_map::DefaultHasher;\nuse std::hash::{Hash, Hasher};\n\nlet mut hasher = DefaultHasher::new();\n7920.hash(&mut hasher);\nprintln!(\"Hash is {:x}!\", hasher.finish());\n```","links":{"`Hasher`":"2:10810:147"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"Hasher","id":"2:10810:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1355:2878":{"id":"0:1355:2878","crate_id":0,"name":"minmax_by","span":{"filename":"src/grouping_map.rs","begin":[429,4],"end":[454,5]},"visibility":"public","docs":"Groups elements from the `GroupingMap` source by key and find the maximum and minimum of\neach group with respect to the specified comparison function.\n \nIf several elements are equally maximum, the last element is picked.\nIf several elements are equally minimum, the first element is picked.\n \nIt has the same differences from the non-grouping version as `minmax`.\n \nReturns a `HashMap` associating the key of each group with the minimum and maximum of that group's elements.\n \n```\nuse itertools::Itertools;\nuse itertools::MinMaxResult::{OneElement, MinMax};\n \nlet lookup = vec![1, 3, 4, 5, 7, 9, 12].into_iter()\n    .into_grouping_map_by(|&n| n % 3)\n    .minmax_by(|_key, x, y| y.cmp(x));\n \nassert_eq!(lookup[&0], MinMax(12, 3));\nassert_eq!(lookup[&1], MinMax(7, 1));\nassert_eq!(lookup[&2], OneElement(5));\nassert_eq!(lookup.len(), 3);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["compare",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"resolved_path","inner":{"name":"MinMaxResult","id":"0:3904:1735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"V"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"K"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"V"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"V"}}}],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37932:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9532:4793-0:2982:1635":{"id":"a:2:9532:4793-0:2982:1635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PutBack","id":"0:2982:1635","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3084:3311":{"id":"0:3084:3311","crate_id":0,"name":"Tuple2Combination","span":{"filename":"src/adaptors/mod.rs","begin":[822,0],"end":[822,63]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"2:10815:22116":{"id":"2:10815:22116","crate_id":2,"name":"write_u32","span":null,"visibility":"default","docs":"Writes a single `u32` into this hasher.","links":{},"attrs":["#[stable(feature = \"hasher_write\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:1537:1667":{"id":"b:2:3213-0:1537:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunk","id":"0:1537:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3382:225-0:4129:1710":{"id":"a:2:3382:225-0:4129:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Buffer","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TupleCollect","id":"0:2245:1980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Tuples","id":"0:4129:1710","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13733:57832":{"id":"2:13733:57832","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:13734:57833"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2234":{"id":"0:2234","crate_id":0,"name":null,"span":{"filename":"src/tuple_impl.rs","begin":[191,0],"end":[195,2]},"visibility":{"restricted":{"parent":"0:2180:1706","path":"::tuple_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"HomogeneousTuple","id":"0:2196:1727","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:2245:1980","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleWindows","id":"0:4142:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:586":{"id":"0:586","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[76,0],"end":[79,2]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"J"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Interleave","id":"0:2954:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3203-0:1198:1661":{"id":"b:2:3203-0:1198:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FlattenOk","id":"0:1198:1661","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2861:1616":{"id":"2:2861:1616","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":"Immutably borrows from an owned value.\n\n# Examples\n\n```\nuse std::borrow::Borrow;\n\nfn check<T: Borrow<str>>(s: T) {\n    assert_eq!(\"Hello\", s.borrow());\n}\n\nlet s = \"Hello\".to_string();\n\ncheck(s);\n\nlet s = \"Hello\";\n\ncheck(s);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Borrowed"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:5:848-0:4119:1707":{"id":"b:5:848-0:4119:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleBuffer","id":"0:4119:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:850:5158","5:851:5159","5:852:5160"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3218-0:791:1632":{"id":"b:2:3218-0:791:1632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FilterMapOk","id":"0:791:1632","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2131:932":{"id":"0:2131:932","crate_id":0,"name":"next","span":{"filename":"src/sources.rs","begin":[55,4],"end":[57,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[151,45],"end":[151,57]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::tuple_impl::TupleWindows","name":"TupleWindows","id":"0:4142:1708","glob":false}},"2:3279:4566":{"id":"2:3279:4566","crate_id":2,"name":"source","span":null,"visibility":"default","docs":"The lower-level source of this error, if any.\n\n# Examples\n\n```\nuse std::error::Error;\nuse std::fmt;\n\n#[derive(Debug)]\nstruct SuperError {\n    source: SuperErrorSideKick,\n}\n\nimpl fmt::Display for SuperError {\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n        write!(f, \"SuperError is here!\")\n    }\n}\n\nimpl Error for SuperError {\n    fn source(&self) -> Option<&(dyn Error + 'static)> {\n        Some(&self.source)\n    }\n}\n\n#[derive(Debug)]\nstruct SuperErrorSideKick;\n\nimpl fmt::Display for SuperErrorSideKick {\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n        write!(f, \"SuperErrorSideKick is here!\")\n    }\n}\n\nimpl Error for SuperErrorSideKick {}\n\nfn get_super_error() -> Result<(), SuperError> {\n    Err(SuperError { source: SuperErrorSideKick })\n}\n\nfn main() {\n    match get_super_error() {\n        Err(e) => {\n            println!(\"Error: {e}\");\n            println!(\"Caused by: {}\", e.source().unwrap());\n        }\n        _ => println!(\"No error\"),\n    }\n}\n```","links":{},"attrs":["#[stable(feature = \"error_source\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Error","id":"2:3278:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4706-0:3939:1685":{"id":"a:2:3411:4706-0:3939:1685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"PadUsing","id":"0:3939:1685","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4057:415":{"id":"0:4057:415","crate_id":0,"name":"clone","span":{"filename":"src/put_back_n_impl.rs","begin":[9,16],"end":[9,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"PutBackN","id":"0:4048:1695","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5071:1754":{"id":"0:5071:1754","crate_id":0,"name":"size_hint","span":{"filename":"src/ziptuple.rs","begin":[138,0],"end":[138,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2928:1649":{"id":"0:2928:1649","crate_id":0,"name":"MultiProduct","span":{"filename":"src/adaptors/multi_product.rs","begin":[17,0],"end":[19,25]},"visibility":"public","docs":"An iterator adaptor that iterates over the cartesian product of\nmultiple iterators of type `I`.\n\nAn iterator element type is `Vec<I>`.\n\nSee [`.multi_cartesian_product()`](crate::Itertools::multi_cartesian_product)\nfor more information.","links":{"crate::Itertools::multi_cartesian_product":"0:2584:2134"},"attrs":["#[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]"],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["a:2:9533:4792-0:2928:1649","a:2:9532:4793-0:2928:1649","a:2:3382:225-0:2928:1649","a:2:3370:216-0:2928:1649","a:2:3411:4706-0:2928:1649","b:0:2854-0:2928:1649","b:2:8676-0:2928:1649","b:2:4104-0:2928:1649","b:2:2865-0:2928:1649","b:2:3203-0:2928:1649","b:2:3207-0:2928:1649","b:2:3218-0:2928:1649","b:2:2868-0:2928:1649","b:2:3213-0:2928:1649","b:5:848-0:2928:1649","0:2932","0:507","0:525"]}},"b:2:8676-0:1981:1693":{"id":"b:2:8676-0:1981:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Powerset","id":"0:1981:1693","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:8678:1849","2:8679:1621","2:8680:777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:3203-0:3036:1642":{"id":"b:2:3203-0:3036:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WhileSome","id":"0:3036:1642","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:80":{"id":"0:80","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[97,8],"end":[97,15]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::adaptors::Product","name":"Product","id":"0:2992:1634","glob":false}},"a:2:3382:225-0:4155:1709":{"id":"a:2:3382:225-0:4155:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CircularTupleWindows","id":"0:4155:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2925:125":{"id":"2:2925:125","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2920:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3753":{"id":"0:3753","crate_id":0,"name":null,"span":{"filename":"src/combinations_with_replacement.rs","begin":[11,9],"end":[11,14]},"visibility":{"restricted":{"parent":"0:1078:1652","path":"::combinations_with_replacement"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CombinationsWithReplacement","id":"0:3748:1653","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3755:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3702:932":{"id":"0:3702:932","crate_id":0,"name":"next","span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:3757:1657":{"id":"b:2:2868-0:3757:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExactlyOneError","id":"0:3757:1657","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:3696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6334:23442":{"id":"1:6334:23442","crate_id":1,"name":"into_pthread_t","span":null,"visibility":"default","docs":"Consumes the thread, returning the raw pthread_t\n\nThis function **transfers ownership** of the underlying pthread_t to\nthe caller. Callers are then the unique owners of the pthread_t and\nmust either detach or join the pthread_t once it's no longer needed.","links":{},"attrs":["#[stable(feature = \"thread_extensions\", since = \"1.9.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1664":{"id":"0:1664","crate_id":0,"name":null,"span":{"filename":"src/kmerge_impl.rs","begin":[187,0],"end":[193,1]},"visibility":{"restricted":{"parent":"0:1604:1675","path":"::kmerge_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:3890:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4679":{"id":"0:4679","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[127,0],"end":[127,17]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"}]}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"A"},"trait":{"name":"","id":"2:8672:152","args":null}}}]}}],"bindings":[]}}}},"items":["0:4681:688"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9532:4793-0:3766:1659":{"id":"a:2:9532:4793-0:3766:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9532:4793","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatWith","id":"0:3766:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13832:15398":{"id":"2:13832:15398","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3140:3313":{"id":"0:3140:3313","crate_id":0,"name":"Tuple4Combination","span":{"filename":"src/adaptors/mod.rs","begin":[824,0],"end":[824,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"1:6463:10290":{"id":"1:6463:10290","crate_id":1,"name":"st_ino","span":null,"visibility":"default","docs":"Returns the inode number.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_ino());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4462":{"id":"0:4462","crate_id":0,"name":null,"span":{"filename":"src/unziptuple.rs","begin":[74,0],"end":[74,88]},"visibility":{"restricted":{"parent":"0:2411:1743","path":"::unziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"IT","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"C"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"D"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8681:2464","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MultiUnzip","id":"0:2415:1745","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"},{"kind":"generic","inner":"FromC"},{"kind":"generic","inner":"FromD"},{"kind":"generic","inner":"FromE"},{"kind":"generic","inner":"FromF"}]}}],"bindings":[]}}},"for":{"kind":"generic","inner":"IT"},"items":["0:4476:1744"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3370:216-0:4142:1708":{"id":"a:2:3370:216-0:4142:1708","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleWindows","id":"0:4142:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1675":{"id":"0:1675","crate_id":0,"name":null,"span":{"filename":"src/kmerge_impl.rs","begin":[224,0],"end":[227,2]},"visibility":{"restricted":{"parent":"0:1604:1675","path":"::kmerge_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"KMergePredicate","id":"0:1639:3963","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9153:3194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"KMergeBy","id":"0:1651:1677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3411:4706-0:4092:1703":{"id":"a:2:3411:4706-0:4092:1703","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"St","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"St"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iterate","id":"0:4092:1703","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1543":{"id":"0:1543","crate_id":0,"name":null,"span":{"filename":"src/groupbylazy.rs","begin":[550,0],"end":[557,1]},"visibility":{"restricted":{"parent":"0:1387:1665","path":"::groupbylazy"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"outlives":"'a"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:3618:3915","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Chunk","id":"0:1537:1667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1546:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3411:4706-0:1476:1671":{"id":"a:2:3411:4706-0:1476:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Groups","id":"0:1476:1671","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3506:360":{"id":"2:3506:360","crate_id":2,"name":"bitor","span":null,"visibility":"default","docs":"Performs the `|` operation.\n\n# Examples\n\n```\nassert_eq!(true | false, true);\nassert_eq!(false | false, false);\nassert_eq!(5u8 | 1u8, 5);\nassert_eq!(5u8 | 2u8, 7);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"BitOr","id":"2:3503:4743","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:23393:16100":{"id":"2:23393:16100","crate_id":2,"name":"to_bitmask","span":null,"visibility":"default","docs":"Converts a mask to a bitmask.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"BitMask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"ToBitMask","id":"2:23391:12757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:8633:2669":{"id":"2:8633:2669","crate_id":2,"name":"sum","span":null,"visibility":"default","docs":"Method which takes an iterator and generates `Self` from the elements by\n\"summing up\" the items.","links":{},"attrs":["#[stable(feature = \"iter_arith_traits\", since = \"1.12.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["iter",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"A"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13358:932":{"id":"2:13358:932","crate_id":2,"name":"next","span":null,"visibility":"default","docs":"Performs the next search step starting from the front.\n\n- Returns [`Match(a, b)`][SearchStep::Match] if `haystack[a..b]` matches\n  the pattern.\n- Returns [`Reject(a, b)`][SearchStep::Reject] if `haystack[a..b]` can\n  not match the pattern, even partially.\n- Returns [`Done`][SearchStep::Done] if every byte of the haystack has\n  been visited.\n\nThe stream of [`Match`][SearchStep::Match] and\n[`Reject`][SearchStep::Reject] values up to a [`Done`][SearchStep::Done]\nwill contain index ranges that are adjacent, non-overlapping,\ncovering the whole haystack, and laying on utf8 boundaries.\n\nA [`Match`][SearchStep::Match] result needs to contain the whole matched\npattern, however [`Reject`][SearchStep::Reject] results may be split up\ninto arbitrary many adjacent fragments. Both ranges may have zero length.\n\nAs an example, the pattern `\"aaa\"` and the haystack `\"cbaaaaab\"`\nmight produce the stream\n`[Reject(0, 1), Reject(1, 2), Match(2, 5), Reject(5, 8)]`","links":{"SearchStep::Done":"2:50179:2655","SearchStep::Match":"2:50171:5332","SearchStep::Reject":"2:50175:10535"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SearchStep","id":"2:50170:6948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3456:184":{"id":"2:3456:184","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `/` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"2:3679:3976":{"id":"2:3679:3976","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3681:184","2:3682:761"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:3203-0:4065:1699":{"id":"b:2:3203-0:4065:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RepeatN","id":"0:4065:1699","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3207-0:1476:1671":{"id":"b:2:3207-0:1476:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Groups","id":"0:1476:1671","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3209:688"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:0:2854-0:4644:1720":{"id":"b:0:2854-0:4644:1720","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3662,0],"end":[3662,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["sorted_unstable_by","position_minmax_by_key","filter_map_ok","all_unique","filter_ok","combinations_with_replacement","into_grouping_map_by","merge_join_by","map_ok","at_most_one","counts","step","multi_cartesian_product","position_max_by","counts_by","merge","multiunzip","find_position","sorted_unstable","collect_tuple","join","interleave","dedup_by","take_while_ref","dedup","update","coalesce","concat","set_from","format","zip_eq","fold_results","product1","sorted","into_group_map_by","min_set","min_set_by_key","intersperse","kmerge_by","dedup_by_with_count","interleave_shortest","flatten_ok","zip_longest","while_some","next_tuple","min_set_by","minmax_by","sum1","position_max_by_key","fold_ok","position_min","position_min_by_key","multipeek","k_smallest","merge_by","fold1","find_or_last","minmax","partition_map","dedup_with_count","circular_tuple_windows","minmax_by_key","tuple_windows","into_grouping_map","tee","map_results","sorted_by_cached_key","format_with","powerset","sorted_by_key","peeking_take_while","into_group_map","pad_using","sorted_unstable_by_key","max_set","max_set_by_key","dropping","exactly_one","position_minmax","kmerge","combinations","with_position","cartesian_product","all_equal","contains","collect_vec","map_into","unique","try_collect","chunks","find_or_first","duplicates_by","tuple_combinations","duplicates","intersperse_with","foreach","tree_fold1","fold_while","partition_result","max_set_by","position_max","batching","position_min_by","unique_by","positions","permutations","sorted_by","position_minmax_by","dropping_back","tuples","group_by","fold_options"],"trait":{"name":"Itertools","id":"0:2520:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ZipEq","id":"0:4644:1720","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"J"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3187:233":{"id":"2:3187:233","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3189:128","2:3190:1435"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3730":{"id":"0:3730","crate_id":0,"name":null,"span":{"filename":"src/cons_tuples_impl.rs","begin":[38,0],"end":[38,52]},"visibility":{"restricted":{"parent":"0:1033:1654","path":"::cons_tuples_impl"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"X","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Iter","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Iter"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ConsTuples","id":"0:3737:1655","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Iter"}},{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},{"kind":"generic","inner":"X"}]}}],"bindings":[]}}}},"items":["0:3735:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3382:225-0:3007:1636":{"id":"a:2:3382:225-0:3007:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Batching","id":"0:3007:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3218-0:1198:1661":{"id":"b:2:3218-0:1198:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FlattenOk","id":"0:1198:1661","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4749":{"id":"0:4749","crate_id":0,"name":null,"span":{"filename":"src/ziptuple.rs","begin":[130,0],"end":[130,26]},"visibility":{"restricted":{"parent":"0:2509:1723","path":"::ziptuple"}},"docs":null,"links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"D"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8741:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"name":"DoubleEndedIterator","id":"2:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Zip","id":"0:4670:1724","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"}]}}],"bindings":[]}}}},"items":["0:4754:3067"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13796:61719":{"id":"2:13796:61719","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:13336:4565","`DoubleEndedIterator`":"2:8716:121","str::match_indices":"2:13793:61718","prim@char":"1:15876:4439"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49958:5434","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13346:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13361:5417","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3050":{"id":"0:3050","crate_id":0,"name":null,"span":{"filename":"src/adaptors/mod.rs","begin":[691,9],"end":[691,14]},"visibility":{"restricted":{"parent":"0:332:1625","path":"::adaptors"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"HasCombination","id":"0:737:2255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Combination","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"0:737:2255","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TupleCombinations","id":"0:3045:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:3053:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3203-0:2430:1718":{"id":"b:2:3203-0:2430:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WithPosition","id":"0:2430:1718","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:3309"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4769:932":{"id":"0:4769:932","crate_id":0,"name":"next","span":{"filename":"src/ziptuple.rs","begin":[131,0],"end":[131,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1222":{"id":"0:1222","crate_id":0,"name":null,"span":{"filename":"src/flatten_ok.rs","begin":[144,0],"end":[157,1]},"visibility":{"restricted":{"parent":"0:1179:1660","path":"::flatten_ok"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"","id":"2:8672:152","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FlattenOk","id":"0:1198:1661","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:1226:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4415:15593":{"id":"1:4415:15593","crate_id":1,"name":"read_to_end","span":null,"visibility":"default","docs":"Read all bytes until EOF in this source, placing them into `buf`.\n\nAll bytes read from this source will be appended to the specified buffer\n`buf`. This function will continuously call [`read()`] to append more data to\n`buf` until [`read()`] returns either [`Ok(0)`] or an error of\nnon-[`ErrorKind::Interrupted`] kind.\n\nIf successful, this function will return the total number of bytes read.\n\n# Errors\n\nIf this function encounters an error of the kind\n[`ErrorKind::Interrupted`] then the error is ignored and the operation\nwill continue.\n\nIf any other read error is encountered then this function immediately\nreturns. Any bytes which have already been read will be appended to\n`buf`.\n\n# Examples\n\n[`File`]s implement `Read`:\n\n[`read()`]: Read::read\n[`Ok(0)`]: Ok\n[`File`]: crate::fs::File\n\n```no_run\nuse std::io;\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() -> io::Result<()> {\n    let mut f = File::open(\"foo.txt\")?;\n    let mut buffer = Vec::new();\n\n    // read the whole file\n    f.read_to_end(&mut buffer)?;\n    Ok(())\n}\n```\n\n(See also the [`std::fs::read`] convenience function for reading from a\nfile.)\n\n[`std::fs::read`]: crate::fs::read","links":{"crate::fs::read":"1:2914:6796","Read::read":"1:4411:6796","`ErrorKind::Interrupted`":"1:10863:10656","crate::fs::File":"1:2909:129","Ok":"2:47937:178"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7898:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8224:4593","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47934:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6460:6523":{"id":"1:6460:6523","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6461:23448","1:6462:10289","1:6463:10290","1:6464:10292","1:6465:10291","1:6466:10293","1:6467:10294","1:6468:10296","1:6469:8547","1:6470:10299","1:6471:10300","1:6472:10301","1:6473:10302","1:6474:10303","1:6475:10304","1:6476:10297","1:6477:10298"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:5098:3067":{"id":"0:5098:3067","crate_id":0,"name":"next_back","span":{"filename":"src/ziptuple.rs","begin":[138,0],"end":[138,50]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47809:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8873:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1059":{"id":"0:1059","crate_id":0,"name":null,"span":{"filename":"src/combinations.rs","begin":[17,0],"end":[22,1]},"visibility":{"restricted":{"parent":"0:1041:1650","path":"::combinations"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Iterator","id":"2:8873:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"","id":"2:8873:159","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Combinations","id":"0:1054:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:3746:415"],"negative":false,"synthetic":false,"blanket_impl":null}}},"paths":{"1:10421:57066":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"12:750:3584":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"6:4218:9915":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:10979:5394":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"6:161:41777":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:3171:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:48872:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:2147:6644":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:3278:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"17:13306:8978":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:24173:7252":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:2359:10990":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:14397:6532":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"12:559:144":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"16:6407:7791":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:13452:9014":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:12070:8648":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:10575:3708":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"17:10253:8008":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"16:4495:9199":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:8708:4641":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:51948:7020":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:8770:6748":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:11835:184":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"16:5326:7632":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"6:5293:10119":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:49161:10809":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"6:4081:9872":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:5288:10118":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:3836:138":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:51357:10537":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"12:2040:4545":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"16:4351:9194":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"9:234:7447":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"2:53620:7049":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"12:399:7559":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"12:979:4811":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"16:6342:7790":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:11085:8024":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"6:1740:9741":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"16:6557:7796":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:9636:10894":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:46917:3547":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:14463:59807":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"17:294:10888":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"17:13602:9054":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"16:5959:7673":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:10992:155":{"crate_id":1,"path":["std","net","ip_addr","IpAddr"],"kind":"enum"},"16:5176:9214":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:32636:4778":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"2:51469:7018":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:23430:6539":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"16:4599:9201":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"16:6060:7776":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"17:10048:10904":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:12262:8676":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"6:5478:10209":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:32696:60325":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"12:2036:1621":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:53082:7054":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:24957:6787":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:10522:135":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:11209:219":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"6:612:9595":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"9:0:4411":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"16:3007:7911":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"14:250:9406":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"15:230:7575":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:10810:147":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:47858:4801":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"16:6595:7751":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"6:593:9585":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"6:4362:9963":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:15900:4460":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"6:6937:10426":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:11959:6658":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:3070:6810":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:49519:7219":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"6:4485:10017":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:3459:6588":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:3254:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:7732:57057":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"2:13077:7223":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:37936:126":{"crate_id":2,"path":["core","cmp","Ordering","Equal"],"kind":"foreign_type"},"6:545:9553":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:10520:4816":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"0:2862:3063":{"crate_id":0,"path":["itertools","partition"],"kind":"function"},"17:9988:49017":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"16:7169:7753":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:5221:4722":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:13908:9157":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:46188:197":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:50364:6960":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:49143:2614":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:7592:6736":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:24517:7309":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:10545:10913":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"17:10530:8486":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:6638:6535":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:10210:8501":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"18:866:8104":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:46802:7280":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:46646:7346":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"16:7063:7803":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"12:2052:6642":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"6:4440:9996":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:6080:10307":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:53742:10604":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:23242:6640":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:13600:6740":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"2:8432:5817":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:14111:61256":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:49940:5433":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"6:5311:10131":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:12482:8729":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:25122:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"5:1256:11186":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:10775:10921":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"5:3104:5158":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:8439:6862":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:10115:8082":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:50398:5439":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:13440:9013":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:3380:107":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"6:4098:9882":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"16:7768:7744":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:9466:8438":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"16:5784:7659":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"4:0:4409":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:28334:6198":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"18:801:8098":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:10622:8447":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:47005:1673":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:11256:8498":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:50054:5432":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:52222:10551":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"5:383:5314":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"5:984:7370":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:11234:8019":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:46722:7343":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:49645:4653":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:10631:6634":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:12093:8654":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"6:565:9570":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:11442:6706":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:11157:6620":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:3594:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:7827:6784":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"1:10956:3541":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:13029:8896":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:12070:214":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:14054:6595":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"1:1610:4814":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:8089:6784":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"2:50736:7241":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"6:5998:10272":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:4975:9213":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:9387:8243":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:49790:5394":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:6908:10419":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"16:5303:7631":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:859:6764":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:5723:6911":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:12048:8647":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:12770:8784":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:11890:8609":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"16:6679:7948":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"5:1276:7388":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:46364:7100":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"17:8929:48964":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:3607:4622":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"6:1544:9620":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"16:6433:7792":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"6:6057:10306":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"12:2045:4595":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"2:49671:5397":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"7:85:46640":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:3525:4748":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:4217:6597":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:51691:7008":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:1483:4810":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"15:269:7580":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"12:432:7558":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:2884:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:47075:4669":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:48809:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:10895:6602":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"1:5752:6915":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:15888:4448":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:11714:5404":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"6:5974:10255":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"16:5427:7640":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:13406:11187":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:46935:4276":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:3486:4740":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"20:0:1614":{"crate_id":20,"path":["either"],"kind":"module"},"16:2772:7933":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:11017:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:5041:4730":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:11032:6624":{"crate_id":1,"path":["std","net","ip_addr","Ipv6Addr"],"kind":"struct"},"17:8902:48963":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"1:11887:57251":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"5:5616:4786":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"6:0:807":{"crate_id":6,"path":["libc"],"kind":"module"},"2:47866:1621":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"9:603:46812":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"1:6470:10299":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"1:8932:5010":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:14788:8254":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"16:7264:197":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:7532:6732":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"16:4803:9208":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:51854:7047":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:3755:6754":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:9746:10896":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:2314:8035":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"16:6533:7939":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"12:1784:8197":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:47085:4659":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:7132:189":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:6472:10301":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"6:1551:9622":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:32796:60328":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"1:2651:183":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"17:11212:8021":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:49153:10808":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"6:3960:9817":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:47053:4667":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:2925:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"16:7868:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"16:3103:7923":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"5:3436:6642":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"5:777:10967":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:8288:6657":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:3513:4746":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"7:38:46633":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:48405:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:11484:6707":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"12:353:10779":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:46337:7060":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:5154:4716":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"16:6173:7786":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:51802:7040":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"6:4005:9839":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:50082:5420":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"5:6569:4545":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:32630:4590":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:48321:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"6:6153:10332":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:12026:8638":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"6:1727:9738":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:12442:8724":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:5705:11900":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:13233:8962":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:11640:8560":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"16:7121:7808":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:53412:7026":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"16:5257:8432":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:1441:4595":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"2:4496:1621":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:13887:9151":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"6:5240:10093":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:46879:4653":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"17:11031:48971":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"6:4020:9844":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:2361:10991":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:32644:60329":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"6:6643:10403":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:1146:11898":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"1:4410:4624":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"6:672:42106":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"12:1103:4336":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"16:5948:7906":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"6:5331:10147":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:15876:4439":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"12:1238:7556":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"16:6331:7572":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:49608:5392":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:12023:6662":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:5508:6521":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:6234:6547":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:14794:8255":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:11593:5401":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:10489:11894":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"9:963:7487":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:11433:8521":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"5:1719:4804":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:51832:7044":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:3508:4744":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:52000:7027":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"6:4315:9939":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"18:720:8346":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:9131:48969":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:11381:8503":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:3519:4747":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"16:7141:7810":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:5274:10117":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:1578:4336":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:10038:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"6:4179:9912":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"16:2861:7908":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"14:194:47311":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"6:5426:10195":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:15016:6673":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:11511:6710":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:11389:3584":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:9183:7987":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"6:6007:10278":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:4872:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"6:3933:9794":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"5:8456:7383":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"18:729:63008":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"5:1701:4802":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"6:5229:10085":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:11314:8067":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"5:8239:7372":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:13275:4561":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:13495:9029":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:5005:4729":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"5:8294:7362":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:2179:3941":{"crate_id":2,"path":["core","mem","replace"],"kind":"function"},"1:9427:8244":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"5:7365:8199":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:15897:4457":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:7935:1801":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"6:1621:9667":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:7241:188":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:14061:139":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"16:3265:7918":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"16:3029:7912":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"1:8490:6865":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"17:12646:8761":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:10569:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:49894:5405":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:13147:8939":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:6460:6523":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:13755:9115":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:12222:8671":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:12560:8251":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"1:7595:6737":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:2126:4545":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"6:4340:9952":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"6:5378:10173":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"15:248:7576":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"17:10874:8483":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:3914:4760":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:47106:4670":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"16:6949:7956":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"16:6468:7793":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:9796:63000":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"6:157:41776":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"6:1912:43080":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:13054:7222":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"16:2937:7932":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"5:3814:162":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:47065:4668":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"17:11547:8544":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"16:6717:7799":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:11481:5407":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:53757:10605":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:10127:8044":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:24891:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"17:11102:48972":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:10136:10898":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:4492:4623":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:8446:6864":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:11168:10738":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"6:4346:9954":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:6268:10397":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:9706:10895":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:48027:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"16:7721:7749":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"16:3314:7666":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"16:4381:9195":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:10409:6539":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:23439:7005":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:56613:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:1680:9711":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"6:6016:10279":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"16:5721:7657":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:11563:8549":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"6:4148:9902":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:15890:4450":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:10249:7206":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:11978:6659":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:2141:6643":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:52876:7034":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"12:869:4545":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"16:3402:7670":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:46298:4631":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"5:2328:7391":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"6:4061:9861":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:39149:6299":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"6:4230:9916":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:0:495":{"crate_id":2,"path":["core"],"kind":"module"},"16:6630:7944":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:11130:10737":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"5:4017:4595":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"2:50073:5421":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"5:4716:8204":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:13336:4565":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"5:2396:7390":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:49106:4692":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:11672:5405":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:11015:6623":{"crate_id":1,"path":["std","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:11514:8538":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"16:7379:7759":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:10579:192":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:3439:3711":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:5522:6523":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:4351:4645":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:11713:8575":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:9756:62996":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:13281:8970":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:8448:1618":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"1:1991:146":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:2181:585":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:12065:6876":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:10641:6532":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:10445:8394":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:13840:9137":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:22885:60860":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:10688:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:52380:7041":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"6:4127:9894":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:51423:7038":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"16:7702:7747":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:5281:6843":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:15847:11899":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:3537:4751":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:1669:9703":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"16:4628:9202":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:46098:4761":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:14772:8253":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:50044:5431":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"1:9646:3855":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"2:24336:7150":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:3529:4749":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:3466:4735":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"17:10104:8081":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"5:1740:4806":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:10033:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:10671:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:9361:8435":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:11922:8619":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:11883:10819":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"2:49570:5390":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:50693:193":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:23441:7004":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:2859:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:23295:7004":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:8021:4661":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:48195:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:15046:6675":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"6:1721:9735":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"18:645:8110":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:47321:4647":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:9654:4555":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:510:10890":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:23384:6539":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"6:1662:9699":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:46729:7344":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"16:4689:9204":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:24244:7254":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"16:7155:7811":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"16:5745:7658":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"16:7369:7739":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:10410:6760":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:5150:3687":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:13366:5416":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:52121:10548":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:6566:6611":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:50675:204":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"6:1576:9636":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:46616:7169":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:2920:186":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:10658:6533":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"6:4379:9974":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"16:3177:7914":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"5:8321:1621":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"6:5149:10041":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:51501:7051":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:3618:3915":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:49994:5435":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"12:952:4809":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:2911:6794":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:10845:4689":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:46859:10981":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:10851:8482":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:51709:10541":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"5:1533:4812":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:10577:3707":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:11335:7983":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:10291:8033":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"16:4573:9200":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:14373:7242":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:49114:10807":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:49658:5382":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:7429:6727":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:10704:6587":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:1105:10983":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"16:3129:7922":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:51531:7039":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:13515:9035":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:6332:6557":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"5:3838:4801":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"16:4439:9197":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:4258:6594":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"12:472:11182":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"16:2754:7668":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"6:4116:9890":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"16:5289:7736":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:47926:191":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"16:6504:7795":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"1:15893:4453":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:50541:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"16:5396:7636":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"6:1537:9617":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"5:8256:7373":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:15882:4444":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:3498:4742":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:6640:6553":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:0:1349":{"crate_id":1,"path":["std"],"kind":"module"},"17:11985:8634":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:14387:10820":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"20:216:1615":{"crate_id":20,"path":["either","Either"],"kind":"enum"},"17:13037:8898":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:15879:4441":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"16:6482:7941":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:12558:6793":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"16:7355:7738":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:53582:7029":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:12543:8739":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"5:8490:4541":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:10573:3710":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:49912:5403":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"16:6490:7794":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"5:7319:4545":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"16:6012:7735":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:8188:2614":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"17:10788:10923":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:10907:4070":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:12099:6689":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"17:10831:8044":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:47875:5014":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"16:5698:7656":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"6:4373:9971":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:12183:8666":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"12:162:7557":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:3379:222":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:3743:7975":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"18:790:8097":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:14855:6733":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"1:10436:6782":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:2044:6568":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"16:5238:47388":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"6:1567:9630":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:2914:6796":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"6:3907:9774":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:11615:8557":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:10082:8079":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:12660:8762":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:2130:4595":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"2:77:1512":{"crate_id":2,"path":["core","usize"],"kind":"module"},"2:3460:4736":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:9160:4652":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:14057:6597":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"12:928:4804":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"17:13421:9006":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:12075:215":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:3370:216":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:14867:6734":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:11784:8599":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"5:4287:4545":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"5:7055:7363":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:13016:8889":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:10015:10901":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"6:5982:10260":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"7:0:1502":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:11558:5408":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:37939:3681":{"crate_id":2,"path":["core","cmp","Ordering","Greater"],"kind":"foreign_type"},"5:8286:197":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"6:5210:10083":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:3376:4703":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:50012:5436":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:9561:8023":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"18:0:4419":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:9087:48968":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:3877:4728":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:4153:7059":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"17:10610:10920":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"16:6691:7798":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:4476:59414":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"5:4588:5461":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"2:23106:7064":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"16:6190:7787":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"9:776:7469":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"2:47985:4801":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:11579:8550":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:22851:60806":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:24315:10440":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"2:13361:5417":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:1526:9612":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:12060:165":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:10949:10931":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"16:6130:7784":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:50350:6959":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"16:7051:7802":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:13953:9163":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:49579:1668":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:46736:7345":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:15225:6836":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:32596:4589":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"16:3155:7913":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:9579:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"5:8278:1621":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:9064:48967":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:47116:1724":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:53731:10603":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"16:5639:7649":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"17:9786:10897":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:12589:11002":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"6:6671:10406":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"6:1764:9750":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:10914:6600":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"17:10068:8042":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:5971:6854":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:9539:8018":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"16:6656:7946":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:3848:4757":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:4168:7058":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"17:12746:8774":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:23142:7061":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"17:9716:63001":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"6:3966:9818":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:3542:4752":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:9920:10899":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"18:694:8113":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"16:547:7653":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:10476:8071":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:11121:6904":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"2:25056:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"5:3948:5450":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:3388:3195":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"1:15887:4447":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:15626:8256":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"14:216:47317":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"17:10147:8444":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:10571:3709":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:52426:7045":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:11305:8774":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:46849:8220":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:1031:6614":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:9136:6637":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:10801:7978":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:513:3894":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:5285:4725":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:3624:132":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:10782:6751":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:13180:8950":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:7727:6783":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"2:24076:7000":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"9:809:2614":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"17:12250:8675":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:15899:4459":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"12:940:4808":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:1460:4807":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"16:6873:5014":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"18:782:8344":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"16:4467:9198":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:4008:10893":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:46254:200":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:12607:8758":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:50685:10536":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"19:0:1004":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:22838:4684":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"16:6159:7740":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:9646:63004":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"16:7323:7758":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"17:9431:8437":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:15381:7584":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:5731:6912":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"5:7558:8199":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"18:739:10886":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:11500:6709":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:10266:8042":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"6:4321:9942":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:6093:6855":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:13196:8953":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"16:3051:7969":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"17:13961:9166":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"16:3743:9188":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:52070:7013":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:48583:3708":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"6:5301:10124":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"16:2792:7669":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:48894:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"2:48069:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:299:10889":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"6:4067:9864":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:53780:10606":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:8635:1634":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:46926:4655":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"16:7238:7756":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"17:12716:8769":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:9836:62997":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"5:6858:6568":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"12:843:4802":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"16:5685:7655":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"5:4701:241":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:11530:8542":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:47332:4649":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:46595:10798":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"12:2066:6644":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"16:6141:7785":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:5428:6544":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:15317:57067":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:2969:187":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:11953:1621":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"5:3825:3584":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:24404:7146":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:14060:6593":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"2:51553:7043":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:4903:5312":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"6:1600:9653":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:10510:4815":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:24465:23085":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:13377:8995":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"5:1760:7386":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:46904:3541":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:11402:2614":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"5:1909:8199":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"16:5998:7625":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:12332:8226":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"2:4790:6568":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"9:749:7424":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"1:6642:6554":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"12:1147:4813":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"17:9826:8044":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"16:6980:7801":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"16:6907:7800":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:10583:3705":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:5500:6520":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:10712:5450":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:14372:6612":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:49131:147":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:6569:6550":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"18:661:8111":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"6:1634:9674":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:14430:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"16:6518:7752":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"6:5366:10168":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"14:56:8522":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:14905:10690":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:10527:12233":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"6:3877:9756":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:4048:9856":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:10696:6817":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"1:13737:6730":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:11689:8571":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:37933:2879":{"crate_id":2,"path":["core","cmp","Ordering","Less"],"kind":"foreign_type"},"1:15058:6681":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:1601:4813":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"16:5869:192":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"5:4379:4801":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:5157:6836":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"16:4775:9207":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"5:1055:7371":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"12:114:11180":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:48930:5165":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"16:4316:9193":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"0:2856:3042":{"crate_id":0,"path":["itertools","equal"],"kind":"function"},"2:50517:7232":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"6:607:9593":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:15370:7584":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:3454:4734":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"12:2059:6643":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"17:1236:10892":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:25089:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"17:12573:8745":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:2909:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:14187:10979":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"9:996:7488":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:4146:6825":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:3174:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"9:722:7423":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"17:12406:8719":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:2961:180":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"proc_derive"},"5:5173:667":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"6:4416:9986":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:11631:5402":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:49776:4069":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:10223:8010":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:24072:6539":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:15874:4437":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:10296:8249":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:50089:5428":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:53334:7042":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"0:0:1588":{"crate_id":0,"path":["itertools"],"kind":"module"},"2:3378:223":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"6:6229:10382":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:11653:8561":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"16:3478:7919":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:5328:4726":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:6738:6534":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:4102:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"1:12118:6690":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:14460:142":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:13917:9159":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:4180:6596":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:12758:8777":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"18:896:8106":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"9:157:7439":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"16:7637:7813":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:9420:59654":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"5:3366:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"6:4493:10019":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:13138:8938":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"5:8556:4595":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"16:7659:7814":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:11183:6837":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"12:815:4806":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:51632:7019":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"5:7898:240":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:46589:5429":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:46604:7168":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"17:10039:10903":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:3801:208":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"0:54:1624":{"crate_id":0,"path":["itertools","structs"],"kind":"module"},"1:9556:8246":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"12:856:4803":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"17:10464:8069":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:13529:9037":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:13565:9046":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"3:0:438":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"6:4454:10004":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:9533:4792":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:11425:6705":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:24825:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"18:621:10730":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:24392:7145":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"5:8427:7279":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:8126:6298":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:3108:6539":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:8369:1832":{"crate_id":2,"path":["core","iter","sources","empty","empty"],"kind":"function"},"2:10800:143":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:9534:5016":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"18:820:8100":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:5159:4717":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"17:8954:7989":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:3381:8228":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:12302:8683":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:23966:6639":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"16:3221:7916":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"14:189:10963":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:14924:6667":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"6:4142:9900":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:2286:7083":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"18:169:11178":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:13573:9047":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:49734:4559":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"5:444:4557":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:8856:6722":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:9532:4793":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:3533:4750":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:25524:7126":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:12892:8786":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:50513:7233":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:13817:9136":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:5541:10222":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:48363:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:1397:1621":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:11494:3584":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"18:774:8344":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:9551:8245":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"17:12130:8659":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:9206:48970":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:57953:10616":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:1108:10985":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:11968:8631":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:9958:63003":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:11457:8522":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:39109:6738":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"6:88:41710":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:47977:3584":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"6:1733:6849":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:12417:8721":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"5:1626:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"5:4516:3584":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:46774:7278":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"16:3199:7915":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"1:1489:4811":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"6:5216:10084":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"5:7942:8212":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"5:3462:6645":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:51654:7023":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:56665:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:1558:9625":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:12634:8760":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:15031:6674":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"5:7214:8212":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"6:4434:9995":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:2510:4712":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"5:2376:7406":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:56678:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:13346:4555":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:11249:6848":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"16:7741:7815":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:14658:6735":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"9:1020:7489":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:14152:190":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:74:1455":{"crate_id":2,"path":["core","u32"],"kind":"module"},"2:50529:7235":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"5:1751:197":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:11847:6733":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"16:5362:7634":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:24990:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:2765:586":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"6:4392:9979":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"16:6099:7783":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:8375:4070":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"16:6549:7754":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"17:12731:8773":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:13549:9043":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"6:1748:9745":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:8281:6656":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:6214:10375":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:9948:10900":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"5:3395:3584":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:5853:6845":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:12196:8667":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:10093:8080":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"6:4464:10010":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:14544:4592":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"6:533:9548":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:10648:6795":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:50749:160":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:53676:10598":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:6925:10424":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:13215:8954":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"16:5855:7662":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"16:7684:7748":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"6:4270:6856":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:52662:7025":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:50107:5430":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"12:1666:7566":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:15886:4446":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"12:895:7545":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"6:4538:10037":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:10806:143":{"crate_id":2,"path":["core","hash","macros","Hash"],"kind":"proc_derive"},"2:24444:23093":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:23391:12757":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:3042:6799":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"1:13754:57055":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"1:3405:6581":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:696:6759":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:14422:6795":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"0:2518:1793":{"crate_id":0,"path":["itertools","izip"],"kind":"macro"},"11:0:4413":{"crate_id":11,"path":["adler"],"kind":"module"},"2:13564:110":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:10717:10978":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:3284:6585":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"16:5374:7635":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:37932:181":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"17:9873:10898":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"16:7079:7804":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:1405:4802":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"6:4532:10034":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"16:7309:7741":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"17:12700:8767":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:8849:8017":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"6:3883:9757":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"0:276:1726":{"crate_id":0,"path":["itertools","traits"],"kind":"module"},"2:12199:1669":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:7993:8230":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"1:2420:10993":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"17:12431:8723":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"5:1663:3584":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"5:3402:6643":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"18:637:8344":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"6:6135:10321":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:1261:144":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:49357:5384":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:47294:4641":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:2512:8031":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:13128:5407":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:1456:4806":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"6:3981:9825":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:2135:6642":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"17:607:10891":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"0:2517:1766":{"crate_id":0,"path":["itertools","iproduct"],"kind":"macro"},"1:7775:8230":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"6:3896:9766":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:2397:10992":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"18:811:8099":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"16:2813:7926":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:2152:6645":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:56243:7093":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"6:4509:10024":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"5:2619:7394":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"6:4038:9853":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:11281:6610":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:14961:6742":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:51978:7024":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"5:8501:4542":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:4526:10032":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:8180:6784":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"16:7131:7809":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:10660:49155":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:3371:6586":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:11905:10685":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"2:47993:1621":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:11013:10936":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"5:5868:8199":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"12:2280:4813":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:48447:7283":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:11142:8496":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:23232:6539":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:14623:11001":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:50098:5429":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:22906:60858":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"11:54:7543":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"6:4028:9847":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:2654:182":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"5:69:4594":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"12:379:7560":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:11701:8574":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:11413:4801":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:50286:6957":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:9004:48965":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:53696:10600":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"6:5178:10065":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:10913:10928":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"6:6943:10427":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:50207:6952":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"12:1121:4812":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:5556:6524":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:12209:8669":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:11494:8537":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:13481:9022":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"6:4256:9918":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:50221:6955":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:10422:10909":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"6:4386:9976":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:47917:5108":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"6:5186:10067":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:8196:1648":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:22904:60862":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:6979:10434":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:12015:8637":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"16:4903:9211":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:53872:10610":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:50562:6692":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"5:1502:4336":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"16:3770:9189":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:47025:4657":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:10935:6579":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"18:152:11175":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:13747:9112":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"16:7754:7816":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"6:6243:10391":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"16:3494:8357":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:5566:6519":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:48153:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"6:5419:10193":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:5085:3852":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:49122:4691":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:11474:8527":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"5:1518:4813":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:7415:6726":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"11:46:9456":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"5:5969:8210":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"2:53810:10608":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:11822:8607":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:10304:8032":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"12:1682:7567":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:11742:8584":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:2484:49055":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"16:4716:9205":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"12:787:4805":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:5701:6909":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"5:8315:1621":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:8538:6874":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:10581:3706":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:2862:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:9326:8066":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:10925:10929":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:4383:6568":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:15842:59634":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"1:15332:10692":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"16:5649:7651":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"6:4012:9843":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"16:6026:7733":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"18:849:8102":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:14076:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:634:9608":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"5:8264:61524":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:10461:5325":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"16:7100:7806":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:2912:422":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"2:13017:7221":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:47034:3193":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:23978:60810":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"6:5260:10106":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:46715:5428":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:7477:6730":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:5726:7090":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:22883:60861":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"15:0:4416":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:15246:6843":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"12:777:1621":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:50170:6948":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:8668:137":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"16:5941:7780":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:46987:3192":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"12:2269:4812":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"12:183:7561":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"5:7967:8217":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:13763:9116":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"6:4055:9859":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:50505:7228":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"6:1606:9655":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:10435:8012":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:9033:48966":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:51447:7030":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"6:527:9545":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:50525:7234":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:3449:3712":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:50064:5422":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"18:136:11174":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"5:8224:4593":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:10565:110":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"0:5104:2655":{"crate_id":0,"path":["itertools","FoldWhile","Done"],"kind":"variant"},"1:11829:6731":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:11078:10670":{"crate_id":1,"path":["std","net","ip_addr","fmt","Span"],"kind":"struct"},"0:2859:3049":{"crate_id":0,"path":["itertools","assert_equal"],"kind":"function"},"2:11200:6539":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:11098:6903":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"2:14363:5313":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"18:744:63009":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:47908:5015":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:13660:9096":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:13776:6732":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"17:10028:10902":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:4848:6931":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:14446:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:50192:6949":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"5:4672:8202":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"2:23767:7006":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"2:48569:3710":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:6834:6635":{"crate_id":1,"path":["std","os","net","tcp","TcpStreamExt"],"kind":"trait"},"1:4467:1619":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:6716:4656":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"6:4474:10011":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:13412:6951":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:25023:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"6:1694:9722":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:9259:8432":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"5:6347:4600":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:2326:607":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:997:6560":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:3478:4739":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"16:7090:7805":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"9:900:9505":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:14410:10827":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"17:13584:9051":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:4219:6598":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:13129:8934":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:46895:4654":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"16:5902:7778":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:4660:9203":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"9:1075:7490":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:10547:7397":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:14:2499":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:9517:4069":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:56639:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:1466:4808":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:7449:7746":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"6:6665:10404":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:11307:6552":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:8274:205":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:39145:7397":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"6:1626:9669":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:10431:6768":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:50385:6962":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"6:3920:9784":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:12080:6667":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:11700:5406":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:48590:3707":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:4638:6626":{"crate_id":1,"path":["std","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:50537:7230":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"16:2981:7921":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:3683:4553":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:10850:4690":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:56600:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:10792:6589":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:10221:11010":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"16:7415:7757":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:47850:3584":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"1:15185:6835":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"9:692:7422":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"6:4446:9999":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:48576:3709":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"6:5398:10181":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:11991:6660":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:5434:6542":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:12776:7355":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:11628:8559":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:50766:4764":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:15896:4456":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"5:4317:8199":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:53833:10609":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"5:8233:1621":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:9432:59652":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"16:4198:9191":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:51602:7031":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"17:11937:8624":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"16:7110:7807":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:11956:8629":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"5:5955:8208":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"1:8853:6871":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"16:7826:7099":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:46416:7159":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:32992:4779":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:13369:8993":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:11907:8615":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:15892:4452":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:24858:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:9587:63005":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"5:8479:221":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"9:41:7472":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"2:53474:7046":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"6:601:9590":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:5752:788":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:4428:6577":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:47809:179":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:2123:1621":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:13271:8969":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"5:3428:6644":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:13852:6731":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"5:3905:8199":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:15308:10691":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:11603:8554":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:8631:2668":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"6:6896:10417":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:13247:8967":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"16:6035:7775":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:2481:4711":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:48842:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"16:5530:7646":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"6:6184:10358":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:10923:6578":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"1:7463:6729":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"16:2905:7909":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"5:2266:8201":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:2277:7082":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:12557:8741":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:51377:10538":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:12620:8759":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"10:0:4412":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"16:6075:7737":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:1418:4803":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:15891:4451":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:15889:4449":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"16:0:4417":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:53536:7011":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:11285:10288":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:12221:10993":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"16:5566:7647":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:24481:23094":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"16:7184:7957":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:46945:3519":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:6899:6262":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:14887:6689":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"1:2422:10994":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"5:4036:8199":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:52616:7021":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:11243:6913":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"16:5348:7633":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:49766:4068":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:15858:57075":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"14:244:10777":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:5305:4710":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:39185:4707":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:12527:8738":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:56652:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:48946:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"17:13774:9120":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"6:6027:10284":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:7086:10995":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:6310:7789":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"6:6856:10416":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:50375:6961":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"16:3461:7920":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:4143:6824":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"6:1588:9645":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"16:5460:7642":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:11354:7982":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:13708:9097":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:11898:57087":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"5:3105:61522":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:46656:7347":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:23772:12776":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"17:11068:7988":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"5:7760:4601":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:5067:6617":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"1:15880:4442":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:47096:4275":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"12:1256:4814":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"6:6954:10431":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:53705:10601":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:50778:4797":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"0:2520:1771":{"crate_id":0,"path":["itertools","Itertools"],"kind":"trait"},"16:6931:7955":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:12957:8837":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:24924:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"6:1531:9614":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:15898:4458":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:13472:9021":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"5:7738:4600":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"6:5405:10182":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:12117:8656":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:24352:10788":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"12:2032:3584":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:23236:6638":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:3187:233":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:53658:7014":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:51902:7032":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:46357:7099":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"1:5154:6835":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"6:5547:10223":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:13293:8973":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:11725:8576":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:3842:4755":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"16:5516:7645":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"16:2839:7907":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:3621:131":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:10318:8044":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:12455:8726":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:11797:8603":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:48237:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:8672:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"16:3243:7917":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:10407:8029":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"16:4411:9196":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:11520:5395":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:10516:10736":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:12512:8734":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"5:3554:4595":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"17:12360:8709":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:3491:4745":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"6:6120:10316":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"6:6902:10418":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:46125:4759":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:11945:6655":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"16:6604:7797":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:48860:108":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"6:3993:9830":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:8639:10996":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"5:3441:7366":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:51756:7052":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:46996:4665":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:11861:6734":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"16:3908:9190":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:13474:6746":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"16:7025:7674":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:48279:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:46973:6260":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:46964:4663":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"16:6381:7750":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"5:853:109":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"6:5433:10196":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:5217:7672":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:5276:4724":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:11194:6839":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:47044:3524":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"12:1881:146":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:56626:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:3340:7667":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"5:8413:7381":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"14:11:10963":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:13595:9052":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:13859:9142":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"16:6277:7788":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:14135:5325":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:46693:5429":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:3831:230":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:11231:6619":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:10636:6793":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"17:9396:8436":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"16:7281:7742":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"5:5395:203":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"12:2412:9454":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:10058:8085":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"5:2843:7393":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:6716:6555":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:23155:6539":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"6:4287:9926":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"5:1684:1621":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:3627:133":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:12674:8765":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"9:27:7471":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"6:4277:9919":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:11238:6910":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:13238:6850":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:53685:10599":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:6034:10288":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"6:6114:10314":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:13899:9153":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"16:4271:9192":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:10986:5431":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:4485:6561":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"12:1162:7553":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:9930:62998":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:15901:4461":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"17:11769:8593":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"18:766:8355":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"14:231:4544":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:50728:7240":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"6:5455:10203":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:52168:10549":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:7307:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"12:933:4807":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:46172:199":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"18:668:8112":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:9160:8020":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:6212:6550":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"5:3407:7365":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"5:1710:4803":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:10211:10908":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"17:10489:10735":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:10962:10932":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"16:3576:8361":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"12:1183:7554":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"18:857:8103":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:3398:4705":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:22866:60806":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:8681:2464":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"16:5273:8433":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:12237:8674":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:52024:7009":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"18:651:8107":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:14424:204":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"6:3972:9820":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:13094:8933":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:14257:60475":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"2:49353:7357":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"5:6746:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:12687:8766":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:2213:1061":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"5:1673:4801":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"17:13938:9162":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:9240:7980":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"16:7200:7755":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:12007:6661":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"16:5412:7639":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:3180:136":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:5739:6914":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:11409:8507":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:4157:7992":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:15881:4443":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"6:6129:10320":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:8725:6884":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"2:47287:4640":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:4178:6595":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"18:885:8105":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"5:5913:5378":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:48827:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"13:233:9451":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:49700:5399":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:13557:9044":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:3474:4741":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:13522:9036":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"5:844:228":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:1452:4805":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:4860:6932":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:9153:3194":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:1477:4809":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:5668:7652":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:12383:8718":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"6:586:9582":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"16:2959:7910":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:9883:63002":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"16:4743:9206":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"0:2519:1831":{"crate_id":0,"path":["itertools","chain"],"kind":"macro"},"1:8967:10996":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"17:10586:10918":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:23053:7076":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"5:3110:61523":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"5:8380:4635":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:9156:4651":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:12496:8732":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:49598:5391":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:24368:10442":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"6:5582:10248":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:12232:5396":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:1447:4804":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"18:678:143":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:7449:6728":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"16:4871:9210":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"6:626:9603":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"9:686:7420":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"5:4772:8204":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"12:2398:9452":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:49588:5393":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:13345:8988":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:13612:9059":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:13167:8945":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"0:5099:2652":{"crate_id":0,"path":["itertools","FoldWhile"],"kind":"enum"},"6:4332:9948":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"6:618:9598":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:46232:201":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"5:8368:4558":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"18:704:8344":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"5:1072:3584":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:49690:5398":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:3375:1850":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:13355:5418":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:15163:6625":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"5:1152:8199":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:7158:1674":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"9:469:46743":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:48833:134":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"12:764:4801":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:11334:5006":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:10503:8072":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"5:1547:4814":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:3382:225":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:11591:8553":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:12143:8454":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:2263:7079":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:10166:8446":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:15895:4455":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"6:571:9573":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:3060:6805":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"1:14453:6578":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"6:6205:10372":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:13721:9103":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:1926:3069":{"crate_id":2,"path":["core","mem"],"kind":"module"},"5:8443:7382":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"6:6967:10432":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:13794:9123":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:11875:6735":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"17:0:4418":{"crate_id":17,"path":["object"],"kind":"module"},"1:7055:10995":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:7208:7812":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"17:11002:10935":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:49748:5427":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:15894:4454":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"1:11937:3584":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"16:6643:7945":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:2119:3584":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:4140:6823":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"6:5439:10199":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:2502:1715":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:15883:4445":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:5516:6522":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"17:9291:8434":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:15064:6682":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:9505:6832":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"1:14627:6545":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"1:12046:6870":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"1:7932:6784":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"17:1311:8086":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:51571:10539":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"16:3686:9187":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"18:754:63006":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"5:3106:10436":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:47312:4645":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:8716:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:10198:10907":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:1387:4801":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"18:829:8101":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:10244:7205":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:11169:6621":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:12348:8707":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:5231:4723":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:49760:4067":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"12:971:4810":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:3044:6800":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"17:10899:10924":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:10340:8036":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:3819:4753":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:24427:10447":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:13331:8986":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:1088:4713":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:10455:8070":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"18:712:4684":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:46769:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:46371:4723":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"2:52046:7012":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"16:6089:7782":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:24792:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:46276:202":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:9275:8433":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"12:2072:6645":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"2:46330:4754":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:3750:4554":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:57974:10617":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"17:13975:9169":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"6:4135:9898":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:4:989":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:12170:8664":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:12585:8747":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:50574:7292":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"5:1729:4805":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:25155:7257":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:2188:4776":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:46212:198":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:50238:6956":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:46676:7341":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"5:8248:4545":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:52692:7028":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:2391:4591":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:13361:8991":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"16:7295:7743":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:11686:5403":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:3679:3976":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"17:10643:8449":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:9676:62999":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"12:1203:7555":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:10598:10919":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"6:4425:9989":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:12157:8663":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:12003:8635":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"13:0:4408":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:48111:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:46632:7171":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:52726:7010":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"5:5495:6568":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"16:5887:7664":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:3444:4737":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"6:5247:10097":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"3:321:208":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"5:5917:5379":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"5:6782:7377":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:2956:180":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"16:3366:7924":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:24510:10792":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"5:3114:61521":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:10558:10916":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:11282:48973":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"16:6858:7952":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:6474:10303":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"16:5923:7779":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:12282:8682":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:5570:6525":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"6:5447:10201":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"6:6914:10420":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:3411:4706":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:48002:181":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"6:3987:9827":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:10571:7991":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:10271:8247":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:10511:208":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"6:1712:9729":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:53716:10602":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:47303:4643":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:3661:4758":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:50418:4556":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:52302:7053":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:3803:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"6:4308:9938":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:5536:4547":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:10512:1619":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"17:10975:10933":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"12:1703:7568":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:13352:8990":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:11438:5394":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"16:6286:7573":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:21:679":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"6:539:9550":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"6:4296:9931":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:3183:234":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"5:8473:10437":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"2:46755:7173":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:24531:7271":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:3109:6984":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:46786:7279":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:47841:1849":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"18:837:5418":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:11754:8587":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"14:47:10963":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:49840:5438":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"12:466:11181":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:10787:6752":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"17:13873:9144":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:53795:10607":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:10543:11001":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:3482:4738":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:46955:4662":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:50509:7231":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"17:13735:9109":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"6:5567:10237":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:9260:23633":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:6250:10394":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:12921:8806":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:52199:10550":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:11257:6837":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:13463:9018":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:4036:6601":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"12:0:4414":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"16:6050:7781":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"6:6097:10309":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:11671:8570":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"12:2404:62994":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"6:4088:9875":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:10390:8040":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"6:1704:9728":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:12800:5423":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:1592:4812":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"8:0:4410":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"5:2284:7368":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"5:981:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"16:7471:7734":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"16:5443:7641":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:2917:6576":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"1:10966:4275":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"1:13387:10992":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:2543:8068":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:11181:8497":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:3503:4743":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:3860:7078":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:23179:7077":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"17:542:7675":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"6:4402:9982":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:49858:5437":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:853:6763":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:4242:9917":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:6688:10415":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:783:3855":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"17:13507:9032":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:15877:4440":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"17:12318:8688":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"6:4356:9960":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:10364:8034":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:1431:4545":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:51401:7050":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:681:8501":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:51672:10540":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"5:8573:4596":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:14953:10828":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"5:6505:229":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:49619:5383":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:52538:7033":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:50533:7229":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:13921:8252":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"2:8741:1979":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:4256:6593":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:24419:10446":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"12:2253:4336":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:52456:7048":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:13155:8940":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:47016:4666":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:3058:6804":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:50313:6958":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:46699:7342":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:6917:5005":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:11049:6688":{"crate_id":1,"path":["std","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"17:13539:9040":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"16:3521:9186":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:6639:4664":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:3470:4549":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:32450:7304":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:10988:10934":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"16:5605:7648":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"16:2883:7927":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:14640:57070":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"2:47934:208":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"5:1296:7389":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"14:0:4415":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:5578:6527":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"6:4410:9985":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:4516:10027":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:49958:5434":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:11352:6695":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:13323:8983":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:8873:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"9:927:46737":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"16:4942:9212":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:14879:59805":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"5:7484:1621":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"16:7782:7745":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"16:7247:7770":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"6:5390:10180":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:3177:150":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:10562:110":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:11134:6619":{"crate_id":1,"path":["std","net","socket_addr","SocketAddr"],"kind":"enum"},"18:611:8108":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:49680:5400":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"6:580:9579":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"12:2419:4558":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"6:5488:10211":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"6:4075:9869":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"6:5204:10080":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"6:521:9542":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:10504:11896":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"16:5498:7644":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:8210:5449":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"13:121:47283":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"1:14392:10822":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"1:15875:4438":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:50521:7236":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:46668:5430":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"5:2005:4595":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"2:53224:7022":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:10814:7979":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:11189:6838":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:11945:8626":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:24543:7270":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:10240:8005":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"16:3297:7971":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"16:7792:7773":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:4198:9913":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"12:880:4595":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"16:3077:7970":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"9:1056:7482":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"6:6931:10425":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:973:6784":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"5:3960:5451":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:1113:11897":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:49808:5401":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:10937:10930":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"16:4840:9209":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"1:1374:3584":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:4110:9887":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:10973:4069":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:9519:6833":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"17:11810:8604":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:12551:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"17:13257:8968":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:13073:8928":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:37953:4684":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:13093:7224":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"16:2733:1658":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:13428:9007":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:12469:8728":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"12:2392:1670":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:10394:8030":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:8603:164":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"5:8396:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"17:10187:10906":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:11263:6857":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"5:6766:4786":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:13785:9121":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"5:0:284":{"crate_id":5,"path":["alloc"],"kind":"module"},"5:7074:1524":{"crate_id":5,"path":["alloc","vec"],"kind":"module"},"17:13404:8999":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"0:5101:106":{"crate_id":0,"path":["itertools","FoldWhile","Continue"],"kind":"variant"},"6:4160:9911":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"6:4208:9914":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"either","html_root_url":"https://docs.rs/either/1/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":21}