{"root":"0:0:2028","crate_version":"1.6.0","includes_private":false,"index":{"0:138:2678":{"id":"0:138:2678","crate_id":0,"name":"put_i64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[757,4],"end":[759,5]},"visibility":"default","docs":"Writes a signed 64 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i64_le(0x0102030405060708);\nassert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:8176:940":{"id":"1:8176:940","crate_id":1,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2880-0:1172:2186":{"id":"b:1:2880-0:1172:2186","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1172:2186","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2883:3082"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:485":{"id":"0:485","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[725,0],"end":[729,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"4:7048:263","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:486:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:369-0:24:2026":{"id":"0:369-0:24:2026","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[80,21],"end":[80,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::buf::Buf","name":"Buf","id":"0:24:2026","glob":false}}},"0:1056:2422":{"id":"0:1056:2422","crate_id":0,"name":"get_int_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:320:2944":{"id":"0:320:2944","crate_id":0,"name":"write_byte","span":{"filename":"src/buf/uninit_slice.rs","begin":[107,4],"end":[111,5]},"visibility":"public","docs":"Write a single byte at the specified offset.\n\n# Panics\n\nThe function panics if `index` is out of bounds.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\n\nlet mut data = [b'f', b'o', b'o'];\nlet slice = unsafe { UninitSlice::from_raw_parts_mut(data.as_mut_ptr(), 3) };\n\nslice.write_byte(0, b'b');\n\nassert_eq!(b\"boo\", &data[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}],["byte",{"primitive":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13252:32382":{"id":"1:13252:32382","crate_id":1,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13155:8092":{"id":"1:13155:8092","crate_id":1,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"5:12306:458"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"1:43443:8073","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:503":{"id":"0:503","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[779,0],"end":[783,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"items":["0:504:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:652:3143":{"id":"0:652:3143","crate_id":0,"name":"split_to","span":{"filename":"src/bytes_mut.rs","begin":[385,4],"end":[402,5]},"visibility":"public","docs":"Splits the buffer into two at the given index.\n\nAfterwards `self` contains elements `[at, len)`, and the returned `BytesMut`\ncontains elements `[0, at)`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut a = BytesMut::from(&b\"hello world\"[..]);\nlet mut b = a.split_to(5);\n\na[0] = b'!';\nb[0] = b'j';\n\nassert_eq!(&a[..], b\"!world\");\nassert_eq!(&b[..], b\"jello\");\n```\n\n# Panics\n\nPanics if `at > len`.","links":{},"attrs":["#[must_use = \"consider BytesMut::advance if you don't need the other half\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["at",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:788:685":{"id":"0:788:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1550,4],"end":[1552,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:646:2269":{"id":"0:646:2269","crate_id":0,"name":"is_empty","span":{"filename":"src/bytes_mut.rs","begin":[202,4],"end":[204,5]},"visibility":"public","docs":"Returns true if the `BytesMut` has a length of 0.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet b = BytesMut::with_capacity(64);\nassert!(b.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13260:32388":{"id":"1:13260:32388","crate_id":1,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:4901:32388"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"1:43784:8019","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1106:2681":{"id":"0:1106:2681","crate_id":0,"name":"put_i64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2890-0:1135:2183":{"id":"b:1:2890-0:1135:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2860:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1135:2183","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2893:136","1:2894:1786"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2895-0:1172:2186":{"id":"b:1:2895-0:1172:2186","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1172:2186","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2898:136","1:2899:1784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:360-0:1107:2180":{"id":"0:360-0:1107:2180","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[32,0],"end":[32,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::chain::Chain","name":"Chain","id":"0:1107:2180","glob":false}}},"0:653:3154":{"id":"0:653:3154","crate_id":0,"name":"truncate","span":{"filename":"src/bytes_mut.rs","begin":[424,4],"end":[430,5]},"visibility":"public","docs":"Shortens the buffer, keeping the first `len` bytes and dropping the\nrest.\n\nIf `len` is greater than the buffer's current length, this has no\neffect.\n\nExisting underlying capacity is preserved.\n\nThe [split_off](`Self::split_off()`) method can emulate `truncate`, but this causes the\nexcess bytes to be returned instead of dropped.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::from(&b\"hello world\"[..]);\nbuf.truncate(5);\nassert_eq!(buf, b\"hello\"[..]);\n```","links":{"`Self::split_off()`":"0:650:3134"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:209:2197":{"id":"0:209:2197","crate_id":0,"name":"remaining","span":{"filename":"src/buf/chain.rs","begin":[135,4],"end":[137,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1152":{"id":"0:1152","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:39151:2907","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeFull","id":"1:39168:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1153:198","0:1154:924"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:734":{"id":"0:734","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1273,0],"end":[1289,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"name":"Extend","id":"1:8177:3484","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:735:3436"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:325:981":{"id":"0:325:981","crate_id":0,"name":"len","span":{"filename":"src/buf/uninit_slice.rs","begin":[205,4],"end":[207,5]},"visibility":"public","docs":"Returns the number of bytes in the slice.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut data = [0, 1, 2];\nlet mut slice = &mut data[..];\nlet len = BufMut::chunk_mut(&mut slice).len();\n\nassert_eq!(len, 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:465:469":{"id":"0:465:469","crate_id":0,"name":"cmp","span":{"filename":"src/bytes.rs","begin":[664,4],"end":[666,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:643:2461":{"id":"0:643:2461","crate_id":0,"name":"with_capacity","span":{"filename":"src/bytes_mut.rs","begin":[148,4],"end":[150,5]},"visibility":"public","docs":"Creates a new `BytesMut` with the specified capacity.\n\nThe returned `BytesMut` will be able to hold at least `capacity` bytes\nwithout reallocating.\n\nIt is important to note that this function does not specify the length\nof the returned `BytesMut`, but only the capacity.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut bytes = BytesMut::with_capacity(64);\n\n// `bytes` contains no data, even though there is capacity\nassert_eq!(bytes.len(), 0);\n\nbytes.put(&b\"hello world\"[..]);\n\nassert_eq!(&bytes[..], b\"hello world\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["capacity",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:764:685":{"id":"0:764:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1478,4],"end":[1480,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:409":{"id":"0:409","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[121,0],"end":[538,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:410:1161","0:412:3058","0:413:981","0:414:2269","0:415:3052","0:416:2294","0:417:1666","0:419:3116","0:420:3134","0:421:3143","0:422:3154","0:423:3160"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1102:2667":{"id":"0:1102:2667","crate_id":0,"name":"put_u64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:691:617":{"id":"0:691:617","crate_id":0,"name":"deref","span":{"filename":"src/bytes_mut.rs","begin":[1146,4],"end":[1148,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:31:2203":{"id":"0:31:2203","crate_id":0,"name":"copy_to_slice","span":{"filename":"src/buf/buf_impl.rs","begin":[268,4],"end":[282,5]},"visibility":"default","docs":"Copies bytes from `self` into `dst`.\n\nThe cursor is advanced by the number of bytes copied. `self` must have\nenough remaining bytes to fill `dst`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\nlet mut dst = [0; 5];\n\nbuf.copy_to_slice(&mut dst);\nassert_eq!(&b\"hello\"[..], &dst);\nassert_eq!(6, buf.remaining());\n```\n\n# Panics\n\nThis function panics if `self.remaining() < dst.len()`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2898:136":{"id":"1:2898:136","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"1:31943:4010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:1:3103:246-0:311:2184":{"id":"a:1:3103:246-0:311:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:675:2197":{"id":"0:675:2197","crate_id":0,"name":"remaining","span":{"filename":"src/bytes_mut.rs","begin":[1049,4],"end":[1051,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1134:787":{"id":"0:1134:787","crate_id":0,"name":"fmt","span":{"filename":"src/buf/reader.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10223:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10204:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:143:2697":{"id":"0:143:2697","crate_id":0,"name":"put_i128","span":{"filename":"src/buf/buf_mut.rs","begin":[880,4],"end":[882,5]},"visibility":"default","docs":"Writes a signed 128 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i128(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2884-0:620:2032":{"id":"b:1:2884-0:620:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2886:817"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:56:2396":{"id":"0:56:2396","crate_id":0,"name":"get_i128_le","span":{"filename":"src/buf/buf_impl.rs","begin":[811,4],"end":[813,5]},"visibility":"default","docs":"Gets a signed 128 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_i128_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:133:2659":{"id":"0:133:2659","crate_id":0,"name":"put_i32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[638,4],"end":[640,5]},"visibility":"default","docs":"Writes a signed 32 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i32_ne(0x0809A0A1);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");\n} else {\n    assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:212:2266":{"id":"0:212:2266","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/chain.rs","begin":[166,4],"end":[170,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"5:8461:2188","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1035:2313":{"id":"0:1035:2313","crate_id":0,"name":"get_u16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:714:857":{"id":"0:714:857","crate_id":0,"name":"hash","span":{"filename":"src/bytes_mut.rs","begin":[1211,4],"end":[1217,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"H"},"bounds":[{"trait_bound":{"trait":{"name":"hash::Hasher","id":"1:10473:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:728:940":{"id":"0:728:940","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes_mut.rs","begin":[1259,4],"end":[1261,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:8168:164","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1157":{"id":"0:1157","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:39151:2907","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeInclusive","id":"1:39243:213","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1158:198","0:1159:924"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13165:32354":{"id":"1:13165:32354","crate_id":1,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"5:12306:458","self::pattern":"1:12817:3934"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:357:2988":{"id":"0:357:2988","crate_id":0,"name":"flush","span":{"filename":"src/buf/writer.rs","begin":[85,4],"end":[87,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"5:3038:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:446":{"id":"0:446","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[619,0],"end":[623,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2601:102","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:447:2989"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32020:2474-0:311:2184":{"id":"a:1:32020:2474-0:311:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:722:3482":{"id":"0:722:3482","crate_id":0,"name":"write_fmt","span":{"filename":"src/bytes_mut.rs","begin":[1244,4],"end":[1246,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["args",{"resolved_path":{"name":"fmt::Arguments","id":"1:42639:3483","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10204:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13259:11638":{"id":"1:13259:11638","crate_id":1,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:4904:11638"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"1:43775:7906","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:333:817":{"id":"0:333:817","crate_id":0,"name":"from","span":{"filename":"src/buf/uninit_slice.rs","begin":[223,4],"end":[225,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"1:30458:2778","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:741":{"id":"0:741","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1300,0],"end":[1309,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"name":"Extend","id":"1:8177:3484","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:742:3436"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:32:2300":{"id":"0:32:2300","crate_id":0,"name":"get_u8","span":{"filename":"src/buf/buf_impl.rs","begin":[300,4],"end":[307,5]},"visibility":"default","docs":"Gets an unsigned 8 bit integer from `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08 hello\"[..];\nassert_eq!(8, buf.get_u8());\n```\n\n# Panics\n\nThis function panics if there is no more remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:359-0:111:2027":{"id":"0:359-0:111:2027","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[31,0],"end":[31,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::buf_mut::BufMut","name":"BufMut","id":"0:111:2027","glob":false}}},"a:1:3138:11625-0:399:2031":{"id":"a:1:3138:11625-0:399:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3138:11625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:1:2607-0:311:2184":{"id":"b:1:2607-0:311:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2601:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2609:2989"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:443":{"id":"0:443","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[610,0],"end":[617,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"1:10465:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:444:857"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:774:1278":{"id":"0:774:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1508,4],"end":[1510,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13159:4502":{"id":"1:13159:4502","crate_id":1,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"1:43721:3707","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13168:32355":{"id":"1:13168:32355","crate_id":1,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"5:12306:458","self::pattern":"1:12817:3934"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12838:11722","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1004:2327":{"id":"0:1004:2327","crate_id":0,"name":"get_i16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1033:2303":{"id":"0:1033:2303","crate_id":0,"name":"get_i8","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:998:2300":{"id":"0:998:2300","crate_id":0,"name":"get_u8","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:67:2444":{"id":"0:67:2444","crate_id":0,"name":"get_f64","span":{"filename":"src/buf/buf_impl.rs","begin":[1059,4],"end":[1061,5]},"visibility":"default","docs":"Gets an IEEE754 double-precision (8 bytes) floating point number from\n`self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33 hello\"[..];\nassert_eq!(1.2f64, buf.get_f64());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:642":{"id":"0:642","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[124,0],"end":[1028,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:643:2461","0:644:1161","0:645:981","0:646:2269","0:647:2782","0:648:812","0:649:3324","0:650:3134","0:651:3348","0:652:3143","0:653:3154","0:654:3160","0:655:2790","0:656:2783","0:657:2784","0:659:2788","0:660:3450","0:671:3437"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13197:32360":{"id":"1:13197:32360","crate_id":1,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"5:12306:458","str::splitn":"1:13194:32359","self::pattern":"1:12817:3934"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"1:43589:4522","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12838:11722","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:153:2734":{"id":"0:153:2734","crate_id":0,"name":"put_f32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1154,4],"end":[1156,5]},"visibility":"default","docs":"Writes  an IEEE754 single-precision (4 bytes) floating point number to\n`self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f32_le(1.2f32);\nassert_eq!(buf, b\"\\x9A\\x99\\x99\\x3F\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:428":{"id":"0:428","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[542,0],"end":[542,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:495":{"id":"0:495","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[755,0],"end":[759,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::string::String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:496:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:352:2206":{"id":"0:352:2206","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/writer.rs","begin":[52,4],"end":[54,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.\n\n# Examples\n\n```rust\nuse bytes::BufMut;\n\nlet mut buf = vec![].writer();\n\nbuf.get_mut().reserve(1024);\n\nassert_eq!(1024, buf.get_ref().capacity());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2890-0:1116:2181":{"id":"b:1:2890-0:1116:2181","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2860:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2893:136","1:2894:1786"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3719-0:311:2184":{"id":"b:1:3719-0:311:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3717:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3721:1799"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:504:685":{"id":"0:504:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[780,4],"end":[782,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1400,0],"end":[1429,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["take","chain","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_le","get_u32","get_i128_le","get_i128","get_u128_ne","get_i128_ne","get_u16_ne","get_u128","get_f64_ne","copy_to_bytes","get_f32","get_uint_ne","get_u32_le","chunks_vectored","get_i16_le","get_i16","get_i16_ne","get_u128_le","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_int","get_int_le","get_int_ne","get_f32_ne","get_uint","reader","has_remaining","copy_to_slice","get_f64_le","get_f64","get_u16_le","get_f32_le"],"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"items":["0:82:2197","0:83:2199","0:84:2202","0:85:2203"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:66:2440":{"id":"0:66:2440","crate_id":0,"name":"get_f32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1038,4],"end":[1040,5]},"visibility":"default","docs":"Gets an IEEE754 single-precision (4 bytes) floating point number from\n`self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x3F\\x99\\x99\\x9A hello\",\n    false => b\"\\x9A\\x99\\x99\\x3F hello\",\n};\nassert_eq!(1.2f32, buf.get_f32_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1027:2266":{"id":"0:1027:2266","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"5:8461:2188","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:742:3436":{"id":"0:742:3436","crate_id":0,"name":"extend","span":{"filename":"src/bytes_mut.rs","begin":[1301,4],"end":[1308,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:8168:164","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:777":{"id":"0:777","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1519,0],"end":[1523,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"4:7048:263","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:778:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:2612:3481":{"id":"1:2612:3481","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:452":{"id":"0:452","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[634,0],"end":[641,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:8168:164","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:454:172","0:455:2181","0:456:940"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1097:2650":{"id":"0:1097:2650","crate_id":0,"name":"put_u32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3138:11625-0:1135:2183":{"id":"a:1:3138:11625-0:1135:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3138:11625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3138:11625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1135:2183","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1049:2370":{"id":"0:1049:2370","crate_id":0,"name":"get_i64","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148:2717":{"id":"0:148:2717","crate_id":0,"name":"put_uint_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1014,4],"end":[1020,5]},"visibility":"default","docs":"Writes an unsigned n-byte integer to `self` in the native-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_uint_ne(0x010203, 3);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\");\n} else {\n    assert_eq!(buf, b\"\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self` or if `nbytes` is greater than 8.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1105:2678":{"id":"0:1105:2678","crate_id":0,"name":"put_i64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2610-0:1122:2182":{"id":"b:1:2610-0:1122:2182","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2604:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1122:2182","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2612:3481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2895-0:1135:2183":{"id":"b:1:2895-0:1135:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1135:2183","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2898:136","1:2899:1784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1153:198":{"id":"0:1153:198","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:441":{"id":"0:441","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[603,0],"end":[608,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"1:2848:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:442:335"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:760:685":{"id":"0:760:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1466,4],"end":[1468,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1119":{"id":"0:1119","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[20,9],"end":[20,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:10249:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10249:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1121:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1017:2376":{"id":"0:1017:2376","crate_id":0,"name":"get_i64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1160":{"id":"0:1160","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:3379:2908","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeInclusive","id":"1:39243:213","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1161:925"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:370-0:111:2027":{"id":"0:370-0:111:2027","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[80,26],"end":[80,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::buf::BufMut","name":"BufMut","id":"0:111:2027","glob":false}}},"1:13139:2200":{"id":"1:13139:2200","crate_id":1,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"1:41587:190"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:10908:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:10908:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13145:31482":{"id":"1:13145:31482","crate_id":1,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:10908:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:10908:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:8172-0:1116:2181":{"id":"b:1:8172-0:1116:2181","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:8314:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:8168:164","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:8174:172","1:8175:2181","1:8176:940"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:24:2026":{"id":"0:24:2026","crate_id":0,"name":"Buf","span":{"filename":"src/buf/buf_impl.rs","begin":[93,0],"end":[1220,1]},"visibility":"public","docs":"Read bytes from a buffer.\n\nA buffer stores bytes in memory such that read operations are infallible.\nThe underlying storage may or may not be in contiguous memory. A `Buf` value\nis a cursor into the buffer. Reading from `Buf` advances the cursor\nposition. It can be thought of as an efficient `Iterator` for collections of\nbytes.\n\nThe simplest `Buf` is a `&[u8]`.\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(b'h', buf.get_u8());\nassert_eq!(b'e', buf.get_u8());\nassert_eq!(b'l', buf.get_u8());\n\nlet mut rest = [0; 8];\nbuf.copy_to_slice(&mut rest);\n\nassert_eq!(&rest[..], &b\"lo world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:25:2197","0:26:2199","0:27:2266","0:29:2202","0:30:2270","0:31:2203","0:32:2300","0:33:2303","0:34:2309","0:35:2313","0:36:2320","0:37:2324","0:38:2327","0:39:2330","0:40:2335","0:41:2339","0:42:2344","0:43:2347","0:44:2350","0:45:2353","0:46:2358","0:47:2362","0:48:2367","0:49:2370","0:50:2373","0:51:2376","0:52:2381","0:53:2385","0:54:2390","0:55:2393","0:56:2396","0:57:2399","0:58:2404","0:59:2408","0:60:2415","0:61:2419","0:62:2422","0:63:2425","0:64:2430","0:65:2435","0:66:2440","0:67:2444","0:68:2447","0:69:2451","0:70:2460","0:72:2176","0:73:2173","0:75:2175"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:206","0:81","0:77","0:433","0:338","0:293","0:86","0:79","0:674"]}}},"0:840":{"id":"0:840","crate_id":0,"name":null,"span":{"filename":"src/fmt/debug.rs","begin":[45,0],"end":[49,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10249:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:841:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:69:2451":{"id":"0:69:2451","crate_id":0,"name":"get_f64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1104,4],"end":[1106,5]},"visibility":"default","docs":"Gets an IEEE754 double-precision (8 bytes) floating point number from\n`self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33 hello\",\n    false => b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F hello\",\n};\nassert_eq!(1.2f64, buf.get_f64_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:179":{"id":"0:179","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1572,0],"end":[1637,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["writer","put_u128","put_f64_le","put_f64","put_u8","put_u64_le","put_bytes","put_f32_le","put_slice","chain_mut","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_i32_le","put_i32","put_u32_ne","put_uint_ne","put_uint","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_f32","put_u64","put_f32_ne","put","put_uint_le","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne"],"trait":{"name":"BufMut","id":"0:111:2027","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::vec::Vec","id":"4:7048:263","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:180:2531","0:181:2550","0:182:2577","0:183:2462","0:185:2591","0:186:2600"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:472:685":{"id":"0:472:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[684,4],"end":[686,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1179:787":{"id":"0:1179:787","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[34,0],"end":[34,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:10223:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:10204:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:255":{"id":"0:255","crate_id":0,"name":null,"span":{"filename":"src/buf/limit.rs","begin":[59,0],"end":[75,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:111:2027","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["writer","put_u128","put_f64_le","put_f64","put_u8","put_u64_le","put_bytes","put_f32_le","put_slice","chain_mut","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_i32_le","put_i32","put_u32_ne","put_uint_ne","put_uint","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_f32","put_u64","put_f32_ne","put","put_uint_le","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne"],"trait":{"name":"BufMut","id":"0:111:2027","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1122:2182","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:257:2531","0:258:2577","0:259:2550"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:129:2645":{"id":"0:129:2645","crate_id":0,"name":"put_u32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[538,4],"end":[540,5]},"visibility":"default","docs":"Writes an unsigned 32 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u32_le(0x0809A0A1);\nassert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1432,0],"end":[1460,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:2848:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["take","chain","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_le","get_u32","get_i128_le","get_i128","get_u128_ne","get_i128_ne","get_u16_ne","get_u128","get_f64_ne","copy_to_bytes","get_f32","get_uint_ne","get_u32_le","chunks_vectored","get_i16_le","get_i16","get_i16_ne","get_u128_le","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_int","get_int_le","get_int_ne","get_f32_ne","get_uint","reader","has_remaining","copy_to_slice","get_f64_le","get_f64","get_u16_le","get_f32_le"],"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::io::Cursor","id":"5:8237:2497","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:88:2197","0:89:2199","0:90:2202"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:41679:4060-0:1116:2181":{"id":"a:1:41679:4060-0:1116:2181","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:41679:4060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:41679:4060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:185:2591":{"id":"0:185:2591","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1627,4],"end":[1629,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1129:2185":{"id":"0:1129:2185","crate_id":0,"name":"Reader","span":{"filename":"src/buf/reader.rs","begin":[11,0],"end":[13,1]},"visibility":"public","docs":"A `Buf` adapter which implements `io::Read` for the inner value.\n\nThis struct is generally created by calling `reader()` on `Buf`. See\ndocumentation of [`reader()`](Buf::reader) for more\ndetails.","links":{"Buf::reader":"0:75:2175"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:267","a:1:3138:11625-0:1129:2185","a:1:3103:246-0:1129:2185","a:1:32078:4012-0:1129:2185","a:1:41679:4060-0:1129:2185","a:1:41680:4059-0:1129:2185","a:1:32019:236-0:1129:2185","b:1:2610-0:1129:2185","b:1:2884-0:1129:2185","b:1:2895-0:1129:2185","b:1:3719-0:1129:2185","b:1:2880-0:1129:2185","b:1:2890-0:1129:2185","b:1:2607-0:1129:2185","0:275","0:1132","0:272"]}}},"0:290:2206":{"id":"0:290:2206","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/take.rs","begin":[77,4],"end":[79,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\".take(2);\nlet mut dst = vec![];\n\nbuf.get_mut().advance(2);\n\ndst.put(&mut buf);\nassert_eq!(*dst, b\"ll\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:315:1161":{"id":"0:315:1161","crate_id":0,"name":"new","span":{"filename":"src/buf/uninit_slice.rs","begin":[36,4],"end":[38,5]},"visibility":"public","docs":"Creates a `&mut UninitSlice` wrapping a slice of initialised memory.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\n\nlet mut buffer = [0u8; 64];\nlet slice = UninitSlice::new(&mut buffer[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3719-0:620:2032":{"id":"b:1:3719-0:620:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3717:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3721:1799"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:790:1278":{"id":"0:790:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1556,4],"end":[1558,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:168:2531":{"id":"0:168:2531","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1478,4],"end":[1480,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:683:2462":{"id":"0:683:2462","crate_id":0,"name":"put","span":{"filename":"src/bytes_mut.rs","begin":[1105,4],"end":[1115,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269:2498":{"id":"0:269:2498","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/reader.rs","begin":[33,4],"end":[35,5]},"visibility":"public","docs":"Gets a reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::Buf;\n\nlet buf = b\"hello world\".reader();\n\nassert_eq!(b\"hello world\", buf.get_ref());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3138:11625-0:1129:2185":{"id":"a:1:3138:11625-0:1129:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3138:11625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3138:11625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1129:2185","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:838":{"id":"0:838","crate_id":0,"name":null,"span":{"filename":"src/fmt/debug.rs","begin":[39,0],"end":[43,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10249:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:839:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:449:172":{"id":"0:449:172","crate_id":0,"name":"Item","span":{"filename":"src/bytes.rs","begin":[626,4],"end":[626,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u8"}}}},"0:420:3134":{"id":"0:420:3134","crate_id":0,"name":"split_off","span":{"filename":"src/bytes.rs","begin":[386,4],"end":[409,5]},"visibility":"public","docs":"Splits the bytes into two at the given index.\n\nAfterwards `self` contains elements `[0, at)`, and the returned `Bytes`\ncontains elements `[at, len)`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut a = Bytes::from(&b\"hello world\"[..]);\nlet b = a.split_off(5);\n\nassert_eq!(&a[..], b\"hello\");\nassert_eq!(&b[..], b\" world\");\n```\n\n# Panics\n\nPanics if `at > len`.","links":{},"attrs":["#[must_use = \"consider Bytes::truncate if you don't need the other half\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["at",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:158:2174":{"id":"0:158:2174","crate_id":0,"name":"limit","span":{"filename":"src/buf/buf_mut.rs","begin":[1276,4],"end":[1281,5]},"visibility":"default","docs":"Creates an adaptor which can write at most `limit` bytes to `self`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet arr = &mut [0u8; 128][..];\nassert_eq!(arr.remaining_mut(), 128);\n\nlet dst = arr.limit(10);\nassert_eq!(dst.remaining_mut(), 10);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["limit",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Limit","id":"0:1122:2182","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:448":{"id":"0:448","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[625,0],"end":[632,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:8168:164","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:449:172","0:450:2181","0:451:940"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:779":{"id":"0:779","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1525,0],"end":[1529,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::vec::Vec","id":"4:7048:263","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:780:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:799":{"id":"0:799","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1579,0],"end":[1583,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"items":["0:800:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13129:32343":{"id":"1:13129:32343","crate_id":1,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:702":{"id":"0:702","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1177,0],"end":[1181,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:703:817"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1085:2550":{"id":"0:1085:2550","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1006:2335":{"id":"0:1006:2335","crate_id":0,"name":"get_u32","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1139":{"id":"0:1139","crate_id":0,"name":null,"span":{"filename":"src/buf/take.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:10249:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10249:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1135:2183","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1141:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2895-0:1116:2181":{"id":"b:1:2895-0:1116:2181","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2898:136","1:2899:1784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:491":{"id":"0:491","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[743,0],"end":[747,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:492:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2880-0:1107:2180":{"id":"b:1:2880-0:1107:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1107:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2883:3082"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:203:2815":{"id":"0:203:2815","crate_id":0,"name":"last_ref","span":{"filename":"src/buf/chain.rs","begin":[88,4],"end":[90,5]},"visibility":"public","docs":"Gets a reference to the last underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet buf = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nassert_eq!(buf.last_ref()[..], b\"world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"U"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:288:2826":{"id":"0:288:2826","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/take.rs","begin":[39,4],"end":[41,5]},"visibility":"public","docs":"Consumes this `Take`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\".take(2);\nlet mut dst = vec![];\n\ndst.put(&mut buf);\nassert_eq!(*dst, b\"he\"[..]);\n\nlet mut buf = buf.into_inner();\n\ndst.clear();\ndst.put(&mut buf);\nassert_eq!(*dst, b\"llo world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13135:3170":{"id":"1:13135:3170","crate_id":1,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"1:12365:11723"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2884-0:1172:2186":{"id":"b:1:2884-0:1172:2186","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1172:2186","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2886:817"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1072:2645":{"id":"0:1072:2645","crate_id":0,"name":"put_u32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:654:3160":{"id":"0:654:3160","crate_id":0,"name":"clear","span":{"filename":"src/bytes_mut.rs","begin":[443,4],"end":[445,5]},"visibility":"public","docs":"Clears the buffer, removing all data. Existing capacity is preserved.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::from(&b\"hello world\"[..]);\nbuf.clear();\nassert!(buf.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:656:2783":{"id":"0:656:2783","crate_id":0,"name":"set_len","span":{"filename":"src/bytes_mut.rs","begin":[510,4],"end":[513,5]},"visibility":"public","docs":"Sets the length of the buffer.\n\nThis will explicitly set the size of the buffer without actually\nmodifying the data, so it is up to the caller to ensure that the data\nhas been initialized.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut b = BytesMut::from(&b\"hello world\"[..]);\n\nunsafe {\n    b.set_len(5);\n}\n\nassert_eq!(&b[..], b\"hello\");\n\nunsafe {\n    b.set_len(11);\n}\n\nassert_eq!(&b[..], b\"hello world\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2610-0:399:2031":{"id":"b:1:2610-0:399:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2604:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2612:3481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:431":{"id":"0:431","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[551,0],"end":[556,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2623:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:432:462"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13138:2602":{"id":"1:13138:2602","crate_id":1,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"5:12323:1829"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1146:925":{"id":"0:1146:925","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"Range","id":"1:39183:209","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:787":{"id":"0:787","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1549,0],"end":[1553,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::string::String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:788:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1161:925":{"id":"0:1161:925","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeInclusive","id":"1:39243:213","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:89:2199":{"id":"0:89:2199","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1439,4],"end":[1443,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1073:2650":{"id":"0:1073:2650","crate_id":0,"name":"put_u32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1074:2653":{"id":"0:1074:2653","crate_id":0,"name":"put_i32","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:690:248":{"id":"0:690:248","crate_id":0,"name":"Target","span":{"filename":"src/bytes_mut.rs","begin":[1143,4],"end":[1143,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"slice":{"primitive":"u8"}}}}},"0:672":{"id":"0:672","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1030,0],"end":[1045,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:3340:2036","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:673:658"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:721:1940":{"id":"0:721:1940","crate_id":0,"name":"write_str","span":{"filename":"src/bytes_mut.rs","begin":[1234,4],"end":[1241,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10204:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13137:334":{"id":"1:13137:334","crate_id":1,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:13138:2602","`u8`":"5:12323:1829"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:157:2750":{"id":"0:157:2750","crate_id":0,"name":"put_f64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1258,4],"end":[1260,5]},"visibility":"default","docs":"Writes  an IEEE754 double-precision (8 bytes) floating point number to\n`self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f64_ne(1.2f64);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33\");\n} else {\n    assert_eq!(buf, b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:75:2175":{"id":"0:75:2175","crate_id":0,"name":"reader","span":{"filename":"src/buf/buf_impl.rs","begin":[1214,4],"end":[1219,5]},"visibility":"default","docs":"Creates an adaptor which implements the `Read` trait for `self`.\n\nThis function returns a new value which implements `Read` by adapting\nthe `Read` trait functions to the `Buf` trait functions. Given that\n`Buf` operations are infallible, none of the `Read` functions will\nreturn with `Err`.\n\n# Examples\n\n```\nuse bytes::{Bytes, Buf};\nuse std::io::Read;\n\nlet buf = Bytes::from(\"hello world\");\n\nlet mut reader = buf.reader();\nlet mut dst = [0; 1024];\n\nlet num = reader.read(&mut dst).unwrap();\n\nassert_eq!(11, num);\nassert_eq!(&dst[..11], &b\"hello world\"[..]);\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Reader","id":"0:1129:2185","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2610-0:1172:2186":{"id":"b:1:2610-0:1172:2186","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2604:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1172:2186","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2612:3481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13191:32358":{"id":"1:13191:32358","crate_id":1,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"1:12817:3934","str::split":"1:13179:3348","prim@char":"5:12306:458","str::split_terminator":"1:13188:32357"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"1:43535:8076","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12838:11722","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13249:32379":{"id":"1:13249:32379","crate_id":1,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2890-0:1122:2182":{"id":"b:1:2890-0:1122:2182","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2860:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1122:2182","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2893:136","1:2894:1786"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13126":{"id":"1:13126","crate_id":1,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["1:13127:981","1:13128:2269","1:13129:32343","1:13130:32344","1:13132:32345","1:13135:3170","1:13136:32346","1:13137:334","1:13138:2602","1:13139:2200","1:13141:2206","1:13143:31481","1:13145:31482","1:13147:32347","1:13148:32348","1:13149:32349","1:13150:2777","1:13151:32350","1:13152:32351","1:13154:7952","1:13155:8092","1:13156:2028","1:13157:29902","1:13158:29914","1:13159:4502","1:13160:32353","1:13161:29918","1:13162:3538","1:13165:32354","1:13168:32355","1:13171:4309","1:13175:4274","1:13179:3348","1:13182:29904","1:13185:32356","1:13188:32357","1:13191:32358","1:13194:32359","1:13197:32360","1:13200:32361","1:13203:32362","1:13206:3595","1:13209:32363","1:13212:32364","1:13215:32365","1:13218:32366","1:13220:32367","1:13222:32368","1:13224:32369","1:13225:32370","1:13226:32371","1:13229:32372","1:13232:32373","1:13235:32374","1:13238:32375","1:13241:32376","1:13244:32377","1:13247:32378","1:13249:32379","1:13250:32380","1:13251:32381","1:13252:32382","1:13253:32383","1:13254:32384","1:13255:32385","1:13256:32386","1:13257:32387","1:13259:11638","1:13260:32388"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:483":{"id":"0:483","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[719,0],"end":[723,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"4:7048:263","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:484:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"4:5621:3731":{"id":"4:5621:3731","crate_id":4,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"4:7632:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32078:4012-0:1135:2183":{"id":"a:1:32078:4012-0:1135:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32078:4012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32078:4012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1135:2183","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1104:2675":{"id":"0:1104:2675","crate_id":0,"name":"put_i64","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13175:4274":{"id":"1:13175:4274","crate_id":1,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"1:41587:190","prim@char":"5:12306:458","self::pattern":"1:12817:3934"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12838:11722","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:704":{"id":"0:704","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1183,0],"end":[1187,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:705:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:84:2202":{"id":"0:84:2202","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1412,4],"end":[1418,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1022:2422":{"id":"0:1022:2422","crate_id":0,"name":"get_int_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:41680:4059-0:1135:2183":{"id":"a:1:41680:4059-0:1135:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:41680:4059","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:41680:4059","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1135:2183","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13179:3348":{"id":"1:13179:3348","crate_id":1,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"1:12817:3934","`DoubleEndedIterator`":"1:8206:129","prim@char":"5:12306:458","str::split_whitespace":"1:13157:29902","str::rsplit":"1:13185:32356"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"1:43467:3708","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:808:685":{"id":"0:808:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1604,4],"end":[1606,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:789":{"id":"0:789","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1555,0],"end":[1559,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::string::String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:790:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:785":{"id":"0:785","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1543,0],"end":[1547,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:786:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:447:2989":{"id":"0:447:2989","crate_id":0,"name":"borrow","span":{"filename":"src/bytes.rs","begin":[620,4],"end":[622,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:749:820":{"id":"0:749:820","crate_id":0,"name":"from_iter","span":{"filename":"src/bytes_mut.rs","begin":[1318,4],"end":[1320,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["into_iter",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:8168:164","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1078:2667":{"id":"0:1078:2667","crate_id":0,"name":"put_u64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:330:817":{"id":"0:330:817","crate_id":0,"name":"from","span":{"filename":"src/buf/uninit_slice.rs","begin":[217,4],"end":[219,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:362-0:1122:2182":{"id":"0:362-0:1122:2182","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[34,0],"end":[34,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::limit::Limit","name":"Limit","id":"0:1122:2182","glob":false}}},"a:1:41679:4060-0:1135:2183":{"id":"a:1:41679:4060-0:1135:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:41679:4060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:41679:4060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1135:2183","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:685:2591":{"id":"0:685:2591","crate_id":0,"name":"put_slice","span":{"filename":"src/bytes_mut.rs","begin":[1117,4],"end":[1119,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:27:2266":{"id":"0:27:2266","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/buf_impl.rs","begin":[181,4],"end":[192,5]},"visibility":"default","docs":"Fills `dst` with potentially multiple slices starting at `self`'s\ncurrent position.\n\nIf the `Buf` is backed by disjoint slices of bytes, `chunk_vectored` enables\nfetching more than one slice at once. `dst` is a slice of `IoSlice`\nreferences, enabling the slice to be directly used with [`writev`]\nwithout any further conversion. The sum of the lengths of all the\nbuffers in `dst` will be less than or equal to `Buf::remaining()`.\n\nThe entries in `dst` will be overwritten, but the data **contained** by\nthe slices **will not** be modified. If `chunk_vectored` does not fill every\nentry in `dst`, then `dst` is guaranteed to contain all remaining slices\nin `self.\n\nThis is a lower level function. Most operations are done with other\nfunctions.\n\n# Implementer notes\n\nThis function should never panic. Once the end of the buffer is reached,\ni.e., `Buf::remaining` returns 0, calls to `chunk_vectored` must return 0\nwithout mutating `dst`.\n\nImplementations should also take care to properly handle being called\nwith `dst` being a zero length slice.\n\n[`writev`]: http://man7.org/linux/man-pages/man2/readv.2.html","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"5:8461:2188","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:70:2460":{"id":"0:70:2460","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/buf_impl.rs","begin":[1127,4],"end":[1137,5]},"visibility":"default","docs":"Consumes `len` bytes inside self and returns new instance of `Bytes`\nwith this data.\n\nThis function may be optimized by the underlying type to avoid actual\ncopies. For example, `Bytes` implementation will do a shallow copy\n(ref-count increment).\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet bytes = (&b\"hello world\"[..]).copy_to_bytes(5);\nassert_eq!(&bytes[..], &b\"hello\"[..]);\n```\n\n# Panics\n\nThis function panics if `len > self.remaining()`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"crate::Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1014:2367":{"id":"0:1014:2367","crate_id":0,"name":"get_u64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32019:236-0:1172:2186":{"id":"a:1:32019:236-0:1172:2186","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32019:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32019:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1172:2186","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:410:1161":{"id":"0:410:1161","crate_id":0,"name":"new","span":{"filename":"src/bytes.rs","begin":[136,4],"end":[141,5]},"visibility":"public","docs":"Creates a new empty `Bytes`.\n\nThis will not allocate and the returned `Bytes` handle will be empty.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::new();\nassert_eq!(&b[..], b\"\");\n```","links":{},"attrs":["#[inline]","#[cfg(not(all(loom, test)))]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:511":{"id":"0:511","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[800,0],"end":[807,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:514:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:468:685":{"id":"0:468:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[672,4],"end":[674,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1052:2404":{"id":"0:1052:2404","crate_id":0,"name":"get_uint","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1020:2415":{"id":"0:1020:2415","crate_id":0,"name":"get_uint_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:176:2550":{"id":"0:176:2550","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1535,4],"end":[1543,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:682:2577":{"id":"0:682:2577","crate_id":0,"name":"chunk_mut","span":{"filename":"src/bytes_mut.rs","begin":[1095,4],"end":[1100,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:458:820":{"id":"0:458:820","crate_id":0,"name":"from_iter","span":{"filename":"src/bytes.rs","begin":[644,4],"end":[646,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["into_iter",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:8168:164","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:340:2199":{"id":"0:340:2199","crate_id":0,"name":"chunk","span":{"filename":"src/buf/vec_deque.rs","begin":[10,4],"end":[17,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:234:2206":{"id":"0:234:2206","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/iter.rs","begin":[102,4],"end":[104,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BytesMut};\n\nlet buf = BytesMut::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\n\niter.get_mut().advance(1);\n\nassert_eq!(iter.next(), Some(b'c'));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:45:2353":{"id":"0:45:2353","crate_id":0,"name":"get_i32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[582,4],"end":[584,5]},"visibility":"default","docs":"Gets a signed 32 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x08\\x09\\xA0\\xA1 hello\",\n    false => b\"\\xA1\\xA0\\x09\\x08 hello\",\n};\nassert_eq!(0x0809A0A1, buf.get_i32_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1071:2641":{"id":"0:1071:2641","crate_id":0,"name":"put_u32","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:8174:172":{"id":"1:8174:172","crate_id":1,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"Iterator","id":"1:8314:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:61:2419":{"id":"0:61:2419","crate_id":0,"name":"get_int","span":{"filename":"src/buf/buf_impl.rs","begin":[923,4],"end":[925,5]},"visibility":"default","docs":"Gets a signed n-byte integer from `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03 hello\"[..];\nassert_eq!(0x010203, buf.get_int(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`, or\nif `nbytes` is greater than 8.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1163:198":{"id":"0:1163:198","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1172:2186":{"id":"0:1172:2186","crate_id":0,"name":"Writer","span":{"filename":"src/buf/writer.rs","begin":[11,0],"end":[13,1]},"visibility":"public","docs":"A `BufMut` adapter which implements `io::Write` for the inner value.\n\nThis struct is generally created by calling `writer()` on `BufMut`. See\ndocumentation of [`writer()`](BufMut::writer) for more\ndetails.","links":{"BufMut::writer":"0:159:2179"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:349","a:1:3138:11625-0:1172:2186","a:1:3103:246-0:1172:2186","a:1:32078:4012-0:1172:2186","a:1:41679:4060-0:1172:2186","a:1:41680:4059-0:1172:2186","a:1:32019:236-0:1172:2186","b:1:2610-0:1172:2186","b:1:2884-0:1172:2186","b:1:2895-0:1172:2186","b:1:3719-0:1172:2186","b:1:2880-0:1172:2186","b:1:2890-0:1172:2186","b:1:2607-0:1172:2186","0:1175","0:354"]}}},"0:127:2637":{"id":"0:127:2637","crate_id":0,"name":"put_i16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[492,4],"end":[494,5]},"visibility":"default","docs":"Writes a signed 16 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i16_ne(0x0809);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x08\\x09\");\n} else {\n    assert_eq!(buf, b\"\\x09\\x08\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:328":{"id":"0:328","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[216,0],"end":[220,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"slice":{"primitive":"u8"}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:330:817"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1088:2610":{"id":"0:1088:2610","crate_id":0,"name":"put_i8","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1036:2320":{"id":"0:1036:2320","crate_id":0,"name":"get_u16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:518:817":{"id":"0:518:817","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[819,4],"end":[821,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1092:2631":{"id":"0:1092:2631","crate_id":0,"name":"put_i16","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1029:2202":{"id":"0:1029:2202","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:412:3058":{"id":"0:412:3058","crate_id":0,"name":"from_static","span":{"filename":"src/bytes.rs","begin":[164,4],"end":[171,5]},"visibility":"public","docs":"Creates a new `Bytes` from a static slice.\n\nThe returned `Bytes` will point directly to the static slice. There is\nno allocating or copying.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::from_static(b\"hello\");\nassert_eq!(&b[..], b\"hello\");\n```","links":{},"attrs":["#[inline]","#[cfg(not(all(loom, test)))]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bytes",{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:4:727-0:620:2032":{"id":"b:4:727-0:620:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2623:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:723:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["4:729:3924","4:730:28482","4:731:28483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:687":{"id":"0:687","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1135,0],"end":[1140,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"1:2848:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:688:335"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:41680:4059-0:1107:2180":{"id":"a:1:41680:4059-0:1107:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:41680:4059","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:41680:4059","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:41680:4059","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1107:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:693:3480":{"id":"0:693:3480","crate_id":0,"name":"as_mut","span":{"filename":"src/bytes_mut.rs","begin":[1153,4],"end":[1155,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:694":{"id":"0:694","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1158,0],"end":[1163,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"1:3324:3244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:695:619"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:706":{"id":"0:706","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1189,0],"end":[1193,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:707:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:62:2422":{"id":"0:62:2422","crate_id":0,"name":"get_int_le","span":{"filename":"src/buf/buf_impl.rs","begin":[944,4],"end":[946,5]},"visibility":"default","docs":"Gets a signed n-byte integer from `self` in little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x010203, buf.get_int_le(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`, or\nif `nbytes` is greater than 8.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1023:2425":{"id":"0:1023:2425","crate_id":0,"name":"get_int_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:436:2202":{"id":"0:436:2202","crate_id":0,"name":"advance","span":{"filename":"src/bytes.rs","begin":[570,4],"end":[581,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:783":{"id":"0:783","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1537,0],"end":[1541,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:784:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1010:2350":{"id":"0:1010:2350","crate_id":0,"name":"get_i32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:478:1278":{"id":"0:478:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[702,4],"end":[704,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:528":{"id":"0:528","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[901,0],"end":[906,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::vec::Vec","id":"4:7048:263","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:529:817"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:770:1278":{"id":"0:770:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1496,4],"end":[1498,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:482:1278":{"id":"0:482:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[714,4],"end":[716,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3103:246-0:1116:2181":{"id":"a:1:3103:246-0:1116:2181","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:323:2602":{"id":"0:323:2602","crate_id":0,"name":"as_mut_ptr","span":{"filename":"src/buf/uninit_slice.rs","begin":[161,4],"end":[163,5]},"visibility":"public","docs":"Return a raw pointer to the slice's buffer.\n\n# Safety\n\nThe caller **must not** read from the referenced memory and **must not**\nwrite **uninitialized** bytes to the slice either.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut data = [0, 1, 2];\nlet mut slice = &mut data[..];\nlet ptr = BufMut::chunk_mut(&mut slice).as_mut_ptr();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:660:3450":{"id":"0:660:3450","crate_id":0,"name":"unsplit","span":{"filename":"src/bytes_mut.rs","begin":[811,4],"end":[820,5]},"visibility":"public","docs":"Absorbs a `BytesMut` that was previously split off.\n\nIf the two `BytesMut` objects were previously contiguous and not mutated\nin a way that causes re-allocation i.e., if `other` was created by\ncalling `split_off` on this `BytesMut`, then this is an `O(1)` operation\nthat just decreases a reference count and sets a few indices.\nOtherwise this method degenerates to\n`self.extend_from_slice(other.as_ref())`.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::with_capacity(64);\nbuf.extend_from_slice(b\"aaabbbcccddd\");\n\nlet split = buf.split_off(6);\nassert_eq!(b\"aaabbb\", &buf[..]);\nassert_eq!(b\"cccddd\", &split[..]);\n\nbuf.unsplit(split);\nassert_eq!(b\"aaabbbcccddd\", &buf[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:677:2202":{"id":"0:677:2202","crate_id":0,"name":"advance","span":{"filename":"src/bytes_mut.rs","begin":[1059,4],"end":[1071,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1063:2606":{"id":"0:1063:2606","crate_id":0,"name":"put_u8","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1065:2614":{"id":"0:1065:2614","crate_id":0,"name":"put_u16","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:169:2577":{"id":"0:169:2577","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1483,4],"end":[1485,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:417:1666":{"id":"0:417:1666","crate_id":0,"name":"slice","span":{"filename":"src/bytes.rs","begin":[262,4],"end":[302,5]},"visibility":"public","docs":"Returns a slice of self for the provided range.\n\nThis will increment the reference count for the underlying memory and\nreturn a new `Bytes` handle set to the slice.\n\nThis operation is `O(1)`.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet a = Bytes::from(&b\"hello world\"[..]);\nlet b = a.slice(2..5);\n\nassert_eq!(&b[..], b\"llo\");\n```\n\n# Panics\n\nRequires that `begin <= end` and `end <= self.len()`, otherwise slicing\nwill panic.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["range",{"impl_trait":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"1:3473:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl RangeBounds<usize>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"1:3473:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2607-0:620:2032":{"id":"b:1:2607-0:620:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2601:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2609:2989"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:696":{"id":"0:696","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1165,0],"end":[1169,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:698:817"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:413:981":{"id":"0:413:981","crate_id":0,"name":"len","span":{"filename":"src/bytes.rs","begin":[194,4],"end":[196,5]},"visibility":"public","docs":"Returns the number of bytes contained in this `Bytes`.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::from(&b\"hello\"[..]);\nassert_eq!(b.len(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:995:2202":{"id":"0:995:2202","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:455:2181":{"id":"0:455:2181","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes.rs","begin":[636,4],"end":[636,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"1:11053:3169","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"0:250:2826":{"id":"0:250:2826","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/limit.rs","begin":[20,4],"end":[22,5]},"visibility":"public","docs":"Consumes this `Limit`, returning the underlying value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2610-0:311:2184":{"id":"b:1:2610-0:311:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2604:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2612:3481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:712:60":{"id":"0:712:60","crate_id":0,"name":"default","span":{"filename":"src/bytes_mut.rs","begin":[1205,4],"end":[1207,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:698:817":{"id":"0:698:817","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1166,4],"end":[1168,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1043:2347":{"id":"0:1043:2347","crate_id":0,"name":"get_i32","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1166:925":{"id":"0:1166:925","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeTo","id":"1:39223:214","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:146:2708":{"id":"0:146:2708","crate_id":0,"name":"put_uint","span":{"filename":"src/buf/buf_mut.rs","begin":[953,4],"end":[960,5]},"visibility":"default","docs":"Writes an unsigned n-byte integer to `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_uint(0x010203, 3);\nassert_eq!(buf, b\"\\x01\\x02\\x03\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self` or if `nbytes` is greater than 8.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:327:787":{"id":"0:327:787","crate_id":0,"name":"fmt","span":{"filename":"src/buf/uninit_slice.rs","begin":[211,4],"end":[213,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10223:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10204:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:289:2498":{"id":"0:289:2498","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/take.rs","begin":[56,4],"end":[58,5]},"visibility":"public","docs":"Gets a reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::Buf;\n\nlet buf = b\"hello world\".take(2);\n\nassert_eq!(11, buf.get_ref().remaining());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:776:685":{"id":"0:776:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1514,4],"end":[1516,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Vec","id":"4:7048:263","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13136:32346":{"id":"1:13136:32346","crate_id":1,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:73:2173":{"id":"0:73:2173","crate_id":0,"name":"chain","span":{"filename":"src/buf/buf_impl.rs","begin":[1182,4],"end":[1187,5]},"visibility":"default","docs":"Creates an adaptor which will chain this buffer with another.\n\nThe returned `Buf` instance will first consume all bytes from `self`.\nAfterwards the output is equivalent to the output of next.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut chain = b\"hello \"[..].chain(&b\"world\"[..]);\n\nlet full = chain.copy_to_bytes(11);\nassert_eq!(full.chunk(), b\"hello world\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["next",{"generic":"U"}]],"output":{"resolved_path":{"name":"Chain","id":"0:1107:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1057:2425":{"id":"0:1057:2425","crate_id":0,"name":"get_int_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:657:2784":{"id":"0:657:2784","crate_id":0,"name":"reserve","span":{"filename":"src/bytes_mut.rs","begin":[574,4],"end":[585,5]},"visibility":"public","docs":"Reserves capacity for at least `additional` more bytes to be inserted\ninto the given `BytesMut`.\n\nMore than `additional` bytes may be reserved in order to avoid frequent\nreallocations. A call to `reserve` may result in an allocation.\n\nBefore allocating new buffer space, the function will attempt to reclaim\nspace in the existing buffer. If the current handle references a view\ninto a larger original buffer, and all other handles referencing part\nof the same original buffer have been dropped, then the current view\ncan be copied/shifted to the front of the buffer and the handle can take\nownership of the full buffer, provided that the full buffer is large\nenough to fit the requested additional capacity.\n\nThis optimization will only happen if shifting the data from the current\nview to the front of the buffer is not too expensive in terms of the\n(amortized) time required. The precise condition is subject to change;\nas of now, the length of the data being shifted needs to be at least as\nlarge as the distance that it's shifted by. If the current view is empty\nand the original buffer is large enough to fit the requested additional\ncapacity, then reallocations will never happen.\n\n# Examples\n\nIn the following example, a new buffer is allocated.\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::from(&b\"hello\"[..]);\nbuf.reserve(64);\nassert!(buf.capacity() >= 69);\n```\n\nIn the following example, the existing buffer is reclaimed.\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(128);\nbuf.put(&[0; 64][..]);\n\nlet ptr = buf.as_ptr();\nlet other = buf.split();\n\nassert!(buf.is_empty());\nassert_eq!(buf.capacity(), 64);\n\ndrop(other);\nbuf.reserve(128);\n\nassert_eq!(buf.capacity(), 128);\nassert_eq!(buf.as_ptr(), ptr);\n```\n\n# Panics\n\nPanics if the new capacity overflows `usize`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["additional",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1081:2678":{"id":"0:1081:2678","crate_id":0,"name":"put_i64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:41680:4059-0:1129:2185":{"id":"a:1:41680:4059-0:1129:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:41680:4059","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:41680:4059","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1129:2185","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13212:32364":{"id":"1:13212:32364","crate_id":1,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"1:12817:3934","`DoubleEndedIterator`":"1:8206:129","prim@char":"5:12306:458","str::rmatch_indices":"1:13215:32365"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"1:43617:8077","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:57:2399":{"id":"0:57:2399","crate_id":0,"name":"get_i128_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[834,4],"end":[836,5]},"visibility":"default","docs":"Gets a signed 128 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\",\n    false => b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x01020304050607080910111213141516, buf.get_i128_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:201:2806":{"id":"0:201:2806","crate_id":0,"name":"first_ref","span":{"filename":"src/buf/chain.rs","begin":[53,4],"end":[55,5]},"visibility":"public","docs":"Gets a reference to the first underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet buf = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nassert_eq!(buf.first_ref()[..], b\"hello\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:804:685":{"id":"0:804:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1592,4],"end":[1594,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13161:29918":{"id":"1:13161:29918","crate_id":1,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"1:43759:7951","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:719:3481":{"id":"0:719:3481","crate_id":0,"name":"borrow_mut","span":{"filename":"src/bytes_mut.rs","begin":[1227,4],"end":[1229,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2607-0:1116:2181":{"id":"b:1:2607-0:1116:2181","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2601:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2609:2989"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1021:2419":{"id":"0:1021:2419","crate_id":0,"name":"get_int","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:171:2591":{"id":"0:171:2591","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1499,4],"end":[1507,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:731:28483":{"id":"4:731:28483","crate_id":4,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1182":{"id":"0:1182","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[36,0],"end":[36,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"1:10262:3543","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1183:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:671:3437":{"id":"0:671:3437","crate_id":0,"name":"spare_capacity_mut","span":{"filename":"src/bytes_mut.rs","begin":[1020,4],"end":[1027,5]},"visibility":"public","docs":"Returns the remaining spare capacity of the buffer as a slice of `MaybeUninit<u8>`.\n\nThe returned slice can be used to fill the buffer with data (e.g. by\nreading from a file) before marking the data as initialized using the\n[`set_len`] method.\n\n[`set_len`]: BytesMut::set_len\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\n// Allocate buffer big enough for 10 bytes.\nlet mut buf = BytesMut::with_capacity(10);\n\n// Fill in the first 3 elements.\nlet uninit = buf.spare_capacity_mut();\nuninit[0].write(0);\nuninit[1].write(1);\nuninit[2].write(2);\n\n// Mark the first 3 bytes of the buffer as being initialized.\nunsafe {\n    buf.set_len(3);\n}\n\nassert_eq!(&buf[..], &[0, 1, 2]);\n```","links":{"BytesMut::set_len":"0:656:2783"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"1:30458:2778","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:730:28482":{"id":"4:730:28482","crate_id":4,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13147:32347":{"id":"1:13147:32347","crate_id":1,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"5:12312:1700","str::slice_mut_unchecked":"1:13148:32348","crate::ops::Index":"1:39151:2907"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"1:13247:32378":{"id":"1:13247:32378","crate_id":1,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"1:12778:135","`FromStr`":"1:12777:3933"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41718:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"1:12777:3933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"1:12777:3933","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:709:469":{"id":"0:709:469","crate_id":0,"name":"cmp","span":{"filename":"src/bytes_mut.rs","begin":[1196,4],"end":[1198,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:41679:4060-0:311:2184":{"id":"a:1:41679:4060-0:311:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:41679:4060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2610-0:1135:2183":{"id":"b:1:2610-0:1135:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2604:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1135:2183","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2612:3481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1154:924":{"id":"0:1154:924","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeFull","id":"1:39168:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:297:2202":{"id":"0:297:2202","crate_id":0,"name":"advance","span":{"filename":"src/buf/take.rs","begin":[142,4],"end":[146,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:523":{"id":"0:523","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[864,0],"end":[893,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"4:295:2190","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:524:817"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:237:172":{"id":"0:237:172","crate_id":0,"name":"Item","span":{"filename":"src/buf/iter.rs","begin":[108,4],"end":[108,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u8"}}}},"0:795":{"id":"0:795","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1570,0],"end":[1577,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:798:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:33:2303":{"id":"0:33:2303","crate_id":0,"name":"get_i8","span":{"filename":"src/buf/buf_impl.rs","begin":[325,4],"end":[332,5]},"visibility":"default","docs":"Gets a signed 8 bit integer from `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08 hello\"[..];\nassert_eq!(8, buf.get_i8());\n```\n\n# Panics\n\nThis function panics if there is no more remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:486:1278":{"id":"0:486:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[726,4],"end":[728,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Vec","id":"4:7048:263","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1005:2330":{"id":"0:1005:2330","crate_id":0,"name":"get_i16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:711":{"id":"0:711","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1203,0],"end":[1208,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:2932:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:712:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:26:2199":{"id":"0:26:2199","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[150,4],"end":[150,29]},"visibility":"default","docs":"Returns a slice starting at the current position and of length between 0\nand `Buf::remaining()`. Note that this *can* return shorter slice (this allows\nnon-continuous internal representation).\n\nThis is a lower level function. Most operations are done with other\nfunctions.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(buf.chunk(), &b\"hello world\"[..]);\n\nbuf.advance(6);\n\nassert_eq!(buf.chunk(), &b\"world\"[..]);\n```\n\n# Implementer notes\n\nThis function should never panic. Once the end of the buffer is reached,\ni.e., `Buf::remaining` returns 0, calls to `chunk()` should return an\nempty slice.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:1:2610-0:1116:2181":{"id":"b:1:2610-0:1116:2181","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2604:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2612:3481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13206:3595":{"id":"1:13206:3595","crate_id":1,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"1:12817:3934","`DoubleEndedIterator`":"1:8206:129","prim@char":"5:12306:458","str::rmatches":"1:13209:32363"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"1:43671:8079","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13256:32386":{"id":"1:13256:32386","crate_id":1,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"1:974:40980"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:251:2498":{"id":"0:251:2498","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/limit.rs","begin":[27,4],"end":[29,5]},"visibility":"public","docs":"Gets a reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:366-0:1129:2185":{"id":"0:366-0:1129:2185","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[39,15],"end":[39,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"self::reader::Reader","name":"Reader","id":"0:1129:2185","glob":false}}},"0:421:3143":{"id":"0:421:3143","crate_id":0,"name":"split_to","span":{"filename":"src/bytes.rs","begin":[435,4],"end":[457,5]},"visibility":"public","docs":"Splits the bytes into two at the given index.\n\nAfterwards `self` contains elements `[at, len)`, and the returned\n`Bytes` contains elements `[0, at)`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut a = Bytes::from(&b\"hello world\"[..]);\nlet b = a.split_to(5);\n\nassert_eq!(&a[..], b\" world\");\nassert_eq!(&b[..], b\"hello\");\n```\n\n# Panics\n\nPanics if `at > len`.","links":{},"attrs":["#[must_use = \"consider Bytes::advance if you don't need the other half\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["at",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:801":{"id":"0:801","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1585,0],"end":[1589,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"items":["0:802:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:423:3160":{"id":"0:423:3160","crate_id":0,"name":"clear","span":{"filename":"src/bytes.rs","begin":[505,4],"end":[507,5]},"visibility":"public","docs":"Clears the buffer, removing all data.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut buf = Bytes::from(&b\"hello world\"[..]);\nbuf.clear();\nassert!(buf.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:321:2294":{"id":"0:321:2294","crate_id":0,"name":"copy_from_slice","span":{"filename":"src/buf/uninit_slice.rs","begin":[134,4],"end":[142,5]},"visibility":"public","docs":"Copies bytes  from `src` into `self`.\n\nThe length of `src` must be the same as `self`.\n\n# Panics\n\nThe function panics if `src` has a different length than `self`.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\n\nlet mut data = [b'f', b'o', b'o'];\nlet slice = unsafe { UninitSlice::from_raw_parts_mut(data.as_mut_ptr(), 3) };\n\nslice.copy_from_slice(b\"bar\");\n\nassert_eq!(b\"bar\", &data[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:716":{"id":"0:716","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1220,0],"end":[1224,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2601:102","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:717:2989"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13244:32377":{"id":"1:13244:32377","crate_id":1,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"5:12306:458","self::pattern":"1:12817:3934"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12838:11722","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:461:685":{"id":"0:461:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[652,4],"end":[654,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83:2199":{"id":"0:83:2199","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1407,4],"end":[1409,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1039:2330":{"id":"0:1039:2330","crate_id":0,"name":"get_i16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2886:817":{"id":"1:2886:817","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:316:2779":{"id":"0:316:2779","crate_id":0,"name":"uninit","span":{"filename":"src/buf/uninit_slice.rs","begin":[55,4],"end":[57,5]},"visibility":"public","docs":"Creates a `&mut UninitSlice` wrapping a slice of uninitialised memory.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\nuse core::mem::MaybeUninit;\n\nlet mut buffer = [MaybeUninit::uninit(); 64];\nlet slice = UninitSlice::uninit(&mut buffer[..]);\n\nlet mut vec = Vec::with_capacity(1024);\nlet spare: &mut UninitSlice = vec.spare_capacity_mut().into();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"1:30458:2778","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:314":{"id":"0:314","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[24,0],"end":[208,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:315:1161","0:316:2779","0:318:2786","0:320:2944","0:321:2294","0:323:2602","0:324:2965","0:325:981"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:6:2025":{"id":"0:6:2025","crate_id":0,"name":"buf","span":{"filename":"src/buf/mod.rs","begin":[1,0],"end":[39,47]},"visibility":"public","docs":"Utilities for working with buffers.\n\nA buffer is any structure that contains a sequence of bytes. The bytes may\nor may not be stored in contiguous memory. This module contains traits used\nto abstract over buffers as well as utilities for working with buffer types.\n\n# `Buf`, `BufMut`\n\nThese are the two foundational traits for abstractly working with buffers.\nThey can be thought as iterators for byte structures. They offer additional\nperformance over `Iterator` by providing an API optimized for byte slices.\n\nSee [`Buf`] and [`BufMut`] for more details.\n\n[rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)","links":{"`BufMut`":"0:111:2027","`Buf`":"0:24:2026"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:358-0:24:2026","0:359-0:111:2027","0:360-0:1107:2180","0:361-0:1116:2181","0:362-0:1122:2182","0:363-0:1135:2183","0:364-0:311:2184","0:366-0:1129:2185","0:367-0:1172:2186"],"is_stripped":false}}},"0:470:1278":{"id":"0:470:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[678,4],"end":[680,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:516:60":{"id":"0:516:60","crate_id":0,"name":"default","span":{"filename":"src/bytes.rs","begin":[813,4],"end":[815,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:29:2202":{"id":"0:29:2202","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[224,4],"end":[224,38]},"visibility":"default","docs":"Advance the internal cursor of the Buf\n\nThe next call to `chunk()` will return a slice starting `cnt` bytes\nfurther into the underlying buffer.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(buf.chunk(), &b\"hello world\"[..]);\n\nbuf.advance(6);\n\nassert_eq!(buf.chunk(), &b\"world\"[..]);\n```\n\n# Panics\n\nThis function **may** panic if `cnt > self.remaining()`.\n\n# Implementer notes\n\nIt is recommended for implementations of `advance` to panic if `cnt >\nself.remaining()`. If the implementation does not panic, the call must\nbehave as if `cnt == self.remaining()`.\n\nA call with `cnt == 0` should never panic and be a no-op.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:997:2203":{"id":"0:997:2203","crate_id":0,"name":"copy_to_slice","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3719-0:1116:2181":{"id":"b:1:3719-0:1116:2181","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3717:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3721:1799"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:806:1278":{"id":"0:806:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1598,4],"end":[1600,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13238:32375":{"id":"1:13238:32375","crate_id":1,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"5:12306:458","self::pattern":"1:12817:3934"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12838:11722","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5611:33111":{"id":"4:5611:33111","crate_id":4,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"4:7632:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:745:820":{"id":"0:745:820","crate_id":0,"name":"from_iter","span":{"filename":"src/bytes_mut.rs","begin":[1312,4],"end":[1314,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["into_iter",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:8168:164","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:35:2313":{"id":"0:35:2313","crate_id":0,"name":"get_u16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[370,4],"end":[372,5]},"visibility":"default","docs":"Gets an unsigned 16 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x09\\x08 hello\"[..];\nassert_eq!(0x0809, buf.get_u16_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:992:2199":{"id":"0:992:2199","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:122:2614":{"id":"0:122:2614","crate_id":0,"name":"put_u16","span":{"filename":"src/buf/buf_mut.rs","begin":[369,4],"end":[371,5]},"visibility":"default","docs":"Writes an unsigned 16 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u16(0x0809);\nassert_eq!(buf, b\"\\x08\\x09\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1034:2309":{"id":"0:1034:2309","crate_id":0,"name":"get_u16","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:473":{"id":"0:473","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[689,0],"end":[693,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"slice":{"primitive":"u8"}},"items":["0:474:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:492:685":{"id":"0:492:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[744,4],"end":[746,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1099:2656":{"id":"0:1099:2656","crate_id":0,"name":"put_i32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[191,0],"end":[227,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:111:2027","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:111:2027","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["writer","put_u128","put_f64_le","put_f64","put_u8","put_u64_le","put_bytes","put_f32_le","put_slice","chain_mut","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_i32_le","put_i32","put_u32_ne","put_uint_ne","put_uint","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_f32","put_u64","put_f32_ne","put","put_uint_le","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne"],"trait":{"name":"BufMut","id":"0:111:2027","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1107:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["0:218:2531","0:219:2577","0:220:2550"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2890-0:1129:2185":{"id":"b:1:2890-0:1129:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2860:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1129:2185","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2893:136","1:2894:1786"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:724:462":{"id":"0:724:462","crate_id":0,"name":"clone","span":{"filename":"src/bytes_mut.rs","begin":[1250,4],"end":[1252,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3103:246-0:1107:2180":{"id":"a:1:3103:246-0:1107:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1107:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:526":{"id":"0:526","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[895,0],"end":[899,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:527:817"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1089:2614":{"id":"0:1089:2614","crate_id":0,"name":"put_u16","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:759":{"id":"0:759","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1465,0],"end":[1469,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:760:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:42:2344":{"id":"0:42:2344","crate_id":0,"name":"get_u32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[519,4],"end":[521,5]},"visibility":"default","docs":"Gets an unsigned 32 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x08\\x09\\xA0\\xA1 hello\",\n    false => b\"\\xA1\\xA0\\x09\\x08 hello\",\n};\nassert_eq!(0x0809A0A1, buf.get_u32_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1101:2663":{"id":"0:1101:2663","crate_id":0,"name":"put_u64","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180:2531":{"id":"0:180:2531","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1574,4],"end":[1577,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225:2181":{"id":"0:225:2181","crate_id":0,"name":"IntoIter","span":{"filename":"src/buf/chain.rs","begin":[235,4],"end":[235,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Chain","id":"0:1107:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}}}],"bindings":[]}}}}}}},"b:1:2607-0:1129:2185":{"id":"b:1:2607-0:1129:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2601:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1129:2185","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2609:2989"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:291:2174":{"id":"0:291:2174","crate_id":0,"name":"limit","span":{"filename":"src/buf/take.rs","begin":[99,4],"end":[101,5]},"visibility":"public","docs":"Returns the maximum number of bytes that can be read.\n\n# Note\n\nIf the inner `Buf` has fewer bytes than indicated by this method then\nthat is the actual number of available bytes.\n\n# Examples\n\n```rust\nuse bytes::Buf;\n\nlet mut buf = b\"hello world\".take(2);\n\nassert_eq!(2, buf.limit());\nassert_eq!(b'h', buf.get_u8());\nassert_eq!(1, buf.limit());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1055:2419":{"id":"0:1055:2419","crate_id":0,"name":"get_int","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:463:1278":{"id":"0:463:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[658,4],"end":[660,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:733:940":{"id":"0:733:940","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes_mut.rs","begin":[1268,4],"end":[1270,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:8168:164","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:248":{"id":"0:248","crate_id":0,"name":null,"span":{"filename":"src/buf/limit.rs","begin":[18,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Limit","id":"0:1122:2182","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:250:2826","0:251:2498","0:252:2206","0:253:2174","0:254:2866"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:766:1278":{"id":"0:766:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1484,4],"end":[1486,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:167":{"id":"0:167","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1476,0],"end":[1521,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["writer","put_u128","put_f64_le","put_f64","put_u8","put_u64_le","put_bytes","put_f32_le","put_slice","chain_mut","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_i32_le","put_i32","put_u32_ne","put_uint_ne","put_uint","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_f32","put_u64","put_f32_ne","put","put_uint_le","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne"],"trait":{"name":"BufMut","id":"0:111:2027","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"items":["0:168:2531","0:169:2577","0:170:2550","0:171:2591","0:172:2600"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1177:787":{"id":"0:1177:787","crate_id":0,"name":"fmt","span":{"filename":"src/buf/writer.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10223:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10204:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:498:1278":{"id":"0:498:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[762,4],"end":[764,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:474:1278":{"id":"0:474:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[690,4],"end":[692,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1135:2183":{"id":"0:1135:2183","crate_id":0,"name":"Take","span":{"filename":"src/buf/take.rs","begin":[10,0],"end":[13,1]},"visibility":"public","docs":"A `Buf` adapter which limits the bytes read from an underlying buffer.\n\nThis struct is generally created by calling `take()` on `Buf`. See\ndocumentation of [`take()`](Buf::take) for more details.","links":{"Buf::take":"0:72:2176"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:286","a:1:3138:11625-0:1135:2183","a:1:3103:246-0:1135:2183","a:1:32078:4012-0:1135:2183","a:1:41679:4060-0:1135:2183","a:1:41680:4059-0:1135:2183","a:1:32019:236-0:1135:2183","b:1:2610-0:1135:2183","b:1:2884-0:1135:2183","b:1:2895-0:1135:2183","b:1:3719-0:1135:2183","b:1:2880-0:1135:2183","b:1:2890-0:1135:2183","b:1:2607-0:1135:2183","0:1139","0:293"]}}},"0:1019:2408":{"id":"0:1019:2408","crate_id":0,"name":"get_uint_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:339:2197":{"id":"0:339:2197","crate_id":0,"name":"remaining","span":{"filename":"src/buf/vec_deque.rs","begin":[6,4],"end":[8,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:324:2965":{"id":"0:324:2965","crate_id":0,"name":"as_uninit_slice_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[187,4],"end":[189,5]},"visibility":"public","docs":"Return a `&mut [MaybeUninit<u8>]` to this slice's buffer.\n\n# Safety\n\nThe caller **must not** read from the referenced memory and **must not** write\n**uninitialized** bytes to the slice either. This is because `BufMut` implementation\nthat created the `UninitSlice` knows which parts are initialized. Writing uninitialized\nbytes to the slice may cause the `BufMut` to read those bytes and trigger undefined\nbehavior.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut data = [0, 1, 2];\nlet mut slice = &mut data[..];\nunsafe {\n    let uninit_slice = BufMut::chunk_mut(&mut slice).as_uninit_slice_mut();\n};\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"1:30458:2778","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:64:2430":{"id":"0:64:2430","crate_id":0,"name":"get_f32","span":{"filename":"src/buf/buf_impl.rs","begin":[993,4],"end":[995,5]},"visibility":"default","docs":"Gets an IEEE754 single-precision (4 bytes) floating point number from\n`self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x3F\\x99\\x99\\x9A hello\"[..];\nassert_eq!(1.2f32, buf.get_f32());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1013:2362":{"id":"0:1013:2362","crate_id":0,"name":"get_u64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:298:2460":{"id":"0:298:2460","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/take.rs","begin":[148,4],"end":[154,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:137:2675":{"id":"0:137:2675","crate_id":0,"name":"put_i64","span":{"filename":"src/buf/buf_mut.rs","begin":[734,4],"end":[736,5]},"visibility":"default","docs":"Writes a signed 64 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i64(0x0102030405060708);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:145:2703":{"id":"0:145:2703","crate_id":0,"name":"put_i128_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[930,4],"end":[932,5]},"visibility":"default","docs":"Writes a signed 128 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i128_ne(0x01020304050607080910111213141516);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");\n} else {\n    assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:41680:4059-0:1116:2181":{"id":"a:1:41680:4059-0:1116:2181","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:41680:4059","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:41680:4059","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1159:924":{"id":"0:1159:924","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeInclusive","id":"1:39243:213","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1175":{"id":"0:1175","crate_id":0,"name":null,"span":{"filename":"src/buf/writer.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:10249:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10249:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1172:2186","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:1177:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:53:2385":{"id":"0:53:2385","crate_id":0,"name":"get_u128_le","span":{"filename":"src/buf/buf_impl.rs","begin":[748,4],"end":[750,5]},"visibility":"default","docs":"Gets an unsigned 128 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_u128_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2607-0:399:2031":{"id":"b:1:2607-0:399:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2601:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2609:2989"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:454:172":{"id":"0:454:172","crate_id":0,"name":"Item","span":{"filename":"src/bytes.rs","begin":[635,4],"end":[635,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}}},"0:439:248":{"id":"0:439:248","crate_id":0,"name":"Target","span":{"filename":"src/bytes.rs","begin":[595,4],"end":[595,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"slice":{"primitive":"u8"}}}}},"0:204:2820":{"id":"0:204:2820","crate_id":0,"name":"last_mut","span":{"filename":"src/buf/chain.rs","begin":[107,4],"end":[109,5]},"visibility":"public","docs":"Gets a mutable reference to the last underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = (&b\"hello \"[..])\n    .chain(&b\"world\"[..]);\n\nbuf.last_mut().advance(1);\n\nlet full = buf.copy_to_bytes(10);\nassert_eq!(full, b\"hello orld\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"U"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13200:32361":{"id":"1:13200:32361","crate_id":1,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13229:32372":{"id":"1:13229:32372","crate_id":1,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"5:12306:458","self::pattern":"1:12817:3934"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:224:172":{"id":"0:224:172","crate_id":0,"name":"Item","span":{"filename":"src/buf/chain.rs","begin":[234,4],"end":[234,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u8"}}}},"1:13152:32351":{"id":"1:13152:32351","crate_id":1,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"1:13151:32350"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:123:2619":{"id":"0:123:2619","crate_id":0,"name":"put_u16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[392,4],"end":[394,5]},"visibility":"default","docs":"Writes an unsigned 16 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u16_le(0x0809);\nassert_eq!(buf, b\"\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:744":{"id":"0:744","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1311,0],"end":[1315,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"1:8164:144","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:745:820"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1090:2619":{"id":"0:1090:2619","crate_id":0,"name":"put_u16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:90:2202":{"id":"0:90:2202","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1446,4],"end":[1459,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5623:33115":{"id":"4:5623:33115","crate_id":4,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:13253:32383"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:186:2600":{"id":"0:186:2600","crate_id":0,"name":"put_bytes","span":{"filename":"src/buf/buf_mut.rs","begin":[1632,4],"end":[1636,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:41680:4059-0:1122:2182":{"id":"a:1:41680:4059-0:1122:2182","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:41680:4059","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:41680:4059","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1122:2182","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:142:2694":{"id":"0:142:2694","crate_id":0,"name":"put_u128_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[857,4],"end":[859,5]},"visibility":"default","docs":"Writes an unsigned 128 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u128_ne(0x01020304050607080910111213141516);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");\n} else {\n    assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:457":{"id":"0:457","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[643,0],"end":[647,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"1:8164:144","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:458:820"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:63:2425":{"id":"0:63:2425","crate_id":0,"name":"get_int_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[968,4],"end":[974,5]},"visibility":"default","docs":"Gets a signed n-byte integer from `self` in native-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03 hello\",\n    false => b\"\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x010203, buf.get_int_ne(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`, or\nif `nbytes` is greater than 8.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:41679:4060-0:1122:2182":{"id":"a:1:41679:4060-0:1122:2182","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:41679:4060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:41679:4060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1122:2182","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3719-0:1122:2182":{"id":"b:1:3719-0:1122:2182","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3717:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1122:2182","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3721:1799"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:659:2788":{"id":"0:659:2788","crate_id":0,"name":"extend_from_slice","span":{"filename":"src/bytes_mut.rs","begin":[770,4],"end":[785,5]},"visibility":"public","docs":"Appends given bytes to this `BytesMut`.\n\nIf this `BytesMut` object does not have enough capacity, it is resized\nfirst.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::with_capacity(0);\nbuf.extend_from_slice(b\"aaabbb\");\nbuf.extend_from_slice(b\"cccddd\");\n\nassert_eq!(b\"aaabbbcccddd\", &buf[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["extend",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13151:32350":{"id":"1:13151:32350","crate_id":1,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"1:13152:32351"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1024:2460":{"id":"0:1024:2460","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"crate::Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:155:2743":{"id":"0:155:2743","crate_id":0,"name":"put_f64","span":{"filename":"src/buf/buf_mut.rs","begin":[1206,4],"end":[1208,5]},"visibility":"default","docs":"Writes  an IEEE754 double-precision (8 bytes) floating point number to\n`self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f64(1.2f64);\nassert_eq!(buf, b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13222:32368":{"id":"1:13222:32368","crate_id":1,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:791":{"id":"0:791","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1561,0],"end":[1568,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:794:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:140:2685":{"id":"0:140:2685","crate_id":0,"name":"put_u128","span":{"filename":"src/buf/buf_mut.rs","begin":[807,4],"end":[809,5]},"visibility":"default","docs":"Writes an unsigned 128 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u128(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:292:2866":{"id":"0:292:2866","crate_id":0,"name":"set_limit","span":{"filename":"src/buf/take.rs","begin":[127,4],"end":[129,5]},"visibility":"public","docs":"Sets the maximum number of bytes that can be read.\n\n# Note\n\nIf the inner `Buf` has fewer bytes than `lim` then that is the actual\nnumber of available bytes.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\".take(2);\nlet mut dst = vec![];\n\ndst.put(&mut buf);\nassert_eq!(*dst, b\"he\"[..]);\n\ndst.clear();\n\nbuf.set_limit(3);\ndst.put(&mut buf);\nassert_eq!(*dst, b\"llo\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["lim",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:311:2184":{"id":"0:311:2184","crate_id":0,"name":"UninitSlice","span":{"filename":"src/buf/uninit_slice.rs","begin":[22,0],"end":[22,42]},"visibility":"public","docs":"Uninitialized byte slice.\n\nReturned by `BufMut::chunk_mut()`, the referenced byte slice may be\nuninitialized. The wrapper provides safe access without introducing\nundefined behavior.\n\nThe safety invariants of this wrapper are:\n\n 1. Reading from an `UninitSlice` is undefined behavior.\n 2. Writing uninitialized bytes to an `UninitSlice` is undefined behavior.\n\nThe difference between `&mut UninitSlice` and `&mut [MaybeUninit<u8>]` is\nthat it is possible in safe code to write uninitialized bytes to an\n`&mut [MaybeUninit<u8>]`, which this type prohibits.","links":{},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:314","a:1:3138:11625-0:311:2184","a:1:3103:246-0:311:2184","a:1:32078:4012-0:311:2184","a:1:41679:4060-0:311:2184","a:1:41680:4059-0:311:2184","a:1:32019:236-0:311:2184","a:1:32020:2474-0:311:2184","b:1:2610-0:311:2184","b:1:3719-0:311:2184","b:1:2607-0:311:2184","0:326","0:1167","0:1162","0:1160","0:1142","0:1152","0:1157","0:328","0:1165","0:331","0:1147","0:1150","0:1170","0:1155","0:1145"]}}},"0:341:2202":{"id":"0:341:2202","crate_id":0,"name":"advance","span":{"filename":"src/buf/vec_deque.rs","begin":[19,4],"end":[21,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:41679:4060-0:1107:2180":{"id":"a:1:41679:4060-0:1107:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:41679:4060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:41679:4060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:41679:4060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1107:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1011:2353":{"id":"0:1011:2353","crate_id":0,"name":"get_i32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1084:2577":{"id":"0:1084:2577","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:680:2531":{"id":"0:680:2531","crate_id":0,"name":"remaining_mut","span":{"filename":"src/bytes_mut.rs","begin":[1080,4],"end":[1082,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1060:2577":{"id":"0:1060:2577","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32078:4012-0:399:2031":{"id":"a:1:32078:4012-0:399:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32078:4012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1001:2313":{"id":"0:1001:2313","crate_id":0,"name":"get_u16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:514:1278":{"id":"0:514:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[804,4],"end":[806,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:432:462":{"id":"0:432:462","crate_id":0,"name":"clone","span":{"filename":"src/bytes.rs","begin":[553,4],"end":[555,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:775":{"id":"0:775","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1513,0],"end":[1517,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"4:7048:263","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:776:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:182:2577":{"id":"0:182:2577","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1593,4],"end":[1606,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13128:2269":{"id":"1:13128:2269","crate_id":1,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13224:32369":{"id":"1:13224:32369","crate_id":1,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5620:33113":{"id":"4:5620:33113","crate_id":4,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"4:295:2190","`String`":"4:7632:242"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"4:295:2190","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:782:1278":{"id":"0:782:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1532,4],"end":[1534,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5603":{"id":"4:5603","crate_id":4,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["4:5604:33109","4:5605:2776","4:5608:33110","4:5611:33111","4:5619:33112","4:5620:33113","4:5621:3731","4:5622:33114","4:5623:33115"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:494:1278":{"id":"0:494:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[750,4],"end":[752,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:47:2362":{"id":"0:47:2362","crate_id":0,"name":"get_u64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[622,4],"end":[624,5]},"visibility":"default","docs":"Gets an unsigned 64 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_u64_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:434:2197":{"id":"0:434:2197","crate_id":0,"name":"remaining","span":{"filename":"src/bytes.rs","begin":[560,4],"end":[562,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:499":{"id":"0:499","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[767,0],"end":[771,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"items":["0:500:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13154:7952":{"id":"1:13154:7952","crate_id":1,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"5:12306:458"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"1:43437:3931","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2610-0:1107:2180":{"id":"b:1:2610-0:1107:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2604:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1107:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2612:3481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13188:32357":{"id":"1:13188:32357","crate_id":1,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"1:12817:3934","str::split":"1:13179:3348","prim@char":"5:12306:458","`DoubleEndedIterator`":"1:8206:129","str::rsplit_terminator":"1:13191:32358"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"1:43517:8075","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:54:2390":{"id":"0:54:2390","crate_id":0,"name":"get_u128_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[771,4],"end":[773,5]},"visibility":"default","docs":"Gets an unsigned 128 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\",\n    false => b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x01020304050607080910111213141516, buf.get_u128_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:156:2746":{"id":"0:156:2746","crate_id":0,"name":"put_f64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1230,4],"end":[1232,5]},"visibility":"default","docs":"Writes  an IEEE754 double-precision (8 bytes) floating point number to\n`self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f64_le(1.2f64);\nassert_eq!(buf, b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:159:2179":{"id":"0:159:2179","crate_id":0,"name":"writer","span":{"filename":"src/buf/buf_mut.rs","begin":[1308,4],"end":[1313,5]},"visibility":"default","docs":"Creates an adaptor which implements the `Write` trait for `self`.\n\nThis function returns a new value which implements `Write` by adapting\nthe `Write` trait functions to the `BufMut` trait functions. Given that\n`BufMut` operations are infallible, none of the `Write` functions will\nreturn with `Err`.\n\n# Examples\n\n```\nuse bytes::BufMut;\nuse std::io::Write;\n\nlet mut buf = vec![].writer();\n\nlet num = buf.write(&b\"hello world\"[..]).unwrap();\nassert_eq!(11, num);\n\nlet buf = buf.into_inner();\n\nassert_eq!(*buf, b\"hello world\"[..]);\n```","links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Writer","id":"0:1172:2186","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:747":{"id":"0:747","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1317,0],"end":[1321,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"1:8164:144","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:749:820"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1064:2610":{"id":"0:1064:2610","crate_id":0,"name":"put_i8","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:296:2199":{"id":"0:296:2199","crate_id":0,"name":"chunk","span":{"filename":"src/buf/take.rs","begin":[137,4],"end":[140,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:233:2498":{"id":"0:233:2498","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/iter.rs","begin":[80,4],"end":[82,5]},"visibility":"public","docs":"Gets a reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::{Buf, Bytes};\n\nlet buf = Bytes::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\n\nassert_eq!(2, iter.get_ref().remaining());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1038:2327":{"id":"0:1038:2327","crate_id":0,"name":"get_i16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:996:2270":{"id":"0:996:2270","crate_id":0,"name":"has_remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13143:31481":{"id":"1:13143:31481","crate_id":1,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:10908:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:10908:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:318:2786":{"id":"0:318:2786","crate_id":0,"name":"from_raw_parts_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[82,4],"end":[86,5]},"visibility":"public","docs":"Create a `&mut UninitSlice` from a pointer and a length.\n\n# Safety\n\nThe caller must ensure that `ptr` references a valid memory region owned\nby the caller representing a byte slice for the duration of `'a`.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\n\nlet bytes = b\"hello world\".to_vec();\nlet ptr = bytes.as_ptr() as *mut _;\nlet len = bytes.len();\n\nlet slice = unsafe { UninitSlice::from_raw_parts_mut(ptr, len) };\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ptr",{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}}],["len",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:435:2199":{"id":"0:435:2199","crate_id":0,"name":"chunk","span":{"filename":"src/bytes.rs","begin":[565,4],"end":[567,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2609:2989":{"id":"1:2609:2989","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1145":{"id":"0:1145","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:3379:2908","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Range","id":"1:39183:209","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1146:925"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:0:2028":{"id":"0:0:2028","crate_id":0,"name":"bytes","span":{"filename":"src/lib.rs","begin":[1,0],"end":[149,1]},"visibility":"public","docs":"Provides abstractions for working with bytes.\n\nThe `bytes` crate provides an efficient byte buffer structure\n([`Bytes`]) and traits for working with buffer\nimplementations ([`Buf`], [`BufMut`]).\n\n# `Bytes`\n\n`Bytes` is an efficient container for storing and operating on contiguous\nslices of memory. It is intended for use primarily in networking code, but\ncould have applications elsewhere as well.\n\n`Bytes` values facilitate zero-copy network programming by allowing multiple\n`Bytes` objects to point to the same underlying memory. This is managed by\nusing a reference count to track when the memory is no longer needed and can\nbe freed.\n\nA `Bytes` handle can be created directly from an existing byte store (such as `&[u8]`\nor `Vec<u8>`), but usually a `BytesMut` is used first and written to. For\nexample:\n\n```rust\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(1024);\nbuf.put(&b\"hello world\"[..]);\nbuf.put_u16(1234);\n\nlet a = buf.split();\nassert_eq!(a, b\"hello world\\x04\\xD2\"[..]);\n\nbuf.put(&b\"goodbye world\"[..]);\n\nlet b = buf.split();\nassert_eq!(b, b\"goodbye world\"[..]);\n\nassert_eq!(buf.capacity(), 998);\n```\n\nIn the above example, only a single buffer of 1024 is allocated. The handles\n`a` and `b` will share the underlying buffer and maintain indices tracking\nthe view into the buffer represented by the handle.\n\nSee the [struct docs](`Bytes`) for more details.\n\n# `Buf`, `BufMut`\n\nThese two traits provide read and write access to buffers. The underlying\nstorage may or may not be in contiguous memory. For example, `Bytes` is a\nbuffer that guarantees contiguous memory, but a [rope] stores the bytes in\ndisjoint chunks. `Buf` and `BufMut` maintain cursors tracking the current\nposition in the underlying byte storage. When bytes are read or written, the\ncursor is advanced.\n\n[rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)\n\n## Relation with `Read` and `Write`\n\nAt first glance, it may seem that `Buf` and `BufMut` overlap in\nfunctionality with [`std::io::Read`] and [`std::io::Write`]. However, they\nserve different purposes. A buffer is the value that is provided as an\nargument to `Read::read` and `Write::write`. `Read` and `Write` may then\nperform a syscall, which has the potential of failing. Operations on `Buf`\nand `BufMut` are infallible.","links":{"`BufMut`":"0:111:2027","`std::io::Read`":"5:3549:2880","`Bytes`":"0:399:2031","`std::io::Write`":"5:3606:2987","`Buf`":"0:24:2026"},"attrs":["#![warn(missing_docs, missing_debug_implementations, rust_2018_idioms)]","#![doc(test(no_crate_inject,\nattr(deny(warnings, rust_2018_idioms), allow(dead_code, unused_variables))))]","#![no_std]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:6:2025","0:369-0:24:2026","0:370-0:111:2027","0:878-0:399:2031","0:879-0:620:2032"],"is_stripped":false}}},"0:220:2550":{"id":"0:220:2550","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/chain.rs","begin":[210,4],"end":[226,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:151:2726":{"id":"0:151:2726","crate_id":0,"name":"put_int_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1102,4],"end":[1108,5]},"visibility":"default","docs":"Writes low `nbytes` of a signed integer to `self` in native-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_int_ne(0x010203, 3);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\");\n} else {\n    assert_eq!(buf, b\"\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self` or if `nbytes` is greater than 8.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:450:2181":{"id":"0:450:2181","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes.rs","begin":[627,4],"end":[627,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:1086:2591":{"id":"0:1086:2591","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1062:2591":{"id":"0:1062:2591","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:780:685":{"id":"0:780:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1526,4],"end":[1528,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:497":{"id":"0:497","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[761,0],"end":[765,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::string::String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:498:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:999:2303":{"id":"0:999:2303","crate_id":0,"name":"get_i8","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1162":{"id":"0:1162","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:39151:2907","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeTo","id":"1:39223:214","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1163:198","0:1164:924"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:361-0:1116:2181":{"id":"0:361-0:1116:2181","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[33,0],"end":[33,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::iter::IntoIter","name":"IntoIter","id":"0:1116:2181","glob":false}}},"0:692":{"id":"0:692","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1151,0],"end":[1156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsMut","id":"1:2851:76","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:693:3480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:72:2176":{"id":"0:72:2176","crate_id":0,"name":"take","span":{"filename":"src/buf/buf_impl.rs","begin":[1160,4],"end":[1165,5]},"visibility":"default","docs":"Creates an adaptor which will read at most `limit` bytes from `self`.\n\nThis function returns a new instance of `Buf` which will read at most\n`limit` bytes.\n\n# Examples\n\n```\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\"[..].take(5);\nlet mut dst = vec![];\n\ndst.put(&mut buf);\nassert_eq!(dst, b\"hello\");\n\nlet mut buf = buf.into_inner();\ndst.clear();\ndst.put(&mut buf);\nassert_eq!(dst, b\" world\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["limit",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Take","id":"0:1135:2183","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:160:2774":{"id":"0:160:2774","crate_id":0,"name":"chain_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1336,4],"end":[1341,5]},"visibility":"default","docs":"Creates an adapter which will chain this buffer with another.\n\nThe returned `BufMut` instance will first write to all bytes from\n`self`. Afterwards, it will write to `next`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut a = [0u8; 5];\nlet mut b = [0u8; 6];\n\nlet mut chain = (&mut a[..]).chain_mut(&mut b[..]);\n\nchain.put_slice(b\"hello world\");\n\nassert_eq!(&a[..], b\"hello\");\nassert_eq!(&b[..], b\" world\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["next",{"generic":"U"}]],"output":{"resolved_path":{"name":"Chain","id":"0:1107:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:111:2027","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:68:2447":{"id":"0:68:2447","crate_id":0,"name":"get_f64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1080,4],"end":[1082,5]},"visibility":"default","docs":"Gets an IEEE754 double-precision (8 bytes) floating point number from\n`self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F hello\"[..];\nassert_eq!(1.2f64, buf.get_f64_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:219:2577":{"id":"0:219:2577","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/chain.rs","begin":[202,4],"end":[208,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257:2531":{"id":"0:257:2531","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/limit.rs","begin":[60,4],"end":[62,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1080:2675":{"id":"0:1080:2675","crate_id":0,"name":"put_i64","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:737":{"id":"0:737","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1291,0],"end":[1298,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"name":"Extend","id":"1:8177:3484","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:739:3436"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2884-0:1135:2183":{"id":"b:1:2884-0:1135:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1135:2183","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2886:817"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:451:940":{"id":"0:451:940","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes.rs","begin":[629,4],"end":[631,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:8168:164","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:727:2181":{"id":"0:727:2181","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes_mut.rs","begin":[1257,4],"end":[1257,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:115:2577":{"id":"0:115:2577","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[179,4],"end":[179,48]},"visibility":"default","docs":"Returns a mutable slice starting at the current BufMut position and of\nlength between 0 and `BufMut::remaining_mut()`. Note that this *can* be shorter than the\nwhole remainder of the buffer (this allows non-continuous implementation).\n\nThis is a lower level function. Most operations are done with other\nfunctions.\n\nThe returned byte slice may represent uninitialized memory.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = Vec::with_capacity(16);\n\nunsafe {\n    // MaybeUninit::as_mut_ptr\n    buf.chunk_mut()[0..].as_mut_ptr().write(b'h');\n    buf.chunk_mut()[1..].as_mut_ptr().write(b'e');\n\n    buf.advance_mut(2);\n\n    buf.chunk_mut()[0..].as_mut_ptr().write(b'l');\n    buf.chunk_mut()[1..].as_mut_ptr().write(b'l');\n    buf.chunk_mut()[2..].as_mut_ptr().write(b'o');\n\n    buf.advance_mut(3);\n}\n\nassert_eq!(5, buf.len());\nassert_eq!(buf, b\"hello\");\n```\n\n# Implementer notes\n\nThis function should never panic. `chunk_mut` should return an empty\nslice **if and only if** `remaining_mut()` returns 0. In other words,\n`chunk_mut()` returning an empty slice implies that `remaining_mut()` will\nreturn 0 and `remaining_mut()` returning 0 implies that `chunk_mut()` will\nreturn an empty slice.\n\nThis function may trigger an out-of-memory abort if it tries to allocate\nmemory and fails to do so.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1082:2681":{"id":"0:1082:2681","crate_id":0,"name":"put_i64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1067:2627":{"id":"0:1067:2627","crate_id":0,"name":"put_u16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:41680:4059-0:1172:2186":{"id":"a:1:41680:4059-0:1172:2186","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:41680:4059","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:41680:4059","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1172:2186","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:37:2324":{"id":"0:37:2324","crate_id":0,"name":"get_i16","span":{"filename":"src/buf/buf_impl.rs","begin":[413,4],"end":[415,5]},"visibility":"default","docs":"Gets a signed 16 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09 hello\"[..];\nassert_eq!(0x0809, buf.get_i16());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13149:32349":{"id":"1:13149:32349","crate_id":1,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"1:13151:32350","str::split_at_mut":"1:13150:2777"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13218:32366":{"id":"1:13218:32366","crate_id":1,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13251:32381":{"id":"1:13251:32381","crate_id":1,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13254:32384":{"id":"1:13254:32384","crate_id":1,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"1:974:40980"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:338":{"id":"0:338","crate_id":0,"name":null,"span":{"filename":"src/buf/vec_deque.rs","begin":[5,0],"end":[22,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["take","chain","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_le","get_u32","get_i128_le","get_i128","get_u128_ne","get_i128_ne","get_u16_ne","get_u128","get_f64_ne","copy_to_bytes","get_f32","get_uint_ne","get_u32_le","chunks_vectored","get_i16_le","get_i16","get_i16_ne","get_u128_le","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_int","get_int_le","get_int_ne","get_f32_ne","get_uint","reader","has_remaining","copy_to_slice","get_f64_le","get_f64","get_u16_le","get_f32_le"],"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::collections::VecDeque","id":"4:4423:264","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:339:2197","0:340:2199","0:341:2202"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:786:1278":{"id":"0:786:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1544,4],"end":[1546,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:762:1278":{"id":"0:762:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1472,4],"end":[1474,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1002:2320":{"id":"0:1002:2320","crate_id":0,"name":"get_u16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1167":{"id":"0:1167","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:39151:2907","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeToInclusive","id":"1:39263:215","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1168:198","0:1169:924"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1165":{"id":"0:1165","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:3379:2908","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeTo","id":"1:39223:214","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1166:925"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32019:236-0:1135:2183":{"id":"a:1:32019:236-0:1135:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32019:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32019:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1135:2183","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13141:2206":{"id":"1:13141:2206","crate_id":1,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"1:41587:190"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:10908:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:10908:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:163":{"id":"0:163","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1468,0],"end":[1470,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:111:2027","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["writer","put_u128","put_f64_le","put_f64","put_u8","put_u64_le","put_bytes","put_f32_le","put_slice","chain_mut","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_i32_le","put_i32","put_u32_ne","put_uint_ne","put_uint","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_f32","put_u64","put_f32_ne","put","put_uint_le","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne"],"trait":{"name":"BufMut","id":"0:111:2027","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:1059:2531","0:1060:2577","0:1061:2550","0:1062:2591","0:1063:2606","0:1064:2610","0:1065:2614","0:1066:2619","0:1067:2627","0:1068:2631","0:1069:2634","0:1070:2637","0:1071:2641","0:1072:2645","0:1073:2650","0:1074:2653","0:1075:2656","0:1076:2659","0:1077:2663","0:1078:2667","0:1079:2672","0:1080:2675","0:1081:2678","0:1082:2681"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1094:2637":{"id":"0:1094:2637","crate_id":0,"name":"put_i16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:726:172":{"id":"0:726:172","crate_id":0,"name":"Item","span":{"filename":"src/bytes_mut.rs","begin":[1256,4],"end":[1256,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u8"}}}},"0:130:2650":{"id":"0:130:2650","crate_id":0,"name":"put_u32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[565,4],"end":[567,5]},"visibility":"default","docs":"Writes an unsigned 32 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u32_ne(0x0809A0A1);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");\n} else {\n    assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:44:2350":{"id":"0:44:2350","crate_id":0,"name":"get_i32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[559,4],"end":[561,5]},"visibility":"default","docs":"Gets a signed 32 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_i32_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:238:1175":{"id":"0:238:1175","crate_id":0,"name":"next","span":{"filename":"src/buf/iter.rs","begin":[110,4],"end":[119,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:427":{"id":"0:427","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[541,0],"end":[541,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32019:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32019:236-0:1116:2181":{"id":"a:1:32019:236-0:1116:2181","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32019:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32019:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:214:2460":{"id":"0:214:2460","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/chain.rs","begin":[172,4],"end":[188,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3138:11625-0:1122:2182":{"id":"a:1:3138:11625-0:1122:2182","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3138:11625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3138:11625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1122:2182","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:416:2294":{"id":"0:416:2294","crate_id":0,"name":"copy_from_slice","span":{"filename":"src/bytes.rs","begin":[236,4],"end":[238,5]},"visibility":"public","docs":"Creates `Bytes` instance from slice, by copying it.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["data",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:705:685":{"id":"0:705:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1184,4],"end":[1186,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121:2610":{"id":"0:121:2610","crate_id":0,"name":"put_i8","span":{"filename":"src/buf/buf_mut.rs","begin":[345,4],"end":[348,5]},"visibility":"default","docs":"Writes a signed 8 bit integer to `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i8(0x01);\nassert_eq!(buf, b\"\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:136:2672":{"id":"0:136:2672","crate_id":0,"name":"put_u64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[711,4],"end":[713,5]},"visibility":"default","docs":"Writes an unsigned 64 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u64_ne(0x0102030405060708);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");\n} else {\n    assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13250:32380":{"id":"1:13250:32380","crate_id":1,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"1:39506:11616","Self::is_ascii":"1:13249:32379"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"1:39506:11616","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:768:685":{"id":"0:768:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1490,4],"end":[1492,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:239:2852":{"id":"0:239:2852","crate_id":0,"name":"size_hint","span":{"filename":"src/buf/iter.rs","begin":[121,4],"end":[124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:58:2404":{"id":"0:58:2404","crate_id":0,"name":"get_uint","span":{"filename":"src/buf/buf_impl.rs","begin":[854,4],"end":[856,5]},"visibility":"default","docs":"Gets an unsigned n-byte integer from `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03 hello\"[..];\nassert_eq!(0x010203, buf.get_uint(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:991:2197":{"id":"0:991:2197","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1000:2309":{"id":"0:1000:2309","crate_id":0,"name":"get_u16","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1053:2408":{"id":"0:1053:2408","crate_id":0,"name":"get_uint_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1058:2460":{"id":"0:1058:2460","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"crate::Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:205:2826":{"id":"0:205:2826","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/chain.rs","begin":[125,4],"end":[127,5]},"visibility":"public","docs":"Consumes this `Chain`, returning the underlying values.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet chain = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nlet (first, last) = chain.into_inner();\nassert_eq!(first[..], b\"hello\"[..]);\nassert_eq!(last[..], b\"world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"tuple":[{"generic":"T"},{"generic":"U"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2884-0:1116:2181":{"id":"b:1:2884-0:1116:2181","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2886:817"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:181:2550":{"id":"0:181:2550","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1580,4],"end":[1590,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:723":{"id":"0:723","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1249,0],"end":[1253,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2623:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:724:462"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3719-0:1135:2183":{"id":"b:1:3719-0:1135:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3717:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1135:2183","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3721:1799"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1156:925":{"id":"0:1156:925","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeFull","id":"1:39168:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3138:11625-0:1107:2180":{"id":"a:1:3138:11625-0:1107:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3138:11625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3138:11625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3138:11625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1107:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2880-0:1135:2183":{"id":"b:1:2880-0:1135:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1135:2183","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2883:3082"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2890-0:1172:2186":{"id":"b:1:2890-0:1172:2186","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2860:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1172:2186","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2893:136","1:2894:1786"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:183:2462":{"id":"0:183:2462","crate_id":0,"name":"put","span":{"filename":"src/buf/buf_mut.rs","begin":[1611,4],"end":[1624,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"super::Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13150:2777":{"id":"1:13150:2777","crate_id":1,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:13149:32349","str::split_at_mut_checked":"1:13152:32351"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:356:2946":{"id":"0:356:2946","crate_id":0,"name":"write","span":{"filename":"src/buf/writer.rs","begin":[78,4],"end":[83,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"5:3038:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13127:981":{"id":"1:13127:981","crate_id":1,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"5:12306:458"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:113:2550":{"id":"0:113:2550","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[107,4],"end":[107,49]},"visibility":"default","docs":"Advance the internal cursor of the BufMut\n\nThe next call to `chunk_mut` will return a slice starting `cnt` bytes\nfurther into the underlying buffer.\n\n# Safety\n\nThe caller must ensure that the next `cnt` bytes of `chunk` are\ninitialized.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = Vec::with_capacity(16);\n\n// Write some data\nbuf.chunk_mut()[0..2].copy_from_slice(b\"he\");\nunsafe { buf.advance_mut(2) };\n\n// write more bytes\nbuf.chunk_mut()[0..3].copy_from_slice(b\"llo\");\n\nunsafe { buf.advance_mut(3); }\n\nassert_eq!(5, buf.len());\nassert_eq!(buf, b\"hello\");\n```\n\n# Panics\n\nThis function **may** panic if `cnt > self.remaining_mut()`.\n\n# Implementer notes\n\nIt is recommended for implementations of `advance_mut` to panic if\n`cnt > self.remaining_mut()`. If the implementation does not panic,\nthe call must behave as if `cnt == self.remaining_mut()`.\n\nA call with `cnt == 0` should never panic and be a no-op.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"0:467":{"id":"0:467","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[671,0],"end":[675,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:468:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:735:3436":{"id":"0:735:3436","crate_id":0,"name":"extend","span":{"filename":"src/bytes_mut.rs","begin":[1274,4],"end":[1288,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:8168:164","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:440:617":{"id":"0:440:617","crate_id":0,"name":"deref","span":{"filename":"src/bytes.rs","begin":[598,4],"end":[600,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2895-0:1107:2180":{"id":"b:1:2895-0:1107:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1107:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2898:136","1:2899:1784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:807":{"id":"0:807","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1603,0],"end":[1607,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:808:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:221":{"id":"0:221","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[229,0],"end":[240,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:8168:164","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1107:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["0:224:172","0:225:2181","0:226:940"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:710":{"id":"0:710","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1201,0],"end":[1201,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2662:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:430:658":{"id":"0:430:658","crate_id":0,"name":"drop","span":{"filename":"src/bytes.rs","begin":[546,4],"end":[548,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:172:2600":{"id":"0:172:2600","crate_id":0,"name":"put_bytes","span":{"filename":"src/buf/buf_mut.rs","begin":[1510,4],"end":[1520,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32019:236-0:1122:2182":{"id":"a:1:32019:236-0:1122:2182","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32019:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32019:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1122:2182","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:235":{"id":"0:235","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[107,0],"end":[125,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["take","filter","map_while","advance_by","is_sorted_by","sum","min_by","find_map","gt","try_fold","by_ref","scan","skip","filter_map","min","nth","ge","all","is_sorted_by_key","zip","product","rev","try_find","try_for_each","map","try_collect","flat_map","any","enumerate","step_by","eq","__iterator_get_unchecked","cmp_by","unzip","rposition","fold","collect_into","flatten","peekable","chain","intersperse","ne","count","partial_cmp_by","cloned","max_by_key","reduce","partition","map_windows","collect","skip_while","partial_cmp","intersperse_with","next_chunk","eq_by","cycle","max_by","try_reduce","le","partition_in_place","fuse","take_while","lt","for_each","last","is_sorted","size_hint","max","copied","min_by_key","array_chunks","find","cmp","is_partitioned","inspect","position"],"trait":{"name":"Iterator","id":"1:8314:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:237:172","0:238:1175","0:239:2852"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:270:2206":{"id":"0:270:2206","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/reader.rs","begin":[40,4],"end":[42,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:444:857":{"id":"0:444:857","crate_id":0,"name":"hash","span":{"filename":"src/bytes.rs","begin":[611,4],"end":[616,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"H"},"bounds":[{"trait_bound":{"trait":{"name":"hash::Hasher","id":"1:10473:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:462":{"id":"0:462","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[657,0],"end":[661,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:463:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2890-0:399:2031":{"id":"b:1:2890-0:399:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2860:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2893:136","1:2894:1786"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:502:1278":{"id":"0:502:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[774,4],"end":[776,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:729":{"id":"0:729","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1264,0],"end":[1271,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:8168:164","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:731:172","0:732:2181","0:733:940"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:274:2881":{"id":"0:274:2881","crate_id":0,"name":"read","span":{"filename":"src/buf/reader.rs","begin":[66,4],"end":[71,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"5:3038:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:769":{"id":"0:769","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1495,0],"end":[1499,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:770:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:765":{"id":"0:765","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1483,0],"end":[1487,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"slice":{"primitive":"u8"}},"items":["0:766:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1032:2300":{"id":"0:1032:2300","crate_id":0,"name":"get_u8","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1144:924":{"id":"0:1144:924","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"Range","id":"1:39183:209","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:800:685":{"id":"0:800:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1580,4],"end":[1582,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:272":{"id":"0:272","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[65,0],"end":[72,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["read_to_end","chain","by_ref","take","read_to_string","read_vectored","read_exact","read_buf","is_read_vectored","bytes","read_buf_exact"],"trait":{"name":"Read","id":"5:3549:2880","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1129:2185","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:274:2881"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13160:32353":{"id":"1:13160:32353","crate_id":1,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"1:43731:8081","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1048:2367":{"id":"0:1048:2367","crate_id":0,"name":"get_u64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1128:787":{"id":"0:1128:787","crate_id":0,"name":"fmt","span":{"filename":"src/buf/limit.rs","begin":[8,9],"end":[8,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10223:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10204:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:673:658":{"id":"0:673:658","crate_id":0,"name":"drop","span":{"filename":"src/bytes_mut.rs","begin":[1031,4],"end":[1044,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1054:2415":{"id":"0:1054:2415","crate_id":0,"name":"get_uint_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:500:685":{"id":"0:500:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[768,4],"end":[770,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:811":{"id":"0:811","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1615,0],"end":[1648,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::vec::Vec","id":"4:7048:263","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:812:817"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:879-0:620:2032":{"id":"0:879-0:620:2032","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[87,0],"end":[87,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::bytes_mut::BytesMut","name":"BytesMut","id":"0:620:2032","glob":false}}},"1:13162:3538":{"id":"1:13162:3538","crate_id":1,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"5:12306:458","self::pattern":"1:12817:3934"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:757":{"id":"0:757","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1456,0],"end":[1456,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32019:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13226:32371":{"id":"1:13226:32371","crate_id":1,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"5:12306:458","self::pattern":"1:12817:3934"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"1:12843:11721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3103:246-0:1172:2186":{"id":"a:1:3103:246-0:1172:2186","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1172:2186","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:527:817":{"id":"0:527:817","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[896,4],"end":[898,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"resolved_path":{"name":"String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1069:2634":{"id":"0:1069:2634","crate_id":0,"name":"put_i16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2884-0:1122:2182":{"id":"b:1:2884-0:1122:2182","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1122:2182","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2886:817"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:464":{"id":"0:464","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[663,0],"end":[667,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"1:2693:194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:465:469"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:521":{"id":"0:521","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[830,0],"end":[862,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"4:7048:263","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:522:817"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32078:4012-0:1116:2181":{"id":"a:1:32078:4012-0:1116:2181","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32078:4012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32078:4012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1107:2180":{"id":"0:1107:2180","crate_id":0,"name":"Chain","span":{"filename":"src/buf/chain.rs","begin":[30,0],"end":[33,1]},"visibility":"public","docs":"A `Chain` sequences two buffers.\n\n`Chain` is an adapter that links two underlying buffers and provides a\ncontinuous view across both buffers. It is able to sequence either immutable\nbuffers ([`Buf`] values) or mutable buffers ([`BufMut`] values).\n\nThis struct is generally created by calling [`Buf::chain`]. Please see that\nfunction's documentation for more detail.\n\n# Examples\n\n```\nuse bytes::{Bytes, Buf};\n\nlet mut buf = (&b\"hello \"[..])\n    .chain(&b\"world\"[..]);\n\nlet full: Bytes = buf.copy_to_bytes(11);\nassert_eq!(full[..], b\"hello world\"[..]);\n```\n\n[`Buf::chain`]: Buf::chain","links":{"`BufMut`":"0:111:2027","`Buf`":"0:24:2026","Buf::chain":"0:73:2173"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:197","a:1:3138:11625-0:1107:2180","a:1:3103:246-0:1107:2180","a:1:32078:4012-0:1107:2180","a:1:41679:4060-0:1107:2180","a:1:41680:4059-0:1107:2180","a:1:32019:236-0:1107:2180","b:1:2610-0:1107:2180","b:1:2884-0:1107:2180","b:1:2895-0:1107:2180","b:1:3719-0:1107:2180","b:1:2880-0:1107:2180","b:1:2890-0:1107:2180","b:1:2607-0:1107:2180","0:206","0:221","0:215","0:1112"]}}},"0:438":{"id":"0:438","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[594,0],"end":[601,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:3311:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:439:248","0:440:617"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:713":{"id":"0:713","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1210,0],"end":[1218,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"1:10465:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:714:857"],"negative":false,"synthetic":false,"blanket_impl":null}}},"4:5619:33112":{"id":"4:5619:33112","crate_id":4,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"4:7632:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:487":{"id":"0:487","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[731,0],"end":[735,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::vec::Vec","id":"4:7048:263","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:488:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:679":{"id":"0:679","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1078,0],"end":[1133,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["writer","put_u128","put_f64_le","put_f64","put_u8","put_u64_le","put_bytes","put_f32_le","put_slice","chain_mut","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_i32_le","put_i32","put_u32_ne","put_uint_ne","put_uint","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_f32","put_u64","put_f32_ne","put","put_uint_le","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne"],"trait":{"name":"BufMut","id":"0:111:2027","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:680:2531","0:681:2550","0:682:2577","0:683:2462","0:685:2591","0:686:2600"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:422:3154":{"id":"0:422:3154","crate_id":0,"name":"truncate","span":{"filename":"src/bytes.rs","begin":[478,4],"end":[491,5]},"visibility":"public","docs":"Shortens the buffer, keeping the first `len` bytes and dropping the\nrest.\n\nIf `len` is greater than the buffer's current length, this has no\neffect.\n\nThe [split_off](`Self::split_off()`) method can emulate `truncate`, but this causes the\nexcess bytes to be returned instead of dropped.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut buf = Bytes::from(&b\"hello world\"[..]);\nbuf.truncate(5);\nassert_eq!(buf, b\"hello\"[..]);\n```","links":{"`Self::split_off()`":"0:420:3134"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2895-0:1129:2185":{"id":"b:1:2895-0:1129:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1129:2185","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2898:136","1:2899:1784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:353:2826":{"id":"0:353:2826","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/writer.rs","begin":[72,4],"end":[74,5]},"visibility":"public","docs":"Consumes this `Writer`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::BufMut;\nuse std::io;\n\nlet mut buf = vec![].writer();\nlet mut src = &b\"hello world\"[..];\n\nio::copy(&mut src, &mut buf).unwrap();\n\nlet buf = buf.into_inner();\nassert_eq!(*buf, b\"hello world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"B"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2893:136":{"id":"1:2893:136","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:506:1278":{"id":"0:506:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[786,4],"end":[788,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:152:2730":{"id":"0:152:2730","crate_id":0,"name":"put_f32","span":{"filename":"src/buf/buf_mut.rs","begin":[1130,4],"end":[1132,5]},"visibility":"default","docs":"Writes  an IEEE754 single-precision (4 bytes) floating point number to\n`self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f32(1.2f32);\nassert_eq!(buf, b\"\\x3F\\x99\\x99\\x9A\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1016:2373":{"id":"0:1016:2373","crate_id":0,"name":"get_i64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2895-0:1122:2182":{"id":"b:1:2895-0:1122:2182","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1122:2182","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2898:136","1:2899:1784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:275":{"id":"0:275","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[74,0],"end":[81,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["skip_until","read_line","has_data_left","read_until","split","lines"],"trait":{"name":"BufRead","id":"5:3634:2882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1129:2185","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:277:2883","0:278:2884"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:40:2335":{"id":"0:40:2335","crate_id":0,"name":"get_u32","span":{"filename":"src/buf/buf_impl.rs","begin":[476,4],"end":[478,5]},"visibility":"default","docs":"Gets an unsigned 32 bit integer from `self` in the big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_u32());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:466":{"id":"0:466","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[669,0],"end":[669,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2662:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:59:2408":{"id":"0:59:2408","crate_id":0,"name":"get_uint_le","span":{"filename":"src/buf/buf_impl.rs","begin":[874,4],"end":[876,5]},"visibility":"default","docs":"Gets an unsigned n-byte integer from `self` in little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x010203, buf.get_uint_le(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2607-0:1107:2180":{"id":"b:1:2607-0:1107:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2601:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1107:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2609:2989"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:210:2199":{"id":"0:210:2199","crate_id":0,"name":"chunk","span":{"filename":"src/buf/chain.rs","begin":[139,4],"end":[145,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:8175:2181":{"id":"1:8175:2181","crate_id":1,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"I"}}}},"0:1184":{"id":"0:1184","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[37,0],"end":[37,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"1:10262:3543","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1185:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1143:198":{"id":"0:1143:198","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:349":{"id":"0:349","crate_id":0,"name":null,"span":{"filename":"src/buf/writer.rs","begin":[19,0],"end":[75,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:111:2027","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Writer","id":"0:1172:2186","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:351:2498","0:352:2206","0:353:2826"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:4:727-0:399:2031":{"id":"b:4:727-0:399:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2623:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:723:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["4:729:3924","4:730:28482","4:731:28483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:479":{"id":"0:479","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[707,0],"end":[711,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:480:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:358-0:24:2026":{"id":"0:358-0:24:2026","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[30,0],"end":[30,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::buf_impl::Buf","name":"Buf","id":"0:24:2026","glob":false}}},"0:475":{"id":"0:475","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[695,0],"end":[699,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:476:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13171:4309":{"id":"1:13171:4309","crate_id":1,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"1:41587:190","prim@char":"5:12306:458","self::pattern":"1:12817:3934"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:126:2634":{"id":"0:126:2634","crate_id":0,"name":"put_i16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[465,4],"end":[467,5]},"visibility":"default","docs":"Writes a signed 16 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i16_le(0x0809);\nassert_eq!(buf, b\"\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:649:3324":{"id":"0:649:3324","crate_id":0,"name":"zeroed","span":{"filename":"src/bytes_mut.rs","begin":[279,4],"end":[281,5]},"visibility":"public","docs":"Creates a new `BytesMut`, which is initialized with zero.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet zeros = BytesMut::zeroed(42);\n\nassert_eq!(zeros.len(), 42);\nzeros.into_iter().for_each(|x| assert_eq!(x, 0));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5622:33114":{"id":"4:5622:33114","crate_id":4,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:13252:32382"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1183:787":{"id":"0:1183:787","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[36,0],"end":[36,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:10223:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:10204:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[19,0],"end":[63,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Reader","id":"0:1129:2185","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:269:2498","0:270:2206","0:271:2826"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1171:925":{"id":"0:1171:925","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeToInclusive","id":"1:39263:215","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3103:246-0:1135:2183":{"id":"a:1:3103:246-0:1135:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1135:2183","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:112:2531":{"id":"0:112:2531","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[64,4],"end":[64,37]},"visibility":"default","docs":"Returns the number of bytes that can be written from the current\nposition until the end of the buffer is reached.\n\nThis value is greater than or equal to the length of the slice returned\nby `chunk_mut()`.\n\nWriting to a `BufMut` may involve allocating more memory on the fly.\nImplementations may fail before reaching the number of bytes indicated\nby this method if they encounter an allocation failure.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 10];\nlet mut buf = &mut dst[..];\n\nlet original_remaining = buf.remaining_mut();\nbuf.put(&b\"hello\"[..]);\n\nassert_eq!(original_remaining - 5, buf.remaining_mut());\n```\n\n# Implementer notes\n\nImplementations of `remaining_mut` should ensure that the return value\ndoes not change unless a call is made to `advance_mut` or any other\nfunction that is documented to change the `BufMut`'s current position.\n\n# Note\n\n`remaining_mut` may return value smaller than actual available space.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1103:2672":{"id":"0:1103:2672","crate_id":0,"name":"put_u64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2880-0:1122:2182":{"id":"b:1:2880-0:1122:2182","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1122:2182","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2883:3082"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2607-0:1122:2182":{"id":"b:1:2607-0:1122:2182","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2601:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1122:2182","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2609:2989"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1045:2353":{"id":"0:1045:2353","crate_id":0,"name":"get_i32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1150":{"id":"0:1150","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:3379:2908","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeFrom","id":"1:39205:211","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1151:925"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:367-0:1172:2186":{"id":"0:367-0:1172:2186","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[39,31],"end":[39,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"self::writer::Writer","name":"Writer","id":"0:1172:2186","glob":false}}},"0:529:817":{"id":"0:529:817","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[902,4],"end":[905,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bytes",{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Vec","id":"4:7048:263","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2890-0:620:2032":{"id":"b:1:2890-0:620:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2860:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2893:136","1:2894:1786"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:809":{"id":"0:809","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1609,0],"end":[1613,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:810:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:681:2550":{"id":"0:681:2550","crate_id":0,"name":"advance_mut","span":{"filename":"src/bytes_mut.rs","begin":[1085,4],"end":[1092,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3138:11625-0:1116:2181":{"id":"a:1:3138:11625-0:1116:2181","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3138:11625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3138:11625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:165":{"id":"0:165","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1472,0],"end":[1474,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:111:2027","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["writer","put_u128","put_f64_le","put_f64","put_u8","put_u64_le","put_bytes","put_f32_le","put_slice","chain_mut","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_i32_le","put_i32","put_u32_ne","put_uint_ne","put_uint","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_f32","put_u64","put_f32_ne","put","put_uint_le","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne"],"trait":{"name":"BufMut","id":"0:111:2027","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::boxed::Box","id":"4:295:2190","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1083:2531","0:1084:2577","0:1085:2550","0:1086:2591","0:1087:2606","0:1088:2610","0:1089:2614","0:1090:2619","0:1091:2627","0:1092:2631","0:1093:2634","0:1094:2637","0:1095:2641","0:1096:2645","0:1097:2650","0:1098:2653","0:1099:2656","0:1100:2659","0:1101:2663","0:1102:2667","0:1103:2672","0:1104:2675","0:1105:2678","0:1106:2681"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:41679:4060-0:399:2031":{"id":"a:1:41679:4060-0:399:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:41679:4060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:739:3436":{"id":"0:739:3436","crate_id":0,"name":"extend","span":{"filename":"src/bytes_mut.rs","begin":[1292,4],"end":[1297,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:8168:164","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32078:4012-0:1122:2182":{"id":"a:1:32078:4012-0:1122:2182","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32078:4012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32078:4012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1122:2182","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:32019:236-0:311:2184":{"id":"a:1:32019:236-0:311:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32019:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:354":{"id":"0:354","crate_id":0,"name":null,"span":{"filename":"src/buf/writer.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:111:2027","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["write_vectored","write_all","write_fmt","by_ref","is_write_vectored","write_all_vectored"],"trait":{"name":"Write","id":"5:3606:2987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1172:2186","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:356:2946","0:357:2988"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1098:2653":{"id":"0:1098:2653","crate_id":0,"name":"put_i32","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2890-0:1107:2180":{"id":"b:1:2890-0:1107:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2860:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1107:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2893:136","1:2894:1786"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32019:236-0:1107:2180":{"id":"a:1:32019:236-0:1107:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32019:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32019:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32019:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1107:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:131:2653":{"id":"0:131:2653","crate_id":0,"name":"put_i32","span":{"filename":"src/buf/buf_mut.rs","begin":[588,4],"end":[590,5]},"visibility":"default","docs":"Writes a signed 32 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i32(0x0809A0A1);\nassert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:501":{"id":"0:501","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[773,0],"end":[777,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"items":["0:502:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1155":{"id":"0:1155","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:3379:2908","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeFull","id":"1:39168:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1156:925"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1170":{"id":"0:1170","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:3379:2908","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeToInclusive","id":"1:39263:215","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1171:925"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:689":{"id":"0:689","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1142,0],"end":[1149,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:3311:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:690:248","0:691:617"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1148:198":{"id":"0:1148:198","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"1:2883:3082":{"id":"1:2883:3082","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2857:143"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:798:1278":{"id":"0:798:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1574,4],"end":[1576,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13156:2028":{"id":"1:13156:2028","crate_id":1,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"1:43453:2031","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:135:2667":{"id":"0:135:2667","crate_id":0,"name":"put_u64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[684,4],"end":[686,5]},"visibility":"default","docs":"Writes an unsigned 64 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u64_le(0x0102030405060708);\nassert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[35,0],"end":[128,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Chain","id":"0:1107:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["0:201:2806","0:202:2812","0:203:2815","0:204:2820","0:205:2826"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3138:11625-0:1172:2186":{"id":"a:1:3138:11625-0:1172:2186","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"1:3138:11625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3138:11625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1172:2186","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:841:787":{"id":"0:841:787","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/debug.rs","begin":[46,4],"end":[48,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:10223:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:10204:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2607-0:1135:2183":{"id":"b:1:2607-0:1135:2183","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2601:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1135:2183","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2609:2989"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:116:2462":{"id":"0:116:2462","crate_id":0,"name":"put","span":{"filename":"src/buf/buf_mut.rs","begin":[202,4],"end":[221,5]},"visibility":"default","docs":"Transfer bytes into `self` from `src` and advance the cursor by the\nnumber of bytes written.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\n\nbuf.put_u8(b'h');\nbuf.put(&b\"ello\"[..]);\nbuf.put(&b\" world\"[..]);\n\nassert_eq!(buf, b\"hello world\");\n```\n\n# Panics\n\nPanics if `self` does not have enough capacity to contain `src`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"super::Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13203:32362":{"id":"1:13203:32362","crate_id":1,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12838:11722","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:520:817":{"id":"0:520:817","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[825,4],"end":[827,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1030:2270":{"id":"0:1030:2270","crate_id":0,"name":"has_remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:30:2270":{"id":"0:30:2270","crate_id":0,"name":"has_remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[243,4],"end":[245,5]},"visibility":"default","docs":"Returns true if there are any more bytes to consume\n\nThis is equivalent to `self.remaining() != 0`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"a\"[..];\n\nassert!(buf.has_remaining());\n\nbuf.get_u8();\n\nassert!(!buf.has_remaining());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1007:2339":{"id":"0:1007:2339","crate_id":0,"name":"get_u32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:471":{"id":"0:471","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[683,0],"end":[687,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"slice":{"primitive":"u8"}},"items":["0:472:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:60:2415":{"id":"0:60:2415","crate_id":0,"name":"get_uint_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[898,4],"end":[904,5]},"visibility":"default","docs":"Gets an unsigned n-byte integer from `self` in native-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03 hello\",\n    false => b\"\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x010203, buf.get_uint_ne(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`, or\nif `nbytes` is greater than 8.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:38:2327":{"id":"0:38:2327","crate_id":0,"name":"get_i16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[433,4],"end":[435,5]},"visibility":"default","docs":"Gets a signed 16 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x09\\x08 hello\"[..];\nassert_eq!(0x0809, buf.get_i16_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1012:2358":{"id":"0:1012:2358","crate_id":0,"name":"get_u64","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:173":{"id":"0:173","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1523,0],"end":[1570,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["writer","put_u128","put_f64_le","put_f64","put_u8","put_u64_le","put_bytes","put_f32_le","put_slice","chain_mut","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_i32_le","put_i32","put_u32_ne","put_uint_ne","put_uint","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_f32","put_u64","put_f32_ne","put","put_uint_le","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne"],"trait":{"name":"BufMut","id":"0:111:2027","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"core::mem::MaybeUninit","id":"1:30458:2778","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"items":["0:174:2531","0:175:2577","0:176:2550","0:177:2591","0:178:2600"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13235:32374":{"id":"1:13235:32374","crate_id":1,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"5:12306:458","self::pattern":"1:12817:3934"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12838:11722","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1096:2645":{"id":"0:1096:2645","crate_id":0,"name":"put_u32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2894:1786":{"id":"1:2894:1786","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"1:41718:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2880-0:1116:2181":{"id":"b:1:2880-0:1116:2181","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2883:3082"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:703:817":{"id":"0:703:817","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1178,4],"end":[1180,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:120:2606":{"id":"0:120:2606","crate_id":0,"name":"put_u8","span":{"filename":"src/buf/buf_mut.rs","begin":[321,4],"end":[324,5]},"visibility":"default","docs":"Writes an unsigned 8 bit integer to `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u8(0x01);\nassert_eq!(buf, b\"\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:240":{"id":"0:240","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[127,0],"end":[127,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"1:8259:2853","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1112":{"id":"0:1112","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[29,9],"end":[29,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:10249:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:10249:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10249:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1107:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["0:1115:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1025:2197":{"id":"0:1025:2197","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:55:2393":{"id":"0:55:2393","crate_id":0,"name":"get_i128","span":{"filename":"src/buf/buf_impl.rs","begin":[791,4],"end":[793,5]},"visibility":"default","docs":"Gets a signed 128 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_i128());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1051:2376":{"id":"0:1051:2376","crate_id":0,"name":"get_i64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1046:2358":{"id":"0:1046:2358","crate_id":0,"name":"get_u64","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2610-0:620:2032":{"id":"b:1:2610-0:620:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2604:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2612:3481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1396,0],"end":[1398,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["take","chain","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_le","get_u32","get_i128_le","get_i128","get_u128_ne","get_i128_ne","get_u16_ne","get_u128","get_f64_ne","copy_to_bytes","get_f32","get_uint_ne","get_u32_le","chunks_vectored","get_i16_le","get_i16","get_i16_ne","get_u128_le","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_int","get_int_le","get_int_ne","get_f32_ne","get_uint","reader","has_remaining","copy_to_slice","get_f64_le","get_f64","get_u16_le","get_f32_le"],"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::boxed::Box","id":"4:295:2190","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1025:2197","0:1026:2199","0:1027:2266","0:1029:2202","0:1030:2270","0:1031:2203","0:1032:2300","0:1033:2303","0:1034:2309","0:1035:2313","0:1036:2320","0:1037:2324","0:1038:2327","0:1039:2330","0:1040:2335","0:1041:2339","0:1042:2344","0:1043:2347","0:1044:2350","0:1045:2353","0:1046:2358","0:1047:2362","0:1048:2367","0:1049:2370","0:1050:2373","0:1051:2376","0:1052:2404","0:1053:2408","0:1054:2415","0:1055:2419","0:1056:2422","0:1057:2425","0:1058:2460"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13194:32359":{"id":"1:13194:32359","crate_id":1,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"5:12306:458","self::pattern":"1:12817:3934","str::rsplitn":"1:13197:32360"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"1:43571:4525","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1116:2181":{"id":"0:1116:2181","crate_id":0,"name":"IntoIter","span":{"filename":"src/buf/iter.rs","begin":[21,0],"end":[23,1]},"visibility":"public","docs":"Iterator over the bytes contained by the buffer.\n\n# Examples\n\nBasic usage:\n\n```\nuse bytes::Bytes;\n\nlet buf = Bytes::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\nassert_eq!(iter.next(), Some(b'b'));\nassert_eq!(iter.next(), Some(b'c'));\nassert_eq!(iter.next(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:229","a:1:3138:11625-0:1116:2181","a:1:3103:246-0:1116:2181","a:1:32078:4012-0:1116:2181","a:1:41679:4060-0:1116:2181","a:1:41680:4059-0:1116:2181","a:1:32019:236-0:1116:2181","b:1:8172-0:1116:2181","b:1:2610-0:1116:2181","b:1:2884-0:1116:2181","b:1:2895-0:1116:2181","b:1:3719-0:1116:2181","b:1:2880-0:1116:2181","b:1:2890-0:1116:2181","b:1:2607-0:1116:2181","0:1119","0:240","0:235"]}}},"0:1126":{"id":"0:1126","crate_id":0,"name":null,"span":{"filename":"src/buf/limit.rs","begin":[8,9],"end":[8,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:10249:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10249:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1122:2182","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1128:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:510:685":{"id":"0:510:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[795,4],"end":[797,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:678:2460":{"id":"0:678:2460","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/bytes_mut.rs","begin":[1073,4],"end":[1075,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43:2347":{"id":"0:43:2347","crate_id":0,"name":"get_i32","span":{"filename":"src/buf/buf_impl.rs","begin":[539,4],"end":[541,5]},"visibility":"default","docs":"Gets a signed 32 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_i32());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:206":{"id":"0:206","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[130,0],"end":[189,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["take","chain","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_le","get_u32","get_i128_le","get_i128","get_u128_ne","get_i128_ne","get_u16_ne","get_u128","get_f64_ne","copy_to_bytes","get_f32","get_uint_ne","get_u32_le","chunks_vectored","get_i16_le","get_i16","get_i16_ne","get_u128_le","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_int","get_int_le","get_int_ne","get_f32_ne","get_uint","reader","has_remaining","copy_to_slice","get_f64_le","get_f64","get_u16_le","get_f32_le"],"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1107:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["0:209:2197","0:210:2199","0:211:2202","0:212:2266","0:214:2460"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13253:32383":{"id":"1:13253:32383","crate_id":1,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13257:32387":{"id":"1:13257:32387","crate_id":1,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:4903:32387"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"1:43766:8020","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1122:2182":{"id":"0:1122:2182","crate_id":0,"name":"Limit","span":{"filename":"src/buf/limit.rs","begin":[9,0],"end":[12,1]},"visibility":"public","docs":"A `BufMut` adapter which limits the amount of bytes that can be written\nto an underlying buffer.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:248","a:1:3138:11625-0:1122:2182","a:1:3103:246-0:1122:2182","a:1:32078:4012-0:1122:2182","a:1:41679:4060-0:1122:2182","a:1:41680:4059-0:1122:2182","a:1:32019:236-0:1122:2182","b:1:2610-0:1122:2182","b:1:2884-0:1122:2182","b:1:2895-0:1122:2182","b:1:3719-0:1122:2182","b:1:2880-0:1122:2182","b:1:2890-0:1122:2182","b:1:2607-0:1122:2182","0:255","0:1126"]}}},"0:488:685":{"id":"0:488:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[732,4],"end":[734,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2880-0:399:2031":{"id":"b:1:2880-0:399:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2883:3082"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:708":{"id":"0:708","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1195,0],"end":[1199,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"1:2693:194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:709:469"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:415:3052":{"id":"0:415:3052","crate_id":0,"name":"is_unique","span":{"filename":"src/bytes.rs","begin":[231,4],"end":[233,5]},"visibility":"public","docs":"Returns true if this is the only reference to the data.\n\nAlways returns false if the data is backed by a static slice.\n\nThe result of this method may be invalidated immediately if another\nthread clones this value while this is being called. Ensure you have\nunique access to this value (`&mut Bytes`) first if you need to be\ncertain the result is valid (i.e. for safety reasons)\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet a = Bytes::from(vec![1, 2, 3]);\nassert!(a.is_unique());\nlet b = a.clone();\nassert!(!a.is_unique());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1100:2659":{"id":"0:1100:2659","crate_id":0,"name":"put_i32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:118:2591":{"id":"0:118:2591","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[243,4],"end":[258,5]},"visibility":"default","docs":"Transfer bytes into `self` from `src` and advance the cursor by the\nnumber of bytes written.\n\n`self` must have enough remaining capacity to contain all of `src`.\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 6];\n\n{\n    let mut buf = &mut dst[..];\n    buf.put_slice(b\"hello\");\n\n    assert_eq!(1, buf.remaining_mut());\n}\n\nassert_eq!(b\"hello\\0\", &dst);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1070:2637":{"id":"0:1070:2637","crate_id":0,"name":"put_i16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32078:4012-0:1107:2180":{"id":"a:1:32078:4012-0:1107:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32078:4012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32078:4012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32078:4012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1107:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1079:2672":{"id":"0:1079:2672","crate_id":0,"name":"put_u64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:41679:4060-0:1129:2185":{"id":"a:1:41679:4060-0:1129:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:41679:4060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:41679:4060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1129:2185","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1178":{"id":"0:1178","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[34,0],"end":[34,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"1:10260:3542","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1179:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3103:246-0:1122:2182":{"id":"a:1:3103:246-0:1122:2182","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1122:2182","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:484:685":{"id":"0:484:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[720,4],"end":[722,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Vec","id":"4:7048:263","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:480:685":{"id":"0:480:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[708,4],"end":[710,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:41:2339":{"id":"0:41:2339","crate_id":0,"name":"get_u32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[496,4],"end":[498,5]},"visibility":"default","docs":"Gets an unsigned 32 bit integer from `self` in the little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_u32_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1047:2362":{"id":"0:1047:2362","crate_id":0,"name":"get_u64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1091:2627":{"id":"0:1091:2627","crate_id":0,"name":"put_u16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:802:1278":{"id":"0:802:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1586,4],"end":[1588,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1132":{"id":"0:1132","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:10249:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10249:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1129:2185","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:1134:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:772:685":{"id":"0:772:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1502,4],"end":[1504,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:720":{"id":"0:720","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1232,0],"end":[1247,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_char","write_fmt"],"trait":{"name":"Write","id":"1:10205:2987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:721:1940","0:722:3482"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13232:32373":{"id":"1:13232:32373","crate_id":1,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"5:12306:458","self::pattern":"1:12817:3934"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:134:2663":{"id":"0:134:2663","crate_id":0,"name":"put_u64","span":{"filename":"src/buf/buf_mut.rs","begin":[661,4],"end":[663,5]},"visibility":"default","docs":"Writes an unsigned 64 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u64(0x0102030405060708);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:77":{"id":"0:77","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1392,0],"end":[1394,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["take","chain","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_le","get_u32","get_i128_le","get_i128","get_u128_ne","get_i128_ne","get_u16_ne","get_u128","get_f64_ne","copy_to_bytes","get_f32","get_uint_ne","get_u32_le","chunks_vectored","get_i16_le","get_i16","get_i16_ne","get_u128_le","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_int","get_int_le","get_int_ne","get_f32_ne","get_uint","reader","has_remaining","copy_to_slice","get_f64_le","get_f64","get_u16_le","get_f32_le"],"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:991:2197","0:992:2199","0:993:2266","0:995:2202","0:996:2270","0:997:2203","0:998:2300","0:999:2303","0:1000:2309","0:1001:2313","0:1002:2320","0:1003:2324","0:1004:2327","0:1005:2330","0:1006:2335","0:1007:2339","0:1008:2344","0:1009:2347","0:1010:2350","0:1011:2353","0:1012:2358","0:1013:2362","0:1014:2367","0:1015:2370","0:1016:2373","0:1017:2376","0:1018:2404","0:1019:2408","0:1020:2415","0:1021:2419","0:1022:2422","0:1023:2425","0:1024:2460"],"negative":false,"synthetic":false,"blanket_impl":null}}},"4:5608:33110":{"id":"4:5608:33110","crate_id":4,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"4:7632:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:170:2550":{"id":"0:170:2550","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1488,4],"end":[1496,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:277:2883":{"id":"0:277:2883","crate_id":0,"name":"fill_buf","span":{"filename":"src/buf/reader.rs","begin":[75,4],"end":[77,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"5:3038:225","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:524:817":{"id":"0:524:817","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[865,4],"end":[892,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"resolved_path":{"name":"Box","id":"4:295:2190","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:41680:4059-0:620:2032":{"id":"a:1:41680:4059-0:620:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:41680:4059","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:732:2181":{"id":"0:732:2181","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes_mut.rs","begin":[1266,4],"end":[1266,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"1:11053:3169","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"0:1164:924":{"id":"0:1164:924","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeTo","id":"1:39223:214","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:88:2197":{"id":"0:88:2197","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1434,4],"end":[1436,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:2600":{"id":"0:119:2600","crate_id":0,"name":"put_bytes","span":{"filename":"src/buf/buf_mut.rs","begin":[286,4],"end":[300,5]},"visibility":"default","docs":"Put `cnt` bytes `val` into `self`.\n\nLogically equivalent to calling `self.put_u8(val)` `cnt` times, but may work faster.\n\n`self` must have at least `cnt` remaining capacity.\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 6];\n\n{\n    let mut buf = &mut dst[..];\n    buf.put_bytes(b'a', 4);\n\n    assert_eq!(2, buf.remaining_mut());\n}\n\nassert_eq!(b\"aaaa\\0\\0\", &dst);\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1142":{"id":"0:1142","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:39151:2907","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Range","id":"1:39183:209","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1143:198","0:1144:924"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:695:619":{"id":"0:695:619","crate_id":0,"name":"deref_mut","span":{"filename":"src/bytes_mut.rs","begin":[1160,4],"end":[1162,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:725":{"id":"0:725","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1255,0],"end":[1262,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:8168:164","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:726:172","0:727:2181","0:728:940"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3719-0:1129:2185":{"id":"b:1:3719-0:1129:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3717:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1129:2185","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:3721:1799"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:252:2206":{"id":"0:252:2206","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/limit.rs","begin":[34,4],"end":[36,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2607-0:1172:2186":{"id":"b:1:2607-0:1172:2186","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2601:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1172:2186","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2609:2989"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:810:685":{"id":"0:810:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1610,4],"end":[1612,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:778:1278":{"id":"0:778:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1520,4],"end":[1522,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Vec","id":"4:7048:263","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:331":{"id":"0:331","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[222,0],"end":[226,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"1:30458:2778","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:333:817"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:648:812":{"id":"0:648:812","crate_id":0,"name":"freeze","span":{"filename":"src/bytes_mut.rs","begin":[246,4],"end":[265,5]},"visibility":"public","docs":"Converts `self` into an immutable `Bytes`.\n\nThe conversion is zero cost and is used to indicate that the slice\nreferenced by the handle will no longer be mutated. Once the conversion\nis done, the handle can be cloned and shared across threads.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\nuse std::thread;\n\nlet mut b = BytesMut::with_capacity(64);\nb.put(&b\"hello world\"[..]);\nlet b1 = b.freeze();\nlet b2 = b1.clone();\n\nlet th = thread::spawn(move || {\n    assert_eq!(&b1[..], b\"hello world\");\n});\n\nassert_eq!(&b2[..], b\"hello world\");\nth.join().unwrap();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:202:2812":{"id":"0:202:2812","crate_id":0,"name":"first_mut","span":{"filename":"src/buf/chain.rs","begin":[72,4],"end":[74,5]},"visibility":"public","docs":"Gets a mutable reference to the first underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nbuf.first_mut().advance(1);\n\nlet full = buf.copy_to_bytes(9);\nassert_eq!(full, b\"elloworld\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:85:2203":{"id":"0:85:2203","crate_id":0,"name":"copy_to_slice","span":{"filename":"src/buf/buf_impl.rs","begin":[1421,4],"end":[1428,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:82:2197":{"id":"0:82:2197","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1402,4],"end":[1404,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:149:2720":{"id":"0:149:2720","crate_id":0,"name":"put_int","span":{"filename":"src/buf/buf_mut.rs","begin":[1041,4],"end":[1048,5]},"visibility":"default","docs":"Writes low `nbytes` of a signed integer to `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_int(0x0504010203, 3);\nassert_eq!(buf, b\"\\x01\\x02\\x03\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self` or if `nbytes` is greater than 8.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1185:787":{"id":"0:1185:787","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[37,0],"end":[37,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:10223:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:10204:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2884-0:1129:2185":{"id":"b:1:2884-0:1129:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1129:2185","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2886:817"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"4:729:3924":{"id":"4:729:3924","crate_id":4,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:701:817":{"id":"0:701:817","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1172,4],"end":[1174,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:699":{"id":"0:699","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1171,0],"end":[1175,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:701:817"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:125:2631":{"id":"0:125:2631","crate_id":0,"name":"put_i16","span":{"filename":"src/buf/buf_mut.rs","begin":[442,4],"end":[444,5]},"visibility":"default","docs":"Writes a signed 16 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i16(0x0809);\nassert_eq!(buf, b\"\\x08\\x09\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13130:32344":{"id":"1:13130:32344","crate_id":1,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1141:787":{"id":"0:1141:787","crate_id":0,"name":"fmt","span":{"filename":"src/buf/take.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10223:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10204:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1151:925":{"id":"0:1151:925","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeFrom","id":"1:39205:211","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:351:2498":{"id":"0:351:2498","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/writer.rs","begin":[33,4],"end":[35,5]},"visibility":"public","docs":"Gets a reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.\n\n# Examples\n\n```rust\nuse bytes::BufMut;\n\nlet buf = Vec::with_capacity(1024).writer();\n\nassert_eq!(1024, buf.get_ref().capacity());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:655:2790":{"id":"0:655:2790","crate_id":0,"name":"resize","span":{"filename":"src/bytes_mut.rs","begin":[469,4],"end":[482,5]},"visibility":"public","docs":"Resizes the buffer so that `len` is equal to `new_len`.\n\nIf `new_len` is greater than `len`, the buffer is extended by the\ndifference with each additional byte set to `value`. If `new_len` is\nless than `len`, the buffer is simply truncated.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::new();\n\nbuf.resize(3, 0x1);\nassert_eq!(&buf[..], &[0x1, 0x1, 0x1]);\n\nbuf.resize(2, 0x2);\nassert_eq!(&buf[..], &[0x1, 0x1]);\n\nbuf.resize(4, 0x3);\nassert_eq!(&buf[..], &[0x1, 0x1, 0x3, 0x3]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["new_len",{"primitive":"usize"}],["value",{"primitive":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:175:2577":{"id":"0:175:2577","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1530,4],"end":[1532,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3138:11625-0:311:2184":{"id":"a:1:3138:11625-0:311:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3138:11625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1169:924":{"id":"0:1169:924","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeToInclusive","id":"1:39263:215","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1015:2370":{"id":"0:1015:2370","crate_id":0,"name":"get_i64","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1147":{"id":"0:1147","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:39151:2907","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeFrom","id":"1:39205:211","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1148:198","0:1149:924"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:41680:4059-0:399:2031":{"id":"a:1:41680:4059-0:399:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:41680:4059","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:32078:4012-0:620:2032":{"id":"a:1:32078:4012-0:620:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32078:4012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:490:1278":{"id":"0:490:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[738,4],"end":[740,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:429":{"id":"0:429","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[544,0],"end":[549,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:3340:2036","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:430:658"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:50:2373":{"id":"0:50:2373","crate_id":0,"name":"get_i64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[685,4],"end":[687,5]},"visibility":"default","docs":"Gets a signed 64 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_i64_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144:2700":{"id":"0:144:2700","crate_id":0,"name":"put_i128_le","span":{"filename":"src/buf/buf_mut.rs","begin":[903,4],"end":[905,5]},"visibility":"default","docs":"Writes a signed 128 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i128_le(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1008:2344":{"id":"0:1008:2344","crate_id":0,"name":"get_u32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:124:2627":{"id":"0:124:2627","crate_id":0,"name":"put_u16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[419,4],"end":[421,5]},"visibility":"default","docs":"Writes an unsigned 16 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u16_ne(0x0809);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x08\\x09\");\n} else {\n    assert_eq!(buf, b\"\\x09\\x08\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2880-0:1129:2185":{"id":"b:1:2880-0:1129:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1129:2185","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2883:3082"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32078:4012-0:311:2184":{"id":"a:1:32078:4012-0:311:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32078:4012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2895-0:620:2032":{"id":"b:1:2895-0:620:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2898:136","1:2899:1784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:878-0:399:2031":{"id":"0:878-0:399:2031","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[86,0],"end":[86,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::bytes::Bytes","name":"Bytes","id":"0:399:2031","glob":false}}},"a:1:32019:236-0:1129:2185":{"id":"a:1:32019:236-0:1129:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32019:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32019:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1129:2185","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:519":{"id":"0:519","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[824,0],"end":[828,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:520:817"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1095:2641":{"id":"0:1095:2641","crate_id":0,"name":"put_u32","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13148:32348":{"id":"1:13148:32348","crate_id":1,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"5:12312:1700","crate::ops::IndexMut":"1:3379:2908","str::slice_unchecked":"1:13147:32347"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:34:2309":{"id":"0:34:2309","crate_id":0,"name":"get_u16","span":{"filename":"src/buf/buf_impl.rs","begin":[350,4],"end":[352,5]},"visibility":"default","docs":"Gets an unsigned 16 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09 hello\"[..];\nassert_eq!(0x0809, buf.get_u16());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13209:32363":{"id":"1:13209:32363","crate_id":1,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"1:12817:3934","`DoubleEndedIterator`":"1:8206:129","prim@char":"5:12306:458","str::matches":"1:13206:3595"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"1:43689:8080","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12838:11722","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:493":{"id":"0:493","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[749,0],"end":[753,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:494:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13215:32365":{"id":"1:13215:32365","crate_id":1,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"1:12817:3934","`DoubleEndedIterator`":"1:8206:129","prim@char":"5:12306:458","str::match_indices":"1:13212:32364"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"1:43635:8078","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12838:11722","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2895-0:399:2031":{"id":"b:1:2895-0:399:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2898:136","1:2899:1784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:456:940":{"id":"0:456:940","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes.rs","begin":[638,4],"end":[640,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:8168:164","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:651:3348":{"id":"0:651:3348","crate_id":0,"name":"split","span":{"filename":"src/bytes_mut.rs","begin":[353,4],"end":[356,5]},"visibility":"public","docs":"Removes the bytes from the current view, returning them in a new\n`BytesMut` handle.\n\nAfterwards, `self` will be empty, but will retain any additional\ncapacity that it had before the operation. This is identical to\n`self.split_to(self.len())`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(1024);\nbuf.put(&b\"hello world\"[..]);\n\nlet other = buf.split();\n\nassert!(buf.is_empty());\nassert_eq!(1013, buf.capacity());\n\nassert_eq!(other, b\"hello world\"[..]);\n```","links":{},"attrs":["#[must_use =\n\"consider BytesMut::advance(len()) if you don't need the other half\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1168:198":{"id":"0:1168:198","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1031:2203":{"id":"0:1031:2203","crate_id":0,"name":"copy_to_slice","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13255:32385":{"id":"1:13255:32385","crate_id":1,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"1:974:40980"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1093:2634":{"id":"0:1093:2634","crate_id":0,"name":"put_i16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2899:1784":{"id":"1:2899:1784","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"1:41718:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"1:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2884-0:399:2031":{"id":"b:1:2884-0:399:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2886:817"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:229":{"id":"0:229","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[25,0],"end":[105,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:231:1161","0:232:2826","0:233:2498","0:234:2206"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:433":{"id":"0:433","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[558,0],"end":[592,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["take","chain","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_le","get_u32","get_i128_le","get_i128","get_u128_ne","get_i128_ne","get_u16_ne","get_u128","get_f64_ne","copy_to_bytes","get_f32","get_uint_ne","get_u32_le","chunks_vectored","get_i16_le","get_i16","get_i16_ne","get_u128_le","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_int","get_int_le","get_int_ne","get_f32_ne","get_uint","reader","has_remaining","copy_to_slice","get_f64_le","get_f64","get_u16_le","get_f32_le"],"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:434:2197","0:435:2199","0:436:2202","0:437:2460"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1041:2339":{"id":"0:1041:2339","crate_id":0,"name":"get_u32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32078:4012-0:1129:2185":{"id":"a:1:32078:4012-0:1129:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32078:4012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32078:4012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1129:2185","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3719-0:1172:2186":{"id":"b:1:3719-0:1172:2186","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3717:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1172:2186","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:3721:1799"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1003:2324":{"id":"0:1003:2324","crate_id":0,"name":"get_i16","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:49:2370":{"id":"0:49:2370","crate_id":0,"name":"get_i64","span":{"filename":"src/buf/buf_impl.rs","begin":[665,4],"end":[667,5]},"visibility":"default","docs":"Gets a signed 64 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_i64());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1044:2350":{"id":"0:1044:2350","crate_id":0,"name":"get_i32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:141:2689":{"id":"0:141:2689","crate_id":0,"name":"put_u128_le","span":{"filename":"src/buf/buf_mut.rs","begin":[830,4],"end":[832,5]},"visibility":"default","docs":"Writes an unsigned 128 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u128_le(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:674":{"id":"0:674","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1047,0],"end":[1076,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["take","chain","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_le","get_u32","get_i128_le","get_i128","get_u128_ne","get_i128_ne","get_u16_ne","get_u128","get_f64_ne","copy_to_bytes","get_f32","get_uint_ne","get_u32_le","chunks_vectored","get_i16_le","get_i16","get_i16_ne","get_u128_le","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_int","get_int_le","get_int_ne","get_f32_ne","get_uint","reader","has_remaining","copy_to_slice","get_f64_le","get_f64","get_u16_le","get_f32_le"],"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:675:2197","0:676:2199","0:677:2202","0:678:2460"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:771":{"id":"0:771","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1501,0],"end":[1505,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:772:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:65:2435":{"id":"0:65:2435","crate_id":0,"name":"get_f32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1016,5]},"visibility":"default","docs":"Gets an IEEE754 single-precision (4 bytes) floating point number from\n`self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x9A\\x99\\x99\\x3F hello\"[..];\nassert_eq!(1.2f32, buf.get_f32_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1087:2606":{"id":"0:1087:2606","crate_id":0,"name":"put_u8","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:174:2531":{"id":"0:174:2531","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1525,4],"end":[1527,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:271:2826":{"id":"0:271:2826","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/reader.rs","begin":[60,4],"end":[62,5]},"visibility":"public","docs":"Consumes this `Reader`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::Buf;\nuse std::io;\n\nlet mut buf = b\"hello world\".reader();\nlet mut dst = vec![];\n\nio::copy(&mut buf, &mut dst).unwrap();\n\nlet buf = buf.into_inner();\nassert_eq!(0, buf.remaining());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"B"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:522:817":{"id":"0:522:817","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[831,4],"end":[861,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["vec",{"resolved_path":{"name":"Vec","id":"4:7048:263","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:794:685":{"id":"0:794:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1565,4],"end":[1567,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:761":{"id":"0:761","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1471,0],"end":[1475,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:762:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:253:2174":{"id":"0:253:2174","crate_id":0,"name":"limit","span":{"filename":"src/buf/limit.rs","begin":[44,4],"end":[46,5]},"visibility":"public","docs":"Returns the maximum number of bytes that can be written\n\n# Note\n\nIf the inner `BufMut` has fewer bytes than indicated by this method then\nthat is the actual number of available bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:686:2600":{"id":"0:686:2600","crate_id":0,"name":"put_bytes","span":{"filename":"src/bytes_mut.rs","begin":[1121,4],"end":[1132,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2610-0:1129:2185":{"id":"b:1:2610-0:1129:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2604:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1129:2185","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2612:3481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:419:3116":{"id":"0:419:3116","crate_id":0,"name":"slice_ref","span":{"filename":"src/bytes.rs","begin":[329,4],"end":[360,5]},"visibility":"public","docs":"Returns a slice of self that is equivalent to the given `subset`.\n\nWhen processing a `Bytes` buffer with other tools, one often gets a\n`&[u8]` which is in fact a slice of the `Bytes`, i.e. a subset of it.\nThis function turns that `&[u8]` into another `Bytes`, as if one had\ncalled `self.slice()` with the offsets that correspond to `subset`.\n\nThis operation is `O(1)`.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet bytes = Bytes::from(&b\"012345678\"[..]);\nlet as_slice = bytes.as_ref();\nlet subset = &as_slice[2..6];\nlet subslice = bytes.slice_ref(&subset);\nassert_eq!(&subslice[..], b\"2345\");\n```\n\n# Panics\n\nRequires that the given `sub` slice is in fact contained within the\n`Bytes` buffer; otherwise this function will panic.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["subset",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:481":{"id":"0:481","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[713,0],"end":[717,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:482:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:718":{"id":"0:718","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1226,0],"end":[1230,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2604:103","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:719:3481"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:46:2358":{"id":"0:46:2358","crate_id":0,"name":"get_u64","span":{"filename":"src/buf/buf_impl.rs","begin":[602,4],"end":[604,5]},"visibility":"default","docs":"Gets an unsigned 64 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_u64());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13182:29904":{"id":"1:13182:29904","crate_id":1,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"5:12306:458","self::pattern":"1:12817:3934"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"1:12633:4539","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13225:32370":{"id":"1:13225:32370","crate_id":1,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:805":{"id":"0:805","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1597,0],"end":[1601,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"items":["0:806:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1059:2531":{"id":"0:1059:2531","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:442:335":{"id":"0:442:335","crate_id":0,"name":"as_ref","span":{"filename":"src/bytes.rs","begin":[605,4],"end":[607,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1149:924":{"id":"0:1149:924","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeFrom","id":"1:39205:211","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:437:2460":{"id":"0:437:2460","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/bytes.rs","begin":[583,4],"end":[591,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:111:2027":{"id":"0:111:2027","crate_id":0,"name":"BufMut","span":{"filename":"src/buf/buf_mut.rs","begin":[30,0],"end":[1342,1]},"visibility":"public","docs":"A trait for values that provide sequential write access to bytes.\n\nWrite bytes to a buffer\n\nA buffer stores bytes in memory such that write operations are infallible.\nThe underlying storage may or may not be in contiguous memory. A `BufMut`\nvalue is a cursor into the buffer. Writing to `BufMut` advances the cursor\nposition.\n\nThe simplest `BufMut` is a `Vec<u8>`.\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\n\nbuf.put(&b\"hello world\"[..]);\n\nassert_eq!(buf, b\"hello world\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"is_object_safe":true,"items":["0:112:2531","0:113:2550","0:114:2555","0:115:2577","0:116:2462","0:118:2591","0:119:2600","0:120:2606","0:121:2610","0:122:2614","0:123:2619","0:124:2627","0:125:2631","0:126:2634","0:127:2637","0:128:2641","0:129:2645","0:130:2650","0:131:2653","0:132:2656","0:133:2659","0:134:2663","0:135:2667","0:136:2672","0:137:2675","0:138:2678","0:139:2681","0:140:2685","0:141:2689","0:142:2694","0:143:2697","0:144:2700","0:145:2703","0:146:2708","0:147:2712","0:148:2717","0:149:2720","0:150:2723","0:151:2726","0:152:2730","0:153:2734","0:154:2739","0:155:2743","0:156:2746","0:157:2750","0:158:2174","0:159:2179","0:160:2774"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:165","0:179","0:215","0:167","0:173","0:679","0:255","0:163"]}}},"0:460":{"id":"0:460","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[651,0],"end":[655,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:461:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:36:2320":{"id":"0:36:2320","crate_id":0,"name":"get_u16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[393,4],"end":[395,5]},"visibility":"default","docs":"Gets an unsigned 16 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x08\\x09 hello\",\n    false => b\"\\x09\\x08 hello\",\n};\nassert_eq!(0x0809, buf.get_u16_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1037:2324":{"id":"0:1037:2324","crate_id":0,"name":"get_i16","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:644:1161":{"id":"0:644:1161","crate_id":0,"name":"new","span":{"filename":"src/bytes_mut.rs","begin":[172,4],"end":[174,5]},"visibility":"public","docs":"Creates a new `BytesMut` with default capacity.\n\nResulting object has length 0 and unspecified capacity.\nThis function does not allocate.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut bytes = BytesMut::new();\n\nassert_eq!(0, bytes.len());\n\nbytes.reserve(2);\nbytes.put_slice(b\"xy\");\n\nassert_eq!(&b\"xy\"[..], &bytes[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1083:2531":{"id":"0:1083:2531","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1473,4],"end":[1473,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:48:2367":{"id":"0:48:2367","crate_id":0,"name":"get_u64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[645,4],"end":[647,5]},"visibility":"default","docs":"Gets an unsigned 64 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\",\n    false => b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x0102030405060708, buf.get_u64_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1066:2619":{"id":"0:1066:2619","crate_id":0,"name":"put_u16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1068:2631":{"id":"0:1068:2631","crate_id":0,"name":"put_i16","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1077:2663":{"id":"0:1077:2663","crate_id":0,"name":"put_u64","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2884-0:1107:2180":{"id":"b:1:2884-0:1107:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1107:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2886:817"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:647:2782":{"id":"0:647:2782","crate_id":0,"name":"capacity","span":{"filename":"src/bytes_mut.rs","begin":[217,4],"end":[219,5]},"visibility":"public","docs":"Returns the number of bytes the `BytesMut` can hold without reallocating.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet b = BytesMut::with_capacity(64);\nassert_eq!(b.capacity(), 64);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:650:3134":{"id":"0:650:3134","crate_id":0,"name":"split_off","span":{"filename":"src/bytes_mut.rs","begin":[310,4],"end":[325,5]},"visibility":"public","docs":"Splits the bytes into two at the given index.\n\nAfterwards `self` contains elements `[0, at)`, and the returned\n`BytesMut` contains elements `[at, capacity)`.\n\nThis is an `O(1)` operation that just increases the reference count\nand sets a few indices.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut a = BytesMut::from(&b\"hello world\"[..]);\nlet mut b = a.split_off(5);\n\na[0] = b'j';\nb[0] = b'!';\n\nassert_eq!(&a[..], b\"jello\");\nassert_eq!(&b[..], b\"!world\");\n```\n\n# Panics\n\nPanics if `at > capacity`.","links":{},"attrs":["#[must_use = \"consider BytesMut::truncate if you don't need the other half\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["at",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:763":{"id":"0:763","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1477,0],"end":[1481,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"slice":{"primitive":"u8"}},"items":["0:764:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:688:335":{"id":"0:688:335","crate_id":0,"name":"as_ref","span":{"filename":"src/bytes_mut.rs","begin":[1137,4],"end":[1139,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:731:172":{"id":"0:731:172","crate_id":0,"name":"Item","span":{"filename":"src/bytes_mut.rs","begin":[1265,4],"end":[1265,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}}},"0:773":{"id":"0:773","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1507,0],"end":[1511,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:774:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:645:981":{"id":"0:645:981","crate_id":0,"name":"len","span":{"filename":"src/bytes_mut.rs","begin":[187,4],"end":[189,5]},"visibility":"public","docs":"Returns the number of bytes contained in this `BytesMut`.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet b = BytesMut::from(&b\"hello\"[..]);\nassert_eq!(b.len(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:51:2376":{"id":"0:51:2376","crate_id":0,"name":"get_i64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[708,4],"end":[710,5]},"visibility":"default","docs":"Gets a signed 64 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\",\n    false => b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x0102030405060708, buf.get_i64_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13241:32376":{"id":"1:13241:32376","crate_id":1,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"5:12306:458","self::pattern":"1:12817:3934"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5605:2776":{"id":"4:5605:2776","crate_id":4,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"4:7632:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:812:817":{"id":"0:812:817","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1616,4],"end":[1647,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bytes",{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:476:685":{"id":"0:476:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[696,4],"end":[698,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:52:2381":{"id":"0:52:2381","crate_id":0,"name":"get_u128","span":{"filename":"src/buf/buf_impl.rs","begin":[728,4],"end":[730,5]},"visibility":"default","docs":"Gets an unsigned 128 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_u128());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:231:1161":{"id":"0:231:1161","crate_id":0,"name":"new","span":{"filename":"src/buf/iter.rs","begin":[41,4],"end":[43,5]},"visibility":"public","docs":"Creates an iterator over the bytes contained by the buffer.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet buf = Bytes::from_static(b\"abc\");\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\nassert_eq!(iter.next(), Some(b'b'));\nassert_eq!(iter.next(), Some(b'c'));\nassert_eq!(iter.next(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["inner",{"generic":"T"}]],"output":{"resolved_path":{"name":"IntoIter","id":"0:1116:2181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:114:2555":{"id":"0:114:2555","crate_id":0,"name":"has_remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[128,4],"end":[130,5]},"visibility":"default","docs":"Returns true if there is space in `self` for more bytes.\n\nThis is equivalent to `self.remaining_mut() != 0`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 5];\nlet mut buf = &mut dst[..];\n\nassert!(buf.has_remaining_mut());\n\nbuf.put(&b\"hello\"[..]);\n\nassert!(!buf.has_remaining_mut());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:364-0:311:2184":{"id":"0:364-0:311:2184","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[36,0],"end":[36,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::uninit_slice::UninitSlice","name":"UninitSlice","id":"0:311:2184","glob":false}}},"0:1061:2550":{"id":"0:1061:2550","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2880-0:620:2032":{"id":"b:1:2880-0:620:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2883:3082"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1076:2659":{"id":"0:1076:2659","crate_id":0,"name":"put_i32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:39:2330":{"id":"0:39:2330","crate_id":0,"name":"get_i16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[456,4],"end":[458,5]},"visibility":"default","docs":"Gets a signed 16 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x08\\x09 hello\",\n    false => b\"\\x09\\x08 hello\",\n};\nassert_eq!(0x0809, buf.get_i16_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:781":{"id":"0:781","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1531,0],"end":[1535,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::vec::Vec","id":"4:7048:263","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:782:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:295:2197":{"id":"0:295:2197","crate_id":0,"name":"remaining","span":{"filename":"src/buf/take.rs","begin":[133,4],"end":[135,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1115:787":{"id":"0:1115:787","crate_id":0,"name":"fmt","span":{"filename":"src/buf/chain.rs","begin":[29,9],"end":[29,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10223:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10204:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1018:2404":{"id":"0:1018:2404","crate_id":0,"name":"get_uint","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3721:1799":{"id":"1:3721:1799","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"1:39320:8010","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258:2577":{"id":"0:258:2577","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/limit.rs","begin":[64,4],"end":[68,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32078:4012-0:1172:2186":{"id":"a:1:32078:4012-0:1172:2186","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32078:4012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32078:4012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1172:2186","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:177:2591":{"id":"0:177:2591","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1546,4],"end":[1556,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3103:246-0:1129:2185":{"id":"a:1:3103:246-0:1129:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1129:2185","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:399:2031":{"id":"0:399:2031","crate_id":0,"name":"Bytes","span":{"filename":"src/bytes.rs","begin":[100,0],"end":[106,1]},"visibility":"public","docs":"A cheaply cloneable and sliceable chunk of contiguous memory.\n\n`Bytes` is an efficient container for storing and operating on contiguous\nslices of memory. It is intended for use primarily in networking code, but\ncould have applications elsewhere as well.\n\n`Bytes` values facilitate zero-copy network programming by allowing multiple\n`Bytes` objects to point to the same underlying memory.\n\n`Bytes` does not have a single implementation. It is an interface, whose\nexact behavior is implemented through dynamic dispatch in several underlying\nimplementations of `Bytes`.\n\nAll `Bytes` implementations must fulfill the following requirements:\n- They are cheaply cloneable and thereby shareable between an unlimited amount\n  of components, for example by modifying a reference count.\n- Instances can be sliced to refer to a subset of the original buffer.\n\n```\nuse bytes::Bytes;\n\nlet mut mem = Bytes::from(\"Hello world\");\nlet a = mem.slice(0..5);\n\nassert_eq!(a, \"Hello\");\n\nlet b = mem.split_to(6);\n\nassert_eq!(mem, \"world\");\nassert_eq!(b, \"Hello \");\n```\n\n# Memory layout\n\nThe `Bytes` struct itself is fairly small, limited to 4 `usize` fields used\nto track information about which segment of the underlying memory the\n`Bytes` handle has access to.\n\n`Bytes` keeps both a pointer to the shared state containing the full memory\nslice and a pointer to the start of the region visible by the handle.\n`Bytes` also tracks the length of its view into the memory.\n\n# Sharing\n\n`Bytes` contains a vtable, which allows implementations of `Bytes` to define\nhow sharing/cloning is implemented in detail.\nWhen `Bytes::clone()` is called, `Bytes` will call the vtable function for\ncloning the backing storage in order to share it behind multiple `Bytes`\ninstances.\n\nFor `Bytes` implementations which refer to constant memory (e.g. created\nvia `Bytes::from_static()`) the cloning implementation will be a no-op.\n\nFor `Bytes` implementations which point to a reference counted shared storage\n(e.g. an `Arc<[u8]>`), sharing will be implemented by increasing the\nreference count.\n\nDue to this mechanism, multiple `Bytes` instances may point to the same\nshared memory region.\nEach `Bytes` instance can point to different sections within that\nmemory region, and `Bytes` instances may or may not have overlapping views\ninto the memory.\n\nThe following diagram visualizes a scenario where 2 `Bytes` instances make\nuse of an `Arc`-based backing storage, and provide access to different views:\n\n```text\n\n   Arc ptrs                   ┌─────────┐\n   ________________________ / │ Bytes 2 │\n  /                           └─────────┘\n /          ┌───────────┐     |         |\n|_________/ │  Bytes 1  │     |         |\n|           └───────────┘     |         |\n|           |           | ___/ data     | tail\n|      data |      tail |/              |\nv           v           v               v\n┌─────┬─────┬───────────┬───────────────┬─────┐\n│ Arc │     │           │               │     │\n└─────┴─────┴───────────┴───────────────┴─────┘\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:409","a:1:3138:11625-0:399:2031","a:1:32078:4012-0:399:2031","a:1:41679:4060-0:399:2031","a:1:41680:4059-0:399:2031","b:1:2610-0:399:2031","b:1:2884-0:399:2031","b:1:2895-0:399:2031","b:1:3719-0:399:2031","b:1:2880-0:399:2031","b:1:2890-0:399:2031","b:1:2607-0:399:2031","b:4:727-0:399:2031","0:702","0:497","0:1178","0:452","0:505","0:521","0:487","0:493","0:503","0:464","0:469","0:428","0:1182","0:427","0:489","0:501","0:511","0:475","0:457","0:429","0:438","0:741","0:838","0:483","0:528","0:481","0:448","0:526","0:433","0:443","0:515","0:446","0:485","0:517","0:809","0:462","0:479","0:495","0:460","0:499","0:473","0:466","0:477","0:441","0:807","0:523","0:519","0:431","0:471","0:467","0:507","0:491"]}}},"0:758":{"id":"0:758","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1457,0],"end":[1457,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1180":{"id":"0:1180","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[35,0],"end":[35,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"1:10260:3542","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1181:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13220:32367":{"id":"1:13220:32367","crate_id":1,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:178:2600":{"id":"0:178:2600","crate_id":0,"name":"put_bytes","span":{"filename":"src/buf/buf_mut.rs","begin":[1559,4],"end":[1569,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:211:2202":{"id":"0:211:2202","crate_id":0,"name":"advance","span":{"filename":"src/buf/chain.rs","begin":[147,4],"end":[163,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:226:940":{"id":"0:226:940","crate_id":0,"name":"into_iter","span":{"filename":"src/buf/chain.rs","begin":[237,4],"end":[239,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:8168:164","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3719-0:399:2031":{"id":"b:1:3719-0:399:2031","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3717:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3721:1799"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:469":{"id":"0:469","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[677,0],"end":[681,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:470:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:489":{"id":"0:489","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[737,0],"end":[741,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::vec::Vec","id":"4:7048:263","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:490:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:676:2199":{"id":"0:676:2199","crate_id":0,"name":"chunk","span":{"filename":"src/bytes_mut.rs","begin":[1054,4],"end":[1056,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:993:2266":{"id":"0:993:2266","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"5:8461:2188","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1075:2656":{"id":"0:1075:2656","crate_id":0,"name":"put_i32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1469,4],"end":[1469,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:293":{"id":"0:293","crate_id":0,"name":null,"span":{"filename":"src/buf/take.rs","begin":[132,0],"end":[155,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["take","chain","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_le","get_u32","get_i128_le","get_i128","get_u128_ne","get_i128_ne","get_u16_ne","get_u128","get_f64_ne","copy_to_bytes","get_f32","get_uint_ne","get_u32_le","chunks_vectored","get_i16_le","get_i16","get_i16_ne","get_u128_le","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_int","get_int_le","get_int_ne","get_f32_ne","get_uint","reader","has_remaining","copy_to_slice","get_f64_le","get_f64","get_u16_le","get_f32_le"],"trait":{"name":"Buf","id":"0:24:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1135:2183","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:295:2197","0:296:2199","0:297:2202","0:298:2460"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:507":{"id":"0:507","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[791,0],"end":[798,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:510:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1181:787":{"id":"0:1181:787","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[35,0],"end":[35,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:10223:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:10204:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:620:2032":{"id":"0:620:2032","crate_id":0,"name":"BytesMut","span":{"filename":"src/bytes_mut.rs","begin":[61,0],"end":[66,1]},"visibility":"public","docs":"A unique reference to a contiguous slice of memory.\n\n`BytesMut` represents a unique view into a potentially shared memory region.\nGiven the uniqueness guarantee, owners of `BytesMut` handles are able to\nmutate the memory.\n\n`BytesMut` can be thought of as containing a `buf: Arc<Vec<u8>>`, an offset\ninto `buf`, a slice length, and a guarantee that no other `BytesMut` for the\nsame `buf` overlaps with its slice. That guarantee means that a write lock\nis not required.\n\n# Growth\n\n`BytesMut`'s `BufMut` implementation will implicitly grow its buffer as\nnecessary. However, explicitly reserving the required space up-front before\na series of inserts will be more efficient.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(64);\n\nbuf.put_u8(b'h');\nbuf.put_u8(b'e');\nbuf.put(&b\"llo\"[..]);\n\nassert_eq!(&buf[..], b\"hello\");\n\n// Freeze the buffer so that it can be shared\nlet a = buf.freeze();\n\n// This does not allocate, instead `b` points to the same memory.\nlet b = a.clone();\n\nassert_eq!(&a[..], b\"hello\");\nassert_eq!(&b[..], b\"hello\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:642","a:1:3138:11625-0:620:2032","a:1:32078:4012-0:620:2032","a:1:41679:4060-0:620:2032","a:1:41680:4059-0:620:2032","b:1:2610-0:620:2032","b:1:2884-0:620:2032","b:1:2895-0:620:2032","b:1:3719-0:620:2032","b:1:2880-0:620:2032","b:1:2890-0:620:2032","b:1:2607-0:620:2032","b:4:727-0:620:2032","0:702","0:763","0:687","0:789","0:729","0:744","0:692","0:801","0:710","0:694","0:769","0:711","0:713","0:708","0:803","0:741","0:737","0:773","0:805","0:758","0:723","0:689","0:704","0:779","0:799","0:716","0:725","0:781","0:765","0:706","0:809","0:757","0:777","0:679","0:771","0:696","0:767","0:791","0:1184","0:699","0:747","0:795","0:761","0:787","0:811","0:807","0:672","0:759","0:734","0:783","0:720","0:785","0:1180","0:674","0:718","0:775","0:840"]}}},"0:414:2269":{"id":"0:414:2269","crate_id":0,"name":"is_empty","span":{"filename":"src/bytes.rs","begin":[209,4],"end":[211,5]},"visibility":"public","docs":"Returns true if the `Bytes` has a length of 0.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::new();\nassert!(b.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1158:198":{"id":"0:1158:198","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1121:787":{"id":"0:1121:787","crate_id":0,"name":"fmt","span":{"filename":"src/buf/iter.rs","begin":[20,9],"end":[20,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10223:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10204:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:41679:4060-0:1172:2186":{"id":"a:1:41679:4060-0:1172:2186","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:41679:4060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:41679:4060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1172:2186","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:517":{"id":"0:517","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[818,0],"end":[822,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2857:143","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"primitive":"u8"}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:518:817"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:767":{"id":"0:767","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1489,0],"end":[1493,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:768:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:784:685":{"id":"0:784:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1538,4],"end":[1540,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"String","id":"4:7632:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:139:2681":{"id":"0:139:2681","crate_id":0,"name":"put_i64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[784,4],"end":[786,5]},"visibility":"default","docs":"Writes a signed 64 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i64_ne(0x0102030405060708);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");\n} else {\n    assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:496:685":{"id":"0:496:685","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[756,4],"end":[758,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:278:2884":{"id":"0:278:2884","crate_id":0,"name":"consume","span":{"filename":"src/buf/reader.rs","begin":[78,4],"end":[80,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["amt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13132:32345":{"id":"1:13132:32345","crate_id":1,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:13130:32344"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:147:2712":{"id":"0:147:2712","crate_id":0,"name":"put_uint_le","span":{"filename":"src/buf/buf_mut.rs","begin":[981,4],"end":[989,5]},"visibility":"default","docs":"Writes an unsigned n-byte integer to `self` in the little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_uint_le(0x010203, 3);\nassert_eq!(buf, b\"\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self` or if `nbytes` is greater than 8.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218:2531":{"id":"0:218:2531","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/chain.rs","begin":[196,4],"end":[200,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1009:2347":{"id":"0:1009:2347","crate_id":0,"name":"get_i32","span":{"filename":"src/buf/buf_impl.rs","begin":[1393,4],"end":[1393,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:41680:4059-0:311:2184":{"id":"a:1:41680:4059-0:311:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:41680:4059","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3719-0:1107:2180":{"id":"b:1:3719-0:1107:2180","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32020:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3717:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1107:2180","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:3721:1799"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:286":{"id":"0:286","crate_id":0,"name":null,"span":{"filename":"src/buf/take.rs","begin":[19,0],"end":[130,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Take","id":"0:1135:2183","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:288:2826","0:289:2498","0:290:2206","0:291:2174","0:292:2866"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:363-0:1135:2183":{"id":"0:363-0:1135:2183","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[35,0],"end":[35,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::take::Take","name":"Take","id":"0:1135:2183","glob":false}}},"1:13185:32356":{"id":"1:13185:32356","crate_id":1,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"1:12817:3934","`DoubleEndedIterator`":"1:8206:129","prim@char":"5:12306:458","str::split":"1:13179:3348"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"1:43485:4527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12823:3928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12838:11722","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:477":{"id":"0:477","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[701,0],"end":[705,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:478:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:41679:4060-0:620:2032":{"id":"a:1:41679:4060-0:620:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:41679:4060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:132:2656":{"id":"0:132:2656","crate_id":0,"name":"put_i32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[611,4],"end":[613,5]},"visibility":"default","docs":"Writes a signed 32 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i32_le(0x0809A0A1);\nassert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:326":{"id":"0:326","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[210,0],"end":[214,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10249:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:311:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:327:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3138:11625-0:620:2032":{"id":"a:1:3138:11625-0:620:2032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3138:11625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:259:2550":{"id":"0:259:2550","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/limit.rs","begin":[70,4],"end":[74,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:839:787":{"id":"0:839:787","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/debug.rs","begin":[40,4],"end":[42,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:10223:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:10204:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:515":{"id":"0:515","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[811,0],"end":[816,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:2932:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:516:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1042:2344":{"id":"0:1042:2344","crate_id":0,"name":"get_u32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1040:2335":{"id":"0:1040:2335","crate_id":0,"name":"get_u32","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:505":{"id":"0:505","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[785,0],"end":[789,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2699:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:399:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"items":["0:506:1278"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:232:2826":{"id":"0:232:2826","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/iter.rs","begin":[60,4],"end":[62,5]},"visibility":"public","docs":"Consumes this `IntoIter`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::{Buf, Bytes};\n\nlet buf = Bytes::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\n\nlet buf = iter.into_inner();\nassert_eq!(2, buf.remaining());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:717:2989":{"id":"0:717:2989","crate_id":0,"name":"borrow","span":{"filename":"src/bytes_mut.rs","begin":[1221,4],"end":[1223,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13157:29902":{"id":"1:13157:29902","crate_id":1,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"1:13158:29914"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"1:43741:8082","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1050:2373":{"id":"0:1050:2373","crate_id":0,"name":"get_i64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:25:2197":{"id":"0:25:2197","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[119,4],"end":[119,33]},"visibility":"default","docs":"Returns the number of bytes between the current position and the end of\nthe buffer.\n\nThis value is greater than or equal to the length of the slice returned\nby `chunk()`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(buf.remaining(), 11);\n\nbuf.get_u8();\n\nassert_eq!(buf.remaining(), 10);\n```\n\n# Implementer notes\n\nImplementations of `remaining` should ensure that the return value does\nnot change unless a call is made to `advance` or any other function that\nis documented to change the `Buf`'s current position.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1026:2199":{"id":"0:1026:2199","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1397,4],"end":[1397,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:154:2739":{"id":"0:154:2739","crate_id":0,"name":"put_f32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1182,4],"end":[1184,5]},"visibility":"default","docs":"Writes an IEEE754 single-precision (4 bytes) floating point number to\n`self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f32_ne(1.2f32);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x3F\\x99\\x99\\x9A\");\n} else {\n    assert_eq!(buf, b\"\\x9A\\x99\\x99\\x3F\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:803":{"id":"0:803","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1591,0],"end":[1595,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2657:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"items":["0:804:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"4:5604:33109":{"id":"4:5604:33109","crate_id":4,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"4:295:2190","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"4:295:2190","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:707:1278":{"id":"0:707:1278","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1190,4],"end":[1192,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:620:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41585:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30837:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:128:2641":{"id":"0:128:2641","crate_id":0,"name":"put_u32","span":{"filename":"src/buf/buf_mut.rs","begin":[515,4],"end":[517,5]},"visibility":"default","docs":"Writes an unsigned 32 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u32(0x0809A0A1);\nassert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13158:29914":{"id":"1:13158:29914","crate_id":1,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"1:13157:29902"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"1:43750:8083","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:254:2866":{"id":"0:254:2866","crate_id":0,"name":"set_limit","span":{"filename":"src/buf/limit.rs","begin":[54,4],"end":[56,5]},"visibility":"public","docs":"Sets the maximum number of bytes that can be written.\n\n# Note\n\nIf the inner `BufMut` has fewer bytes than `lim` then that is the actual\nnumber of available bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["lim",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:150:2723":{"id":"0:150:2723","crate_id":0,"name":"put_int_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1069,4],"end":[1077,5]},"visibility":"default","docs":"Writes low `nbytes` of a signed integer to `self` in little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_int_le(0x0504010203, 3);\nassert_eq!(buf, b\"\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self` or if `nbytes` is greater than 8.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"1:43467:3708":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"5:3353:3728":{"crate_id":5,"path":["std","io","stdio","Stdout"],"kind":"struct"},"5:8146:5012":{"crate_id":5,"path":["std","fs","Metadata"],"kind":"struct"},"9:424:23211":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:45933:8163":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:46530:8228":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:46255:8221":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:41513:8048":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"16:7633:37402":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"4:4239:3689":{"crate_id":4,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"6:485:9133":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"4:1496:2181":{"crate_id":4,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"6:5112:9500":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"4:7094:5519":{"crate_id":4,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"5:8156:7613":{"crate_id":5,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:15814:6726":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"5:9428:7593":{"crate_id":5,"path":["std","time","SystemTime"],"kind":"struct"},"17:15206:6550":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"6:7467:10044":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"4:7436:2181":{"crate_id":4,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"5:4842:17177":{"crate_id":5,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:39283:3093":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"11:364:5422":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:22340:16876":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"5:4628:17177":{"crate_id":5,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"16:7528:7267":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:30458:2778":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"16:6335:7069":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"6:5483:9650":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"5:12320:882":{"crate_id":5,"path":["std","i32"],"kind":"primitive"},"1:42639:3483":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:3347:140":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"4:6681:2181":{"crate_id":4,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"16:5400:5796":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"16:7006:7164":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"17:14235:6284":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:4916:9427":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:22724:7972":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:13046:6038":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"18:563:5617":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"17:11537:5869":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:12213:5967":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:40347:3896":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"12:0:3619":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"6:5290:9561":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:6948:6901":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:22393:16877":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:7660:8426":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:6940:7159":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"5:1845:7547":{"crate_id":5,"path":["std","env","VarsOs"],"kind":"struct"},"5:8540:17147":{"crate_id":5,"path":["std","net","Shutdown"],"kind":"enum"},"14:202:3925":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"16:6231:7031":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"16:6620:7099":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:44193:10273":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:14599:6347":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"16:6648:7101":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"11:1917:7462":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:12433:5991":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:3576:30515":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:43916:8094":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"16:2636:6879":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:11336:4525":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"9:502:7520":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"17:10818:5812":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:4540:3971":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"4:5852:250":{"crate_id":4,"path":["alloc","string","ToString"],"kind":"trait"},"6:5472:9647":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"16:2748:6884":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"16:7111:7184":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:3473:5684":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"6:4864:9401":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:4340:7908":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:7596:3889":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"5:7288:5462":{"crate_id":5,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"4:218:3769":{"crate_id":4,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"6:5528:9659":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"4:4925:216":{"crate_id":4,"path":["alloc","rc","Rc"],"kind":"struct"},"1:10908:238":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:12508:6000":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"5:1082:7452":{"crate_id":5,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:44478:179":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"5:7999:5471":{"crate_id":5,"path":["std","thread","Thread"],"kind":"struct"},"10:36:9111":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"1:3473:210":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:15010:6505":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:15608:6674":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:22670:7966":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"15:306:8395":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"5:11067:5473":{"crate_id":5,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"5:10922:138":{"crate_id":5,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"17:14560:6337":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"6:7561:10104":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"5:5661:4858":{"crate_id":5,"path":["std","process","Stdio"],"kind":"struct"},"1:44444:8111":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"6:8317:10155":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"5:9410:161":{"crate_id":5,"path":["std","time","Instant"],"kind":"struct"},"17:10877:5813":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"5:970:7449":{"crate_id":5,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"17:10954:24299":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:22264:16874":{"crate_id":1,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"6:5546:9670":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:30490:30265":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"1:11257:4527":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"5:2718:3709":{"crate_id":5,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:11595:5883":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"5:4297:17175":{"crate_id":5,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"16:4771:6936":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:45460:8125":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"11:1891:3792":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"17:11497:5866":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:45901:8161":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:3293:3755":{"crate_id":1,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"17:10350:5661":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"11:2383:3169":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"1:79:1890":{"crate_id":1,"path":["core","usize"],"kind":"module"},"6:6657:9885":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"4:6440:1906":{"crate_id":4,"path":["alloc","vec"],"kind":"module"},"6:7348:10004":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:15646:6684":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"6:8029:10137":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"4:5453:17054":{"crate_id":4,"path":["alloc","slice","Concat"],"kind":"trait"},"1:40598:3904":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"5:11010:4865":{"crate_id":5,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"17:9807:24272":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"4:7527:3789":{"crate_id":4,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"6:5102:9499":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"9:238:8060":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:13767:3765":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"5:11179:4864":{"crate_id":5,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:11510:5867":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"5:4883:17168":{"crate_id":5,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:43292:4529":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"16:3810:6920":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:10473:156":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:41604:172":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:45624:8139":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"6:5466:9644":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"11:687:4521":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:13497:6126":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"6:5306:9567":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"3:0:3613":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:25897:266":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"5:12273:10982":{"crate_id":5,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:14994:6504":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:12832:5643":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"5:8212:7617":{"crate_id":5,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"6:6689:9894":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"17:14025:6235":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:13526:6135":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"6:5212:9525":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:11242:5842":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:39934:8013":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"6:6880:9948":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:2119:188":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"5:8062:7611":{"crate_id":5,"path":["std","env","JoinPathsError"],"kind":"struct"},"5:9383:3689":{"crate_id":5,"path":["std","sync","poison","Guard"],"kind":"struct"},"16:6456:24221":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:21995:4515":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:22452:16869":{"crate_id":1,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"1:39313:3845":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"5:11887:7601":{"crate_id":5,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"16:7539:6905":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"5:1828:682":{"crate_id":5,"path":["std","env"],"kind":"module"},"1:40807:3865":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"16:2418:6869":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:45443:8124":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"17:15400:6602":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:21685:17141":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"5:6152:219":{"crate_id":5,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"6:5677:9729":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:11841:5914":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"6:479:9130":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"6:4932:9431":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:14968:6498":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"6:1485:9196":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:14489:6326":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"16:7769:7280":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"5:7103:17243":{"crate_id":5,"path":["std","std_float","StdFloat"],"kind":"trait"},"16:7509:7258":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:23497:235":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:22924:7991":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"4:3807:7752":{"crate_id":4,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"5:8027:17092":{"crate_id":5,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"11:1910:7461":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"5:5911:7577":{"crate_id":5,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"5:4180:17159":{"crate_id":5,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:33222:3829":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"6:6597:9859":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"6:8247:10139":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"5:8207:7556":{"crate_id":5,"path":["std","hash","random","RandomState"],"kind":"struct"},"4:3635:181":{"crate_id":4,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"5:3355:3729":{"crate_id":5,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:10705:5434":{"crate_id":1,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"6:1628:9287":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:15434:6609":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:41491:30445":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"6:5565:9678":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:39243:213":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"6:7446:10038":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"5:5729:4859":{"crate_id":5,"path":["std","process","exit"],"kind":"function"},"16:8118:7335":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"6:465:8413":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:13606:6158":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"6:6435:9773":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:14503:6329":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"5:9255:7697":{"crate_id":5,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"6:7516:10080":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"5:8503:2183":{"crate_id":5,"path":["std","io","Take"],"kind":"struct"},"5:3488:3734":{"crate_id":5,"path":["std","io","util","Repeat"],"kind":"struct"},"17:11214:5840":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"10:44:7468":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"1:40090:8023":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"4:2526:8908":{"crate_id":4,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"11:2124:7187":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"17:12597:6006":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"6:5020:9474":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:10414:857":{"crate_id":1,"path":["core","hash"],"kind":"module"},"4:1064:5481":{"crate_id":4,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:9781:24282":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"5:5732:4861":{"crate_id":5,"path":["std","process","Termination"],"kind":"trait"},"6:8012:10128":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"5:3305:3727":{"crate_id":5,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:15616:6677":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"5:12323:1829":{"crate_id":5,"path":["std","u8"],"kind":"primitive"},"1:8164:144":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"16:6560:6894":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"16:7321:4056":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:43635:8078":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"11:1160:7456":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"16:2394:6868":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"5:9347:10166":{"crate_id":5,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"1:5168:30219":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"5:7842:5670":{"crate_id":5,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"5:11552:7736":{"crate_id":5,"path":["std","sys","thread_local","fast_local","Key"],"kind":"struct"},"1:44395:226":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:13655:5446":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:2604:103":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:4352:109":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"17:12408:5988":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"17:16050:6089":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"9:447:23209":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"11:2231:5876":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"6:4952:9439":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"16:3014:23358":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"6:5277:9556":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:22685:10190":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:46480:8226":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"18:507:5608":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:40118:106":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"5:607:17087":{"crate_id":5,"path":["std","ascii","AsciiExt"],"kind":"trait"},"11:875:7448":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"5:5945:7581":{"crate_id":5,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"16:7823:24228":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:39168:212":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:10439:5797":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:13387:6106":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:13064:6041":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:14516:6330":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"6:4971:9447":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"11:742:7441":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"5:10993:35980":{"crate_id":5,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:15266:6566":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"6:5624:9707":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"16:2708:6882":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"13:229:9106":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"16:3669:5701":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"4:1342:7450":{"crate_id":4,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"5:4172:17157":{"crate_id":5,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"5:5054:17197":{"crate_id":5,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"1:40338:3895":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"16:7695:7278":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:9912:10984":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"5:11478:5475":{"crate_id":5,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"5:12309:1295":{"crate_id":5,"path":["std","pointer"],"kind":"primitive"},"17:10982:24300":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"1:46608:8234":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:40010:8020":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"4:1465:3169":{"crate_id":4,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"9:357:23224":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"16:5817:6962":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"5:12328:950":{"crate_id":5,"path":["std","isize"],"kind":"primitive"},"5:10295:7548":{"crate_id":5,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"1:11145:4539":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"5:11056:5472":{"crate_id":5,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"5:3398:3725":{"crate_id":5,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:43991:7954":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:40306:3892":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"4:6924:3796":{"crate_id":4,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:3350:141":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"16:7741:6910":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"11:1007:7187":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"16:5415:6950":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"6:5320:9572":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"6:6447:9777":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"9:53:10963":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:42618:136":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"4:943:3169":{"crate_id":4,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:13363:6102":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"4:5717:3796":{"crate_id":4,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"18:754:5655":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"5:12310:333":{"crate_id":5,"path":["std","array"],"kind":"primitive"},"1:41565:7936":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"5:11728:5477":{"crate_id":5,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"6:1680:9319":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"5:10565:4862":{"crate_id":5,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"6:1490:9198":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:15301:6575":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"6:5407:1226":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:41525:7562":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"4:5064:3689":{"crate_id":4,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"9:392:23210":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"4:1726:5481":{"crate_id":4,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"5:2682:3717":{"crate_id":5,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:4614:7911":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"17:13999:6232":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"16:7570:6906":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"16:7497:7257":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"5:2464:17132":{"crate_id":5,"path":["std","fs","read_link"],"kind":"function"},"5:4362:7563":{"crate_id":5,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"5:8237:2497":{"crate_id":5,"path":["std","io","cursor","Cursor"],"kind":"struct"},"5:941:7444":{"crate_id":5,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:43365:4531":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:46377:8223":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:12572:5811":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"5:11868:7738":{"crate_id":5,"path":["std","alloc","System"],"kind":"struct"},"17:15521:6658":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:39320:8010":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:46702:8245":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:22935:7992":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"16:3029:5696":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"5:8529:7664":{"crate_id":5,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:16269:6111":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"1:42080:95":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"5:12326:1823":{"crate_id":5,"path":["std","u64"],"kind":"primitive"},"17:12342:5980":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"5:2448:3935":{"crate_id":5,"path":["std","fs","metadata"],"kind":"function"},"1:32020:2474":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"5:5607:113":{"crate_id":5,"path":["std","process","Command"],"kind":"struct"},"11:2469:3790":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"4:6060:8914":{"crate_id":4,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:11755:5900":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"5:4118:17153":{"crate_id":5,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"6:7314:9985":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:10204:225":{"crate_id":1,"path":["core","fmt","Result"],"kind":"type_alias"},"17:10251:5658":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:10218:5657":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"11:1087:37388":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:12056:5954":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"17:11730:5896":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"17:10317:5660":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:14847:6452":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"11:700:2181":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:4:1239":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:42547:3958":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"17:12189:5965":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:12621:6007":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"6:6542:9822":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:8314:177":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"4:671:7748":{"crate_id":4,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"6:6505:9808":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"16:5914:6976":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:1929:658":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:37858:3840":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"5:8229:3718":{"crate_id":5,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:14986:6503":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:12478:5995":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"6:532:9164":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"5:12306:458":{"crate_id":5,"path":["std","char"],"kind":"primitive"},"1:41885:86":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:41585:193":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"5:12257:7744":{"crate_id":5,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"17:12768:24269":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"18:581:4482":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"5:12324:1811":{"crate_id":5,"path":["std","u16"],"kind":"primitive"},"17:14271:6289":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"5:1091:7456":{"crate_id":5,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:44189:10272":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"5:8305:7619":{"crate_id":5,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"5:8221:7618":{"crate_id":5,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"6:5122:9501":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:16235:6833":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"6:5361:9582":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:2044:10187":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"6:5581:9683":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:13252:6079":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:10254:128":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"5:12317:740":{"crate_id":5,"path":["std","f64"],"kind":"primitive"},"17:14284:6291":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"5:6327:5449":{"crate_id":5,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"16:6504:7085":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"4:3279:7460":{"crate_id":4,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:22438:17141":{"crate_id":1,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"1:44436:8110":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:40425:3901":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"16:6079:6846":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:40246:3880":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"5:7956:7536":{"crate_id":5,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:3145:3957":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"5:9106:4863":{"crate_id":5,"path":["std","process","ExitStatus"],"kind":"struct"},"5:4777:10028":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"17:11621:5886":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"17:12175:5961":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"6:4959:9442":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:13832:6207":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:41924:93":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"6:4979:9452":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"5:5804:7574":{"crate_id":5,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"4:732:118":{"crate_id":4,"path":["alloc","borrow","Cow"],"kind":"enum"},"16:2808:6887":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"14:187:11356":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"5:12311:1666":{"crate_id":5,"path":["std","slice"],"kind":"primitive"},"16:6342:37411":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:12557:5830":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"16:8136:7337":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"4:7402:5490":{"crate_id":4,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"11:710:7440":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:13455:30701":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:42199:3984":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"16:8226:24230":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"5:6820:5458":{"crate_id":5,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"5:937:7441":{"crate_id":5,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"14:40:6076":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"18:765:28470":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:12843:11721":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:41807:89":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"11:2498:23284":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"1:1755:2196":{"crate_id":1,"path":["core","mem"],"kind":"module"},"1:33104:3827":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"5:10912:7614":{"crate_id":5,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"18:573:5608":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:11647:5889":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"13:0:3614":{"crate_id":13,"path":["std_detect"],"kind":"module"},"5:8047:17116":{"crate_id":5,"path":["std","env","VarError"],"kind":"enum"},"16:6433:7077":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"6:4897:9414":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:13455:6121":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"4:6164:3689":{"crate_id":4,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"17:15281:6568":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:46045:8183":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"16:5037:6945":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:15222:6554":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:32010:8006":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:8206:129":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"5:9273:35988":{"crate_id":5,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"11:2369:7466":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"1:21968:17141":{"crate_id":1,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"1:22485:16868":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"4:1527:7443":{"crate_id":4,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"1:23001:7998":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"16:6047:6993":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:12494:5997":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"5:5790:219":{"crate_id":5,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:42815:4661":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"18:96:8384":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"6:8197:10138":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"6:7389:10031":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"5:7955:17141":{"crate_id":5,"path":["std","sealed","Sealed"],"kind":"trait"},"1:2657:200":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"4:1171:8907":{"crate_id":4,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:45396:8119":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:13473:6122":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"5:9140:3169":{"crate_id":5,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"5:2466:17133":{"crate_id":5,"path":["std","fs","canonicalize"],"kind":"function"},"5:3567:3698":{"crate_id":5,"path":["std","io","IoSliceMut"],"kind":"struct"},"5:11251:161":{"crate_id":5,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"6:7537:10094":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:21569:17141":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"5:742:153":{"crate_id":5,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"18:623:37424":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"4:3741:5481":{"crate_id":4,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:40296:3891":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"16:3196:6858":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"16:4560:6930":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"6:5046:9486":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:12225:5968":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"4:4149:4521":{"crate_id":4,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:12519:7945":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:44201:10275":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"5:9689:137":{"crate_id":5,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"16:4802:6937":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"6:5536:9664":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:13375:6105":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:11419:5811":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:42311:3542":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:45720:8152":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:12076:5955":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"5:868:4521":{"crate_id":5,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:43589:4522":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"16:2323:23355":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"16:2592:6877":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"5:9162:7575":{"crate_id":5,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"5:9148:7694":{"crate_id":5,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:39924:8012":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:12671:6010":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"1:40017:11662":{"crate_id":1,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"6:5260:9545":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"5:4158:17155":{"crate_id":5,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"16:6849:7151":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"5:1994:770":{"crate_id":5,"path":["std","ffi"],"kind":"module"},"17:14147:6253":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"18:521:28471":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"5:6875:232":{"crate_id":5,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:39205:211":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"11:299:8400":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"6:5014:9471":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:10268:3966":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:22701:7967":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:45667:8149":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:43437:3931":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"17:15799:6725":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:43671:8079":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"6:7575:10113":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"5:4960:17164":{"crate_id":5,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"5:2696:5434":{"crate_id":5,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"5:899:7443":{"crate_id":5,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:22887:17141":{"crate_id":1,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"1:10266:3965":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:4375:3747":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:2984:7777":{"crate_id":1,"path":["core","error","Request"],"kind":"struct"},"1:40832:3869":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:9404:3928":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:4986:5693":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"16:2854:6889":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:9755:24264":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"1:45851:8159":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:46090:8184":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:10534:37419":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:13344:6101":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"17:12238:5969":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:12647:6008":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"1:3138:11625":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"11:434:8409":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"14:7:7431":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"5:8461:2188":{"crate_id":5,"path":["std","io","IoSlice"],"kind":"struct"},"9:482:23208":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"16:7014:24224":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:732:189":{"crate_id":1,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"1:40286:3890":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"4:723:249":{"crate_id":4,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"6:5064:9497":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"5:8653:7566":{"crate_id":5,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:4767:3975":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:39506:11616":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:11313:5850":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"7:0:1880":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:15197:6549":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:13738:6189":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:40277:3882":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:43302:4530":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:11674:5891":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:12328:5975":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"4:2236:10180":{"crate_id":4,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:40813:3734":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"6:8271:10143":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"5:1597:2181":{"crate_id":5,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"16:0:3622":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:14868:6462":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"17:11764:5901":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"16:4856:6939":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:13399:6109":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:33340:3830":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:22007:32203":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:4610:220":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:8127:3877":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"6:8265:10142":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"17:11853:5915":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:15769:6720":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"5:5212:7572":{"crate_id":5,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:11688:5892":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"16:6263:7036":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:3324:3244":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"4:1577:7750":{"crate_id":4,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:11089:5831":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"5:11216:7593":{"crate_id":5,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"17:13146:6052":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"1:21589:7963":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:10044:24288":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"17:11189:5838":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"5:958:7447":{"crate_id":5,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:12595:7950":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:15039:6513":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:10185:5656":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"11:2536:9107":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"5:3040:136":{"crate_id":5,"path":["std","io","error","Error"],"kind":"struct"},"1:41846:96":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"4:7655:3927":{"crate_id":4,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:41680:4059":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"11:1896:3790":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"17:12127:5958":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:43775:7906":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"16:6802:7138":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"5:12304:405":{"crate_id":5,"path":["std","bool"],"kind":"primitive"},"15:327:10960":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:42304:3963":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:15582:6665":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"4:7472:2181":{"crate_id":4,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"6:5052:9488":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"6:8259:10141":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:10769:37414":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:13308:6094":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:8632:3875":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"4:295:2190":{"crate_id":4,"path":["alloc","boxed","Box"],"kind":"struct"},"1:2943:136":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:12838:11722":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:1853:3689":{"crate_id":1,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"5:659:7541":{"crate_id":5,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"1:21484:32213":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"17:10671:37418":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:12887:6025":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"17:15368:6594":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"6:5083:9498":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:1936:3810":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:31985:8004":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"6:5489:9652":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"6:1503:9204":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"6:5002:9465":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"16:6543:7088":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"6:5219:9526":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"16:860:6853":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"1:30837:195":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:46007:8181":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"5:2296:137":{"crate_id":5,"path":["std","fs","File"],"kind":"struct"},"6:6729:9908":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"1:3563:3848":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"4:7480:2181":{"crate_id":4,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"4:7597:7774":{"crate_id":4,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"6:6519:9809":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:42297:3964":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"16:4830:6938":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"6:5671:9726":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:11634:5888":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"5:12316:724":{"crate_id":5,"path":["std","f32"],"kind":"primitive"},"1:11364:4526":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"6:5643:9716":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:13712:151":{"crate_id":1,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"5:964:7448":{"crate_id":5,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:12543:6005":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"4:2089:2497":{"crate_id":4,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"6:5250:9539":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:4870:9402":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:14876:6463":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:8168:164":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:13675:5548":{"crate_id":1,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"1:2053:3959":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"5:8440:3733":{"crate_id":5,"path":["std","io","util","Empty"],"kind":"struct"},"17:15734:6707":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"5:6359:7583":{"crate_id":5,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:11567:5873":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"6:5400:9603":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"4:3037:8913":{"crate_id":4,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"5:360:7534":{"crate_id":5,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:1699:9326":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:11378:4523":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"6:6821:9936":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"11:2326:7450":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"17:14436:6322":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"6:6915:9973":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"5:5045:17196":{"crate_id":5,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"17:13485:6125":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:13089:6042":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"4:7714:3790":{"crate_id":4,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"16:6120:24219":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:43313:4536":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:7429:10033":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:5588:9685":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"5:6752:17235":{"crate_id":5,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"11:774:7442":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"5:4281:8416":{"crate_id":5,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"6:4811:9358":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:16176:6822":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"17:12724:24290":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"4:7730:3791":{"crate_id":4,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"5:10314:7713":{"crate_id":5,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"17:13568:6150":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"1:8623:148":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"5:2757:3719":{"crate_id":5,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"16:7397:37410":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"16:2338:6859":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:40377:3884":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"5:4881:17167":{"crate_id":5,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:2864:256":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:22354:3945":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"16:3778:6919":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"6:4924:9429":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:14079:6243":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:4461:7909":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:43964:8095":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"5:9375:5454":{"crate_id":5,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"6:545:9170":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:13538:6138":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"6:4965:9444":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:0:3623":{"crate_id":17,"path":["object"],"kind":"module"},"5:12329:1890":{"crate_id":5,"path":["std","usize"],"kind":"primitive"},"17:14189:6274":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"4:3029:8911":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"6:5598:9690":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"1:45595:8137":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"5:9392:234":{"crate_id":5,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:5248:961":{"crate_id":1,"path":["core","iter"],"kind":"module"},"5:11585:7594":{"crate_id":5,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"16:150:5418":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"1:45513:8132":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:41547:7934":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"5:4110:17152":{"crate_id":5,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"0:0:2028":{"crate_id":0,"path":["bytes"],"kind":"module"},"11:2554:37389":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"5:4066:17149":{"crate_id":5,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"5:11812:7561":{"crate_id":5,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"5:4168:17156":{"crate_id":5,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:45819:8157":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"6:1559:9237":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:10508:4659":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"17:11293:24319":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"1:9725:91":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:12993:24292":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"16:4352:6925":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:2501:3945":{"crate_id":1,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"1:43039:8066":{"crate_id":1,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"16:5107:6947":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:11524:5868":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:2932:123":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:10260:3542":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:42002:94":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"6:6664:9886":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:11877:5917":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"6:5445:9629":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"1:5147:423":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"17:11115:5834":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"16:7604:6908":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"5:2301:2881":{"crate_id":5,"path":["std","fs","read"],"kind":"function"},"1:4693:3972":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"16:6026:6839":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:42576:7309":{"crate_id":1,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:15957:6750":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"17:11016:5823":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:39945:30263":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"16:7799:6898":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:32019:236":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"4:2207:7754":{"crate_id":4,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"6:6629:9872":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"6:5352:9578":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"17:15376:6597":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"17:16121:6806":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"5:1609:7460":{"crate_id":5,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"5:2476:17138":{"crate_id":5,"path":["std","fs","read_dir"],"kind":"function"},"1:45705:8151":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:39960:8016":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:43453:2031":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:3108:3788":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"16:5927:6977":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"11:844:17099":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"17:15214:6552":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:46577:8231":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:2487:659":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"17:12289:5973":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:729:11464":{"crate_id":1,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"18:491:5607":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"16:2303:23330":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:30464:3813":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:40226:3879":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:22757:7974":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:14131:6248":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"5:10941:2188":{"crate_id":5,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"6:570:9183":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"11:800:3792":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"18:113:8387":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:3597:5685":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"16:6813:7139":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:22842:7986":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:10264:205":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"18:635:5630":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"5:7446:8419":{"crate_id":5,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:10622:37415":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"5:3615:11358":{"crate_id":5,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"11:2140:7450":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"4:3209:100":{"crate_id":4,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"5:4443:7564":{"crate_id":5,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:11354:5856":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"4:1480:4521":{"crate_id":4,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"6:6650:9884":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:12530:6004":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"1:22808:30248":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:45918:8162":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:39994:8019":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:11915:24386":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"4:3238:3169":{"crate_id":4,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:8131:3876":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:46725:8246":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:10915:37413":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"6:6714:9906":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"17:15168:6541":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:4876:9404":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:21973:16793":{"crate_id":1,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"1:45834:8158":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"5:5401:202":{"crate_id":5,"path":["std","path","Path"],"kind":"struct"},"5:9294:7703":{"crate_id":5,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"5:9701:5469":{"crate_id":5,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"17:13581:6154":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:15273:6567":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"17:14933:6497":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:3628:3758":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"18:0:3624":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:437:5668":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:11222:4540":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:12556:7948":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:12584:5812":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"17:12516:6002":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"6:6763:9919":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"16:2478:6872":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"5:8449:3735":{"crate_id":5,"path":["std","io","util","Sink"],"kind":"struct"},"1:11937:3163":{"crate_id":1,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"1:45580:8136":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"16:6385:7072":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"17:14066:6242":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"16:872:5664":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"1:44385:218":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:3179:3752":{"crate_id":1,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"5:8583:10164":{"crate_id":5,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"5:9242:7696":{"crate_id":5,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:4787:9341":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:16249:6834":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"5:8829:7567":{"crate_id":5,"path":["std","path","Components"],"kind":"struct"},"5:2298:7555":{"crate_id":5,"path":["std","fs","DirEntry"],"kind":"struct"},"16:7355:7217":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"16:6758:7126":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"4:3792:2497":{"crate_id":4,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"17:13723:6185":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"5:5797:5450":{"crate_id":5,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:5502:9657":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"17:11026:24301":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"6:6756:9918":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"1:2854:162":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"5:3518:3689":{"crate_id":5,"path":["std","io","Guard"],"kind":"struct"},"17:9938:24286":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"5:10883:10169":{"crate_id":5,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"4:5457:17055":{"crate_id":4,"path":["alloc","slice","Join"],"kind":"trait"},"16:5769:6961":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:15190:6547":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:14855:6455":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"4:6421:17068":{"crate_id":4,"path":["alloc","task","LocalWake"],"kind":"trait"},"4:7444:209":{"crate_id":4,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"5:12305:1157":{"crate_id":5,"path":["std","never"],"kind":"primitive"},"1:10258:3964":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"17:11583:5879":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:15748:6714":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:42836:8060":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"2:0:492":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"18:659:5631":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:10457:137":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"1:39151:2907":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:41407:10260":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:14372:6303":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:39071:3849":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"5:9266:7700":{"crate_id":5,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:16079:6795":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"5:3445:3713":{"crate_id":5,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"1:32870:3825":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"6:8351:10162":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:12318:5686":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"4:7380:7768":{"crate_id":4,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"17:12422:5989":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"5:552:5430":{"crate_id":5,"path":["std","thread","Packet"],"kind":"struct"},"6:8300:10150":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"5:912:3792":{"crate_id":5,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"6:7461:10043":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"5:12289:35991":{"crate_id":5,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"5:11388:2026":{"crate_id":5,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"1:40798:3863":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"6:6621:9871":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"4:870:5486":{"crate_id":4,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"17:15356:6591":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"5:6311:5446":{"crate_id":5,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:7595:3888":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"1:4492:7910":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:3591:3754":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"16:867:5663":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"17:11324:5852":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:10622:5536":{"crate_id":1,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"17:9984:24287":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:40390:3898":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:45528:8133":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:16259:6106":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"1:42592:73":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1:45787:8155":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"5:2057:197":{"crate_id":5,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"17:14463:6324":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:43849:11735":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:12817:3934":{"crate_id":1,"path":["core","str","pattern"],"kind":"module"},"17:10137:24265":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:11063:5829":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"6:5031:9479":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:46178:8188":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:43384:4532":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:40324:8031":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"4:3245:7461":{"crate_id":4,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"1:45609:8138":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"6:6768:9920":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"5:9528:7549":{"crate_id":5,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"5:3624:3699":{"crate_id":5,"path":["std","io","Seek"],"kind":"trait"},"4:1568:209":{"crate_id":4,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:45475:8126":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"14:31:7431":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:11825:5912":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:32110:114":{"crate_id":1,"path":["core","marker","ConstParamTy"],"kind":"trait"},"1:32079:8007":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"5:4650:17178":{"crate_id":5,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"4:1546:7440":{"crate_id":4,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"5:11751:7559":{"crate_id":5,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"5:4096:17151":{"crate_id":5,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"16:4614:6932":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"4:3026:3924":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"5:9306:7705":{"crate_id":5,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"17:12399:5987":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:14977:6502":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"4:4438:5499":{"crate_id":4,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"5:933:7440":{"crate_id":5,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:43731:8081":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"16:3329:6916":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"1:46597:8233":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"16:6066:7000":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:2828:4011":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:21486:32210":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:12863:6024":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"5:9327:35985":{"crate_id":5,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"1:46332:8222":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"6:7359:10009":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:12891:11729":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:22480:16870":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"17:10092:24289":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:16187:6823":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"17:13899:6218":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"16:6962:6902":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"5:12312:1700":{"crate_id":5,"path":["std","str"],"kind":"primitive"},"6:1510:9206":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"16:5897:6971":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:45749:8153":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"5:3860:7559":{"crate_id":5,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"6:5225:9529":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:15078:6522":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"5:640:7538":{"crate_id":5,"path":["std","backtrace","Backtrace"],"kind":"struct"},"16:7686:7277":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"5:855:3169":{"crate_id":5,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"16:5831:6965":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"6:6460:9778":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:39333:8011":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:13507:7959":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"5:4259:8415":{"crate_id":5,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"4:7553:5500":{"crate_id":4,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"5:8588:17176":{"crate_id":5,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"6:5423:9613":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"1:3717:70":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"4:1557:7441":{"crate_id":4,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:11812:5910":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"4:830:5483":{"crate_id":4,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"5:7911:5467":{"crate_id":5,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:4747:3973":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"17:12824:24291":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"5:1465:155":{"crate_id":5,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"5:8173:7615":{"crate_id":5,"path":["std","fs","Permissions"],"kind":"struct"},"6:4985:9455":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"16:7648:7276":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:5006:6944":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:43213:8067":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:43054:10269":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:21430:4482":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"5:656:7539":{"crate_id":5,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:22990:7997":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"11:490:153":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"5:3549:2880":{"crate_id":5,"path":["std","io","Read"],"kind":"trait"},"6:5477:9649":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:7485:10054":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:45542:8134":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:40449:3887":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"16:2548:6875":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"16:5756:6956":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"5:11233:10171":{"crate_id":5,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"18:598:37425":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"5:11663:8422":{"crate_id":5,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:10661:5809":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"6:5174:9505":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"5:11198:10170":{"crate_id":5,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"1:46119:8185":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:21498:32205":{"crate_id":1,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"16:6927:7157":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"6:564:9180":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"5:4728:17195":{"crate_id":5,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"1:10578:1666":{"crate_id":1,"path":["core","slice"],"kind":"module"},"17:11128:5786":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:10887:37420":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:2030:3960":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:12969:6030":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:9737:24266":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"9:0:3616":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:44181:10270":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"6:1517:9209":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:41613:3169":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"5:5124:17203":{"crate_id":5,"path":["std","panic","always_abort"],"kind":"function"},"5:11190:35981":{"crate_id":5,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"17:15569:6659":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"16:5700:6895":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:40161:2031":{"crate_id":1,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"1:10252:119":{"crate_id":1,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"5:1615:7461":{"crate_id":5,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"16:2684:6881":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"16:3899:6922":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:7943:3862":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"17:14545:6333":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:9886:24284":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:41621:4521":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"17:12792:5761":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"6:8288:10148":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:13482:204":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"16:8301:7353":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"6:559:9178":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"11:1566:23289":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:33281:3828":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:3551:145":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"5:9132:4865":{"crate_id":5,"path":["std","process","ExitCode"],"kind":"struct"},"11:2304:7187":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"17:13946:6223":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"11:2548:8399":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:43759:7951":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"4:826:101":{"crate_id":4,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:11051:5826":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"5:7690:36557":{"crate_id":5,"path":["std","panicking","Hook"],"kind":"enum"},"6:517:9155":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:23034:8001":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"1:2699:201":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"16:2612:6878":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:40400:3899":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"16:7755:6900":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"5:9301:7704":{"crate_id":5,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"4:1428:99":{"crate_id":4,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"4:2114:7753":{"crate_id":4,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"17:13187:6061":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"18:689:5640":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"5:8608:7672":{"crate_id":5,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"6:6678:9891":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:14038:6237":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"5:9095:198":{"crate_id":5,"path":["std","process","Output"],"kind":"struct"},"17:13674:6160":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"16:7144:24225":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:40439:3902":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:10573:37417":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"5:8631:10013":{"crate_id":5,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:41783:195":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"4:0:307":{"crate_id":4,"path":["alloc"],"kind":"module"},"17:11557:5871":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"1:45802:8156":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:41718:225":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"5:4517:7565":{"crate_id":5,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"16:7910:24229":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:3344:139":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:21452:32208":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"1:39223:214":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"6:7366:10013":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:13753:6194":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"11:102:8903":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:15383:6598":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:45880:8160":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"6:6562:9838":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"5:1600:3792":{"crate_id":5,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:12485:24412":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:4394:11639":{"crate_id":1,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"1:42799:4662":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:40315:3893":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:10223:142":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"6:1496:9201":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:43264:4520":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"6:6706:9903":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"4:2197:5429":{"crate_id":4,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:2503:3946":{"crate_id":1,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"1:39183:209":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:39983:8018":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"6:1580:9251":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:3340:2036":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:14246:6286":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:11153:5812":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"6:5665:9724":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:45978:8180":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"17:14091:6244":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"16:3614:6918":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"17:15473:6621":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"10:0:3617":{"crate_id":10,"path":["adler"],"kind":"module"},"1:2623:112":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:21516:17141":{"crate_id":1,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"17:15778:6722":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"4:3033:8912":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:5959:3689":{"crate_id":1,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"17:10828:37412":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"6:6738:9910":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"17:12929:6028":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:15635:6683":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"4:1327:7452":{"crate_id":4,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"5:12318:894":{"crate_id":5,"path":["std","i8"],"kind":"primitive"},"17:10155:5795":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"16:6098:24218":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"18:698:5641":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:45563:8135":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"16:7888:7294":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"5:1958:7551":{"crate_id":5,"path":["std","error","Report"],"kind":"struct"},"1:43352:4535":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"15:288:8391":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"5:8516:3708":{"crate_id":5,"path":["std","io","Split"],"kind":"struct"},"1:40356:3905":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"5:10859:7722":{"crate_id":5,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"17:14325:6296":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:13855:6210":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"6:6478:9788":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"6:5370:9588":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"5:485:5428":{"crate_id":5,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"17:15289:6569":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"5:5289:203":{"crate_id":5,"path":["std","path","PathBuf"],"kind":"struct"},"5:10725:5471":{"crate_id":5,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"17:16093:6799":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"17:10068:24271":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"6:4800:9350":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"5:10382:4867":{"crate_id":5,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"1:43282:4519":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:4821:5691":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"6:8253:10140":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"5:4775:10026":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"5:11791:7560":{"crate_id":5,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"16:6398:6891":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"6:4837:9378":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"6:5457:9638":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"16:4940:6942":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:12201:5966":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:15092:6525":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:32078:4012":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"5:8774:7686":{"crate_id":5,"path":["std","path","PrefixComponent"],"kind":"struct"},"17:1207:5673":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:44217:10170":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"5:418:184":{"crate_id":5,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:43721:3707":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"17:11142:5811":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"5:8510:2031":{"crate_id":5,"path":["std","io","Bytes"],"kind":"struct"},"16:8155:7340":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"4:6554:3792":{"crate_id":4,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"16:4743:6935":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"4:3648:3169":{"crate_id":4,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:40056:8022":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:6150:3883":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:46634:8236":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"5:11326:7735":{"crate_id":5,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"4:4074:3792":{"crate_id":4,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"6:523:9158":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"17:14177:6272":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"4:6402:17066":{"crate_id":4,"path":["alloc","task","Wake"],"kind":"trait"},"17:15023:6510":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:39155:3843":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:22855:7987":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"17:14402:6309":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:73:950":{"crate_id":1,"path":["core","isize"],"kind":"module"},"17:513:5669":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"4:7392:3792":{"crate_id":4,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:22968:7995":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"17:13325:6096":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"5:9370:186":{"crate_id":5,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"16:6588:7089":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"17:11042:5824":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:46451:8225":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:11898:5919":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"16:5307:6948":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:7490:3878":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"5:9119:4864":{"crate_id":5,"path":["std","process","ExitStatusError"],"kind":"struct"},"16:7580:7272":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"6:5283:9559":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"4:7452:7770":{"crate_id":4,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"15:394:23321":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"16:8259:7237":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"5:9260:115":{"crate_id":5,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"9:330:9112":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:14788:6400":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"6:4942:9436":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:14414:6311":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:12349:4514":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"17:10524:5807":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:42601:3958":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:21695:16788":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:40002:7906":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:12900:6027":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:44505:3764":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"11:2443:3792":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"6:1723:9335":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:13814:6206":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"5:0:1692":{"crate_id":5,"path":["std"],"kind":"module"},"5:4124:17154":{"crate_id":5,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:15313:6576":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"16:6532:7087":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:10399:2031":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:6854:10189":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"1:33823:3834":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"4:2103:7752":{"crate_id":4,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"4:6957:3798":{"crate_id":4,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"1:12823:3928":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:12300:24410":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"5:10608:5470":{"crate_id":5,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"14:220:7438":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"6:5181:9506":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"5:10473:8904":{"crate_id":5,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"11:2352:7452":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"5:7979:7604":{"crate_id":5,"path":["std","thread","ThreadId"],"kind":"struct"},"6:6811:9934":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"14:160:7431":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:43741:8082":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"5:6749:7585":{"crate_id":5,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"16:4641:6933":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"5:6525:185":{"crate_id":5,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"6:5146:9503":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"5:12319:876":{"crate_id":5,"path":["std","i16"],"kind":"primitive"},"16:4587:6931":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:13632:115":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"17:2037:5674":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:43413:3932":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"5:8201:127":{"crate_id":5,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:44517:8115":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"6:5266:9548":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"4:7422:34872":{"crate_id":4,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"5:366:7535":{"crate_id":5,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:39263:215":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:40791:3861":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:41669:4057":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:22617:7965":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:15624:6678":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:12443:5992":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"1:43535:8076":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"16:2998:6913":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"17:11443:5863":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:39107:3756":{"crate_id":1,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"6:5376:9589":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:256:5663":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:1547:9229":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:2175:24344":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:40171:11672":{"crate_id":1,"path":["core","ffi","c_char"],"kind":"type_alias"},"1:2648:469":{"crate_id":1,"path":["core","cmp"],"kind":"module"},"5:11646:7600":{"crate_id":5,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"5:10901:7727":{"crate_id":5,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"4:7632:242":{"crate_id":4,"path":["alloc","string","String"],"kind":"struct"},"1:30479:3958":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:46509:8227":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:44468:8114":{"crate_id":1,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"6:6721:9907":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"5:3038:225":{"crate_id":5,"path":["std","io","error","Result"],"kind":"type_alias"},"1:40784:7926":{"crate_id":1,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"1:22749:7973":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:14449:6323":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:11702:5893":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"17:15126:6528":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"5:6462:219":{"crate_id":5,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"1:30209:11425":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:0:550":{"crate_id":1,"path":["core"],"kind":"module"},"4:1311:7187":{"crate_id":4,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:15151:6536":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"6:4992:9458":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"6:6670:9889":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:12683:6011":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"5:2305:3697":{"crate_id":5,"path":["std","fs","read_to_string"],"kind":"function"},"1:22128:16789":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"14:0:3620":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:11715:5894":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"16:6160:23329":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"6:1671:9313":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:45411:8120":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"11:396:5424":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"5:2215:128":{"crate_id":5,"path":["std","ffi","os_str","Display"],"kind":"struct"},"16:8216:7346":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"18:538:5615":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"5:10456:113":{"crate_id":5,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"6:1565:9239":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"6:6379:9733":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"5:12331:13":{"crate_id":5,"path":["std","fn"],"kind":"primitive"},"16:6634:6899":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"6:7584:10116":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"5:10931:127":{"crate_id":5,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"17:15655:6686":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"5:10970:7611":{"crate_id":5,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"16:5781:6896":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"4:7412:7769":{"crate_id":4,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"18:531:5612":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:13766:6196":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"6:586:9192":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:21577:16790":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"5:2450:17128":{"crate_id":5,"path":["std","fs","symlink_metadata"],"kind":"function"},"4:6947:3797":{"crate_id":4,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"16:8313:136":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:44209:10277":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"4:5922:3792":{"crate_id":4,"path":["alloc","string","Drain"],"kind":"struct"},"17:15992:6780":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"1:43689:8080":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:16105:6801":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"16:6246:205":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:10612:5808":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"16:8202:6912":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"4:3872:3790":{"crate_id":4,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"1:40149:8027":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:42824:156":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"5:664:17089":{"crate_id":5,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:10720:37416":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"5:9696:7612":{"crate_id":5,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"5:12325:1817":{"crate_id":5,"path":["std","u32"],"kind":"primitive"},"6:6609:9864":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"5:4310:8418":{"crate_id":5,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"6:497:9138":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:234:225":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:8294:10149":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:41701:4082":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:22564:7964":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:13844:6209":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:43374:4534":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"4:1191:8425":{"crate_id":4,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"6:1663:9312":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"6:6636:9873":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:15418:6606":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:3264:5682":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"5:12330:1398":{"crate_id":5,"path":["std","reference"],"kind":"primitive"},"5:3303:3726":{"crate_id":5,"path":["std","io","stdio","Stdin"],"kind":"struct"},"6:5382:9592":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:16151:6814":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"1:41363:7933":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:40255:2180":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"5:1987:11357":{"crate_id":5,"path":["std","error","Indented"],"kind":"struct"},"5:10959:35986":{"crate_id":5,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:33477:3832":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:21440:32208":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"17:12150:5959":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"9:178:10973":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:13437:6113":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:13797:6203":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"5:12307:1851":{"crate_id":5,"path":["std","unit"],"kind":"primitive"},"1:2662:133":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:3164:3824":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"4:4468:3689":{"crate_id":4,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"6:4909:9423":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:3176:3751":{"crate_id":1,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"17:15456:6614":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"6:7452:10040":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"5:1593:3169":{"crate_id":5,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"5:10316:7712":{"crate_id":5,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"17:13774:6198":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:10205:2987":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"17:15426:6608":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"6:6788:9928":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"6:538:9167":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:12264:5971":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"16:8188:7344":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:40268:3881":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"5:3965:7561":{"crate_id":5,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:3824:3792":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"18:481:5606":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:14912:6492":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:14752:6369":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:40840:3871":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"5:11657:8421":{"crate_id":5,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"5:5990:5442":{"crate_id":5,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:15463:6616":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:11184:4524":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"6:5617:9704":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"5:12092:5480":{"crate_id":5,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:10759:5811":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"5:12278:17094":{"crate_id":5,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:11166:5837":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:12808:6021":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"5:512:5429":{"crate_id":5,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:35872:3837":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:13173:6060":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:11350:4522":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"6:7412:10032":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:43899:8093":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:12251:5970":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"5:12313:1789":{"crate_id":5,"path":["std","tuple"],"kind":"primitive"},"4:7363:3766":{"crate_id":4,"path":["alloc","alloc","Global"],"kind":"struct"},"1:22793:30254":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"5:10679:3726":{"crate_id":5,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"1:40219:3737":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"17:12278:5972":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"5:11166:4863":{"crate_id":5,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"16:7306:37407":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"17:12851:6023":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"5:12322:869":{"crate_id":5,"path":["std","i128"],"kind":"primitive"},"1:45496:8131":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"16:4882:6940":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:41379:11692":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:8626:3874":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"5:3005:5439":{"crate_id":5,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:44235:130":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"6:1593:9258":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"6:7546:10097":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:9671:24267":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:11773:5902":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:12777:3933":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"18:515:5605":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"6:4891:9411":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:16032:6079":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"16:2508:6873":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:13116:6048":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"16:6574:6911":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"6:5415:9608":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"16:4531:6929":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"18:548:152":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"6:6471:9786":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:3379:2908":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"5:5068:17198":{"crate_id":5,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"16:5722:6897":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"6:5296:9564":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"14:165:23295":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:3184:3753":{"crate_id":1,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"17:15342:6584":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"16:7711:209":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:1707:9330":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"16:6442:7078":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"4:4502:5499":{"crate_id":4,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"16:7618:7273":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"16:5385:5795":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"6:5336:9576":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"17:11075:5830":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:42854:8065":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"5:10950:35989":{"crate_id":5,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"5:11073:5474":{"crate_id":5,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"4:6763:5481":{"crate_id":4,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:42537:10261":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"8:0:3615":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:11227:5841":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"16:7559:7271":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"18:613:37426":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"5:878:2181":{"crate_id":5,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:16165:6817":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"17:2203:5678":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"16:4062:6924":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:43870:8085":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:11102:5832":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:13272:6089":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:10262:3543":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"5:9397:5460":{"crate_id":5,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"4:4423:264":{"crate_id":4,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"6:7306:9980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"4:7645:3926":{"crate_id":4,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"16:4913:6941":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:37748:3838":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"6:6409:9758":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:12333:4512":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:41638:4056":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"5:9206:17239":{"crate_id":5,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"5:9191:17240":{"crate_id":5,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:33996:3836":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:9293:4058":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"5:8845:7691":{"crate_id":5,"path":["std","path","Ancestors"],"kind":"struct"},"1:32684:3822":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"4:3661:4521":{"crate_id":4,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:9916:24285":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"16:5863:24217":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:3329:3757":{"crate_id":1,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"5:9387:233":{"crate_id":5,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"5:5542:4854":{"crate_id":5,"path":["std","process","Child"],"kind":"struct"},"1:2857:143":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"5:2522:2187":{"crate_id":5,"path":["std","io"],"kind":"module"},"16:6494:7084":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:13211:6075":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:6491:9797":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:9907:11360":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:11269:24318":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"5:6631:3863":{"crate_id":5,"path":["std","sync","once","Once"],"kind":"struct"},"17:11865:5916":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"16:5960:6984":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:13785:6201":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"16:6412:24220":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"4:6039:5504":{"crate_id":4,"path":["alloc","sync","Weak"],"kind":"struct"},"1:44259:8107":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"6:5039:9484":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:12695:6012":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"5:928:7457":{"crate_id":5,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"16:6665:24222":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"5:10888:7613":{"crate_id":5,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"1:46157:8187":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"6:7984:10125":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:13412:6111":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"6:5134:9502":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:14012:6234":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:4328:7907":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:15836:6732":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"16:6427:7076":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"6:5160:9504":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:2827:17141":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:13972:5924":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:44185:10271":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"6:8328:10156":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"1:22946:7993":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"4:7582:11686":{"crate_id":4,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:31943:4010":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"17:11341:5855":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"5:922:3790":{"crate_id":5,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"6:7339:10003":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:15:2946":{"crate_id":1,"path":["core","write"],"kind":"macro"},"16:2838:6888":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:4683:5526":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:14356:6302":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:43885:8090":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:40409:3900":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"11:430:8408":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"18:608:5625":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"4:3271:7462":{"crate_id":4,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"11:328:8403":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:11405:5859":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:41766:4521":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:40199:8028":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:46623:8235":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"16:7085:7178":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:3957:2181":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"4:3305:7463":{"crate_id":4,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:22773:30268":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"11:1142:7455":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:42160:97":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"17:16138:6808":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"1:3149:3821":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"16:2878:6890":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"16:6466:7081":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:42041:88":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:15760:6716":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"1:22407:3945":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"17:16212:6828":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"18:643:5608":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"5:8163:7614":{"crate_id":5,"path":["std","fs","FileTimes"],"kind":"struct"},"4:1155:8424":{"crate_id":4,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"4:1830:3790":{"crate_id":4,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"1:33650:3833":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"16:6749:7125":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"16:2728:6883":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"17:14298:6292":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:10978:4858":{"crate_id":5,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"5:1604:3790":{"crate_id":5,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"11:1728:155":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"11:0:3618":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"5:4060:17150":{"crate_id":5,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"4:7538:3855":{"crate_id":4,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"17:12464:24411":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"1:37913:3841":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"17:15138:6531":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"5:8839:3169":{"crate_id":5,"path":["std","path","Iter"],"kind":"struct"},"1:1966:1338":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"6:5329:9575":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"4:3397:3790":{"crate_id":4,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"16:2936:23357":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"5:10685:3724":{"crate_id":5,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"1:40189:5528":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"16:3475:6917":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"1:39918:7906":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"5:576:7537":{"crate_id":5,"path":["std","thread","JoinHandle"],"kind":"struct"},"5:6136:5450":{"crate_id":5,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"16:7379:37408":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"5:6235:5443":{"crate_id":5,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"17:15058:6514":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"4:4309:3169":{"crate_id":4,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:44270:11746":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"5:3263:8765":{"crate_id":5,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:14260:6288":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:10513:4660":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"5:7892:5465":{"crate_id":5,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:13051:119":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"16:6991:37403":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"5:9156:2181":{"crate_id":5,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"5:3266:8766":{"crate_id":5,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"5:8627:7674":{"crate_id":5,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"4:3027:34753":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"11:2403:4521":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"1:46764:8260":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"16:6353:6851":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"5:1621:7462":{"crate_id":5,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"11:1923:7463":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"17:15678:6699":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:3546:253":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"5:10188:8045":{"crate_id":5,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"1:45770:8154":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"5:6806:7589":{"crate_id":5,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"6:5436:9623":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"1:41963:87":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:14341:6298":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:6036:3894":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:11367:5830":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:11896:4538":{"crate_id":1,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"16:7132:7186":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"5:6414:5450":{"crate_id":5,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"1:5206:3736":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"1:46551:8229":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"5:12321:888":{"crate_id":5,"path":["std","i64"],"kind":"primitive"},"1:42564:30270":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"11:1903:7460":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:22220:16873":{"crate_id":1,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"1:44378:149":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"18:718:5647":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"5:3863:7560":{"crate_id":5,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:21467:32206":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"11:351:8405":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"1:46568:8230":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:9886:787":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"17:11743:5897":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"17:15931:6061":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"17:11799:5907":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"4:280:5481":{"crate_id":4,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"5:11591:4869":{"crate_id":5,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"16:6606:7097":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:11547:5741":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"11:1603:7459":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"11:856:7447":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:2788:6886":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"16:4424:6926":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:40134:11686":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"5:8703:7683":{"crate_id":5,"path":["std","path","Prefix"],"kind":"enum"},"5:3396:3724":{"crate_id":5,"path":["std","io","stdio","Stderr"],"kind":"struct"},"5:11574:36618":{"crate_id":5,"path":["std","sys","thread_local","fast_local","DtorState"],"kind":"enum"},"5:8751:8060":{"crate_id":5,"path":["std","path","State"],"kind":"enum"},"17:11574:5876":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:10905:5814":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:40574:2183":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"16:7052:7174":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:45381:8116":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:46422:8224":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"16:5367:24215":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"5:9446:7710":{"crate_id":5,"path":["std","time","SystemTimeError"],"kind":"struct"},"6:1653:9306":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:23012:7999":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"11:123:5420":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:37803:3839":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:43339:3879":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"5:4289:8417":{"crate_id":5,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:46672:8243":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"5:1626:7463":{"crate_id":5,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:21518:16791":{"crate_id":1,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"6:4824:9368":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:22126:17141":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:14386:6305":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:12362:5985":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"5:8856:7692":{"crate_id":5,"path":["std","path","StripPrefixError"],"kind":"struct"},"17:15445:6613":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"6:5557:9676":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"18:80:8383":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"11:2562:9109":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:597:5670":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:11661:5890":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:13877:6217":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:43443:8073":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:43485:4527":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"16:4976:6943":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"4:5409:5481":{"crate_id":4,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"5:2614:3716":{"crate_id":5,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"16:5347:6949":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:12454:5993":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:44457:30463":{"crate_id":1,"path":["core","task","wake","ExtData"],"kind":"enum"},"4:6007:71":{"crate_id":4,"path":["alloc","sync","Arc"],"kind":"struct"},"1:40123:8026":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:2860:257":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"4:2757:10184":{"crate_id":4,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"11:883:7449":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:15720:6705":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"16:2572:6876":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"6:6698:9900":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"1:22957:7994":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"6:473:9127":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:2851:76":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"16:6317:7059":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"16:7590:6907":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:491:9135":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"5:1073:7450":{"crate_id":5,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"0:6:2025":{"crate_id":0,"path":["bytes","buf"],"kind":"module"},"5:1904:7549":{"crate_id":5,"path":["std","env","Args"],"kind":"struct"},"5:3798:17148":{"crate_id":5,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"14:214:7436":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:11863:4537":{"crate_id":1,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"5:6671:5457":{"crate_id":5,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"16:7813:7282":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:22326:17141":{"crate_id":1,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"1:42318:3543":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"17:16069:6794":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"1:22735:30446":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:32498:3823":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:14575:5991":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:3311:124":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"16:4502:6928":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"13:110:37391":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"6:5200:9518":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:21571:16787":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:13986:6231":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"6:6532:9815":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:30426:3184":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"5:6635:7584":{"crate_id":5,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:44063:8101":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"5:9089:4862":{"crate_id":5,"path":["std","process","CommandArgs"],"kind":"struct"},"1:31996:8005":{"crate_id":1,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"17:14311:6293":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"6:8006:10126":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"6:1686:9322":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"5:1881:7548":{"crate_id":5,"path":["std","env","SplitPaths"],"kind":"struct"},"1:43750:8083":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:44042:11736":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:6859:5534":{"crate_id":1,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"5:10878:10167":{"crate_id":5,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"1:43273:4518":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"16:7656:24227":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"5:7317:37368":{"crate_id":5,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:6848:3885":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"1:8670:11359":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"5:8493:2180":{"crate_id":5,"path":["std","io","Chain"],"kind":"struct"},"16:2902:23356":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"16:4718:6934":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:32108:3748":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"16:8093:7332":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:12107:5811":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"6:553:9175":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"17:15324:6580":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:10018:24268":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"4:4269:3689":{"crate_id":4,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"1:42807:8058":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"16:5742:6952":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:13959:6226":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:15249:6558":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"6:6441:9776":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"5:8041:17093":{"crate_id":5,"path":["std","backtrace","RawFrame"],"kind":"enum"},"6:6524:9810":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:12043:5952":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"17:15822:6729":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"6:5636:9713":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"1:45638:8140":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:11077:4521":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:40822:3867":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:12711:136":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"6:5390:9597":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"16:8073:7331":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:2240:3761":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:3557:3846":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"4:3284:35201":{"crate_id":4,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"16:2374:6867":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"1:45688:8150":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"5:9402:5461":{"crate_id":5,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"6:5344:9577":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"4:7609:7776":{"crate_id":4,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"11:673:3169":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:13424:6112":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:14475:6325":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"18:670:5637":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:14212:6283":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"17:11392:5858":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"16:7549:7270":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:3154:3826":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"7:31:23196":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"19:0:1274":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"5:8151:7612":{"crate_id":5,"path":["std","fs","ReadDir"],"kind":"struct"},"17:13292:6090":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:32003:3972":{"crate_id":1,"path":["core","error","tags","Ref"],"kind":"struct"},"11:1066:23288":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"16:5802:24216":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:14723:6349":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:15390:6599":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"5:7974:7602":{"crate_id":5,"path":["std","thread","Builder"],"kind":"struct"},"1:12365:11723":{"crate_id":1,"path":["core","str","converts","from_utf8"],"kind":"function"},"4:7569:7771":{"crate_id":4,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"5:886:7442":{"crate_id":5,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"16:7061:7177":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:22835:10193":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:16198:6824":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"5:11895:7601":{"crate_id":5,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"17:13024:24293":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:43766:8020":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"6:8282:10147":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:1098:5671":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"6:7602:10119":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:261:5664":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:41629:2181":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"16:5686:6892":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:8177:3484":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"4:111:592":{"crate_id":4,"path":["alloc","alloc","dealloc"],"kind":"function"},"1:8259:2853":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"5:8523:3707":{"crate_id":5,"path":["std","io","Lines"],"kind":"struct"},"4:926:5488":{"crate_id":4,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:40584:3903":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:12633:4539":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"16:6895:7153":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"11:2542:8361":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"6:1585:9253":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"18:735:28469":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:46588:8232":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:42846:8064":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"11:1676:5426":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"5:8594:7670":{"crate_id":5,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:12659:6009":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"16:6278:7038":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:3096:3749":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"16:542:6844":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"5:4937:5440":{"crate_id":5,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"4:4104:5481":{"crate_id":4,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"11:1025:7450":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:12707:6013":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"15:0:3621":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:9720:84":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"5:947:17099":{"crate_id":5,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"6:5653:9717":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"1:21469:32200":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"6:5630:9710":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"1:22979:7996":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"1:46028:8182":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:11788:5906":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"5:11880:37255":{"crate_id":5,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:10465:152":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:44403:206":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"17:12030:5951":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:43784:8019":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:12371:6028":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"18:651:5608":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:15596:6671":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:10249:119":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"7:78:23203":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"6:1639:9295":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"5:4839:17199":{"crate_id":5,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:22352:30830":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"11:2569:3789":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:5075:6946":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"6:5236:9533":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:5863:3689":{"crate_id":1,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"11:832:7457":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:7711:3859":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"5:3606:2987":{"crate_id":5,"path":["std","io","Write"],"kind":"trait"},"6:7330:9997":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:7473:7004":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"5:12327:1805":{"crate_id":5,"path":["std","u128"],"kind":"primitive"},"4:1356:7456":{"crate_id":4,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:9858:24283":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:12388:5986":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"6:1621:9283":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:40097:8024":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"struct"},"1:44213:10278":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"6:6746:9911":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"1:43571:4525":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:14587:6340":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:12353:5984":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"16:8175:7341":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:6659:3906":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"5:3634:2882":{"crate_id":5,"path":["std","io","BufRead"],"kind":"trait"},"1:44028:8096":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:44205:10276":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:43617:8077":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"5:1059:7187":{"crate_id":5,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"6:8341:10160":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:43517:8075":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"16:6782:24223":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:40105:8025":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:46140:8186":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:4974:11656":{"crate_id":1,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:41758:3169":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"11:1107:7454":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:4619:7912":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:44076:8105":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:10256:3963":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:41710:3759":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:2693:194":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"11:1582:7458":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"18:706:5643":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:14529:6331":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:11467:5864":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:43058:4545":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"5:8185:138":{"crate_id":5,"path":["std","fs","FileType"],"kind":"struct"},"4:7119:5522":{"crate_id":4,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"5:1843:7546":{"crate_id":5,"path":["std","env","Vars"],"kind":"struct"},"11:2423:2181":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"17:13922:6222":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"5:9221:17241":{"crate_id":5,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:10688:5538":{"crate_id":1,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"17:13509:6127":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"5:5918:7580":{"crate_id":5,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:13594:6155":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:15410:6605":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"6:0:986":{"crate_id":6,"path":["libc"],"kind":"module"},"16:3842:6921":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:6480:6893":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:15333:6583":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"6:5515:9658":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"16:6872:7152":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"5:8576:7562":{"crate_id":5,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"6:5244:9537":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:11256:5844":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"1:30864:4482":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"17:15176:6544":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"6:6417:9760":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"4:1518:7442":{"crate_id":4,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:41679:4060":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"17:15701:6700":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"5:8789:17220":{"crate_id":5,"path":["std","path","Component"],"kind":"enum"},"1:3098:117":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"6:6775:9921":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"16:6976:7161":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"5:4879:17165":{"crate_id":5,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:44053:8097":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"4:40:3767":{"crate_id":4,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:23023:8000":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"4:2289:34849":{"crate_id":4,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:13235:6076":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"5:8310:7620":{"crate_id":5,"path":["std","io","error","Custom"],"kind":"struct"},"5:2060:196":{"crate_id":5,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"11:837:7444":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"11:1887:2181":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"5:3260:8520":{"crate_id":5,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"16:4468:6927":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:33163:3831":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:3103:246":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:12579:7949":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"5:9179:7695":{"crate_id":5,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"6:4885:9409":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:42121:90":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"16:3925:6923":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"6:1692:9323":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"4:5217:5504":{"crate_id":4,"path":["alloc","rc","Weak"],"kind":"struct"},"1:10898:17141":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:7883:3733":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:44494:3856":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"4:7372:2181":{"crate_id":4,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"17:15102:6526":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"6:5191:9513":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"4:3250:35198":{"crate_id":4,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"18:726:5650":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"4:7048:263":{"crate_id":4,"path":["alloc","vec","Vec"],"kind":"struct"},"18:680:5638":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:44197:10274":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:21697:7963":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:10997:5821":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"5:8602:7664":{"crate_id":5,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"5:11632:7598":{"crate_id":5,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:5846:6967":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"16:7098:7181":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:46687:8244":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:43394:4533":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"11:2151:7452":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:14051:6239":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:14111:6247":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"5:8686:17207":{"crate_id":5,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:12089:5956":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"16:2458:6871":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:10052:3982":{"crate_id":1,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"1:46649:8237":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"16:6300:7053":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"16:7727:6909":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"17:12949:5686":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:2848:77":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:3536:3844":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:13015:5991":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"1:4738:5527":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"5:5243:7572":{"crate_id":5,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:45428:8123":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"11:811:3790":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"1:4251:3689":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"5:5469:128":{"crate_id":5,"path":["std","path","Display"],"kind":"struct"},"1:23045:8002":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"1:38492:3842":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"5:11618:7597":{"crate_id":5,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"5:7852:7741":{"crate_id":5,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:44381:163":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"5:1906:7550":{"crate_id":5,"path":["std","env","ArgsOs"],"kind":"struct"},"1:2601:102":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"17:13553:6144":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"16:2438:6870":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:2234:5681":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"6:8306:10151":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:16223:6830":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"1:31989:7237":{"crate_id":1,"path":["core","error","tags","Value"],"kind":"struct"},"17:10170:5796":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:39973:8017":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"5:5556:4855":{"crate_id":5,"path":["std","process","ChildStdin"],"kind":"struct"},"4:2309:10183":{"crate_id":4,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:11295:4528":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:10710:5810":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:43426:8072":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:22302:16875":{"crate_id":1,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"5:8473:3706":{"crate_id":5,"path":["std","io","SeekFrom"],"kind":"enum"},"1:44094:3929":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:32021:243":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"17:10284:5659":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:3234:3835":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"6:578:9188":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"17:15116:6527":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"4:1536:7457":{"crate_id":4,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:22:802":{"crate_id":1,"path":["core","format_args"],"kind":"macro"},"6:6874:9947":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"5:5592:4857":{"crate_id":5,"path":["std","process","ChildStderr"],"kind":"struct"},"16:2528:6874":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"5:7360:5463":{"crate_id":5,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"4:5:1906":{"crate_id":4,"path":["alloc","vec"],"kind":"macro"},"18:589:5618":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:11605:5884":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"6:1535:9220":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:2355:6861":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"5:5576:4856":{"crate_id":5,"path":["std","process","ChildStdout"],"kind":"struct"},"17:11493:5865":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:15944:6075":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"1:41774:2181":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"16:7857:7290":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"6:1526:9214":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:6900:9962":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:10419:5665":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:403:5666":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"5:10682:3728":{"crate_id":5,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"11:787:7443":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"4:6600:5481":{"crate_id":4,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:11053:3169":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"5:9314:7708":{"crate_id":5,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"16:5995:6987":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:41347:7931":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:10720:5542":{"crate_id":1,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:40368:3897":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:4794:3974":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"16:7428:24226":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:41325:169":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"11:1883:3169":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"5:11281:10172":{"crate_id":5,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"5:8535:7666":{"crate_id":5,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"16:7168:7708":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:22866:11477":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"4:7621:5505":{"crate_id":4,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"5:4763:17154":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"16:2660:6880":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"5:4773:10024":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"5:8315:3720":{"crate_id":5,"path":["std","io","error","ErrorKind"],"kind":"enum"},"16:2768:6885":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"11:1051:7452":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"6:5314:9571":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:11102:3708":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}