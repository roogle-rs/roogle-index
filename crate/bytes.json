{"root":"0:0:1689","crate_version":"1.4.0","includes_private":false,"index":{"1:2252:3107":{"id":"1:2252:3107","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2547-0:1084:1825":{"id":"b:1:2547-0:1084:1825","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2517:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1825","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2550:128","1:2551:1483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:485":{"id":"0:485","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[763,0],"end":[767,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"items":["0:486:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1038:2278":{"id":"0:1038:2278","crate_id":0,"name":"put_i16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1065:2291":{"id":"0:1065:2291","crate_id":0,"name":"put_u32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:407":{"id":"0:407","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[519,0],"end":[519,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1100":{"id":"0:1100","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:1102:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8252:3690-0:300:1828":{"id":"a:1:8252:3690-0:300:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8252:3690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:2551:1483":{"id":"1:2551:1483","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"1:41497:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:503":{"id":"0:503","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[843,0],"end":[872,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"4:273:1835","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"4:7013:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:504:696"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:169:2173":{"id":"0:169:2173","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1424,4],"end":[1427,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:669:551":{"id":"0:669:551","crate_id":0,"name":"deref","span":{"filename":"src/bytes_mut.rs","begin":[1151,4],"end":[1153,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:412:422":{"id":"0:412:422","crate_id":0,"name":"clone","span":{"filename":"src/bytes.rs","begin":[531,4],"end":[533,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:39:1982":{"id":"0:39:1982","crate_id":0,"name":"get_u32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[480,4],"end":[482,5]},"visibility":"default","docs":"Gets an unsigned 32 bit integer from `self` in the little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_u32_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195":{"id":"0:195","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[132,0],"end":[191,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["get_uint_ne","get_u32","has_remaining","get_i128","get_u128_ne","get_i128_le","get_u16_ne","get_u128","get_i128_ne","get_f32_ne","take","chain","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","get_uint","copy_to_slice","chunks_vectored","get_f64_ne","get_u16_le","reader","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne"],"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1824","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["0:198:1879","0:199:1842","0:200:1845","0:201:1907","0:203:2101"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8253:3689-0:300:1828":{"id":"a:1:8253:3689-0:300:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8253:3689","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:346-0:300:1828":{"id":"0:346-0:300:1828","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[38,0],"end":[38,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::uninit_slice::UninitSlice","name":"UninitSlice","id":"0:300:1828","glob":false}}},"0:49:2019":{"id":"0:49:2019","crate_id":0,"name":"get_i64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[692,4],"end":[694,5]},"visibility":"default","docs":"Gets a signed 64 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\",\n    false => b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x0102030405060708, buf.get_i64_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2683:220-0:1097:1829":{"id":"a:1:2683:220-0:1097:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:459":{"id":"0:459","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[685,0],"end":[689,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:460:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1152":{"id":"0:1152","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[37,0],"end":[37,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"1:9158:3159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1153:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1027:2173":{"id":"0:1027:2173","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:684":{"id":"0:684","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1194,0],"end":[1198,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:685:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12017:32975":{"id":"1:12017:32975","crate_id":1,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:194:2467":{"id":"0:194:2467","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/chain.rs","begin":[127,4],"end":[129,5]},"visibility":"public","docs":"Consumes this `Chain`, returning the underlying values.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet chain = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nlet (first, last) = chain.into_inner();\nassert_eq!(first[..], b\"hello\"[..]);\nassert_eq!(last[..], b\"world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"tuple":[{"generic":"T"},{"generic":"U"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:282":{"id":"0:282","crate_id":0,"name":null,"span":{"filename":"src/buf/take.rs","begin":[132,0],"end":[155,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["get_uint_ne","get_u32","has_remaining","get_i128","get_u128_ne","get_i128_le","get_u16_ne","get_u128","get_i128_ne","get_f32_ne","take","chain","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","get_uint","copy_to_slice","chunks_vectored","get_f64_ne","get_u16_le","reader","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne"],"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:284:1879","0:285:1842","0:286:1845","0:287:2101"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:213:2469":{"id":"0:213:2469","crate_id":0,"name":"Item","span":{"filename":"src/buf/chain.rs","begin":[236,4],"end":[236,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u8"}}}},"0:409":{"id":"0:409","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[522,0],"end":[527,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:2921:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:410:587"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:753":{"id":"0:753","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1517,0],"end":[1521,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"4:6717:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}},{"type":{"resolved_path":{"name":"Global","id":"4:7013:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:754:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1001:1946":{"id":"0:1001:1946","crate_id":0,"name":"get_i8","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1107":{"id":"0:1107","crate_id":0,"name":null,"span":{"filename":"src/buf/take.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1109:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:158":{"id":"0:158","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1378,0],"end":[1380,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["put_u64","put_f32","put_f32_ne","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_i64_le","put_u16","put_i64","put_u64_ne","put_bytes"],"trait":{"name":"BufMut","id":"0:106:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:1027:2173","0:1028:2218","0:1029:2191","0:1030:2233","0:1031:2244","0:1032:2251","0:1033:2255","0:1034:2260","0:1035:2268","0:1036:2272","0:1037:2275","0:1038:2278","0:1039:2282","0:1040:2286","0:1041:2291","0:1042:2294","0:1043:2297","0:1044:2300","0:1045:2304","0:1046:2308","0:1047:2313","0:1048:2316","0:1049:2319","0:1050:2322"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1046:2308":{"id":"0:1046:2308","crate_id":0,"name":"put_u64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:191:2453":{"id":"0:191:2453","crate_id":0,"name":"first_mut","span":{"filename":"src/buf/chain.rs","begin":[74,4],"end":[76,5]},"visibility":"public","docs":"Gets a mutable reference to the first underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nbuf.first_mut().advance(1);\n\nlet full = buf.copy_to_bytes(9);\nassert_eq!(full, b\"elloworld\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:349-0:1140:1830":{"id":"0:349-0:1140:1830","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[41,31],"end":[41,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"self::writer::Writer","name":"Writer","id":"0:1140:1830","glob":false}}},"0:60:2064":{"id":"0:60:2064","crate_id":0,"name":"get_int_le","span":{"filename":"src/buf/buf_impl.rs","begin":[925,4],"end":[927,5]},"visibility":"default","docs":"Gets a signed n-byte integer from `self` in little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x010203, buf.get_int_le(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:959:1879":{"id":"0:959:1879","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:147:2371":{"id":"0:147:2371","crate_id":0,"name":"put_f32","span":{"filename":"src/buf/buf_mut.rs","begin":[1072,4],"end":[1074,5]},"visibility":"default","docs":"Writes  an IEEE754 single-precision (4 bytes) floating point number to\n`self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f32(1.2f32);\nassert_eq!(buf, b\"\\x3F\\x99\\x99\\x9A\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1045:2304":{"id":"0:1045:2304","crate_id":0,"name":"put_u64","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8252:3690-0:599:1693":{"id":"a:1:8252:3690-0:599:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8252:3690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:768:1039":{"id":"0:768:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1560,4],"end":[1562,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:685:1039":{"id":"0:685:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1195,4],"end":[1197,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:476:612":{"id":"0:476:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[734,4],"end":[736,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:335:2467":{"id":"0:335:2467","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/writer.rs","begin":[72,4],"end":[74,5]},"visibility":"public","docs":"Consumes this `Writer`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::BufMut;\nuse std::io;\n\nlet mut buf = vec![].writer();\nlet mut src = &b\"hello world\"[..];\n\nio::copy(&mut src, &mut buf).unwrap();\n\nlet buf = buf.into_inner();\nassert_eq!(*buf, b\"hello world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"B"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:341-0:106:1688":{"id":"0:341-0:106:1688","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[33,0],"end":[33,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::buf_mut::BufMut","name":"BufMut","id":"0:106:1688","glob":false}}},"0:750:612":{"id":"0:750:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1506,4],"end":[1508,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:313:815":{"id":"0:313:815","crate_id":0,"name":"len","span":{"filename":"src/buf/uninit_slice.rs","begin":[171,4],"end":[173,5]},"visibility":"public","docs":"Returns the number of bytes in the slice.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut data = [0, 1, 2];\nlet mut slice = &mut data[..];\nlet len = BufMut::chunk_mut(&mut slice).len();\n\nassert_eq!(len, 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2541-0:1140:1830":{"id":"b:1:2541-0:1140:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2543:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:418":{"id":"0:418","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[572,0],"end":[579,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:2897:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:419:230","0:420:551"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:446":{"id":"0:446","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[647,0],"end":[647,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2316:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:4:677-0:599:1693":{"id":"b:4:677-0:599:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2263:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:673:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["4:679:3532","4:680:26637","4:681:26638"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:679:696":{"id":"0:679:696","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1177,4],"end":[1179,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:736":{"id":"0:736","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1461,0],"end":[1461,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12106:32990":{"id":"1:12106:32990","crate_id":1,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:702:422":{"id":"0:702:422","crate_id":0,"name":"clone","span":{"filename":"src/bytes_mut.rs","begin":[1255,4],"end":[1257,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:663:2233":{"id":"0:663:2233","crate_id":0,"name":"put_slice","span":{"filename":"src/bytes_mut.rs","begin":[1122,4],"end":[1124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:506":{"id":"0:506","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[874,0],"end":[878,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:507:696"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12045:28178":{"id":"1:12045:28178","crate_id":1,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"1:43614:7238","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:817:670":{"id":"0:817:670","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/debug.rs","begin":[40,4],"end":[42,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:984:2016":{"id":"0:984:2016","crate_id":0,"name":"get_i64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:400:2758":{"id":"0:400:2758","crate_id":0,"name":"split_off","span":{"filename":"src/bytes.rs","begin":[362,4],"end":[385,5]},"visibility":"public","docs":"Splits the bytes into two at the given index.\n\nAfterwards `self` contains elements `[0, at)`, and the returned `Bytes`\ncontains elements `[at, len)`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut a = Bytes::from(&b\"hello world\"[..]);\nlet b = a.split_off(5);\n\nassert_eq!(&a[..], b\"hello\");\nassert_eq!(&b[..], b\" world\");\n```\n\n# Panics\n\nPanics if `at > len`.","links":{},"attrs":["#[must_use = \"consider Bytes::truncate if you don't need the other half\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["at",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:741":{"id":"0:741","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1481,0],"end":[1485,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"slice":{"primitive":"u8"}},"items":["0:742:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:599:1693":{"id":"0:599:1693","crate_id":0,"name":"BytesMut","span":{"filename":"src/bytes_mut.rs","begin":[61,0],"end":[66,1]},"visibility":"public","docs":"A unique reference to a contiguous slice of memory.\n\n`BytesMut` represents a unique view into a potentially shared memory region.\nGiven the uniqueness guarantee, owners of `BytesMut` handles are able to\nmutate the memory.\n\n`BytesMut` can be thought of as containing a `buf: Arc<Vec<u8>>`, an offset\ninto `buf`, a slice length, and a guarantee that no other `BytesMut` for the\nsame `buf` overlaps with its slice. That guarantee means that a write lock\nis not required.\n\n# Growth\n\n`BytesMut`'s `BufMut` implementation will implicitly grow its buffer as\nnecessary. However, explicitly reserving the required space up-front before\na series of inserts will be more efficient.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(64);\n\nbuf.put_u8(b'h');\nbuf.put_u8(b'e');\nbuf.put(&b\"llo\"[..]);\n\nassert_eq!(&buf[..], b\"hello\");\n\n// Freeze the buffer so that it can be shared\nlet a = buf.freeze();\n\n// This does not allocate, instead `b` points to the same memory.\nlet b = a.clone();\n\nassert_eq!(&a[..], b\"hello\");\nassert_eq!(&b[..], b\"hello\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:619","a:1:8252:3690-0:599:1693","a:1:8253:3689-0:599:1693","a:1:2740:3708-0:599:1693","b:1:2247-0:599:1693","b:1:3319-0:599:1693","b:1:2552-0:599:1693","b:1:2250-0:599:1693","b:1:2541-0:599:1693","b:1:2547-0:599:1693","b:1:2537-0:599:1693","b:4:677-0:599:1693","0:789","0:689","0:749","0:688","0:696","0:755","0:741","0:650","0:715","0:761","0:686","0:781","0:735","0:665","0:722","0:747","0:1152","0:818","0:739","0:694","0:1148","0:725","0:701","0:767","0:677","0:763","0:753","0:777","0:759","0:712","0:736","0:652","0:707","0:691","0:719","0:745","0:779","0:674","0:682","0:698","0:684","0:667","0:743","0:751","0:672","0:703","0:657","0:787","0:757","0:680","0:737","0:783","0:765","0:785","0:670","0:769","0:773"]}}},"0:1023:2061":{"id":"0:1023:2061","crate_id":0,"name":"get_int","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:300:1828":{"id":"0:300:1828","crate_id":0,"name":"UninitSlice","span":{"filename":"src/buf/uninit_slice.rs","begin":[22,0],"end":[22,42]},"visibility":"public","docs":"Uninitialized byte slice.\n\nReturned by `BufMut::chunk_mut()`, the referenced byte slice may be\nuninitialized. The wrapper provides safe access without introducing\nundefined behavior.\n\nThe safety invariants of this wrapper are:\n\n 1. Reading from an `UninitSlice` is undefined behavior.\n 2. Writing uninitialized bytes to an `UninitSlice` is undefined behavior.\n\nThe difference between `&mut UninitSlice` and `&mut [MaybeUninit<u8>]` is\nthat it is possible in safe code to write uninitialized bytes to an\n`&mut [MaybeUninit<u8>]`, which this type prohibits.","links":{},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:303","a:1:8252:3690-0:300:1828","a:1:8253:3689-0:300:1828","a:1:2683:220-0:300:1828","a:1:2740:3708-0:300:1828","a:1:2700:228-0:300:1828","a:1:2690:2116-0:300:1828","b:1:2247-0:300:1828","b:1:3319-0:300:1828","b:1:2250-0:300:1828","0:1125","0:314","0:1133","0:1120","0:1113","0:1128","0:1110","0:1135","0:1123","0:1130","0:1138","0:1118","0:1115"]}}},"0:142:2352":{"id":"0:142:2352","crate_id":0,"name":"put_uint_le","span":{"filename":"src/buf/buf_mut.rs","begin":[945,4],"end":[947,5]},"visibility":"default","docs":"Writes an unsigned n-byte integer to `self` in the little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_uint_le(0x010203, 3);\nassert_eq!(buf, b\"\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:32:1952":{"id":"0:32:1952","crate_id":0,"name":"get_u16","span":{"filename":"src/buf/buf_impl.rs","begin":[334,4],"end":[336,5]},"visibility":"default","docs":"Gets an unsigned 16 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09 hello\"[..];\nassert_eq!(0x0809, buf.get_u16());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1010:1987":{"id":"0:1010:1987","crate_id":0,"name":"get_u32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:340-0:22:1687":{"id":"0:340-0:22:1687","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[32,0],"end":[32,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::buf_impl::Buf","name":"Buf","id":"0:22:1687","glob":false}}},"0:27:1845":{"id":"0:27:1845","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[207,4],"end":[207,38]},"visibility":"default","docs":"Advance the internal cursor of the Buf\n\nThe next call to `chunk()` will return a slice starting `cnt` bytes\nfurther into the underlying buffer.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(buf.chunk(), &b\"hello world\"[..]);\n\nbuf.advance(6);\n\nassert_eq!(buf.chunk(), &b\"world\"[..]);\n```\n\n# Panics\n\nThis function **may** panic if `cnt > self.remaining()`.\n\n# Implementer notes\n\nIt is recommended for implementations of `advance` to panic if `cnt >\nself.remaining()`. If the implementation does not panic, the call must\nbehave as if `cnt == self.remaining()`.\n\nA call with `cnt == 0` should never panic and be a no-op.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:706:787":{"id":"0:706:787","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes_mut.rs","begin":[1264,4],"end":[1266,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:7205:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:192:2456":{"id":"0:192:2456","crate_id":0,"name":"last_ref","span":{"filename":"src/buf/chain.rs","begin":[90,4],"end":[92,5]},"visibility":"public","docs":"Gets a reference to the last underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet buf = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nassert_eq!(buf.last_ref()[..], b\"world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"U"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:444":{"id":"0:444","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[641,0],"end":[645,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","max","clamp"],"trait":{"name":"Ord","id":"1:2347:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:445:429"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1034:2260":{"id":"0:1034:2260","crate_id":0,"name":"put_u16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:428":{"id":"0:428","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[603,0],"end":[610,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:429:2469","0:430:1825","0:431:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2683:220-0:1140:1830":{"id":"a:1:2683:220-0:1140:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:495":{"id":"0:495","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[789,0],"end":[794,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:2588:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:496:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:333:2140":{"id":"0:333:2140","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/writer.rs","begin":[33,4],"end":[35,5]},"visibility":"public","docs":"Gets a reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.\n\n# Examples\n\n```rust\nuse bytes::BufMut;\n\nlet buf = Vec::with_capacity(1024).writer();\n\nassert_eq!(1024, buf.get_ref().capacity());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:697:3107":{"id":"0:697:3107","crate_id":0,"name":"borrow_mut","span":{"filename":"src/bytes_mut.rs","begin":[1232,4],"end":[1234,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1133":{"id":"0:1133","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:2984:2551","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeTo","id":"1:39198:202","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1134:773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:782:612":{"id":"0:782:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1596,4],"end":[1598,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12016:32974":{"id":"1:12016:32974","crate_id":1,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:67:2093":{"id":"0:67:2093","crate_id":0,"name":"get_f64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1084,4],"end":[1086,5]},"visibility":"default","docs":"Gets an IEEE754 double-precision (8 bytes) floating point number from\n`self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33 hello\",\n    false => b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F hello\",\n};\nassert_eq!(1.2f64, buf.get_f64_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:976:1987":{"id":"0:976:1987","crate_id":0,"name":"get_u32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:116:2251":{"id":"0:116:2251","crate_id":0,"name":"put_i8","span":{"filename":"src/buf/buf_mut.rs","begin":[340,4],"end":[343,5]},"visibility":"default","docs":"Writes a signed 8 bit integer to `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i8(0x01);\nassert_eq!(buf, b\"\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2537-0:1140:1830":{"id":"b:1:2537-0:1140:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2540:2707"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:436:787":{"id":"0:436:787","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes.rs","begin":[616,4],"end":[618,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:7205:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1131:186":{"id":"0:1131:186","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:777":{"id":"0:777","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1583,0],"end":[1587,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"items":["0:778:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"4:5443:32884":{"id":"4:5443:32884","crate_id":4,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:12136:31673"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12110:32993":{"id":"1:12110:32993","crate_id":1,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"5:11917:418","self::pattern":"1:11715:3542"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"1:11740:10701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2537-0:599:1693":{"id":"b:1:2537-0:599:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2540:2707"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12125:32996":{"id":"1:12125:32996","crate_id":1,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"5:11917:418","self::pattern":"1:11715:3542"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1143":{"id":"0:1143","crate_id":0,"name":null,"span":{"filename":"src/buf/writer.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:1145:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2740:3708-0:599:1693":{"id":"a:1:2740:3708-0:599:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2740:3708","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:240:2140":{"id":"0:240:2140","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/limit.rs","begin":[27,4],"end":[29,5]},"visibility":"public","docs":"Gets a reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:780:1039":{"id":"0:780:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1590,4],"end":[1592,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:25:1907":{"id":"0:25:1907","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/buf_impl.rs","begin":[164,4],"end":[175,5]},"visibility":"default","docs":"Fills `dst` with potentially multiple slices starting at `self`'s\ncurrent position.\n\nIf the `Buf` is backed by disjoint slices of bytes, `chunk_vectored` enables\nfetching more than one slice at once. `dst` is a slice of `IoSlice`\nreferences, enabling the slice to be directly used with [`writev`]\nwithout any further conversion. The sum of the lengths of all the\nbuffers in `dst` will be less than or equal to `Buf::remaining()`.\n\nThe entries in `dst` will be overwritten, but the data **contained** by\nthe slices **will not** be modified. If `chunk_vectored` does not fill every\nentry in `dst`, then `dst` is guaranteed to contain all remaining slices\nin `self.\n\nThis is a lower level function. Most operations are done with other\nfunctions.\n\n# Implementer notes\n\nThis function should never panic. Once the end of the buffer is reached,\ni.e., `Buf::remaining` returns 0, calls to `chunk_vectored` must return 0\nwithout mutating `dst`.\n\nImplementations should also take care to properly handle being called\nwith `dst` being a zero length slice.\n\n[`writev`]: http://man7.org/linux/man-pages/man2/readv.2.html","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"5:8120:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:784:1039":{"id":"0:784:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1602,4],"end":[1604,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:311:2601":{"id":"0:311:2601","crate_id":0,"name":"as_uninit_slice_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[153,4],"end":[155,5]},"visibility":"public","docs":"Return a `&mut [MaybeUninit<u8>]` to this slice's buffer.\n\n# Safety\n\nThe caller **must not** read from the referenced memory and **must not** write\n**uninitialized** bytes to the slice either. This is because `BufMut` implementation\nthat created the `UninitSlice` knows which parts are initialized. Writing uninitalized\nbytes to the slice may cause the `BufMut` to read those bytes and trigger undefined\nbehavior.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut data = [0, 1, 2];\nlet mut slice = &mut data[..];\nunsafe {\n    let uninit_slice = BufMut::chunk_mut(&mut slice).as_uninit_slice_mut();\n};\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"1:30228:2549","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2700:228-0:1140:1830":{"id":"a:1:2700:228-0:1140:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:171:2218":{"id":"0:171:2218","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1445,4],"end":[1455,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2250-0:1084:1825":{"id":"b:1:2250-0:1084:1825","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1825","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2252:3107"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1153:670":{"id":"0:1153:670","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[37,0],"end":[37,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12032:28721":{"id":"1:12032:28721","crate_id":1,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:416:1845":{"id":"0:416:1845","crate_id":0,"name":"advance","span":{"filename":"src/bytes.rs","begin":[548,4],"end":[559,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:239:2467":{"id":"0:239:2467","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/limit.rs","begin":[20,4],"end":[22,5]},"visibility":"public","docs":"Consumes this `Limit`, returning the underlying value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:50:2024":{"id":"0:50:2024","crate_id":0,"name":"get_u128","span":{"filename":"src/buf/buf_impl.rs","begin":[712,4],"end":[714,5]},"visibility":"default","docs":"Gets an unsigned 128 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_u128());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:149:2380":{"id":"0:149:2380","crate_id":0,"name":"put_f32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1122,4],"end":[1124,5]},"visibility":"default","docs":"Writes an IEEE754 single-precision (4 bytes) floating point number to\n`self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f32_ne(1.2f32);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x3F\\x99\\x99\\x9A\");\n} else {\n    assert_eq!(buf, b\"\\x9A\\x99\\x99\\x3F\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8253:3689-0:1084:1825":{"id":"a:1:8253:3689-0:1084:1825","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8253:3689","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8253:3689","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1825","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:394:815":{"id":"0:394:815","crate_id":0,"name":"len","span":{"filename":"src/bytes.rs","begin":[192,4],"end":[194,5]},"visibility":"public","docs":"Returns the number of bytes contained in this `Bytes`.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::from(&b\"hello\"[..]);\nassert_eq!(b.len(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:745":{"id":"0:745","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1493,0],"end":[1497,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:746:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1112:772":{"id":"0:1112:772","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"Range","id":"1:39154:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:749":{"id":"0:749","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1505,0],"end":[1509,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:750:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:447":{"id":"0:447","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[649,0],"end":[653,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:448:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:681:696":{"id":"0:681:696","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1183,4],"end":[1185,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:670":{"id":"0:670","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1156,0],"end":[1161,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsMut","id":"1:2508:74","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:671:3106"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:707":{"id":"0:707","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1269,0],"end":[1276,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:709:2469","0:710:1825","0:711:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:779":{"id":"0:779","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1589,0],"end":[1593,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"items":["0:780:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12140:10610":{"id":"1:12140:10610","crate_id":1,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:4539:10610"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"1:43630:7198","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2247-0:1075:1824":{"id":"b:1:2247-0:1075:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1824","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2249:2626"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1146":{"id":"0:1146","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[34,0],"end":[34,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"1:9156:3158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1147:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:323:1845":{"id":"0:323:1845","crate_id":0,"name":"advance","span":{"filename":"src/buf/vec_deque.rs","begin":[19,4],"end":[21,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:653:1879":{"id":"0:653:1879","crate_id":0,"name":"remaining","span":{"filename":"src/bytes_mut.rs","begin":[1054,4],"end":[1056,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1018:2016":{"id":"0:1018:2016","crate_id":0,"name":"get_i64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:247:2218":{"id":"0:247:2218","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/limit.rs","begin":[64,4],"end":[68,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:998:1911":{"id":"0:998:1911","crate_id":0,"name":"has_remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148:2375":{"id":"0:148:2375","crate_id":0,"name":"put_f32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1095,4],"end":[1097,5]},"visibility":"default","docs":"Writes  an IEEE754 single-precision (4 bytes) floating point number to\n`self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f32_le(1.2f32);\nassert_eq!(buf, b\"\\x9A\\x99\\x99\\x3F\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:36:1970":{"id":"0:36:1970","crate_id":0,"name":"get_i16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[417,4],"end":[419,5]},"visibility":"default","docs":"Gets a signed 16 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x09\\x08 hello\"[..];\nassert_eq!(0x0809, buf.get_i16_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:165:2191":{"id":"0:165:2191","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1399,4],"end":[1403,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"1:7211:2469":{"id":"1:7211:2469","crate_id":1,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"Iterator","id":"1:7321:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"b:1:2247-0:1097:1829":{"id":"b:1:2247-0:1097:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2249:2626"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:415:1842":{"id":"0:415:1842","crate_id":0,"name":"chunk","span":{"filename":"src/bytes.rs","begin":[543,4],"end":[545,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:278:2140":{"id":"0:278:2140","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/take.rs","begin":[56,4],"end":[58,5]},"visibility":"public","docs":"Gets a reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::Buf;\n\nlet buf = b\"hello world\".take(2);\n\nassert_eq!(11, buf.get_ref().remaining());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2683:220-0:1103:1827":{"id":"a:1:2683:220-0:1103:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2552-0:1103:1827":{"id":"b:1:2552-0:1103:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2555:128","1:2556:1482"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:334:2494":{"id":"0:334:2494","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/writer.rs","begin":[52,4],"end":[54,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.\n\n# Examples\n\n```rust\nuse bytes::BufMut;\n\nlet mut buf = vec![].writer();\n\nbuf.get_mut().reserve(1024);\n\nassert_eq!(1024, buf.get_ref().capacity());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2249:2626":{"id":"1:2249:2626","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2247-0:1140:1830":{"id":"b:1:2247-0:1140:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2249:2626"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:164:2218":{"id":"0:164:2218","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1393,4],"end":[1396,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1057:2255":{"id":"0:1057:2255","crate_id":0,"name":"put_u16","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:402:2779":{"id":"0:402:2779","crate_id":0,"name":"truncate","span":{"filename":"src/bytes.rs","begin":[456,4],"end":[469,5]},"visibility":"public","docs":"Shortens the buffer, keeping the first `len` bytes and dropping the\nrest.\n\nIf `len` is greater than the buffer's current length, this has no\neffect.\n\nThe [`split_off`] method can emulate `truncate`, but this causes the\nexcess bytes to be returned instead of dropped.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut buf = Bytes::from(&b\"hello world\"[..]);\nbuf.truncate(5);\nassert_eq!(buf, b\"hello\"[..]);\n```\n\n[`split_off`]: #method.split_off","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:438:699":{"id":"0:438:699","crate_id":0,"name":"from_iter","span":{"filename":"src/bytes.rs","begin":[622,4],"end":[624,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["into_iter",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1007:1973":{"id":"0:1007:1973","crate_id":0,"name":"get_i16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:491":{"id":"0:491","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[778,0],"end":[785,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:494:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1000:1943":{"id":"0:1000:1943","crate_id":0,"name":"get_u8","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:509:696":{"id":"0:509:696","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[881,4],"end":[884,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bytes",{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Vec","id":"4:6717:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:787":{"id":"0:787","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1613,0],"end":[1617,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:788:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2547-0:599:1693":{"id":"b:1:2547-0:599:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2517:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2550:128","1:2551:1483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:677":{"id":"0:677","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1176,0],"end":[1180,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:679:696"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:692:731":{"id":"0:692:731","crate_id":0,"name":"hash","span":{"filename":"src/bytes_mut.rs","begin":[1216,4],"end":[1222,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"H"},"bounds":[{"trait_bound":{"trait":{"name":"hash::Hasher","id":"1:9373:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:691":{"id":"0:691","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1215,0],"end":[1223,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"1:9365:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:692:731"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1024:2064":{"id":"0:1024:2064","crate_id":0,"name":"get_int_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:683:612":{"id":"0:683:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1189,4],"end":[1191,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:672":{"id":"0:672","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1163,0],"end":[1168,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"1:2910:2867","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:673:553"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:52:2033":{"id":"0:52:2033","crate_id":0,"name":"get_u128_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[755,4],"end":[757,5]},"visibility":"default","docs":"Gets an unsigned 128 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\",\n    false => b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x01020304050607080910111213141516, buf.get_u128_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:967:1946":{"id":"0:967:1946","crate_id":0,"name":"get_i8","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:82:1845":{"id":"0:82:1845","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1353,4],"end":[1355,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:228:2495":{"id":"0:228:2495","crate_id":0,"name":"size_hint","span":{"filename":"src/buf/iter.rs","begin":[124,4],"end":[127,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:422:315":{"id":"0:422:315","crate_id":0,"name":"as_ref","span":{"filename":"src/bytes.rs","begin":[583,4],"end":[585,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12036:31781":{"id":"1:12036:31781","crate_id":1,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:12037:2419"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:704:2469":{"id":"0:704:2469","crate_id":0,"name":"Item","span":{"filename":"src/bytes_mut.rs","begin":[1261,4],"end":[1261,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u8"}}}},"a:1:8252:3690-0:1084:1825":{"id":"a:1:8252:3690-0:1084:1825","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8252:3690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8252:3690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1825","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:483":{"id":"0:483","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[757,0],"end":[761,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"items":["0:484:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2683:220-0:1084:1825":{"id":"a:1:2683:220-0:1084:1825","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1825","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:12113:32994":{"id":"1:12113:32994","crate_id":1,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"5:11917:418","self::pattern":"1:11715:3542"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12013":{"id":"1:12013","crate_id":1,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["1:12014:815","1:12015:1910","1:12016:32974","1:12017:32975","1:12019:32976","1:12022:2794","1:12023:32977","1:12024:314","1:12025:1937","1:12026:1843","1:12028:2494","1:12030:28720","1:12032:28721","1:12034:32978","1:12035:32979","1:12036:31781","1:12037:2419","1:12038:7239","1:12039:7494","1:12040:1689","1:12041:28132","1:12042:28158","1:12043:4107","1:12044:32980","1:12045:28178","1:12046:3154","1:12049:31796","1:12052:31797","1:12055:3918","1:12059:3884","1:12063:2974","1:12066:28128","1:12069:31790","1:12072:32981","1:12075:32982","1:12078:31792","1:12081:31794","1:12084:32983","1:12087:32984","1:12090:3211","1:12093:32985","1:12096:32986","1:12099:32987","1:12102:32988","1:12104:32989","1:12106:32990","1:12108:32991","1:12109:32992","1:12110:32993","1:12113:32994","1:12116:31798","1:12119:31799","1:12122:32995","1:12125:32996","1:12128:32997","1:12131:32998","1:12133:31669","1:12134:31670","1:12135:31672","1:12136:31673","1:12137:31674","1:12138:32999","1:12140:10610","1:12141:33000"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:421":{"id":"0:421","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[581,0],"end":[586,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"1:2505:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:422:315"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:109:2196":{"id":"0:109:2196","crate_id":0,"name":"has_remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[124,4],"end":[126,5]},"visibility":"default","docs":"Returns true if there is space in `self` for more bytes.\n\nThis is equivalent to `self.remaining_mut() != 0`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 5];\nlet mut buf = &mut dst[..];\n\nassert!(buf.has_remaining_mut());\n\nbuf.put(&b\"hello\"[..]);\n\nassert!(!buf.has_remaining_mut());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12104:32989":{"id":"1:12104:32989","crate_id":1,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:494:1039":{"id":"0:494:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[782,4],"end":[784,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1006:1970":{"id":"0:1006:1970","crate_id":0,"name":"get_i16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:111:2104":{"id":"0:111:2104","crate_id":0,"name":"put","span":{"filename":"src/buf/buf_mut.rs","begin":[197,4],"end":[219,5]},"visibility":"default","docs":"Transfer bytes into `self` from `src` and advance the cursor by the\nnumber of bytes written.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\n\nbuf.put_u8(b'h');\nbuf.put(&b\"ello\"[..]);\nbuf.put(&b\" world\"[..]);\n\nassert_eq!(buf, b\"hello world\");\n```\n\n# Panics\n\nPanics if `self` does not have enough capacity to contain `src`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"super::Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:478:1039":{"id":"0:478:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[740,4],"end":[742,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:785":{"id":"0:785","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1607,0],"end":[1611,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:786:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:789":{"id":"0:789","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1619,0],"end":[1655,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Vec","id":"4:6717:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:790:696"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3319-0:1090:1826":{"id":"b:1:3319-0:1090:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1826","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3321:1496"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1069:2304":{"id":"0:1069:2304","crate_id":0,"name":"put_u64","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:711:787":{"id":"0:711:787","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes_mut.rs","begin":[1273,4],"end":[1275,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:7205:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12034:32978":{"id":"1:12034:32978","crate_id":1,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"5:11923:1402","str::slice_mut_unchecked":"1:12035:32979","crate::ops::Index":"1:2980:2550"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"1:12131:32998":{"id":"1:12131:32998","crate_id":1,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"1:11676:127","`FromStr`":"1:11675:3541"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41497:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"1:11675:3541","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"1:11675:3541","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2541-0:1103:1827":{"id":"b:1:2541-0:1103:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2543:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:682":{"id":"0:682","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1188,0],"end":[1192,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:683:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:628:2974":{"id":"0:628:2974","crate_id":0,"name":"split","span":{"filename":"src/bytes_mut.rs","begin":[346,4],"end":[349,5]},"visibility":"public","docs":"Removes the bytes from the current view, returning them in a new\n`BytesMut` handle.\n\nAfterwards, `self` will be empty, but will retain any additional\ncapacity that it had before the operation. This is identical to\n`self.split_to(self.len())`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(1024);\nbuf.put(&b\"hello world\"[..]);\n\nlet other = buf.split();\n\nassert!(buf.is_empty());\nassert_eq!(1013, buf.capacity());\n\nassert_eq!(other, b\"hello world\"[..]);\n```","links":{},"attrs":["#[must_use =\n\"consider BytesMut::advance(len()) if you don't need the other half\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12084:32983":{"id":"1:12084:32983","crate_id":1,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:57:2052":{"id":"0:57:2052","crate_id":0,"name":"get_uint_le","span":{"filename":"src/buf/buf_impl.rs","begin":[858,4],"end":[860,5]},"visibility":"default","docs":"Gets an unsigned n-byte integer from `self` in little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x010203, buf.get_uint_le(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:431:787":{"id":"0:431:787","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes.rs","begin":[607,4],"end":[609,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:7205:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12014:815":{"id":"1:12014:815","crate_id":1,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"5:11917:418"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:315:670":{"id":"0:315:670","crate_id":0,"name":"fmt","span":{"filename":"src/buf/uninit_slice.rs","begin":[177,4],"end":[179,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1070:2308":{"id":"0:1070:2308","crate_id":0,"name":"put_u64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2250-0:1097:1829":{"id":"b:1:2250-0:1097:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2252:3107"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:413":{"id":"0:413","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[536,0],"end":[570,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["get_uint_ne","get_u32","has_remaining","get_i128","get_u128_ne","get_i128_le","get_u16_ne","get_u128","get_i128_ne","get_f32_ne","take","chain","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","get_uint","copy_to_slice","chunks_vectored","get_f64_ne","get_u16_le","reader","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne"],"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:414:1879","0:415:1842","0:416:1845","0:417:2101"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:51:2028":{"id":"0:51:2028","crate_id":0,"name":"get_u128_le","span":{"filename":"src/buf/buf_impl.rs","begin":[732,4],"end":[734,5]},"visibility":"default","docs":"Gets an unsigned 128 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_u128_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:694":{"id":"0:694","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1225,0],"end":[1229,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2241:97","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:695:2626"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:818":{"id":"0:818","crate_id":0,"name":null,"span":{"filename":"src/fmt/debug.rs","begin":[45,0],"end":[49,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:819:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1072:2316":{"id":"0:1072:2316","crate_id":0,"name":"put_i64","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:490:612":{"id":"0:490:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[773,4],"end":[775,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:719":{"id":"0:719","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1307,0],"end":[1316,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_one","extend_reserve"],"trait":{"name":"Extend","id":"1:7214:3109","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:720:3063"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:224":{"id":"0:224","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[110,0],"end":[128,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["map_while","filter","advance_by","max","is_sorted_by_key","product","chain","rev","try_find","lt","try_for_each","try_collect","scan","filter_map","nth","__iterator_get_unchecked","position","cmp_by","unzip","rposition","fold","collect_into","size_hint","flat_map","enumerate","collect","step_by","cmp","copied","eq","ne","partial_cmp_by","cloned","gt","max_by_key","partial_cmp","reduce","partition","flatten","peekable","count","intersperse","le","map","take","cycle","eq_by","max_by","min","try_reduce","partition_in_place","ge","fuse","skip_while","intersperse_with","next_chunk","is_sorted","all","array_chunks","min_by_key","find","is_partitioned","inspect","take_while","for_each","last","any","is_sorted_by","zip","skip","sum","min_by","find_map","try_fold","by_ref"],"trait":{"name":"Iterator","id":"1:7321:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1825","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:226:2469","0:227:957","0:228:2495"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:343-0:1084:1825":{"id":"0:343-0:1084:1825","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[35,0],"end":[35,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::iter::IntoIter","name":"IntoIter","id":"0:1084:1825","glob":false}}},"b:1:3319-0:1097:1829":{"id":"b:1:3319-0:1097:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:3321:1496"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2700:228-0:1090:1826":{"id":"a:1:2700:228-0:1090:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1826","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:651:587":{"id":"0:651:587","crate_id":0,"name":"drop","span":{"filename":"src/bytes_mut.rs","begin":[1036,4],"end":[1049,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:174:2233":{"id":"0:174:2233","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1481,4],"end":[1483,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1103:1827":{"id":"0:1103:1827","crate_id":0,"name":"Take","span":{"filename":"src/buf/take.rs","begin":[10,0],"end":[13,1]},"visibility":"public","docs":"A `Buf` adapter which limits the bytes read from an underlying buffer.\n\nThis struct is generally created by calling `take()` on `Buf`. See\ndocumentation of [`take()`](trait.Buf.html#method.take) for more details.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:275","a:1:8252:3690-0:1103:1827","a:1:8253:3689-0:1103:1827","a:1:2683:220-0:1103:1827","a:1:2740:3708-0:1103:1827","a:1:2700:228-0:1103:1827","b:1:2247-0:1103:1827","b:1:3319-0:1103:1827","b:1:2552-0:1103:1827","b:1:2250-0:1103:1827","b:1:2541-0:1103:1827","b:1:2547-0:1103:1827","b:1:2537-0:1103:1827","0:1107","0:282"]}}},"0:715":{"id":"0:715","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1298,0],"end":[1305,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["extend_one","extend_reserve"],"trait":{"name":"Extend","id":"1:7214:3109","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:717:3063"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:762:612":{"id":"0:762:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1542,4],"end":[1544,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:124:2286":{"id":"0:124:2286","crate_id":0,"name":"put_u32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[525,4],"end":[527,5]},"visibility":"default","docs":"Writes an unsigned 32 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u32_le(0x0809A0A1);\nassert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2541-0:1084:1825":{"id":"b:1:2541-0:1084:1825","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1825","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2543:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:629:2767":{"id":"0:629:2767","crate_id":0,"name":"split_to","span":{"filename":"src/bytes_mut.rs","begin":[378,4],"end":[392,5]},"visibility":"public","docs":"Splits the buffer into two at the given index.\n\nAfterwards `self` contains elements `[at, len)`, and the returned `BytesMut`\ncontains elements `[0, at)`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut a = BytesMut::from(&b\"hello world\"[..]);\nlet mut b = a.split_to(5);\n\na[0] = b'!';\nb[0] = b'j';\n\nassert_eq!(&a[..], b\"!world\");\nassert_eq!(&b[..], b\"jello\");\n```\n\n# Panics\n\nPanics if `at > len`.","links":{},"attrs":["#[must_use = \"consider BytesMut::advance if you don't need the other half\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["at",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1029:2191":{"id":"0:1029:2191","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:138:2338":{"id":"0:138:2338","crate_id":0,"name":"put_i128","span":{"filename":"src/buf/buf_mut.rs","begin":[853,4],"end":[855,5]},"visibility":"default","docs":"Writes a signed 128 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i128(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2537-0:1084:1825":{"id":"b:1:2537-0:1084:1825","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1825","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2540:2707"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:783":{"id":"0:783","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1601,0],"end":[1605,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"items":["0:784:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12023:32977":{"id":"1:12023:32977","crate_id":1,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2683:220-0:1075:1824":{"id":"a:1:2683:220-0:1075:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1824","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2683:220-0:1090:1826":{"id":"a:1:2683:220-0:1090:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1826","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:411":{"id":"0:411","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[529,0],"end":[534,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2263:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:412:422"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:696":{"id":"0:696","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1231,0],"end":[1235,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2244:98","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:697:3107"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12052:31797":{"id":"1:12052:31797","crate_id":1,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"5:11917:418","self::pattern":"1:11715:3542"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11735:10702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12133:31669":{"id":"1:12133:31669","crate_id":1,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1002:1952":{"id":"0:1002:1952","crate_id":0,"name":"get_u16","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:963:1845":{"id":"0:963:1845","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:53:2036":{"id":"0:53:2036","crate_id":0,"name":"get_i128","span":{"filename":"src/buf/buf_impl.rs","begin":[775,4],"end":[777,5]},"visibility":"default","docs":"Gets a signed 128 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_i128());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2543:696":{"id":"1:2543:696","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5425:33660":{"id":"4:5425:33660","crate_id":4,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"4:273:1835","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"4:7013:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"4:273:1835","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"4:7013:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:280:1818":{"id":"0:280:1818","crate_id":0,"name":"limit","span":{"filename":"src/buf/take.rs","begin":[99,4],"end":[101,5]},"visibility":"public","docs":"Returns the maximum number of bytes that can be read.\n\n# Note\n\nIf the inner `Buf` has fewer bytes than indicated by this method then\nthat is the actual number of available bytes.\n\n# Examples\n\n```rust\nuse bytes::Buf;\n\nlet mut buf = b\"hello world\".take(2);\n\nassert_eq!(2, buf.limit());\nassert_eq!(b'h', buf.get_u8());\nassert_eq!(1, buf.limit());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12040:1689":{"id":"1:12040:1689","crate_id":1,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"1:43308:1692","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1042:2294":{"id":"0:1042:2294","crate_id":0,"name":"put_i32","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:816":{"id":"0:816","crate_id":0,"name":null,"span":{"filename":"src/fmt/debug.rs","begin":[39,0],"end":[43,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:817:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:139:2341":{"id":"0:139:2341","crate_id":0,"name":"put_i128_le","span":{"filename":"src/buf/buf_mut.rs","begin":[875,4],"end":[877,5]},"visibility":"default","docs":"Writes a signed 128 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i128_le(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:263:2524":{"id":"0:263:2524","crate_id":0,"name":"read","span":{"filename":"src/buf/reader.rs","begin":[66,4],"end":[71,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"5:2890:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1020:2047":{"id":"0:1020:2047","crate_id":0,"name":"get_uint","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:420:551":{"id":"0:420:551","crate_id":0,"name":"deref","span":{"filename":"src/bytes.rs","begin":[576,4],"end":[578,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2552-0:381:1692":{"id":"b:1:2552-0:381:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2555:128","1:2556:1482"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"4:680:26637":{"id":"4:680:26637","crate_id":4,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2700:228-0:1075:1824":{"id":"a:1:2700:228-0:1075:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1824","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:434:2469":{"id":"0:434:2469","crate_id":0,"name":"Item","span":{"filename":"src/bytes.rs","begin":[613,4],"end":[613,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}}},"0:1021:2052":{"id":"0:1021:2052","crate_id":0,"name":"get_uint_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:395:1910":{"id":"0:395:1910","crate_id":0,"name":"is_empty","span":{"filename":"src/bytes.rs","begin":[207,4],"end":[209,5]},"visibility":"public","docs":"Returns true if the `Bytes` has a length of 0.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::new();\nassert!(b.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:466:1039":{"id":"0:466:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[704,4],"end":[706,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Vec","id":"4:6717:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:242:1818":{"id":"0:242:1818","crate_id":0,"name":"limit","span":{"filename":"src/buf/limit.rs","begin":[44,4],"end":[46,5]},"visibility":"public","docs":"Returns the maximum number of bytes that can be written\n\n# Note\n\nIf the inner `BufMut` has fewer bytes than indicated by this method then\nthat is the actual number of available bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:426":{"id":"0:426","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[597,0],"end":[601,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2241:97","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:427:2626"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:625:693":{"id":"0:625:693","crate_id":0,"name":"freeze","span":{"filename":"src/bytes_mut.rs","begin":[240,4],"end":[260,5]},"visibility":"public","docs":"Converts `self` into an immutable `Bytes`.\n\nThe conversion is zero cost and is used to indicate that the slice\nreferenced by the handle will no longer be mutated. Once the conversion\nis done, the handle can be cloned and shared across threads.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\nuse std::thread;\n\nlet mut b = BytesMut::with_capacity(64);\nb.put(&b\"hello world\"[..]);\nlet b1 = b.freeze();\nlet b2 = b1.clone();\n\nlet th = thread::spawn(move || {\n    assert_eq!(&b1[..], b\"hello world\");\n});\n\nassert_eq!(&b2[..], b\"hello world\");\nth.join().unwrap();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:38:1978":{"id":"0:38:1978","crate_id":0,"name":"get_u32","span":{"filename":"src/buf/buf_impl.rs","begin":[460,4],"end":[462,5]},"visibility":"default","docs":"Gets an unsigned 32 bit integer from `self` in the big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_u32());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1087":{"id":"0:1087","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[23,9],"end":[23,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1825","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1089:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:740:1039":{"id":"0:740:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1476,4],"end":[1478,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1149:670":{"id":"0:1149:670","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[35,0],"end":[35,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:437":{"id":"0:437","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[621,0],"end":[625,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"1:7201:134","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:438:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:979:1996":{"id":"0:979:1996","crate_id":0,"name":"get_i32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:623:1910":{"id":"0:623:1910","crate_id":0,"name":"is_empty","span":{"filename":"src/bytes_mut.rs","begin":[196,4],"end":[198,5]},"visibility":"public","docs":"Returns true if the `BytesMut` has a length of 0.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet b = BytesMut::with_capacity(64);\nassert!(b.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:739":{"id":"0:739","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1475,0],"end":[1479,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:740:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:703":{"id":"0:703","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1260,0],"end":[1267,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:704:2469","0:705:1825","0:706:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12022:2794":{"id":"1:12022:2794","crate_id":1,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"1:11282:10703"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12099:32987":{"id":"1:12099:32987","crate_id":1,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"1:11715:3542","`DoubleEndedIterator`":"1:7243:121","prim@char":"5:11917:418","str::match_indices":"1:12096:32986"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"1:43490:7480","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11735:10702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:220:943":{"id":"0:220:943","crate_id":0,"name":"new","span":{"filename":"src/buf/iter.rs","begin":[44,4],"end":[46,5]},"visibility":"public","docs":"Creates an iterator over the bytes contained by the buffer.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet buf = Bytes::from_static(b\"abc\");\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\nassert_eq!(iter.next(), Some(b'b'));\nassert_eq!(iter.next(), Some(b'c'));\nassert_eq!(iter.next(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["inner",{"generic":"T"}]],"output":{"resolved_path":{"name":"IntoIter","id":"0:1084:1825","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:450:1039":{"id":"0:450:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[656,4],"end":[658,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:71:1817":{"id":"0:71:1817","crate_id":0,"name":"chain","span":{"filename":"src/buf/buf_impl.rs","begin":[1156,4],"end":[1161,5]},"visibility":"default","docs":"Creates an adaptor which will chain this buffer with another.\n\nThe returned `Buf` instance will first consume all bytes from `self`.\nAfterwards the output is equivalent to the output of next.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut chain = b\"hello \"[..].chain(&b\"world\"[..]);\n\nlet full = chain.copy_to_bytes(11);\nassert_eq!(full.chunk(), b\"hello world\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["next",{"generic":"U"}]],"output":{"resolved_path":{"name":"Chain","id":"0:1075:1824","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:199:1842":{"id":"0:199:1842","crate_id":0,"name":"chunk","span":{"filename":"src/buf/chain.rs","begin":[141,4],"end":[147,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2547-0:1097:1829":{"id":"b:1:2547-0:1097:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2517:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2550:128","1:2551:1483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:352-0:106:1688":{"id":"0:352-0:106:1688","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[85,26],"end":[85,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::buf::BufMut","name":"BufMut","id":"0:106:1688","glob":false}}},"1:12035:32979":{"id":"1:12035:32979","crate_id":1,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"5:11923:1402","crate::ops::IndexMut":"1:2984:2551","str::slice_unchecked":"1:12034:32978"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:37:1973":{"id":"0:37:1973","crate_id":0,"name":"get_i16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[440,4],"end":[442,5]},"visibility":"default","docs":"Gets a signed 16 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x08\\x09 hello\",\n    false => b\"\\x09\\x08 hello\",\n};\nassert_eq!(0x0809, buf.get_i16_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2700:228-0:1084:1825":{"id":"a:1:2700:228-0:1084:1825","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1825","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:435:1825":{"id":"0:435:1825","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes.rs","begin":[614,4],"end":[614,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"1:9964:2793","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"0:451":{"id":"0:451","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[661,0],"end":[665,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"slice":{"primitive":"u8"}},"items":["0:452:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12055:3918":{"id":"1:12055:3918","crate_id":1,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"1:41355:179","prim@char":"5:11917:418","self::pattern":"1:11715:3542"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:408":{"id":"0:408","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[520,0],"end":[520,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:461":{"id":"0:461","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[691,0],"end":[695,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:462:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:991:2067":{"id":"0:991:2067","crate_id":0,"name":"get_int_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:468:612":{"id":"0:468:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[710,4],"end":[712,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8253:3689-0:1075:1824":{"id":"a:1:8253:3689-0:1075:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8253:3689","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8253:3689","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8253:3689","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1824","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:8253:3689-0:1097:1829":{"id":"a:1:8253:3689-0:1097:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8253:3689","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8253:3689","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:472:612":{"id":"0:472:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[722,4],"end":[724,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1013:1996":{"id":"0:1013:1996","crate_id":0,"name":"get_i32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5442:3344":{"id":"4:5442:3344","crate_id":4,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"4:7280:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1096:670":{"id":"0:1096:670","crate_id":0,"name":"fmt","span":{"filename":"src/buf/limit.rs","begin":[8,9],"end":[8,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:391:943":{"id":"0:391:943","crate_id":0,"name":"new","span":{"filename":"src/bytes.rs","begin":[134,4],"end":[139,5]},"visibility":"public","docs":"Creates a new empty `Bytes`.\n\nThis will not allocate and the returned `Bytes` handle will be empty.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::new();\nassert_eq!(&b[..], b\"\");\n```","links":{},"attrs":["#[inline]","#[cfg(not(all(loom, test)))]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12109:32992":{"id":"1:12109:32992","crate_id":1,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:717:3063":{"id":"0:717:3063","crate_id":0,"name":"extend","span":{"filename":"src/bytes_mut.rs","begin":[1299,4],"end":[1304,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:2268":{"id":"0:119:2268","crate_id":0,"name":"put_u16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[411,4],"end":[413,5]},"visibility":"default","docs":"Writes an unsigned 16 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u16_ne(0x0809);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x08\\x09\");\n} else {\n    assert_eq!(buf, b\"\\x09\\x08\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1129:773":{"id":"0:1129:773","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeInclusive","id":"1:39220:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:314":{"id":"0:314","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[180,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:315:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1116:186":{"id":"0:1116:186","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1005:1967":{"id":"0:1005:1967","crate_id":0,"name":"get_i16","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2247-0:599:1693":{"id":"b:1:2247-0:599:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2249:2626"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1145:670":{"id":"0:1145:670","crate_id":0,"name":"fmt","span":{"filename":"src/buf/writer.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12081:31794":{"id":"1:12081:31794","crate_id":1,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"5:11917:418","str::splitn":"1:12078:31792","self::pattern":"1:11715:3542"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"1:43444:4125","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11735:10702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12128:32997":{"id":"1:12128:32997","crate_id":1,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"5:11917:418","self::pattern":"1:11715:3542"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11735:10702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[231,0],"end":[242,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1824","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["0:213:2469","0:214:1825","0:215:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:338:2581":{"id":"0:338:2581","crate_id":0,"name":"write","span":{"filename":"src/buf/writer.rs","begin":[78,4],"end":[83,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"5:2890:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:108:2191":{"id":"0:108:2191","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[104,4],"end":[104,49]},"visibility":"default","docs":"Advance the internal cursor of the BufMut\n\nThe next call to `chunk_mut` will return a slice starting `cnt` bytes\nfurther into the underlying buffer.\n\nThis function is unsafe because there is no guarantee that the bytes\nbeing advanced past have been initialized.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = Vec::with_capacity(16);\n\n// Write some data\nbuf.chunk_mut()[0..2].copy_from_slice(b\"he\");\nunsafe { buf.advance_mut(2) };\n\n// write more bytes\nbuf.chunk_mut()[0..3].copy_from_slice(b\"llo\");\n\nunsafe { buf.advance_mut(3); }\n\nassert_eq!(5, buf.len());\nassert_eq!(buf, b\"hello\");\n```\n\n# Panics\n\nThis function **may** panic if `cnt > self.remaining_mut()`.\n\n# Implementer notes\n\nIt is recommended for implementations of `advance_mut` to panic if\n`cnt > self.remaining_mut()`. If the implementation does not panic,\nthe call must behave as if `cnt == self.remaining_mut()`.\n\nA call with `cnt == 0` should never panic and be a no-op.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"b:1:2247-0:1103:1827":{"id":"b:1:2247-0:1103:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2249:2626"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1050:2322":{"id":"0:1050:2322","crate_id":0,"name":"put_i64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2541-0:1090:1826":{"id":"b:1:2541-0:1090:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1826","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2543:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2547-0:1103:1827":{"id":"b:1:2547-0:1103:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2517:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2550:128","1:2551:1483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:463":{"id":"0:463","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[697,0],"end":[701,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"4:6717:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}},{"type":{"resolved_path":{"name":"Global","id":"4:7013:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:464:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:453":{"id":"0:453","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[667,0],"end":[671,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"slice":{"primitive":"u8"}},"items":["0:454:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:502:696":{"id":"0:502:696","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[809,4],"end":[840,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["vec",{"resolved_path":{"name":"Vec","id":"4:6717:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:284:1879":{"id":"0:284:1879","crate_id":0,"name":"remaining","span":{"filename":"src/buf/take.rs","begin":[133,4],"end":[135,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:985:2019":{"id":"0:985:2019","crate_id":0,"name":"get_i64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:443:1039":{"id":"0:443:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[636,4],"end":[638,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:473":{"id":"0:473","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[727,0],"end":[731,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:474:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:200:1845":{"id":"0:200:1845","crate_id":0,"name":"advance","span":{"filename":"src/buf/chain.rs","begin":[149,4],"end":[165,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:227:957":{"id":"0:227:957","crate_id":0,"name":"next","span":{"filename":"src/buf/iter.rs","begin":[113,4],"end":[122,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:259:2494":{"id":"0:259:2494","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/reader.rs","begin":[40,4],"end":[42,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2537-0:1097:1829":{"id":"b:1:2537-0:1097:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2540:2707"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:723:699":{"id":"0:723:699","crate_id":0,"name":"from_iter","span":{"filename":"src/bytes_mut.rs","begin":[1319,4],"end":[1321,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["into_iter",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:759":{"id":"0:759","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1535,0],"end":[1539,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Vec","id":"4:6717:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:760:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2250-0:1090:1826":{"id":"b:1:2250-0:1090:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1826","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2252:3107"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:758:612":{"id":"0:758:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1530,4],"end":[1532,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12108:32991":{"id":"1:12108:32991","crate_id":1,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:738:612":{"id":"0:738:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1470,4],"end":[1472,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:160":{"id":"0:160","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1382,0],"end":[1384,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["put_u64","put_f32","put_f32_ne","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_i64_le","put_u16","put_i64","put_u64_ne","put_bytes"],"trait":{"name":"BufMut","id":"0:106:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"4:273:1835","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1051:2173","0:1052:2218","0:1053:2191","0:1054:2233","0:1055:2244","0:1056:2251","0:1057:2255","0:1058:2260","0:1059:2268","0:1060:2272","0:1061:2275","0:1062:2278","0:1063:2282","0:1064:2286","0:1065:2291","0:1066:2294","0:1067:2297","0:1068:2300","0:1069:2304","0:1070:2308","0:1071:2313","0:1072:2316","0:1073:2319","0:1074:2322"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:133:2319":{"id":"0:133:2319","crate_id":0,"name":"put_i64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[735,4],"end":[737,5]},"visibility":"default","docs":"Writes a signed 64 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i64_le(0x0102030405060708);\nassert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:30:1943":{"id":"0:30:1943","crate_id":0,"name":"get_u8","span":{"filename":"src/buf/buf_impl.rs","begin":[288,4],"end":[293,5]},"visibility":"default","docs":"Gets an unsigned 8 bit integer from `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08 hello\"[..];\nassert_eq!(8, buf.get_u8());\n```\n\n# Panics\n\nThis function panics if there is no more remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:460:612":{"id":"0:460:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[686,4],"end":[688,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:690:60":{"id":"0:690:60","crate_id":0,"name":"default","span":{"filename":"src/bytes_mut.rs","begin":[1210,4],"end":[1212,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:650":{"id":"0:650","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1035,0],"end":[1050,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:2921:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:651:587"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:287:2101":{"id":"0:287:2101","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/take.rs","begin":[148,4],"end":[154,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[74,0],"end":[81,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["read_until","read_line","has_data_left","split","lines"],"trait":{"name":"BufRead","id":"5:3488:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:266:2526","0:267:2527"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1060:2272":{"id":"0:1060:2272","crate_id":0,"name":"put_i16","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:455":{"id":"0:455","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[673,0],"end":[677,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:456:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:41:1990":{"id":"0:41:1990","crate_id":0,"name":"get_i32","span":{"filename":"src/buf/buf_impl.rs","begin":[523,4],"end":[525,5]},"visibility":"default","docs":"Gets a signed 32 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_i32());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12119:31799":{"id":"1:12119:31799","crate_id":1,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"5:11917:418","self::pattern":"1:11715:3542"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11735:10702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1003:1956":{"id":"0:1003:1956","crate_id":0,"name":"get_u16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1122:772":{"id":"0:1122:772","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeFull","id":"1:39138:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:44:2001":{"id":"0:44:2001","crate_id":0,"name":"get_u64","span":{"filename":"src/buf/buf_impl.rs","begin":[586,4],"end":[588,5]},"visibility":"default","docs":"Gets an unsigned 64 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_u64());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12096:32986":{"id":"1:12096:32986","crate_id":1,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"1:11715:3542","`DoubleEndedIterator`":"1:7243:121","prim@char":"5:11917:418","str::rmatch_indices":"1:12099:32987"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"1:43472:7479","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:743":{"id":"0:743","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1487,0],"end":[1491,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"slice":{"primitive":"u8"}},"items":["0:744:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:123:2282":{"id":"0:123:2282","crate_id":0,"name":"put_u32","span":{"filename":"src/buf/buf_mut.rs","begin":[503,4],"end":[505,5]},"visibility":"default","docs":"Writes an unsigned 32 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u32(0x0809A0A1);\nassert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1386,0],"end":[1420,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["put_u64","put_f32","put_f32_ne","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_i64_le","put_u16","put_i64","put_u64_ne","put_bytes"],"trait":{"name":"BufMut","id":"0:106:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"items":["0:163:2173","0:164:2218","0:165:2191","0:166:2233","0:167:2243"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1031:2244":{"id":"0:1031:2244","crate_id":0,"name":"put_u8","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:449":{"id":"0:449","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[655,0],"end":[659,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:450:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:764:1039":{"id":"0:764:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1548,4],"end":[1550,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1140:1830":{"id":"0:1140:1830","crate_id":0,"name":"Writer","span":{"filename":"src/buf/writer.rs","begin":[11,0],"end":[13,1]},"visibility":"public","docs":"A `BufMut` adapter which implements `io::Write` for the inner value.\n\nThis struct is generally created by calling `writer()` on `BufMut`. See\ndocumentation of [`writer()`](trait.BufMut.html#method.writer) for more\ndetails.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:331","a:1:8252:3690-0:1140:1830","a:1:8253:3689-0:1140:1830","a:1:2683:220-0:1140:1830","a:1:2740:3708-0:1140:1830","a:1:2700:228-0:1140:1830","b:1:2247-0:1140:1830","b:1:3319-0:1140:1830","b:1:2552-0:1140:1830","b:1:2250-0:1140:1830","b:1:2541-0:1140:1830","b:1:2547-0:1140:1830","b:1:2537-0:1140:1830","0:1143","0:336"]}}},"0:1019:2019":{"id":"0:1019:2019","crate_id":0,"name":"get_i64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5429:33661":{"id":"4:5429:33661","crate_id":4,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"4:7280:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12038:7239":{"id":"1:12038:7239","crate_id":1,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"5:11917:418"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"1:43292:3539","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:66:2089":{"id":"0:66:2089","crate_id":0,"name":"get_f64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1060,4],"end":[1062,5]},"visibility":"default","docs":"Gets an IEEE754 double-precision (8 bytes) floating point number from\n`self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F hello\"[..];\nassert_eq!(1.2f64, buf.get_f64_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:666:315":{"id":"0:666:315","crate_id":0,"name":"as_ref","span":{"filename":"src/bytes_mut.rs","begin":[1142,4],"end":[1144,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215:787":{"id":"0:215:787","crate_id":0,"name":"into_iter","span":{"filename":"src/buf/chain.rs","begin":[239,4],"end":[241,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:7205:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:649:3064":{"id":"0:649:3064","crate_id":0,"name":"spare_capacity_mut","span":{"filename":"src/bytes_mut.rs","begin":[1025,4],"end":[1032,5]},"visibility":"public","docs":"Returns the remaining spare capacity of the buffer as a slice of `MaybeUninit<u8>`.\n\nThe returned slice can be used to fill the buffer with data (e.g. by\nreading from a file) before marking the data as initialized using the\n[`set_len`] method.\n\n[`set_len`]: BytesMut::set_len\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\n// Allocate buffer big enough for 10 bytes.\nlet mut buf = BytesMut::with_capacity(10);\n\n// Fill in the first 3 elements.\nlet uninit = buf.spare_capacity_mut();\nuninit[0].write(0);\nuninit[1].write(1);\nuninit[2].write(2);\n\n// Mark the first 3 bytes of the buffer as being initialized.\nunsafe {\n    buf.set_len(3);\n}\n\nassert_eq!(&buf[..], &[0, 1, 2]);\n```","links":{"BytesMut::set_len":"0:633:2424"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"1:30228:2549","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:285:1842":{"id":"0:285:1842","crate_id":0,"name":"chunk","span":{"filename":"src/buf/take.rs","begin":[137,4],"end":[140,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:175:2243":{"id":"0:175:2243","crate_id":0,"name":"put_bytes","span":{"filename":"src/buf/buf_mut.rs","begin":[1485,4],"end":[1488,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1136:186":{"id":"0:1136:186","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:457":{"id":"0:457","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[679,0],"end":[683,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:458:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:351-0:22:1687":{"id":"0:351-0:22:1687","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[85,21],"end":[85,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::buf::Buf","name":"Buf","id":"0:22:1687","glob":false}}},"1:12136:31673":{"id":"1:12136:31673","crate_id":1,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1113":{"id":"0:1113","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:2984:2551","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Range","id":"1:39154:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1114:773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:151:2387":{"id":"0:151:2387","crate_id":0,"name":"put_f64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1168,4],"end":[1170,5]},"visibility":"default","docs":"Writes  an IEEE754 double-precision (8 bytes) floating point number to\n`self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f64_le(1.2f64);\nassert_eq!(buf, b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:627:2758":{"id":"0:627:2758","crate_id":0,"name":"split_off","span":{"filename":"src/bytes_mut.rs","begin":[305,4],"end":[318,5]},"visibility":"public","docs":"Splits the bytes into two at the given index.\n\nAfterwards `self` contains elements `[0, at)`, and the returned\n`BytesMut` contains elements `[at, capacity)`.\n\nThis is an `O(1)` operation that just increases the reference count\nand sets a few indices.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut a = BytesMut::from(&b\"hello world\"[..]);\nlet mut b = a.split_off(5);\n\na[0] = b'j';\nb[0] = b'!';\n\nassert_eq!(&a[..], b\"jello\");\nassert_eq!(&b[..], b\"!world\");\n```\n\n# Panics\n\nPanics if `at > capacity`.","links":{},"attrs":["#[must_use = \"consider BytesMut::truncate if you don't need the other half\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["at",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1064:2286":{"id":"0:1064:2286","crate_id":0,"name":"put_u32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[65,0],"end":[72,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","chain","read_buf","is_read_vectored","read_buf_exact","read_to_end","read_to_string","take","bytes","read_exact","read_vectored"],"trait":{"name":"Read","id":"5:3406:2523","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:263:2524"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:751":{"id":"0:751","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1511,0],"end":[1515,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:752:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"4:5432:33662":{"id":"4:5432:33662","crate_id":4,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"4:7280:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:990:2064":{"id":"0:990:2064","crate_id":0,"name":"get_int_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:1075:1824":{"id":"b:1:3319-0:1075:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1824","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:3321:1496"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1130":{"id":"0:1130","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:2980:2550","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeTo","id":"1:39198:202","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1131:186","0:1132:772"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:168":{"id":"0:168","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1422,0],"end":[1489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["put_u64","put_f32","put_f32_ne","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_i64_le","put_u16","put_i64","put_u64_ne","put_bytes"],"trait":{"name":"BufMut","id":"0:106:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Vec","id":"4:6717:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:169:2173","0:170:2191","0:171:2218","0:172:2104","0:174:2233","0:175:2243"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:106:1688":{"id":"0:106:1688","crate_id":0,"name":"BufMut","span":{"filename":"src/buf/buf_mut.rs","begin":[29,0],"end":[1276,1]},"visibility":"public","docs":"A trait for values that provide sequential write access to bytes.\n\nWrite bytes to a buffer\n\nA buffer stores bytes in memory such that write operations are infallible.\nThe underlying storage may or may not be in contiguous memory. A `BufMut`\nvalue is a cursor into the buffer. Writing to `BufMut` advances the cursor\nposition.\n\nThe simplest `BufMut` is a `Vec<u8>`.\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\n\nbuf.put(&b\"hello world\"[..]);\n\nassert_eq!(buf, b\"hello world\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"items":["0:107:2173","0:108:2191","0:109:2196","0:110:2218","0:111:2104","0:113:2233","0:114:2243","0:115:2244","0:116:2251","0:117:2255","0:118:2260","0:119:2268","0:120:2272","0:121:2275","0:122:2278","0:123:2282","0:124:2286","0:125:2291","0:126:2294","0:127:2297","0:128:2300","0:129:2304","0:130:2308","0:131:2313","0:132:2316","0:133:2319","0:134:2322","0:135:2326","0:136:2330","0:137:2335","0:138:2338","0:139:2341","0:140:2344","0:141:2348","0:142:2352","0:143:2357","0:144:2361","0:145:2364","0:146:2367","0:147:2371","0:148:2375","0:149:2380","0:150:2384","0:151:2387","0:152:2391","0:153:1818","0:154:1823","0:155:2415"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:162","0:158","0:160","0:657","0:204","0:168","0:244"]}}},"0:58:2057":{"id":"0:58:2057","crate_id":0,"name":"get_uint_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[881,4],"end":[887,5]},"visibility":"default","docs":"Gets an unsigned n-byte integer from `self` in native-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03 hello\",\n    false => b\"\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x010203, buf.get_uint_ne(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:720:3063":{"id":"0:720:3063","crate_id":0,"name":"extend","span":{"filename":"src/bytes_mut.rs","begin":[1308,4],"end":[1315,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1058:2260":{"id":"0:1058:2260","crate_id":0,"name":"put_u16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12037:2419":{"id":"1:12037:2419","crate_id":1,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:12036:31781"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:631:2785":{"id":"0:631:2785","crate_id":0,"name":"clear","span":{"filename":"src/bytes_mut.rs","begin":[435,4],"end":[437,5]},"visibility":"public","docs":"Clears the buffer, removing all data. Existing capacity is preserved.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::from(&b\"hello world\"[..]);\nbuf.clear();\nassert!(buf.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:256":{"id":"0:256","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[19,0],"end":[63,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Reader","id":"0:1097:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:258:2140","0:259:2494","0:260:2467"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:204":{"id":"0:204","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[193,0],"end":[229,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["put_u64","put_f32","put_f32_ne","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_i64_le","put_u16","put_i64","put_u64_ne","put_bytes"],"trait":{"name":"BufMut","id":"0:106:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1824","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["0:207:2173","0:208:2218","0:209:2191"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:700:3108":{"id":"0:700:3108","crate_id":0,"name":"write_fmt","span":{"filename":"src/bytes_mut.rs","begin":[1249,4],"end":[1251,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["args",{"resolved_path":{"name":"fmt::Arguments","id":"1:42457:73","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:61:2067":{"id":"0:61:2067","crate_id":0,"name":"get_int_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[948,4],"end":[954,5]},"visibility":"default","docs":"Gets a signed n-byte integer from `self` in native-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03 hello\",\n    false => b\"\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x010203, buf.get_int_ne(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:499":{"id":"0:499","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[802,0],"end":[806,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:500:696"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2537-0:381:1692":{"id":"b:1:2537-0:381:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2540:2707"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1043:2297":{"id":"0:1043:2297","crate_id":0,"name":"put_i32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:153:1818":{"id":"0:153:1818","crate_id":0,"name":"limit","span":{"filename":"src/buf/buf_mut.rs","begin":[1212,4],"end":[1217,5]},"visibility":"default","docs":"Creates an adaptor which can write at most `limit` bytes to `self`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet arr = &mut [0u8; 128][..];\nassert_eq!(arr.remaining_mut(), 128);\n\nlet dst = arr.limit(10);\nassert_eq!(dst.remaining_mut(), 10);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["limit",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Limit","id":"0:1090:1826","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1135":{"id":"0:1135","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:2980:2550","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeToInclusive","id":"1:39242:203","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1136:186","0:1137:772"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:427:2626":{"id":"0:427:2626","crate_id":0,"name":"borrow","span":{"filename":"src/bytes.rs","begin":[598,4],"end":[600,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:788:612":{"id":"0:788:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1614,4],"end":[1616,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:747":{"id":"0:747","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1499,0],"end":[1503,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:748:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:68:2101":{"id":"0:68:2101","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/buf_impl.rs","begin":[1103,4],"end":[1111,5]},"visibility":"default","docs":"Consumes `len` bytes inside self and returns new instance of `Bytes`\nwith this data.\n\nThis function may be optimized by the underlying type to avoid actual\ncopies. For example, `Bytes` implementation will do a shallow copy\n(ref-count increment).\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet bytes = (&b\"hello world\"[..]).copy_to_bytes(5);\nassert_eq!(&bytes[..], &b\"hello\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"crate::Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:705:1825":{"id":"0:705:1825","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes_mut.rs","begin":[1262,4],"end":[1262,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IntoIter","id":"0:1084:1825","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:201:1907":{"id":"0:201:1907","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/chain.rs","begin":[168,4],"end":[172,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"5:8120:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:972:1970":{"id":"0:972:1970","crate_id":0,"name":"get_i16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1017:2013":{"id":"0:1017:2013","crate_id":0,"name":"get_i64","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:131:2313":{"id":"0:131:2313","crate_id":0,"name":"put_u64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[691,4],"end":[693,5]},"visibility":"default","docs":"Writes an unsigned 64 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u64_ne(0x0102030405060708);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");\n} else {\n    assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:267:2527":{"id":"0:267:2527","crate_id":0,"name":"consume","span":{"filename":"src/buf/reader.rs","begin":[78,4],"end":[80,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["amt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2552-0:1140:1830":{"id":"b:1:2552-0:1140:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2555:128","1:2556:1482"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:752:1039":{"id":"0:752:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1512,4],"end":[1514,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12026:1843":{"id":"1:12026:1843","crate_id":1,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"1:41355:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:222:2140":{"id":"0:222:2140","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/iter.rs","begin":[83,4],"end":[85,5]},"visibility":"public","docs":"Gets a reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::{Buf, Bytes};\n\nlet buf = Bytes::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\n\nassert_eq!(2, iter.get_ref().remaining());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:170:2191":{"id":"0:170:2191","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1430,4],"end":[1442,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:137:2335":{"id":"0:137:2335","crate_id":0,"name":"put_u128_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[831,4],"end":[833,5]},"visibility":"default","docs":"Writes an unsigned 128 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u128_ne(0x01020304050607080910111213141516);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");\n} else {\n    assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2247-0:1090:1826":{"id":"b:1:2247-0:1090:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1826","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2249:2626"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:713:3063":{"id":"0:713:3063","crate_id":0,"name":"extend","span":{"filename":"src/bytes_mut.rs","begin":[1279,4],"end":[1295,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:497":{"id":"0:497","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[796,0],"end":[800,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"primitive":"u8"}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:498:696"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:671:3106":{"id":"0:671:3106","crate_id":0,"name":"as_mut","span":{"filename":"src/bytes_mut.rs","begin":[1158,4],"end":[1160,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2683:220-0:300:1828":{"id":"a:1:2683:220-0:300:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1126:186":{"id":"0:1126:186","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:737":{"id":"0:737","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1469,0],"end":[1473,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:738:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:110:2218":{"id":"0:110:2218","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[175,4],"end":[175,48]},"visibility":"default","docs":"Returns a mutable slice starting at the current BufMut position and of\nlength between 0 and `BufMut::remaining_mut()`. Note that this *can* be shorter than the\nwhole remainder of the buffer (this allows non-continuous implementation).\n\nThis is a lower level function. Most operations are done with other\nfunctions.\n\nThe returned byte slice may represent uninitialized memory.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = Vec::with_capacity(16);\n\nunsafe {\n    // MaybeUninit::as_mut_ptr\n    buf.chunk_mut()[0..].as_mut_ptr().write(b'h');\n    buf.chunk_mut()[1..].as_mut_ptr().write(b'e');\n\n    buf.advance_mut(2);\n\n    buf.chunk_mut()[0..].as_mut_ptr().write(b'l');\n    buf.chunk_mut()[1..].as_mut_ptr().write(b'l');\n    buf.chunk_mut()[2..].as_mut_ptr().write(b'o');\n\n    buf.advance_mut(3);\n}\n\nassert_eq!(5, buf.len());\nassert_eq!(buf, b\"hello\");\n```\n\n# Implementer notes\n\nThis function should never panic. `chunk_mut` should return an empty\nslice **if and only if** `remaining_mut()` returns 0. In other words,\n`chunk_mut()` returning an empty slice implies that `remaining_mut()` will\nreturn 0 and `remaining_mut()` returning 0 implies that `chunk_mut()` will\nreturn an empty slice.\n\nThis function may trigger an out-of-memory abort if it tries to allocate\nmemory and fails to do so.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:172:2104":{"id":"0:172:2104","crate_id":0,"name":"put","span":{"filename":"src/buf/buf_mut.rs","begin":[1459,4],"end":[1478,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"super::Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:390":{"id":"0:390","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[119,0],"end":[516,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:391:943","0:393:2693","0:394:815","0:395:1910","0:396:2420","0:397:1372","0:399:2740","0:400:2758","0:401:2767","0:402:2779","0:403:2785"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:659:2191":{"id":"0:659:2191","crate_id":0,"name":"advance_mut","span":{"filename":"src/bytes_mut.rs","begin":[1088,4],"end":[1097,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1009:1982":{"id":"0:1009:1982","crate_id":0,"name":"get_u32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2552-0:1075:1824":{"id":"b:1:2552-0:1075:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1824","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2555:128","1:2556:1482"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1138":{"id":"0:1138","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:2984:2551","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeToInclusive","id":"1:39242:203","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1139:773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1102:670":{"id":"0:1102:670","crate_id":0,"name":"fmt","span":{"filename":"src/buf/reader.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:207:2173":{"id":"0:207:2173","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/chain.rs","begin":[198,4],"end":[202,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:22:1687":{"id":"0:22:1687","crate_id":0,"name":"Buf","span":{"filename":"src/buf/buf_impl.rs","begin":[76,0],"end":[1194,1]},"visibility":"public","docs":"Read bytes from a buffer.\n\nA buffer stores bytes in memory such that read operations are infallible.\nThe underlying storage may or may not be in contiguous memory. A `Buf` value\nis a cursor into the buffer. Reading from `Buf` advances the cursor\nposition. It can be thought of as an efficient `Iterator` for collections of\nbytes.\n\nThe simplest `Buf` is a `&[u8]`.\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(b'h', buf.get_u8());\nassert_eq!(b'e', buf.get_u8());\nassert_eq!(b'l', buf.get_u8());\n\nlet mut rest = [0; 8];\nbuf.copy_to_slice(&mut rest);\n\nassert_eq!(&rest[..], &b\"lo world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:23:1879","0:24:1842","0:25:1907","0:27:1845","0:28:1911","0:29:1846","0:30:1943","0:31:1946","0:32:1952","0:33:1956","0:34:1963","0:35:1967","0:36:1970","0:37:1973","0:38:1978","0:39:1982","0:40:1987","0:41:1990","0:42:1993","0:43:1996","0:44:2001","0:45:2005","0:46:2010","0:47:2013","0:48:2016","0:49:2019","0:50:2024","0:51:2028","0:52:2033","0:53:2036","0:54:2039","0:55:2042","0:56:2047","0:57:2052","0:58:2057","0:59:2061","0:60:2064","0:61:2067","0:62:2072","0:63:2077","0:64:2082","0:65:2086","0:66:2089","0:67:2093","0:68:2101","0:70:1820","0:71:1817","0:73:1819"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:77","0:83","0:320","0:282","0:652","0:79","0:413","0:75","0:195"]}}},"4:679:3532":{"id":"4:679:3532","crate_id":4,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:308:2420":{"id":"0:308:2420","crate_id":0,"name":"copy_from_slice","span":{"filename":"src/buf/uninit_slice.rs","begin":[100,4],"end":[108,5]},"visibility":"public","docs":"Copies bytes  from `src` into `self`.\n\nThe length of `src` must be the same as `self`.\n\n# Panics\n\nThe function panics if `src` has a different length than `self`.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\n\nlet mut data = [b'f', b'o', b'o'];\nlet slice = unsafe { UninitSlice::from_raw_parts_mut(data.as_mut_ptr(), 3) };\n\nslice.copy_from_slice(b\"bar\");\n\nassert_eq!(b\"bar\", &data[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:500:696":{"id":"0:500:696","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[803,4],"end":[805,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12042:28158":{"id":"1:12042:28158","crate_id":1,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"1:12041:28132"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"1:43605:7485","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2700:228-0:1097:1829":{"id":"a:1:2700:228-0:1097:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:12090:3211":{"id":"1:12090:3211","crate_id":1,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"1:11715:3542","`DoubleEndedIterator`":"1:7243:121","prim@char":"5:11917:418","str::matches":"1:12090:3211"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"1:43526:7481","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:135:2326":{"id":"0:135:2326","crate_id":0,"name":"put_u128","span":{"filename":"src/buf/buf_mut.rs","begin":[783,4],"end":[785,5]},"visibility":"default","docs":"Writes an unsigned 128 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u128(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:310:1937":{"id":"0:310:1937","crate_id":0,"name":"as_mut_ptr","span":{"filename":"src/buf/uninit_slice.rs","begin":[127,4],"end":[129,5]},"visibility":"public","docs":"Return a raw pointer to the slice's buffer.\n\n# Safety\n\nThe caller **must not** read from the referenced memory and **must not**\nwrite **uninitialized** bytes to the slice either.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut data = [0, 1, 2];\nlet mut slice = &mut data[..];\nlet ptr = BufMut::chunk_mut(&mut slice).as_mut_ptr();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:695:2626":{"id":"0:695:2626","crate_id":0,"name":"borrow","span":{"filename":"src/bytes_mut.rs","begin":[1226,4],"end":[1228,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1148":{"id":"0:1148","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[35,0],"end":[35,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"1:9156:3158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1149:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:34:1963":{"id":"0:34:1963","crate_id":0,"name":"get_u16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[377,4],"end":[379,5]},"visibility":"default","docs":"Gets an unsigned 16 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x08\\x09 hello\",\n    false => b\"\\x09\\x08 hello\",\n};\nassert_eq!(0x0809, buf.get_u16_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2537-0:1103:1827":{"id":"b:1:2537-0:1103:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2540:2707"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:772:612":{"id":"0:772:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1569,4],"end":[1571,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1139:773":{"id":"0:1139:773","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeToInclusive","id":"1:39242:203","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:484:612":{"id":"0:484:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[758,4],"end":[760,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:655:1845":{"id":"0:655:1845","crate_id":0,"name":"advance","span":{"filename":"src/bytes_mut.rs","begin":[1064,4],"end":[1074,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2547-0:1075:1824":{"id":"b:1:2547-0:1075:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2517:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1824","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2550:128","1:2551:1483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2740:3708-0:1075:1824":{"id":"a:1:2740:3708-0:1075:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2740:3708","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2740:3708","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2740:3708","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1824","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:113:2233":{"id":"0:113:2233","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[240,4],"end":[266,5]},"visibility":"default","docs":"Transfer bytes into `self` from `src` and advance the cursor by the\nnumber of bytes written.\n\n`self` must have enough remaining capacity to contain all of `src`.\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 6];\n\n{\n    let mut buf = &mut dst[..];\n    buf.put_slice(b\"hello\");\n\n    assert_eq!(1, buf.remaining_mut());\n}\n\nassert_eq!(b\"hello\\0\", &dst);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2740:3708-0:1084:1825":{"id":"a:1:2740:3708-0:1084:1825","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2740:3708","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2740:3708","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1825","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:241:2494":{"id":"0:241:2494","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/limit.rs","begin":[34,4],"end":[36,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:445:429":{"id":"0:445:429","crate_id":0,"name":"cmp","span":{"filename":"src/bytes.rs","begin":[642,4],"end":[644,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:320":{"id":"0:320","crate_id":0,"name":null,"span":{"filename":"src/buf/vec_deque.rs","begin":[5,0],"end":[22,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["get_uint_ne","get_u32","has_remaining","get_i128","get_u128_ne","get_i128_le","get_u16_ne","get_u128","get_i128_ne","get_f32_ne","take","chain","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","get_uint","copy_to_slice","chunks_vectored","get_f64_ne","get_u16_le","reader","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne"],"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VecDeque","id":"4:4347:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:321:1879","0:322:1842","0:323:1845"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12063:2974":{"id":"1:12063:2974","crate_id":1,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"1:11715:3542","`DoubleEndedIterator`":"1:7243:121","prim@char":"5:11917:418","str::split_whitespace":"1:12041:28132","str::rsplit":"1:12069:31790"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"1:43322:3321","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1090:1826":{"id":"0:1090:1826","crate_id":0,"name":"Limit","span":{"filename":"src/buf/limit.rs","begin":[9,0],"end":[12,1]},"visibility":"public","docs":"A `BufMut` adapter which limits the amount of bytes that can be written\nto an underlying buffer.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:237","a:1:8252:3690-0:1090:1826","a:1:8253:3689-0:1090:1826","a:1:2683:220-0:1090:1826","a:1:2740:3708-0:1090:1826","a:1:2700:228-0:1090:1826","b:1:2247-0:1090:1826","b:1:3319-0:1090:1826","b:1:2552-0:1090:1826","b:1:2250-0:1090:1826","b:1:2541-0:1090:1826","b:1:2547-0:1090:1826","b:1:2537-0:1090:1826","0:1094","0:244"]}}},"1:3321:1496":{"id":"1:3321:1496","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"1:39303:7283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:7213:787":{"id":"1:7213:787","crate_id":1,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:430:1825":{"id":"0:430:1825","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes.rs","begin":[605,4],"end":[605,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IntoIter","id":"0:1084:1825","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:1111:186":{"id":"0:1111:186","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:43:1996":{"id":"0:43:1996","crate_id":0,"name":"get_i32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[566,4],"end":[568,5]},"visibility":"default","docs":"Gets a signed 32 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x08\\x09\\xA0\\xA1 hello\",\n    false => b\"\\xA1\\xA0\\x09\\x08 hello\",\n};\nassert_eq!(0x0809A0A1, buf.get_i32_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:997:1845":{"id":"0:997:1845","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:636:2428":{"id":"0:636:2428","crate_id":0,"name":"extend_from_slice","span":{"filename":"src/bytes_mut.rs","begin":[764,4],"end":[779,5]},"visibility":"public","docs":"Appends given bytes to this `BytesMut`.\n\nIf this `BytesMut` object does not have enough capacity, it is resized\nfirst.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::with_capacity(0);\nbuf.extend_from_slice(b\"aaabbb\");\nbuf.extend_from_slice(b\"cccddd\");\n\nassert_eq!(b\"aaabbbcccddd\", &buf[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["extend",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12024:314":{"id":"1:12024:314","crate_id":1,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:12025:1937","`u8`":"5:11934:1504"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:237":{"id":"0:237","crate_id":0,"name":null,"span":{"filename":"src/buf/limit.rs","begin":[18,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Limit","id":"0:1090:1826","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:239:2467","0:240:2140","0:241:2494","0:242:1818","0:243:2509"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:710:1825":{"id":"0:710:1825","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes_mut.rs","begin":[1271,4],"end":[1271,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"1:9964:2793","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"0:986:2047":{"id":"0:986:2047","crate_id":0,"name":"get_uint","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1063:2282":{"id":"0:1063:2282","crate_id":0,"name":"put_u32","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:24:1842":{"id":"0:24:1842","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[133,4],"end":[133,29]},"visibility":"default","docs":"Returns a slice starting at the current position and of length between 0\nand `Buf::remaining()`. Note that this *can* return shorter slice (this allows\nnon-continuous internal representation).\n\nThis is a lower level function. Most operations are done with other\nfunctions.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(buf.chunk(), &b\"hello world\"[..]);\n\nbuf.advance(6);\n\nassert_eq!(buf.chunk(), &b\"world\"[..]);\n```\n\n# Implementer notes\n\nThis function should never panic. Once the end of the buffer is reached,\ni.e., `Buf::remaining` returns 0, calls to `chunk()` should return an\nempty slice.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:965:1846":{"id":"0:965:1846","crate_id":0,"name":"copy_to_slice","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:712":{"id":"0:712","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1278,0],"end":[1296,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_one","extend_reserve"],"trait":{"name":"Extend","id":"1:7214:3109","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:713:3063"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12046:3154":{"id":"1:12046:3154","crate_id":1,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"5:11917:418","self::pattern":"1:11715:3542"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:664:2243":{"id":"0:664:2243","crate_id":0,"name":"put_bytes","span":{"filename":"src/bytes_mut.rs","begin":[1126,4],"end":[1137,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:381:1692":{"id":"0:381:1692","crate_id":0,"name":"Bytes","span":{"filename":"src/bytes.rs","begin":[100,0],"end":[106,1]},"visibility":"public","docs":"A cheaply cloneable and sliceable chunk of contiguous memory.\n\n`Bytes` is an efficient container for storing and operating on contiguous\nslices of memory. It is intended for use primarily in networking code, but\ncould have applications elsewhere as well.\n\n`Bytes` values facilitate zero-copy network programming by allowing multiple\n`Bytes` objects to point to the same underlying memory.\n\n`Bytes` does not have a single implementation. It is an interface, whose\nexact behavior is implemented through dynamic dispatch in several underlying\nimplementations of `Bytes`.\n\nAll `Bytes` implementations must fulfill the following requirements:\n- They are cheaply cloneable and thereby shareable between an unlimited amount\n  of components, for example by modifying a reference count.\n- Instances can be sliced to refer to a subset of the original buffer.\n\n```\nuse bytes::Bytes;\n\nlet mut mem = Bytes::from(\"Hello world\");\nlet a = mem.slice(0..5);\n\nassert_eq!(a, \"Hello\");\n\nlet b = mem.split_to(6);\n\nassert_eq!(mem, \"world\");\nassert_eq!(b, \"Hello \");\n```\n\n# Memory layout\n\nThe `Bytes` struct itself is fairly small, limited to 4 `usize` fields used\nto track information about which segment of the underlying memory the\n`Bytes` handle has access to.\n\n`Bytes` keeps both a pointer to the shared state containing the full memory\nslice and a pointer to the start of the region visible by the handle.\n`Bytes` also tracks the length of its view into the memory.\n\n# Sharing\n\n`Bytes` contains a vtable, which allows implementations of `Bytes` to define\nhow sharing/cloning is implemented in detail.\nWhen `Bytes::clone()` is called, `Bytes` will call the vtable function for\ncloning the backing storage in order to share it behind between multiple\n`Bytes` instances.\n\nFor `Bytes` implementations which refer to constant memory (e.g. created\nvia `Bytes::from_static()`) the cloning implementation will be a no-op.\n\nFor `Bytes` implementations which point to a reference counted shared storage\n(e.g. an `Arc<[u8]>`), sharing will be implemented by increasing the\nreference count.\n\nDue to this mechanism, multiple `Bytes` instances may point to the same\nshared memory region.\nEach `Bytes` instance can point to different sections within that\nmemory region, and `Bytes` instances may or may not have overlapping views\ninto the memory.\n\nThe following diagram visualizes a scenario where 2 `Bytes` instances make\nuse of an `Arc`-based backing storage, and provide access to different views:\n\n```text\n\n   Arc ptrs                   ┌─────────┐\n   ________________________ / │ Bytes 2 │\n  /                           └─────────┘\n /          ┌───────────┐     |         |\n|_________/ │  Bytes 1  │     |         |\n|           └───────────┘     |         |\n|           |           | ___/ data     | tail\n|      data |      tail |/              |\nv           v           v               v\n┌─────┬─────┬───────────┬───────────────┬─────┐\n│ Arc │     │           │               │     │\n└─────┴─────┴───────────┴───────────────┴─────┘\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:390","a:1:8252:3690-0:381:1692","a:1:8253:3689-0:381:1692","a:1:2740:3708-0:381:1692","b:1:2247-0:381:1692","b:1:3319-0:381:1692","b:1:2552-0:381:1692","b:1:2250-0:381:1692","b:1:2541-0:381:1692","b:1:2547-0:381:1692","b:1:2537-0:381:1692","b:4:677-0:381:1692","0:816","0:444","0:447","0:479","0:463","0:475","0:449","0:459","0:407","0:428","0:481","0:1150","0:471","0:418","0:1146","0:455","0:432","0:483","0:461","0:465","0:506","0:497","0:423","0:719","0:477","0:501","0:440","0:409","0:437","0:457","0:426","0:446","0:413","0:485","0:503","0:491","0:453","0:442","0:787","0:680","0:499","0:421","0:785","0:473","0:451","0:495","0:487","0:469","0:467","0:508","0:408","0:411"]}}},"0:114:2243":{"id":"0:114:2243","crate_id":0,"name":"put_bytes","span":{"filename":"src/buf/buf_mut.rs","begin":[293,4],"end":[297,5]},"visibility":"default","docs":"Put `cnt` bytes `val` into `self`.\n\nLogically equivalent to calling `self.put_u8(val)` `cnt` times, but may work faster.\n\n`self` must have at least `cnt` remaining capacity.\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 6];\n\n{\n    let mut buf = &mut dst[..];\n    buf.put_bytes(b'a', 4);\n\n    assert_eq!(2, buf.remaining_mut());\n}\n\nassert_eq!(b\"aaaa\\0\\0\", &dst);\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208:2218":{"id":"0:208:2218","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/chain.rs","begin":[204,4],"end":[210,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:345-0:1103:1827":{"id":"0:345-0:1103:1827","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[37,0],"end":[37,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::take::Take","name":"Take","id":"0:1103:1827","glob":false}}},"0:467":{"id":"0:467","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[709,0],"end":[713,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Vec","id":"4:6717:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:468:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:23:1879":{"id":"0:23:1879","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[102,4],"end":[102,33]},"visibility":"default","docs":"Returns the number of bytes between the current position and the end of\nthe buffer.\n\nThis value is greater than or equal to the length of the slice returned\nby `chunk()`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(buf.remaining(), 11);\n\nbuf.get_u8();\n\nassert_eq!(buf.remaining(), 10);\n```\n\n# Implementer notes\n\nImplementations of `remaining` should ensure that the return value does\nnot change unless a call is made to `advance` or any other function that\nis documented to change the `Buf`'s current position.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"1:12075:32982":{"id":"1:12075:32982","crate_id":1,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"1:11715:3542","str::split":"1:12063:2974","prim@char":"5:11917:418","str::split_terminator":"1:12072:32981"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"1:43390:7478","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11735:10702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:994:1842":{"id":"0:994:1842","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:29:1846":{"id":"0:29:1846","crate_id":0,"name":"copy_to_slice","span":{"filename":"src/buf/buf_impl.rs","begin":[251,4],"end":[270,5]},"visibility":"default","docs":"Copies bytes from `self` into `dst`.\n\nThe cursor is advanced by the number of bytes copied. `self` must have\nenough remaining bytes to fill `dst`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\nlet mut dst = [0; 5];\n\nbuf.copy_to_slice(&mut dst);\nassert_eq!(&b\"hello\"[..], &dst);\nassert_eq!(6, buf.remaining());\n```\n\n# Panics\n\nThis function panics if `self.remaining() < dst.len()`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:132:2316":{"id":"0:132:2316","crate_id":0,"name":"put_i64","span":{"filename":"src/buf/buf_mut.rs","begin":[713,4],"end":[715,5]},"visibility":"default","docs":"Writes a signed 64 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i64(0x0102030405060708);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:983:2013":{"id":"0:983:2013","crate_id":0,"name":"get_i64","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:504:696":{"id":"0:504:696","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[844,4],"end":[871,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"resolved_path":{"name":"Box","id":"4:273:1835","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:203:2101":{"id":"0:203:2101","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/chain.rs","begin":[174,4],"end":[190,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:474:1039":{"id":"0:474:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[728,4],"end":[730,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1035:2268":{"id":"0:1035:2268","crate_id":0,"name":"put_u16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:634:2425":{"id":"0:634:2425","crate_id":0,"name":"reserve","span":{"filename":"src/bytes_mut.rs","begin":[566,4],"end":[577,5]},"visibility":"public","docs":"Reserves capacity for at least `additional` more bytes to be inserted\ninto the given `BytesMut`.\n\nMore than `additional` bytes may be reserved in order to avoid frequent\nreallocations. A call to `reserve` may result in an allocation.\n\nBefore allocating new buffer space, the function will attempt to reclaim\nspace in the existing buffer. If the current handle references a view\ninto a larger original buffer, and all other handles referencing part\nof the same original buffer have been dropped, then the current view\ncan be copied/shifted to the front of the buffer and the handle can take\nownership of the full buffer, provided that the full buffer is large\nenough to fit the requested additional capacity.\n\nThis optimization will only happen if shifting the data from the current\nview to the front of the buffer is not too expensive in terms of the\n(amortized) time required. The precise condition is subject to change;\nas of now, the length of the data being shifted needs to be at least as\nlarge as the distance that it's shifted by. If the current view is empty\nand the original buffer is large enough to fit the requested additional\ncapacity, then reallocations will never happen.\n\n# Examples\n\nIn the following example, a new buffer is allocated.\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::from(&b\"hello\"[..]);\nbuf.reserve(64);\nassert!(buf.capacity() >= 69);\n```\n\nIn the following example, the existing buffer is reclaimed.\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(128);\nbuf.put(&[0; 64][..]);\n\nlet ptr = buf.as_ptr();\nlet other = buf.split();\n\nassert!(buf.is_empty());\nassert_eq!(buf.capacity(), 64);\n\ndrop(other);\nbuf.reserve(128);\n\nassert_eq!(buf.capacity(), 128);\nassert_eq!(buf.as_ptr(), ptr);\n```\n\n# Panics\n\nPanics if the new capacity overflows `usize`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["additional",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2247-0:300:1828":{"id":"b:1:2247-0:300:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2249:2626"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:765":{"id":"0:765","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1553,0],"end":[1557,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:766:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:961:1907":{"id":"0:961:1907","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"5:8120:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:507:696":{"id":"0:507:696","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[875,4],"end":[877,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:423":{"id":"0:423","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[588,0],"end":[595,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"1:9365:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:424:731"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:975:1982":{"id":"0:975:1982","crate_id":0,"name":"get_u32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:966:1943":{"id":"0:966:1943","crate_id":0,"name":"get_u8","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:470:1039":{"id":"0:470:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[716,4],"end":[718,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:599:1693":{"id":"b:1:3319-0:599:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3321:1496"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:769":{"id":"0:769","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1565,0],"end":[1572,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:772:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12041:28132":{"id":"1:12041:28132","crate_id":1,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"1:12042:28158"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"1:43596:7484","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:167:2243":{"id":"0:167:2243","crate_id":0,"name":"put_bytes","span":{"filename":"src/buf/buf_mut.rs","begin":[1413,4],"end":[1419,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1039:2282":{"id":"0:1039:2282","crate_id":0,"name":"put_u32","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:307:2579":{"id":"0:307:2579","crate_id":0,"name":"write_byte","span":{"filename":"src/buf/uninit_slice.rs","begin":[73,4],"end":[77,5]},"visibility":"public","docs":"Write a single byte at the specified offset.\n\n# Panics\n\nThe function panics if `index` is out of bounds.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\n\nlet mut data = [b'f', b'o', b'o'];\nlet slice = unsafe { UninitSlice::from_raw_parts_mut(data.as_mut_ptr(), 3) };\n\nslice.write_byte(0, b'b');\n\nassert_eq!(b\"boo\", &data[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}],["byte",{"primitive":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12059:3884":{"id":"1:12059:3884","crate_id":1,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"1:41355:179","prim@char":"5:11917:418","self::pattern":"1:11715:3542"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11735:10702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:498:696":{"id":"0:498:696","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[797,4],"end":[799,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2541-0:599:1693":{"id":"b:1:2541-0:599:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2543:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:432":{"id":"0:432","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[612,0],"end":[619,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:434:2469","0:435:1825","0:436:787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12116:31798":{"id":"1:12116:31798","crate_id":1,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"5:11917:418","self::pattern":"1:11715:3542"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:150:2384":{"id":"0:150:2384","crate_id":0,"name":"put_f64","span":{"filename":"src/buf/buf_mut.rs","begin":[1145,4],"end":[1147,5]},"visibility":"default","docs":"Writes  an IEEE754 double-precision (8 bytes) floating point number to\n`self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f64(1.2f64);\nassert_eq!(buf, b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:286:1845":{"id":"0:286:1845","crate_id":0,"name":"advance","span":{"filename":"src/buf/take.rs","begin":[142,4],"end":[146,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1056:2251":{"id":"0:1056:2251","crate_id":0,"name":"put_i8","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2552-0:1090:1826":{"id":"b:1:2552-0:1090:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1826","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2555:128","1:2556:1482"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:4:677-0:381:1692":{"id":"b:4:677-0:381:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2263:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:673:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["4:679:3532","4:680:26637","4:681:26638"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:81:1842":{"id":"0:81:1842","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1348,4],"end":[1350,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1134:773":{"id":"0:1134:773","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeTo","id":"1:39198:202","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:786:612":{"id":"0:786:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1608,4],"end":[1610,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:166:2233":{"id":"0:166:2233","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1406,4],"end":[1411,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:46:2010":{"id":"0:46:2010","crate_id":0,"name":"get_u64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[629,4],"end":[631,5]},"visibility":"default","docs":"Gets an unsigned 64 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\",\n    false => b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x0102030405060708, buf.get_u64_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2547-0:1140:1830":{"id":"b:1:2547-0:1140:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2517:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2550:128","1:2551:1483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:632:2430":{"id":"0:632:2430","crate_id":0,"name":"resize","span":{"filename":"src/bytes_mut.rs","begin":[461,4],"end":[474,5]},"visibility":"public","docs":"Resizes the buffer so that `len` is equal to `new_len`.\n\nIf `new_len` is greater than `len`, the buffer is extended by the\ndifference with each additional byte set to `value`. If `new_len` is\nless than `len`, the buffer is simply truncated.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::new();\n\nbuf.resize(3, 0x1);\nassert_eq!(&buf[..], &[0x1, 0x1, 0x1]);\n\nbuf.resize(2, 0x2);\nassert_eq!(&buf[..], &[0x1, 0x1]);\n\nbuf.resize(4, 0x3);\nassert_eq!(&buf[..], &[0x1, 0x1, 0x3, 0x3]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["new_len",{"primitive":"usize"}],["value",{"primitive":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:687:429":{"id":"0:687:429","crate_id":0,"name":"cmp","span":{"filename":"src/bytes_mut.rs","begin":[1201,4],"end":[1203,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:757":{"id":"0:757","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1529,0],"end":[1533,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Vec","id":"4:6717:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:758:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12138:32999":{"id":"1:12138:32999","crate_id":1,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:4538:32999"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"1:43621:7421","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5426:2418":{"id":"4:5426:2418","crate_id":4,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"4:7280:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1147:670":{"id":"0:1147:670","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[34,0],"end":[34,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:193:2461":{"id":"0:193:2461","crate_id":0,"name":"last_mut","span":{"filename":"src/buf/chain.rs","begin":[109,4],"end":[111,5]},"visibility":"public","docs":"Gets a mutable reference to the last underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = (&b\"hello \"[..])\n    .chain(&b\"world\"[..]);\n\nbuf.last_mut().advance(1);\n\nlet full = buf.copy_to_bytes(10);\nassert_eq!(full, b\"hello orld\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"U"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1121:186":{"id":"0:1121:186","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1011:1990":{"id":"0:1011:1990","crate_id":0,"name":"get_i32","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:381:1692":{"id":"b:1:3319-0:381:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3321:1496"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12137:31674":{"id":"1:12137:31674","crate_id":1,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:622:815":{"id":"0:622:815","crate_id":0,"name":"len","span":{"filename":"src/bytes_mut.rs","begin":[181,4],"end":[183,5]},"visibility":"public","docs":"Returns the number of bytes contained in this `BytesMut`.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet b = BytesMut::from(&b\"hello\"[..]);\nassert_eq!(b.len(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12134:31670":{"id":"1:12134:31670","crate_id":1,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"1:39511:26805","Self::is_ascii":"1:12133:31669"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"1:39511:26805","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2250-0:381:1692":{"id":"b:1:2250-0:381:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2252:3107"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:756:1039":{"id":"0:756:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1524,4],"end":[1526,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Vec","id":"4:6717:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:993:1879":{"id":"0:993:1879","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2541-0:381:1692":{"id":"b:1:2541-0:381:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2543:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:487":{"id":"0:487","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[769,0],"end":[776,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:490:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12015:1910":{"id":"1:12015:1910","crate_id":1,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1044:2300":{"id":"0:1044:2300","crate_id":0,"name":"put_i32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:56:2047":{"id":"0:56:2047","crate_id":0,"name":"get_uint","span":{"filename":"src/buf/buf_impl.rs","begin":[838,4],"end":[840,5]},"visibility":"default","docs":"Gets an unsigned n-byte integer from `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03 hello\"[..];\nassert_eq!(0x010203, buf.get_uint(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2740:3708-0:1097:1829":{"id":"a:1:2740:3708-0:1097:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2740:3708","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2740:3708","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2740:3708-0:300:1828":{"id":"a:1:2740:3708-0:300:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2740:3708","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:656:2101":{"id":"0:656:2101","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/bytes_mut.rs","begin":[1076,4],"end":[1078,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"crate::Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:968:1952":{"id":"0:968:1952","crate_id":0,"name":"get_u16","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:321:1879":{"id":"0:321:1879","crate_id":0,"name":"remaining","span":{"filename":"src/buf/vec_deque.rs","begin":[6,4],"end":[8,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:266:2526":{"id":"0:266:2526","crate_id":0,"name":"fill_buf","span":{"filename":"src/buf/reader.rs","begin":[75,4],"end":[77,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"5:2890:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1067:2297":{"id":"0:1067:2297","crate_id":0,"name":"put_i32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1033:2255":{"id":"0:1033:2255","crate_id":0,"name":"put_u16","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:226:2469":{"id":"0:226:2469","crate_id":0,"name":"Item","span":{"filename":"src/buf/iter.rs","begin":[111,4],"end":[111,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u8"}}}},"0:275":{"id":"0:275","crate_id":0,"name":null,"span":{"filename":"src/buf/take.rs","begin":[19,0],"end":[130,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Take","id":"0:1103:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:277:2467","0:278:2140","0:279:2494","0:280:1818","0:281:2509"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3319-0:1103:1827":{"id":"b:1:3319-0:1103:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3321:1496"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:971:1967":{"id":"0:971:1967","crate_id":0,"name":"get_i16","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2250-0:1140:1830":{"id":"b:1:2250-0:1140:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2252:3107"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:755":{"id":"0:755","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1523,0],"end":[1527,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"4:6717:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}},{"type":{"resolved_path":{"name":"Global","id":"4:7013:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:756:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:686":{"id":"0:686","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1200,0],"end":[1204,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","max","clamp"],"trait":{"name":"Ord","id":"1:2347:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:687:429"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:989:2061":{"id":"0:989:2061","crate_id":0,"name":"get_int","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:857-0:599:1693":{"id":"0:857-0:599:1693","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[92,0],"end":[92,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::bytes_mut::BytesMut","name":"BytesMut","id":"0:599:1693","glob":false}}},"1:12141:33000":{"id":"1:12141:33000","crate_id":1,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:4536:33000"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"1:43639:7420","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1054:2233":{"id":"0:1054:2233","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:479":{"id":"0:479","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[745,0],"end":[749,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"items":["0:480:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:6:1686":{"id":"0:6:1686","crate_id":0,"name":"buf","span":{"filename":"src/buf/mod.rs","begin":[1,0],"end":[41,47]},"visibility":"public","docs":"Utilities for working with buffers.\n\nA buffer is any structure that contains a sequence of bytes. The bytes may\nor may not be stored in contiguous memory. This module contains traits used\nto abstract over buffers as well as utilities for working with buffer types.\n\n# `Buf`, `BufMut`\n\nThese are the two foundational traits for abstractly working with buffers.\nThey can be thought as iterators for byte structures. They offer additional\nperformance over `Iterator` by providing an API optimized for byte slices.\n\nSee [`Buf`] and [`BufMut`] for more details.\n\n[rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)\n[`Buf`]: trait.Buf.html\n[`BufMut`]: trait.BufMut.html","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:340-0:22:1687","0:341-0:106:1688","0:342-0:1075:1824","0:343-0:1084:1825","0:344-0:1090:1826","0:345-0:1103:1827","0:346-0:300:1828","0:348-0:1097:1829","0:349-0:1140:1830"],"is_stripped":false}}},"0:475":{"id":"0:475","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[733,0],"end":[737,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:476:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:419:230":{"id":"0:419:230","crate_id":0,"name":"Target","span":{"filename":"src/bytes.rs","begin":[573,4],"end":[573,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"slice":{"primitive":"u8"}}}}},"0:667":{"id":"0:667","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1147,0],"end":[1154,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:2897:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:668:230","0:669:551"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:209:2191":{"id":"0:209:2191","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/chain.rs","begin":[212,4],"end":[228,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1004:1963":{"id":"0:1004:1963","crate_id":0,"name":"get_u16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:657":{"id":"0:657","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1081,0],"end":[1138,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["put_u64","put_f32","put_f32_ne","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_i64_le","put_u16","put_i64","put_u64_ne","put_bytes"],"trait":{"name":"BufMut","id":"0:106:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:658:2173","0:659:2191","0:660:2218","0:661:2104","0:663:2233","0:664:2243"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1073:2319":{"id":"0:1073:2319","crate_id":0,"name":"put_i64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1075:1824":{"id":"0:1075:1824","crate_id":0,"name":"Chain","span":{"filename":"src/buf/chain.rs","begin":[32,0],"end":[35,1]},"visibility":"public","docs":"A `Chain` sequences two buffers.\n\n`Chain` is an adapter that links two underlying buffers and provides a\ncontinuous view across both buffers. It is able to sequence either immutable\nbuffers ([`Buf`] values) or mutable buffers ([`BufMut`] values).\n\nThis struct is generally created by calling [`Buf::chain`]. Please see that\nfunction's documentation for more detail.\n\n# Examples\n\n```\nuse bytes::{Bytes, Buf};\n\nlet mut buf = (&b\"hello \"[..])\n    .chain(&b\"world\"[..]);\n\nlet full: Bytes = buf.copy_to_bytes(11);\nassert_eq!(full[..], b\"hello world\"[..]);\n```\n\n[`Buf::chain`]: trait.Buf.html#method.chain\n[`Buf`]: trait.Buf.html\n[`BufMut`]: trait.BufMut.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:186","a:1:8252:3690-0:1075:1824","a:1:8253:3689-0:1075:1824","a:1:2683:220-0:1075:1824","a:1:2740:3708-0:1075:1824","a:1:2700:228-0:1075:1824","b:1:2247-0:1075:1824","b:1:3319-0:1075:1824","b:1:2552-0:1075:1824","b:1:2250-0:1075:1824","b:1:2541-0:1075:1824","b:1:2547-0:1075:1824","b:1:2537-0:1075:1824","0:210","0:1080","0:204","0:195"]}}},"b:1:2541-0:1097:1829":{"id":"b:1:2541-0:1097:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2543:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2700:228-0:1103:1827":{"id":"a:1:2700:228-0:1103:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3319-0:1140:1830":{"id":"b:1:3319-0:1140:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:3321:1496"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:742:612":{"id":"0:742:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1482,4],"end":[1484,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:981:2005":{"id":"0:981:2005","crate_id":0,"name":"get_u64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:987:2052":{"id":"0:987:2052","crate_id":0,"name":"get_uint_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2537-0:1090:1826":{"id":"b:1:2537-0:1090:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1826","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2540:2707"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1150":{"id":"0:1150","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[36,0],"end":[36,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"1:9158:3159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1151:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:223:2494":{"id":"0:223:2494","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/iter.rs","begin":[105,4],"end":[107,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BytesMut};\n\nlet buf = BytesMut::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\n\niter.get_mut().advance(1);\n\nassert_eq!(iter.next(), Some(b'c'));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:652":{"id":"0:652","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1052,0],"end":[1079,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["get_uint_ne","get_u32","has_remaining","get_i128","get_u128_ne","get_i128_le","get_u16_ne","get_u128","get_i128_ne","get_f32_ne","take","chain","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","get_uint","copy_to_slice","chunks_vectored","get_f64_ne","get_u16_le","reader","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne"],"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:653:1879","0:654:1842","0:655:1845","0:656:2101"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:424:731":{"id":"0:424:731","crate_id":0,"name":"hash","span":{"filename":"src/bytes.rs","begin":[589,4],"end":[594,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"H"},"bounds":[{"trait_bound":{"trait":{"name":"hash::Hasher","id":"1:9373:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2552-0:1084:1825":{"id":"b:1:2552-0:1084:1825","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1825","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2555:128","1:2556:1482"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:33:1956":{"id":"0:33:1956","crate_id":0,"name":"get_u16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[354,4],"end":[356,5]},"visibility":"default","docs":"Gets an unsigned 16 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x09\\x08 hello\"[..];\nassert_eq!(0x0809, buf.get_u16_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2550:128":{"id":"1:2550:128","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:709:2469":{"id":"0:709:2469","crate_id":0,"name":"Item","span":{"filename":"src/bytes_mut.rs","begin":[1270,4],"end":[1270,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}}},"b:1:2547-0:1090:1826":{"id":"b:1:2547-0:1090:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2517:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1826","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2550:128","1:2551:1483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:40:1987":{"id":"0:40:1987","crate_id":0,"name":"get_u32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[503,4],"end":[505,5]},"visibility":"default","docs":"Gets an unsigned 32 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x08\\x09\\xA0\\xA1 hello\",\n    false => b\"\\xA1\\xA0\\x09\\x08 hello\",\n};\nassert_eq!(0x0809A0A1, buf.get_u32_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:654:1842":{"id":"0:654:1842","crate_id":0,"name":"chunk","span":{"filename":"src/bytes_mut.rs","begin":[1059,4],"end":[1061,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1120":{"id":"0:1120","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:2980:2550","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeFull","id":"1:39138:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1121:186","0:1122:772"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:508":{"id":"0:508","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[880,0],"end":[885,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Vec","id":"4:6717:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:509:696"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:621:943":{"id":"0:621:943","crate_id":0,"name":"new","span":{"filename":"src/bytes_mut.rs","begin":[166,4],"end":[168,5]},"visibility":"public","docs":"Creates a new `BytesMut` with default capacity.\n\nResulting object has length 0 and unspecified capacity.\nThis function does not allocate.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut bytes = BytesMut::new();\n\nassert_eq!(0, bytes.len());\n\nbytes.reserve(2);\nbytes.put_slice(b\"xy\");\n\nassert_eq!(&b\"xy\"[..], &bytes[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:633:2424":{"id":"0:633:2424","crate_id":0,"name":"set_len","span":{"filename":"src/bytes_mut.rs","begin":[502,4],"end":[505,5]},"visibility":"public","docs":"Sets the length of the buffer.\n\nThis will explicitly set the size of the buffer without actually\nmodifying the data, so it is up to the caller to ensure that the data\nhas been initialized.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut b = BytesMut::from(&b\"hello world\"[..]);\n\nunsafe {\n    b.set_len(5);\n}\n\nassert_eq!(&b[..], b\"hello\");\n\nunsafe {\n    b.set_len(11);\n}\n\nassert_eq!(&b[..], b\"hello world\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1025:2067":{"id":"0:1025:2067","crate_id":0,"name":"get_int_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:186":{"id":"0:186","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[37,0],"end":[130,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Chain","id":"0:1075:1824","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["0:190:2447","0:191:2453","0:192:2456","0:193:2461","0:194:2467"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:689":{"id":"0:689","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1208,0],"end":[1213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:2588:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:690:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:322:1842":{"id":"0:322:1842","crate_id":0,"name":"chunk","span":{"filename":"src/buf/vec_deque.rs","begin":[10,4],"end":[17,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:141:2348":{"id":"0:141:2348","crate_id":0,"name":"put_uint","span":{"filename":"src/buf/buf_mut.rs","begin":[923,4],"end":[925,5]},"visibility":"default","docs":"Writes an unsigned n-byte integer to `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_uint(0x010203, 3);\nassert_eq!(buf, b\"\\x01\\x02\\x03\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2250-0:300:1828":{"id":"b:1:2250-0:300:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2252:3107"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:501":{"id":"0:501","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[808,0],"end":[841,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"4:6717:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}},{"type":{"resolved_path":{"name":"Global","id":"4:7013:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:502:696"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:456:612":{"id":"0:456:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[674,4],"end":[676,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:999:1846":{"id":"0:999:1846","crate_id":0,"name":"copy_to_slice","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1052:2218":{"id":"0:1052:2218","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:118:2260":{"id":"0:118:2260","crate_id":0,"name":"put_u16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[385,4],"end":[387,5]},"visibility":"default","docs":"Writes an unsigned 16 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u16_le(0x0809);\nassert_eq!(buf, b\"\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:125:2291":{"id":"0:125:2291","crate_id":0,"name":"put_u32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[551,4],"end":[553,5]},"visibility":"default","docs":"Writes an unsigned 32 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u32_ne(0x0809A0A1);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");\n} else {\n    assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1041:2291":{"id":"0:1041:2291","crate_id":0,"name":"put_u32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[28,0],"end":[108,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1825","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:220:943","0:221:2467","0:222:2140","0:223:2494"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:401:2767":{"id":"0:401:2767","crate_id":0,"name":"split_to","span":{"filename":"src/bytes.rs","begin":[411,4],"end":[433,5]},"visibility":"public","docs":"Splits the bytes into two at the given index.\n\nAfterwards `self` contains elements `[at, len)`, and the returned\n`Bytes` contains elements `[0, at)`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut a = Bytes::from(&b\"hello world\"[..]);\nlet b = a.split_to(5);\n\nassert_eq!(&a[..], b\" world\");\nassert_eq!(&b[..], b\"hello\");\n```\n\n# Panics\n\nPanics if `at > len`.","links":{},"attrs":["#[must_use = \"consider Bytes::advance if you don't need the other half\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["at",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12019:32976":{"id":"1:12019:32976","crate_id":1,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:12017:32975"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258:2140":{"id":"0:258:2140","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/reader.rs","begin":[33,4],"end":[35,5]},"visibility":"public","docs":"Gets a reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::Buf;\n\nlet buf = b\"hello world\".reader();\n\nassert_eq!(b\"hello world\", buf.get_ref());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1125":{"id":"0:1125","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:2980:2550","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeInclusive","id":"1:39220:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1126:186","0:1127:772"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1123":{"id":"0:1123","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:2984:2551","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeFull","id":"1:39138:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1124:773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:54:2039":{"id":"0:54:2039","crate_id":0,"name":"get_i128_le","span":{"filename":"src/buf/buf_impl.rs","begin":[795,4],"end":[797,5]},"visibility":"default","docs":"Gets a signed 128 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_i128_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:260:2467":{"id":"0:260:2467","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/reader.rs","begin":[60,4],"end":[62,5]},"visibility":"public","docs":"Consumes this `Reader`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::Buf;\nuse std::io;\n\nlet mut buf = b\"hello world\".reader();\nlet mut dst = vec![];\n\nio::copy(&mut buf, &mut dst).unwrap();\n\nlet buf = buf.into_inner();\nassert_eq!(0, buf.remaining());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"B"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:970:1963":{"id":"0:970:1963","crate_id":0,"name":"get_u16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1359,0],"end":[1390,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:2505:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["get_uint_ne","get_u32","has_remaining","get_i128","get_u128_ne","get_i128_le","get_u16_ne","get_u128","get_i128_ne","get_f32_ne","take","chain","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","get_uint","copy_to_slice","chunks_vectored","get_f64_ne","get_u16_le","reader","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne"],"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::io::Cursor","id":"5:7891:2139","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:85:1879","0:86:1842","0:87:1845"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:982:2010":{"id":"0:982:2010","crate_id":0,"name":"get_u64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2690:2116-0:300:1828":{"id":"a:1:2690:2116-0:300:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:1127:772":{"id":"0:1127:772","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeInclusive","id":"1:39220:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:471":{"id":"0:471","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[721,0],"end":[725,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:472:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:122:2278":{"id":"0:122:2278","crate_id":0,"name":"put_i16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[481,4],"end":[483,5]},"visibility":"default","docs":"Writes a signed 16 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i16_ne(0x0809);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x08\\x09\");\n} else {\n    assert_eq!(buf, b\"\\x09\\x08\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1016:2010":{"id":"0:1016:2010","crate_id":0,"name":"get_u64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:462:1039":{"id":"0:462:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[692,4],"end":[694,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:620:2103":{"id":"0:620:2103","crate_id":0,"name":"with_capacity","span":{"filename":"src/bytes_mut.rs","begin":[142,4],"end":[144,5]},"visibility":"public","docs":"Creates a new `BytesMut` with the specified capacity.\n\nThe returned `BytesMut` will be able to hold at least `capacity` bytes\nwithout reallocating.\n\nIt is important to note that this function does not specify the length\nof the returned `BytesMut`, but only the capacity.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut bytes = BytesMut::with_capacity(64);\n\n// `bytes` contains no data, even though there is capacity\nassert_eq!(bytes.len(), 0);\n\nbytes.put(&b\"hello world\"[..]);\n\nassert_eq!(&bytes[..], b\"hello world\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["capacity",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2250-0:599:1693":{"id":"b:1:2250-0:599:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2252:3107"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:698":{"id":"0:698","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1237,0],"end":[1252,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_fmt","write_char"],"trait":{"name":"Write","id":"1:9110:2623","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:699:1601","0:700:3108"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:221:2467":{"id":"0:221:2467","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/iter.rs","begin":[63,4],"end":[65,5]},"visibility":"public","docs":"Consumes this `IntoIter`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::{Buf, Bytes};\n\nlet buf = Bytes::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\n\nlet buf = iter.into_inner();\nassert_eq!(2, buf.remaining());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:988:2057":{"id":"0:988:2057","crate_id":0,"name":"get_uint_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1051:2173":{"id":"0:1051:2173","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8253:3689-0:1103:1827":{"id":"a:1:8253:3689-0:1103:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8253:3689","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8253:3689","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1049:2319":{"id":"0:1049:2319","crate_id":0,"name":"put_i64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8253:3689-0:381:1692":{"id":"a:1:8253:3689-0:381:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8253:3689","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:429:2469":{"id":"0:429:2469","crate_id":0,"name":"Item","span":{"filename":"src/bytes.rs","begin":[604,4],"end":[604,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u8"}}}},"0:630:2779":{"id":"0:630:2779","crate_id":0,"name":"truncate","span":{"filename":"src/bytes_mut.rs","begin":[416,4],"end":[422,5]},"visibility":"public","docs":"Shortens the buffer, keeping the first `len` bytes and dropping the\nrest.\n\nIf `len` is greater than the buffer's current length, this has no\neffect.\n\nExisting underlying capacity is preserved.\n\nThe [`split_off`] method can emulate `truncate`, but this causes the\nexcess bytes to be returned instead of dropped.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::from(&b\"hello world\"[..]);\nbuf.truncate(5);\nassert_eq!(buf, b\"hello\"[..]);\n```\n\n[`split_off`]: #method.split_off","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12066:28128":{"id":"1:12066:28128","crate_id":1,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"5:11917:418","self::pattern":"1:11715:3542"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"1:11538:4142","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:120:2272":{"id":"0:120:2272","crate_id":0,"name":"put_i16","span":{"filename":"src/buf/buf_mut.rs","begin":[433,4],"end":[435,5]},"visibility":"default","docs":"Writes a signed 16 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i16(0x0809);\nassert_eq!(buf, b\"\\x08\\x09\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:80:1879":{"id":"0:80:1879","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1343,4],"end":[1345,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:214:1825":{"id":"0:214:1825","crate_id":0,"name":"IntoIter","span":{"filename":"src/buf/chain.rs","begin":[237,4],"end":[237,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IntoIter","id":"0:1084:1825","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Chain","id":"0:1075:1824","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:1114:773":{"id":"0:1114:773","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"Range","id":"1:39154:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:163:2173":{"id":"0:163:2173","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1388,4],"end":[1390,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1110":{"id":"0:1110","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:2980:2550","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Range","id":"1:39154:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1111:186","0:1112:772"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1341,0],"end":[1356,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["get_uint_ne","get_u32","has_remaining","get_i128","get_u128_ne","get_i128_le","get_u16_ne","get_u128","get_i128_ne","get_f32_ne","take","chain","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","get_uint","copy_to_slice","chunks_vectored","get_f64_ne","get_u16_le","reader","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne"],"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"items":["0:80:1879","0:81:1842","0:82:1845"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:414:1879":{"id":"0:414:1879","crate_id":0,"name":"remaining","span":{"filename":"src/bytes.rs","begin":[538,4],"end":[540,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:746:612":{"id":"0:746:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1494,4],"end":[1496,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:336":{"id":"0:336","crate_id":0,"name":null,"span":{"filename":"src/buf/writer.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["write_vectored","by_ref","write_all","write_fmt","is_write_vectored","write_all_vectored"],"trait":{"name":"Write","id":"5:3463:2623","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:338:2581","0:339:2624"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1128":{"id":"0:1128","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:2984:2551","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeInclusive","id":"1:39220:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1129:773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:126:2294":{"id":"0:126:2294","crate_id":0,"name":"put_i32","span":{"filename":"src/buf/buf_mut.rs","begin":[573,4],"end":[575,5]},"visibility":"default","docs":"Writes a signed 32 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i32(0x0809A0A1);\nassert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:117:2255":{"id":"0:117:2255","crate_id":0,"name":"put_u16","span":{"filename":"src/buf/buf_mut.rs","begin":[363,4],"end":[365,5]},"visibility":"default","docs":"Writes an unsigned 16 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u16(0x0809);\nassert_eq!(buf, b\"\\x08\\x09\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1012:1993":{"id":"0:1012:1993","crate_id":0,"name":"get_i32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12122:32995":{"id":"1:12122:32995","crate_id":1,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"5:11917:418","self::pattern":"1:11715:3542"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11735:10702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:676:696":{"id":"0:676:696","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1171,4],"end":[1173,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1151:670":{"id":"0:1151:670","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[36,0],"end":[36,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12069:31790":{"id":"1:12069:31790","crate_id":1,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"1:11715:3542","`DoubleEndedIterator`":"1:7243:121","prim@char":"5:11917:418","str::split":"1:12063:2974"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"1:43340:4130","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11735:10702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1089:670":{"id":"0:1089:670","crate_id":0,"name":"fmt","span":{"filename":"src/buf/iter.rs","begin":[23,9],"end":[23,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:760:1039":{"id":"0:760:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1536,4],"end":[1538,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:744:1039":{"id":"0:744:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1488,4],"end":[1490,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:748:1039":{"id":"0:748:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1500,4],"end":[1502,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:107:2173":{"id":"0:107:2173","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[63,4],"end":[63,37]},"visibility":"default","docs":"Returns the number of bytes that can be written from the current\nposition until the end of the buffer is reached.\n\nThis value is greater than or equal to the length of the slice returned\nby `chunk_mut()`.\n\nWriting to a `BufMut` may involve allocating more memory on the fly.\nImplementations may fail before reaching the number of bytes indicated\nby this method if they encounter an allocation failure.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 10];\nlet mut buf = &mut dst[..];\n\nlet original_remaining = buf.remaining_mut();\nbuf.put(&b\"hello\"[..]);\n\nassert_eq!(original_remaining - 5, buf.remaining_mut());\n```\n\n# Implementer notes\n\nImplementations of `remaining_mut` should ensure that the return value\ndoes not change unless a call is made to `advance_mut` or any other\nfunction that is documented to change the `BufMut`'s current position.\n\n# Note\n\n`remaining_mut` may return value smaller than actual available space.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1115":{"id":"0:1115","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:2980:2550","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeFrom","id":"1:39178:199","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1116:186","0:1117:772"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2247-0:381:1692":{"id":"b:1:2247-0:381:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2249:2626"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:248:2191":{"id":"0:248:2191","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/limit.rs","begin":[70,4],"end":[74,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:344-0:1090:1826":{"id":"0:344-0:1090:1826","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[36,0],"end":[36,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::limit::Limit","name":"Limit","id":"0:1090:1826","glob":false}}},"0:482:1039":{"id":"0:482:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[752,4],"end":[754,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:190:2447":{"id":"0:190:2447","crate_id":0,"name":"first_ref","span":{"filename":"src/buf/chain.rs","begin":[55,4],"end":[57,5]},"visibility":"public","docs":"Gets a reference to the first underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet buf = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nassert_eq!(buf.first_ref()[..], b\"hello\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:486:1039":{"id":"0:486:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[764,4],"end":[766,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144:2361":{"id":"0:144:2361","crate_id":0,"name":"put_int","span":{"filename":"src/buf/buf_mut.rs","begin":[997,4],"end":[999,5]},"visibility":"default","docs":"Writes low `nbytes` of a signed integer to `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_int(0x0504010203, 3);\nassert_eq!(buf, b\"\\x01\\x02\\x03\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self` or if `nbytes` is greater than 8.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2740:3708-0:1103:1827":{"id":"a:1:2740:3708-0:1103:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2740:3708","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2740:3708","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:12025:1937":{"id":"1:12025:1937","crate_id":1,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"5:11934:1504"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2555:128":{"id":"1:2555:128","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"1:31982:4453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:303":{"id":"0:303","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[24,0],"end":[174,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:305:2427","0:307:2579","0:308:2420","0:310:1937","0:311:2601","0:313:815"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12087:32984":{"id":"1:12087:32984","crate_id":1,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11735:10702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:35:1967":{"id":"0:35:1967","crate_id":0,"name":"get_i16","span":{"filename":"src/buf/buf_impl.rs","begin":[397,4],"end":[399,5]},"visibility":"default","docs":"Gets a signed 16 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09 hello\"[..];\nassert_eq!(0x0809, buf.get_i16());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:77":{"id":"0:77","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1337,0],"end":[1339,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["get_uint_ne","get_u32","has_remaining","get_i128","get_u128_ne","get_i128_le","get_u16_ne","get_u128","get_i128_ne","get_f32_ne","take","chain","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","get_uint","copy_to_slice","chunks_vectored","get_f64_ne","get_u16_le","reader","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne"],"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"4:273:1835","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:993:1879","0:994:1842","0:995:1907","0:997:1845","0:998:1911","0:999:1846","0:1000:1943","0:1001:1946","0:1002:1952","0:1003:1956","0:1004:1963","0:1005:1967","0:1006:1970","0:1007:1973","0:1008:1978","0:1009:1982","0:1010:1987","0:1011:1990","0:1012:1993","0:1013:1996","0:1014:2001","0:1015:2005","0:1016:2010","0:1017:2013","0:1018:2016","0:1019:2019","0:1020:2047","0:1021:2052","0:1022:2057","0:1023:2061","0:1024:2064","0:1025:2067","0:1026:2101"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1062:2278":{"id":"0:1062:2278","crate_id":0,"name":"put_i16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:978:1993":{"id":"0:978:1993","crate_id":0,"name":"get_i32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1008:1978":{"id":"0:1008:1978","crate_id":0,"name":"get_u32","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:969:1956":{"id":"0:969:1956","crate_id":0,"name":"get_u16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:154:1823":{"id":"0:154:1823","crate_id":0,"name":"writer","span":{"filename":"src/buf/buf_mut.rs","begin":[1243,4],"end":[1248,5]},"visibility":"default","docs":"Creates an adaptor which implements the `Write` trait for `self`.\n\nThis function returns a new value which implements `Write` by adapting\nthe `Write` trait functions to the `BufMut` trait functions. Given that\n`BufMut` operations are infallible, none of the `Write` functions will\nreturn with `Err`.\n\n# Examples\n\n```\nuse bytes::BufMut;\nuse std::io::Write;\n\nlet mut buf = vec![].writer();\n\nlet num = buf.write(&b\"hello world\"[..]).unwrap();\nassert_eq!(11, num);\n\nlet buf = buf.into_inner();\n\nassert_eq!(*buf, b\"hello world\"[..]);\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Writer","id":"0:1140:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1032:2251":{"id":"0:1032:2251","crate_id":0,"name":"put_i8","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1068:2300":{"id":"0:1068:2300","crate_id":0,"name":"put_i32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8253:3689-0:1090:1826":{"id":"a:1:8253:3689-0:1090:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8253:3689","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8253:3689","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1826","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:115:2244":{"id":"0:115:2244","crate_id":0,"name":"put_u8","span":{"filename":"src/buf/buf_mut.rs","begin":[317,4],"end":[320,5]},"visibility":"default","docs":"Writes an unsigned 8 bit integer to `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u8(0x01);\nassert_eq!(buf, b\"\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:735":{"id":"0:735","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1460,0],"end":[1460,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:725":{"id":"0:725","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1324,0],"end":[1328,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"1:7201:134","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:727:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:856-0:381:1692":{"id":"0:856-0:381:1692","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[91,0],"end":[91,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::bytes::Bytes","name":"Bytes","id":"0:381:1692","glob":false}}},"0:0:1689":{"id":"0:0:1689","crate_id":0,"name":"bytes","span":{"filename":"src/lib.rs","begin":[1,0],"end":[117,1]},"visibility":"public","docs":"Provides abstractions for working with bytes.\n\nThe `bytes` crate provides an efficient byte buffer structure\n([`Bytes`](struct.Bytes.html)) and traits for working with buffer\nimplementations ([`Buf`], [`BufMut`]).\n\n[`Buf`]: trait.Buf.html\n[`BufMut`]: trait.BufMut.html\n\n# `Bytes`\n\n`Bytes` is an efficient container for storing and operating on contiguous\nslices of memory. It is intended for use primarily in networking code, but\ncould have applications elsewhere as well.\n\n`Bytes` values facilitate zero-copy network programming by allowing multiple\n`Bytes` objects to point to the same underlying memory. This is managed by\nusing a reference count to track when the memory is no longer needed and can\nbe freed.\n\nA `Bytes` handle can be created directly from an existing byte store (such as `&[u8]`\nor `Vec<u8>`), but usually a `BytesMut` is used first and written to. For\nexample:\n\n```rust\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(1024);\nbuf.put(&b\"hello world\"[..]);\nbuf.put_u16(1234);\n\nlet a = buf.split();\nassert_eq!(a, b\"hello world\\x04\\xD2\"[..]);\n\nbuf.put(&b\"goodbye world\"[..]);\n\nlet b = buf.split();\nassert_eq!(b, b\"goodbye world\"[..]);\n\nassert_eq!(buf.capacity(), 998);\n```\n\nIn the above example, only a single buffer of 1024 is allocated. The handles\n`a` and `b` will share the underlying buffer and maintain indices tracking\nthe view into the buffer represented by the handle.\n\nSee the [struct docs] for more details.\n\n[struct docs]: struct.Bytes.html\n\n# `Buf`, `BufMut`\n\nThese two traits provide read and write access to buffers. The underlying\nstorage may or may not be in contiguous memory. For example, `Bytes` is a\nbuffer that guarantees contiguous memory, but a [rope] stores the bytes in\ndisjoint chunks. `Buf` and `BufMut` maintain cursors tracking the current\nposition in the underlying byte storage. When bytes are read or written, the\ncursor is advanced.\n\n[rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)\n\n## Relation with `Read` and `Write`\n\nAt first glance, it may seem that `Buf` and `BufMut` overlap in\nfunctionality with `std::io::Read` and `std::io::Write`. However, they\nserve different purposes. A buffer is the value that is provided as an\nargument to `Read::read` and `Write::write`. `Read` and `Write` may then\nperform a syscall, which has the potential of failing. Operations on `Buf`\nand `BufMut` are infallible.","links":{},"attrs":["#![warn(missing_docs, missing_debug_implementations, rust_2018_idioms)]","#![doc(test(no_crate_inject,\nattr(deny(warnings, rust_2018_idioms), allow(dead_code, unused_variables))))]","#![no_std]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:6:1686","0:351-0:22:1687","0:352-0:106:1688","0:856-0:381:1692","0:857-0:599:1693"],"is_stripped":false}}},"1:12135:31672":{"id":"1:12135:31672","crate_id":1,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1040:2286":{"id":"0:1040:2286","crate_id":0,"name":"put_u32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:342-0:1075:1824":{"id":"0:342-0:1075:1824","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[34,0],"end":[34,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::chain::Chain","name":"Chain","id":"0:1075:1824","glob":false}}},"0:397:1372":{"id":"0:397:1372","crate_id":0,"name":"slice","span":{"filename":"src/bytes.rs","begin":[238,4],"end":[278,5]},"visibility":"public","docs":"Returns a slice of self for the provided range.\n\nThis will increment the reference count for the underlying memory and\nreturn a new `Bytes` handle set to the slice.\n\nThis operation is `O(1)`.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet a = Bytes::from(&b\"hello world\"[..]);\nlet b = a.slice(2..5);\n\nassert_eq!(&b[..], b\"llo\");\n```\n\n# Panics\n\nRequires that `begin <= end` and `end <= self.len()`, otherwise slicing\nwill panic.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["range",{"impl_trait":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"1:3078:2625","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl RangeBounds<usize>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"1:3078:2625","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:331":{"id":"0:331","crate_id":0,"name":null,"span":{"filename":"src/buf/writer.rs","begin":[19,0],"end":[75,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Writer","id":"0:1140:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:333:2140","0:334:2494","0:335:2467"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:62:2072":{"id":"0:62:2072","crate_id":0,"name":"get_f32","span":{"filename":"src/buf/buf_impl.rs","begin":[973,4],"end":[975,5]},"visibility":"default","docs":"Gets an IEEE754 single-precision (4 bytes) floating point number from\n`self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x3F\\x99\\x99\\x9A hello\"[..];\nassert_eq!(1.2f32, buf.get_f32());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1015:2005":{"id":"0:1015:2005","crate_id":0,"name":"get_u64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/buf/limit.rs","begin":[59,0],"end":[75,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["put_u64","put_f32","put_f32_ne","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_i64_le","put_u16","put_i64","put_u64_ne","put_bytes"],"trait":{"name":"BufMut","id":"0:106:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1826","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:246:2173","0:247:2218","0:248:2191"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1118":{"id":"0:1118","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:2984:2551","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeFrom","id":"1:39178:199","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1119:773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1026:2101":{"id":"0:1026:2101","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"crate::Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2250-0:1075:1824":{"id":"b:1:2250-0:1075:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1824","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2252:3107"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1030:2233":{"id":"0:1030:2233","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121:2275":{"id":"0:121:2275","crate_id":0,"name":"put_i16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[455,4],"end":[457,5]},"visibility":"default","docs":"Writes a signed 16 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i16_le(0x0809);\nassert_eq!(buf, b\"\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:448:612":{"id":"0:448:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[650,4],"end":[652,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1083:670":{"id":"0:1083:670","crate_id":0,"name":"fmt","span":{"filename":"src/buf/chain.rs","begin":[31,9],"end":[31,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:722":{"id":"0:722","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1318,0],"end":[1322,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"1:7201:134","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:723:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:28:1911":{"id":"0:28:1911","crate_id":0,"name":"has_remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[226,4],"end":[228,5]},"visibility":"default","docs":"Returns true if there are any more bytes to consume\n\nThis is equivalent to `self.remaining() != 0`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"a\"[..];\n\nassert!(buf.has_remaining());\n\nbuf.get_u8();\n\nassert!(!buf.has_remaining());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:980:2001":{"id":"0:980:2001","crate_id":0,"name":"get_u64","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:681:26638":{"id":"4:681:26638","crate_id":4,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:776:1039":{"id":"0:776:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1578,4],"end":[1580,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5440:33663":{"id":"4:5440:33663","crate_id":4,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"4:7280:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5441:33664":{"id":"4:5441:33664","crate_id":4,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"4:273:1835","`String`":"4:7280:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"4:273:1835","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"4:7013:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:75":{"id":"0:75","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1333,0],"end":[1335,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["get_uint_ne","get_u32","has_remaining","get_i128","get_u128_ne","get_i128_le","get_u16_ne","get_u128","get_i128_ne","get_f32_ne","take","chain","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","get_uint","copy_to_slice","chunks_vectored","get_f64_ne","get_u16_le","reader","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne"],"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:959:1879","0:960:1842","0:961:1907","0:963:1845","0:964:1911","0:965:1846","0:966:1943","0:967:1946","0:968:1952","0:969:1956","0:970:1963","0:971:1967","0:972:1970","0:973:1973","0:974:1978","0:975:1982","0:976:1987","0:977:1990","0:978:1993","0:979:1996","0:980:2001","0:981:2005","0:982:2010","0:983:2013","0:984:2016","0:985:2019","0:986:2047","0:987:2052","0:988:2057","0:989:2061","0:990:2064","0:991:2067","0:992:2101"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1119:773":{"id":"0:1119:773","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeFrom","id":"1:39178:199","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2700:228-0:300:1828":{"id":"a:1:2700:228-0:300:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:12072:32981":{"id":"1:12072:32981","crate_id":1,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"1:11715:3542","str::split":"1:12063:2974","prim@char":"5:11917:418","`DoubleEndedIterator`":"1:7243:121","str::rsplit_terminator":"1:12075:32982"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"1:43372:7477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:140:2344":{"id":"0:140:2344","crate_id":0,"name":"put_i128_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[901,4],"end":[903,5]},"visibility":"default","docs":"Writes a signed 128 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i128_ne(0x01020304050607080910111213141516);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");\n} else {\n    assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:73:1819":{"id":"0:73:1819","crate_id":0,"name":"reader","span":{"filename":"src/buf/buf_impl.rs","begin":[1188,4],"end":[1193,5]},"visibility":"default","docs":"Creates an adaptor which implements the `Read` trait for `self`.\n\nThis function returns a new value which implements `Read` by adapting\nthe `Read` trait functions to the `Buf` trait functions. Given that\n`Buf` operations are infallible, none of the `Read` functions will\nreturn with `Err`.\n\n# Examples\n\n```\nuse bytes::{Bytes, Buf};\nuse std::io::Read;\n\nlet buf = Bytes::from(\"hello world\");\n\nlet mut reader = buf.reader();\nlet mut dst = [0; 1024];\n\nlet num = reader.read(&mut dst).unwrap();\n\nassert_eq!(11, num);\nassert_eq!(&dst[..11], &b\"hello world\"[..]);\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Reader","id":"0:1097:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2740:3708-0:1090:1826":{"id":"a:1:2740:3708-0:1090:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2740:3708","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2740:3708","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1826","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:8252:3690-0:1103:1827":{"id":"a:1:8252:3690-0:1103:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8252:3690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8252:3690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:442":{"id":"0:442","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[635,0],"end":[639,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:443:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1074:2322":{"id":"0:1074:2322","crate_id":0,"name":"put_i64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1061:2275":{"id":"0:1061:2275","crate_id":0,"name":"put_i16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:300:1828":{"id":"b:1:3319-0:300:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3321:1496"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1109:670":{"id":"0:1109:670","crate_id":0,"name":"fmt","span":{"filename":"src/buf/take.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1028:2218":{"id":"0:1028:2218","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:454:1039":{"id":"0:454:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[668,4],"end":[670,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:45:2005":{"id":"0:45:2005","crate_id":0,"name":"get_u64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[606,4],"end":[608,5]},"visibility":"default","docs":"Gets an unsigned 64 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_u64_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:458:1039":{"id":"0:458:1039","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[680,4],"end":[682,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30798:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:279:2494":{"id":"0:279:2494","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/take.rs","begin":[77,4],"end":[79,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\".take(2);\nlet mut dst = vec![];\n\nbuf.get_mut().advance(2);\n\ndst.put(&mut buf);\nassert_eq!(*dst, b\"ll\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:85:1879":{"id":"0:85:1879","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1360,4],"end":[1369,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:146:2367":{"id":"0:146:2367","crate_id":0,"name":"put_int_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1045,4],"end":[1051,5]},"visibility":"default","docs":"Writes low `nbytes` of a signed integer to `self` in native-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_int_ne(0x010203, 3);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\");\n} else {\n    assert_eq!(buf, b\"\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self` or if `nbytes` is greater than 8.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2740:3708-0:381:1692":{"id":"a:1:2740:3708-0:381:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2740:3708","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:668:230":{"id":"0:668:230","crate_id":0,"name":"Target","span":{"filename":"src/bytes_mut.rs","begin":[1148,4],"end":[1148,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"slice":{"primitive":"u8"}}}}},"0:229":{"id":"0:229","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[130,0],"end":[130,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"1:7266:2496","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1825","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1071:2313":{"id":"0:1071:2313","crate_id":0,"name":"put_u64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8253:3689-0:599:1693":{"id":"a:1:8253:3689-0:599:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8253:3689","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1124:773":{"id":"0:1124:773","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeFull","id":"1:39138:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:754:612":{"id":"0:754:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1518,4],"end":[1520,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Vec","id":"4:6717:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:778:612":{"id":"0:778:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1584,4],"end":[1586,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2247-0:1084:1825":{"id":"b:1:2247-0:1084:1825","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2241:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1825","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2249:2626"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1097:1829":{"id":"0:1097:1829","crate_id":0,"name":"Reader","span":{"filename":"src/buf/reader.rs","begin":[11,0],"end":[13,1]},"visibility":"public","docs":"A `Buf` adapter which implements `io::Read` for the inner value.\n\nThis struct is generally created by calling `reader()` on `Buf`. See\ndocumentation of [`reader()`](trait.Buf.html#method.reader) for more\ndetails.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:256","a:1:8252:3690-0:1097:1829","a:1:8253:3689-0:1097:1829","a:1:2683:220-0:1097:1829","a:1:2740:3708-0:1097:1829","a:1:2700:228-0:1097:1829","b:1:2247-0:1097:1829","b:1:3319-0:1097:1829","b:1:2552-0:1097:1829","b:1:2250-0:1097:1829","b:1:2541-0:1097:1829","b:1:2547-0:1097:1829","b:1:2537-0:1097:1829","0:261","0:264","0:1100"]}}},"0:480:612":{"id":"0:480:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[746,4],"end":[748,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1022:2057":{"id":"0:1022:2057","crate_id":0,"name":"get_uint_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:464:612":{"id":"0:464:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[698,4],"end":[700,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Vec","id":"4:6717:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:761":{"id":"0:761","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1541,0],"end":[1545,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:762:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:86:1842":{"id":"0:86:1842","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1371,4],"end":[1380,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:674":{"id":"0:674","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1170,0],"end":[1174,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:676:696"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:7209-0:1084:1825":{"id":"b:1:7209-0:1084:1825","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7321:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1825","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:7211:2469","1:7212:1825","1:7213:787"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:145:2364":{"id":"0:145:2364","crate_id":0,"name":"put_int_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1019,4],"end":[1021,5]},"visibility":"default","docs":"Writes low `nbytes` of a signed integer to `self` in little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_int_le(0x0504010203, 3);\nassert_eq!(buf, b\"\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self` or if `nbytes` is greater than 8.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12044:32980":{"id":"1:12044:32980","crate_id":1,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"1:43586:7483","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:481":{"id":"0:481","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[751,0],"end":[755,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"items":["0:482:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:246:2173":{"id":"0:246:2173","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/limit.rs","begin":[60,4],"end":[62,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:465":{"id":"0:465","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[703,0],"end":[707,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"4:6717:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}},{"type":{"resolved_path":{"name":"Global","id":"4:7013:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:466:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:2556:1482":{"id":"1:2556:1482","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"1:41497:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"1:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2541-0:1075:1824":{"id":"b:1:2541-0:1075:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1824","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2543:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1094":{"id":"0:1094","crate_id":0,"name":null,"span":{"filename":"src/buf/limit.rs","begin":[8,9],"end":[8,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1826","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1096:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8252:3690-0:1090:1826":{"id":"a:1:8252:3690-0:1090:1826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8252:3690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8252:3690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1826","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:440":{"id":"0:440","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[629,0],"end":[633,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:441:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:198:1879":{"id":"0:198:1879","crate_id":0,"name":"remaining","span":{"filename":"src/buf/chain.rs","begin":[137,4],"end":[139,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:31:1946":{"id":"0:31:1946","crate_id":0,"name":"get_i8","span":{"filename":"src/buf/buf_impl.rs","begin":[311,4],"end":[316,5]},"visibility":"default","docs":"Gets a signed 8 bit integer from `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08 hello\"[..];\nassert_eq!(8, buf.get_i8());\n```\n\n# Panics\n\nThis function panics if there is no more remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:977:1990":{"id":"0:977:1990","crate_id":0,"name":"get_i32","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:964:1911":{"id":"0:964:1911","crate_id":0,"name":"has_remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1084:1825":{"id":"0:1084:1825","crate_id":0,"name":"IntoIter","span":{"filename":"src/buf/iter.rs","begin":[24,0],"end":[26,1]},"visibility":"public","docs":"Iterator over the bytes contained by the buffer.\n\n# Examples\n\nBasic usage:\n\n```\nuse bytes::Bytes;\n\nlet buf = Bytes::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\nassert_eq!(iter.next(), Some(b'b'));\nassert_eq!(iter.next(), Some(b'c'));\nassert_eq!(iter.next(), None);\n```\n\n[`iter`]: trait.Buf.html#method.iter\n[`Buf`]: trait.Buf.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:218","a:1:8252:3690-0:1084:1825","a:1:8253:3689-0:1084:1825","a:1:2683:220-0:1084:1825","a:1:2740:3708-0:1084:1825","a:1:2700:228-0:1084:1825","b:1:7209-0:1084:1825","b:1:2247-0:1084:1825","b:1:3319-0:1084:1825","b:1:2552-0:1084:1825","b:1:2250-0:1084:1825","b:1:2541-0:1084:1825","b:1:2547-0:1084:1825","b:1:2537-0:1084:1825","0:224","0:1087","0:229"]}}},"0:396:2420":{"id":"0:396:2420","crate_id":0,"name":"copy_from_slice","span":{"filename":"src/bytes.rs","begin":[212,4],"end":[214,5]},"visibility":"public","docs":"Creates `Bytes` instance from slice, by copying it.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["data",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:763":{"id":"0:763","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1547,0],"end":[1551,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:764:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:127:2297":{"id":"0:127:2297","crate_id":0,"name":"put_i32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[595,4],"end":[597,5]},"visibility":"default","docs":"Writes a signed 32 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i32_le(0x0809A0A1);\nassert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1066:2294":{"id":"0:1066:2294","crate_id":0,"name":"put_i32","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:1084:1825":{"id":"b:1:3319-0:1084:1825","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1825","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3321:1496"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:995:1907":{"id":"0:995:1907","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"5:8120:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1048:2316":{"id":"0:1048:2316","crate_id":0,"name":"put_i64","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2552-0:1097:1829":{"id":"b:1:2552-0:1097:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2555:128","1:2556:1482"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:305:2427":{"id":"0:305:2427","crate_id":0,"name":"from_raw_parts_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[48,4],"end":[52,5]},"visibility":"public","docs":"Create a `&mut UninitSlice` from a pointer and a length.\n\n# Safety\n\nThe caller must ensure that `ptr` references a valid memory region owned\nby the caller representing a byte slice for the duration of `'a`.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\n\nlet bytes = b\"hello world\".to_vec();\nlet ptr = bytes.as_ptr() as *mut _;\nlet len = bytes.len();\n\nlet slice = unsafe { UninitSlice::from_raw_parts_mut(ptr, len) };\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ptr",{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}}],["len",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:680":{"id":"0:680","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1182,0],"end":[1186,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:681:696"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:660:2218":{"id":"0:660:2218","crate_id":0,"name":"chunk_mut","span":{"filename":"src/bytes_mut.rs","begin":[1100,4],"end":[1105,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:63:2077":{"id":"0:63:2077","crate_id":0,"name":"get_f32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[994,4],"end":[996,5]},"visibility":"default","docs":"Gets an IEEE754 single-precision (4 bytes) floating point number from\n`self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x9A\\x99\\x99\\x3F hello\"[..];\nassert_eq!(1.2f32, buf.get_f32_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:152:2391":{"id":"0:152:2391","crate_id":0,"name":"put_f64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1195,4],"end":[1197,5]},"visibility":"default","docs":"Writes  an IEEE754 double-precision (8 bytes) floating point number to\n`self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f64_ne(1.2f64);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33\");\n} else {\n    assert_eq!(buf, b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:727:699":{"id":"0:727:699","crate_id":0,"name":"from_iter","span":{"filename":"src/bytes_mut.rs","begin":[1325,4],"end":[1327,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["into_iter",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7205:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1137:772":{"id":"0:1137:772","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeToInclusive","id":"1:39242:203","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277:2467":{"id":"0:277:2467","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/take.rs","begin":[39,4],"end":[41,5]},"visibility":"public","docs":"Consumes this `Take`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\".take(2);\nlet mut dst = vec![];\n\ndst.put(&mut buf);\nassert_eq!(*dst, b\"he\"[..]);\n\nlet mut buf = buf.into_inner();\n\ndst.clear();\ndst.put(&mut buf);\nassert_eq!(*dst, b\"llo world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:701":{"id":"0:701","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1254,0],"end":[1258,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2263:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:702:422"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:64:2082":{"id":"0:64:2082","crate_id":0,"name":"get_f32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1020,5]},"visibility":"default","docs":"Gets an IEEE754 single-precision (4 bytes) floating point number from\n`self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x3F\\x99\\x99\\x9A hello\",\n    false => b\"\\x9A\\x99\\x99\\x3F hello\",\n};\nassert_eq!(1.2f32, buf.get_f32_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1080":{"id":"0:1080","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[31,9],"end":[31,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1824","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["0:1083:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:766:612":{"id":"0:766:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1554,4],"end":[1556,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:773":{"id":"0:773","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1574,0],"end":[1581,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:776:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12030:28720":{"id":"1:12030:28720","crate_id":1,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"1:12078:31792":{"id":"1:12078:31792","crate_id":1,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"5:11917:418","self::pattern":"1:11715:3542","str::rsplitn":"1:12081:31794"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"1:43426:4128","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5444:32885":{"id":"4:5444:32885","crate_id":4,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:12137:31674"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:658:2173":{"id":"0:658:2173","crate_id":0,"name":"remaining_mut","span":{"filename":"src/bytes_mut.rs","begin":[1083,4],"end":[1085,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8252:3690-0:1097:1829":{"id":"a:1:8252:3690-0:1097:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8252:3690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8252:3690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:12102:32988":{"id":"1:12102:32988","crate_id":1,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:48:2016":{"id":"0:48:2016","crate_id":0,"name":"get_i64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[669,4],"end":[671,5]},"visibility":"default","docs":"Gets a signed 64 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_i64_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1059:2268":{"id":"0:1059:2268","crate_id":0,"name":"put_u16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:128:2300":{"id":"0:128:2300","crate_id":0,"name":"put_i32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[621,4],"end":[623,5]},"visibility":"default","docs":"Writes a signed 32 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i32_ne(0x0809A0A1);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");\n} else {\n    assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1053:2191":{"id":"0:1053:2191","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:42:1993":{"id":"0:42:1993","crate_id":0,"name":"get_i32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[543,4],"end":[545,5]},"visibility":"default","docs":"Gets a signed 32 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_i32_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1014:2001":{"id":"0:1014:2001","crate_id":0,"name":"get_u64","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2537-0:1075:1824":{"id":"b:1:2537-0:1075:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2514:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1824","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2540:2707"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:143:2357":{"id":"0:143:2357","crate_id":0,"name":"put_uint_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[971,4],"end":[977,5]},"visibility":"default","docs":"Writes an unsigned n-byte integer to `self` in the native-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_uint_ne(0x010203, 3);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\");\n} else {\n    assert_eq!(buf, b\"\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:281:2509":{"id":"0:281:2509","crate_id":0,"name":"set_limit","span":{"filename":"src/buf/take.rs","begin":[127,4],"end":[129,5]},"visibility":"public","docs":"Sets the maximum number of bytes that can be read.\n\n# Note\n\nIf the inner `Buf` has fewer bytes than `lim` then that is the actual\nnumber of available bytes.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\".take(2);\nlet mut dst = vec![];\n\ndst.put(&mut buf);\nassert_eq!(*dst, b\"he\"[..]);\n\ndst.clear();\n\nbuf.set_limit(3);\ndst.put(&mut buf);\nassert_eq!(*dst, b\"llo\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["lim",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1055:2244":{"id":"0:1055:2244","crate_id":0,"name":"put_u8","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2547-0:381:1692":{"id":"b:1:2547-0:381:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2517:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2550:128","1:2551:1483"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:624:2422":{"id":"0:624:2422","crate_id":0,"name":"capacity","span":{"filename":"src/bytes_mut.rs","begin":[211,4],"end":[213,5]},"visibility":"public","docs":"Returns the number of bytes the `BytesMut` can hold without reallocating.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet b = BytesMut::with_capacity(64);\nassert_eq!(b.capacity(), 64);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:637:3077":{"id":"0:637:3077","crate_id":0,"name":"unsplit","span":{"filename":"src/bytes_mut.rs","begin":[805,4],"end":[814,5]},"visibility":"public","docs":"Absorbs a `BytesMut` that was previously split off.\n\nIf the two `BytesMut` objects were previously contiguous and not mutated\nin a way that causes re-allocation i.e., if `other` was created by\ncalling `split_off` on this `BytesMut`, then this is an `O(1)` operation\nthat just decreases a reference count and sets a few indices.\nOtherwise this method degenerates to\n`self.extend_from_slice(other.as_ref())`.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::with_capacity(64);\nbuf.extend_from_slice(b\"aaabbbcccddd\");\n\nlet split = buf.split_off(6);\nassert_eq!(b\"aaabbb\", &buf[..]);\nassert_eq!(b\"cccddd\", &split[..]);\n\nbuf.unsplit(split);\nassert_eq!(b\"aaabbbcccddd\", &buf[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:781":{"id":"0:781","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1595,0],"end":[1599,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2311:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"items":["0:782:612"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:2540:2707":{"id":"1:2540:2707","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2514:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:348-0:1097:1829":{"id":"0:348-0:1097:1829","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[41,15],"end":[41,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"self::reader::Reader","name":"Reader","id":"0:1097:1829","glob":false}}},"1:7212:1825":{"id":"1:7212:1825","crate_id":1,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"I"}}}},"0:819:670":{"id":"0:819:670","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/debug.rs","begin":[46,4],"end":[48,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:59:2061":{"id":"0:59:2061","crate_id":0,"name":"get_int","span":{"filename":"src/buf/buf_impl.rs","begin":[905,4],"end":[907,5]},"visibility":"default","docs":"Gets a signed n-byte integer from `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03 hello\"[..];\nassert_eq!(0x010203, buf.get_int(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:70:1820":{"id":"0:70:1820","crate_id":0,"name":"take","span":{"filename":"src/buf/buf_impl.rs","begin":[1134,4],"end":[1139,5]},"visibility":"default","docs":"Creates an adaptor which will read at most `limit` bytes from `self`.\n\nThis function returns a new instance of `Buf` which will read at most\n`limit` bytes.\n\n# Examples\n\n```\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\"[..].take(5);\nlet mut dst = vec![];\n\ndst.put(&mut buf);\nassert_eq!(dst, b\"hello\");\n\nlet mut buf = buf.into_inner();\ndst.clear();\ndst.put(&mut buf);\nassert_eq!(dst, b\" world\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["limit",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Take","id":"0:1103:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12039:7494":{"id":"1:12039:7494","crate_id":1,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"5:11917:418"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"1:43298:7475","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:130:2308":{"id":"0:130:2308","crate_id":0,"name":"put_u64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[665,4],"end":[667,5]},"visibility":"default","docs":"Writes an unsigned 64 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u64_le(0x0102030405060708);\nassert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12043:4107":{"id":"1:12043:4107","crate_id":1,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"1:43576:3320","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5424":{"id":"4:5424","crate_id":4,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["4:5425:33660","4:5426:2418","4:5429:33661","4:5432:33662","4:5440:33663","4:5441:33664","4:5442:3344","4:5443:32884","4:5444:32885"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1037:2275":{"id":"0:1037:2275","crate_id":0,"name":"put_i16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8252:3690-0:381:1692":{"id":"a:1:8252:3690-0:381:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8252:3690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:960:1842":{"id":"0:960:1842","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:974:1978":{"id":"0:974:1978","crate_id":0,"name":"get_u32","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:992:2101":{"id":"0:992:2101","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"crate::Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:469":{"id":"0:469","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[715,0],"end":[719,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Vec","id":"4:6717:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:470:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2552-0:599:1693":{"id":"b:1:2552-0:599:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2511:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2521:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2555:128","1:2556:1482"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:87:1845":{"id":"0:87:1845","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1382,4],"end":[1389,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12028:2494":{"id":"1:12028:2494","crate_id":1,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"1:41355:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"1:41353:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:767":{"id":"0:767","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1559,0],"end":[1563,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:768:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2250-0:1103:1827":{"id":"b:1:2250-0:1103:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2244:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1827","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2252:3107"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:399:2740":{"id":"0:399:2740","crate_id":0,"name":"slice_ref","span":{"filename":"src/bytes.rs","begin":[305,4],"end":[336,5]},"visibility":"public","docs":"Returns a slice of self that is equivalent to the given `subset`.\n\nWhen processing a `Bytes` buffer with other tools, one often gets a\n`&[u8]` which is in fact a slice of the `Bytes`, i.e. a subset of it.\nThis function turns that `&[u8]` into another `Bytes`, as if one had\ncalled `self.slice()` with the offsets that correspond to `subset`.\n\nThis operation is `O(1)`.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet bytes = Bytes::from(&b\"012345678\"[..]);\nlet as_slice = bytes.as_ref();\nlet subset = &as_slice[2..6];\nlet subslice = bytes.slice_ref(&subset);\nassert_eq!(&subslice[..], b\"2345\");\n```\n\n# Panics\n\nRequires that the given `sub` slice is in fact contained within the\n`Bytes` buffer; otherwise this function will panic.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["subset",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:688":{"id":"0:688","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1206,0],"end":[1206,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2316:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12049:31796":{"id":"1:12049:31796","crate_id":1,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"5:11917:418","self::pattern":"1:11715:3542"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:452:612":{"id":"0:452:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[662,4],"end":[664,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:973:1973":{"id":"0:973:1973","crate_id":0,"name":"get_i16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:403:2785":{"id":"0:403:2785","crate_id":0,"name":"clear","span":{"filename":"src/bytes.rs","begin":[483,4],"end":[485,5]},"visibility":"public","docs":"Clears the buffer, removing all data.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut buf = Bytes::from(&b\"hello world\"[..]);\nbuf.clear();\nassert!(buf.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:155:2415":{"id":"0:155:2415","crate_id":0,"name":"chain_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1270,4],"end":[1275,5]},"visibility":"default","docs":"Creates an adapter which will chain this buffer with another.\n\nThe returned `BufMut` instance will first write to all bytes from\n`self`. Afterwards, it will write to `next`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut a = [0u8; 5];\nlet mut b = [0u8; 6];\n\nlet mut chain = (&mut a[..]).chain_mut(&mut b[..]);\n\nchain.put_slice(b\"hello world\");\n\nassert_eq!(&a[..], b\"hello\");\nassert_eq!(&b[..], b\" world\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["next",{"generic":"U"}]],"output":{"resolved_path":{"name":"Chain","id":"0:1075:1824","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12093:32985":{"id":"1:12093:32985","crate_id":1,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"1:11715:3542","`DoubleEndedIterator`":"1:7243:121","prim@char":"5:11917:418","str::matches":"1:12090:3211"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"1:43544:7482","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11720:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11735:10702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8252:3690-0:1075:1824":{"id":"a:1:8252:3690-0:1075:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8252:3690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8252:3690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8252:3690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1824","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:790:696":{"id":"0:790:696","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1620,4],"end":[1654,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bytes",{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:673:553":{"id":"0:673:553","crate_id":0,"name":"deref_mut","span":{"filename":"src/bytes_mut.rs","begin":[1165,4],"end":[1167,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:243:2509":{"id":"0:243:2509","crate_id":0,"name":"set_limit","span":{"filename":"src/buf/limit.rs","begin":[54,4],"end":[56,5]},"visibility":"public","docs":"Sets the maximum number of bytes that can be written.\n\n# Note\n\nIf the inner `BufMut` has fewer bytes than `lim` then that is the actual\nnumber of available bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["lim",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1036:2272":{"id":"0:1036:2272","crate_id":0,"name":"put_i16","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:477":{"id":"0:477","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[739,0],"end":[743,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"1:2353:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"String","id":"4:7280:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:478:1039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:496:60":{"id":"0:496:60","crate_id":0,"name":"default","span":{"filename":"src/bytes.rs","begin":[791,4],"end":[793,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:665":{"id":"0:665","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1140,0],"end":[1145,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"1:2505:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:666:315"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:699:1601":{"id":"0:699:1601","crate_id":0,"name":"write_str","span":{"filename":"src/bytes_mut.rs","begin":[1239,4],"end":[1246,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:136:2330":{"id":"0:136:2330","crate_id":0,"name":"put_u128_le","span":{"filename":"src/buf/buf_mut.rs","begin":[805,4],"end":[807,5]},"visibility":"default","docs":"Writes an unsigned 128 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u128_le(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1117:772":{"id":"0:1117:772","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeFrom","id":"1:39178:199","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2740:3708-0:1140:1830":{"id":"a:1:2740:3708-0:1140:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2740:3708","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2740:3708","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:339:2624":{"id":"0:339:2624","crate_id":0,"name":"flush","span":{"filename":"src/buf/writer.rs","begin":[85,4],"end":[87,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"5:2890:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:661:2104":{"id":"0:661:2104","crate_id":0,"name":"put","span":{"filename":"src/bytes_mut.rs","begin":[1110,4],"end":[1120,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"crate::Buf","id":"0:22:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:410:587":{"id":"0:410:587","crate_id":0,"name":"drop","span":{"filename":"src/bytes.rs","begin":[524,4],"end":[526,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:129:2304":{"id":"0:129:2304","crate_id":0,"name":"put_u64","span":{"filename":"src/buf/buf_mut.rs","begin":[643,4],"end":[645,5]},"visibility":"default","docs":"Writes an unsigned 64 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u64(0x0102030405060708);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:393:2693":{"id":"0:393:2693","crate_id":0,"name":"from_static","span":{"filename":"src/bytes.rs","begin":[162,4],"end":[169,5]},"visibility":"public","docs":"Creates a new `Bytes` from a static slice.\n\nThe returned `Bytes` will point directly to the static slice. There is\nno allocating or copying.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::from_static(b\"hello\");\nassert_eq!(&b[..], b\"hello\");\n```","links":{},"attrs":["#[inline]","#[cfg(not(all(loom, test)))]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bytes",{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:417:2101":{"id":"0:417:2101","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/bytes.rs","begin":[561,4],"end":[569,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"crate::Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:626:2949":{"id":"0:626:2949","crate_id":0,"name":"zeroed","span":{"filename":"src/bytes_mut.rs","begin":[274,4],"end":[276,5]},"visibility":"public","docs":"Creates a new `BytesMut`, which is initialized with zero.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet zeros = BytesMut::zeroed(42);\n\nassert_eq!(zeros.len(), 42);\nzeros.into_iter().for_each(|x| assert_eq!(x, 0));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:619":{"id":"0:619","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[118,0],"end":[1033,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:620:2103","0:621:943","0:622:815","0:623:1910","0:624:2422","0:625:693","0:626:2949","0:627:2758","0:628:2974","0:629:2767","0:630:2779","0:631:2785","0:632:2430","0:633:2424","0:634:2425","0:636:2428","0:637:3077","0:649:3064"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1132:772":{"id":"0:1132:772","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeTo","id":"1:39198:202","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1828","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:134:2322":{"id":"0:134:2322","crate_id":0,"name":"put_i64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[761,4],"end":[763,5]},"visibility":"default","docs":"Writes a signed 64 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i64_ne(0x0102030405060708);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");\n} else {\n    assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:55:2042":{"id":"0:55:2042","crate_id":0,"name":"get_i128_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[818,4],"end":[820,5]},"visibility":"default","docs":"Gets a signed 128 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\",\n    false => b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x01020304050607080910111213141516, buf.get_i128_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1047:2313":{"id":"0:1047:2313","crate_id":0,"name":"put_u64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:65:2086":{"id":"0:65:2086","crate_id":0,"name":"get_f64","span":{"filename":"src/buf/buf_impl.rs","begin":[1039,4],"end":[1041,5]},"visibility":"default","docs":"Gets an IEEE754 double-precision (8 bytes) floating point number from\n`self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33 hello\"[..];\nassert_eq!(1.2f64, buf.get_f64());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:441:612":{"id":"0:441:612","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[630,4],"end":[632,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:47:2013":{"id":"0:47:2013","crate_id":0,"name":"get_i64","span":{"filename":"src/buf/buf_impl.rs","begin":[649,4],"end":[651,5]},"visibility":"default","docs":"Gets a signed 64 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_i64());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8252:3690-0:1140:1830":{"id":"a:1:8252:3690-0:1140:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8252:3690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8252:3690","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:8253:3689-0:1140:1830":{"id":"a:1:8253:3689-0:1140:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8253:3689","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8253:3689","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}}},"paths":{"17:975:5244":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"5:9906:7448":{"crate_id":5,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"6:4799:8698":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"5:11191:7013":{"crate_id":5,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:6771:3468":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"18:609:5198":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:12126:5767":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"5:8153:1824":{"crate_id":5,"path":["std","io","Chain"],"kind":"struct"},"5:11931:745":{"crate_id":5,"path":["std","i32"],"kind":"primitive"},"16:6254:6499":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"11:365:4993":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:43900:10716":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"4:3593:4124":{"crate_id":4,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:1574:8372":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:39198:202":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"5:11938:1500":{"crate_id":5,"path":["std","u128"],"kind":"primitive"},"18:521:26530":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"5:7619:7021":{"crate_id":5,"path":["std","thread","Builder"],"kind":"struct"},"17:1787:5246":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"16:7588:6704":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:21569:16109":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"4:3168:2793":{"crate_id":4,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"5:10238:4444":{"crate_id":5,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:9641:5400":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:2511:149":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:39324:7284":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"18:660:5204":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"6:6035:8997":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:1543:3306":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"6:4586:8632":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:11299:5603":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:13865:6257":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"5:857:4124":{"crate_id":5,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:10261:4125":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:46831:7575":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"16:2319:6288":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:44312:161":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:9886:5421":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"6:4677:8639":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:39957:7417":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"17:13376:6111":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"6:1544:8353":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"4:7013:3373":{"crate_id":4,"path":["alloc","alloc","Global"],"kind":"struct"},"17:10705:5532":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"6:4327:8501":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:13219:6072":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:2691:3363":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"17:8490:22677":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:21728:7251":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"6:562:8307":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"6:7585:9231":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"4:6786:5085":{"crate_id":4,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"16:5643:6391":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"5:4597:9096":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"6:5007:8801":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"5:2210:129":{"crate_id":5,"path":["std","fs","File"],"kind":"struct"},"17:13257:6080":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"5:8366:7103":{"crate_id":5,"path":["std","path","Prefix"],"kind":"enum"},"5:5949:206":{"crate_id":5,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"1:3373:10588":{"crate_id":1,"path":["core","any","Provider"],"kind":"trait"},"1:46257:7552":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:39123:3452":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"5:7850:130":{"crate_id":5,"path":["std","fs","FileType"],"kind":"struct"},"1:11715:3542":{"crate_id":1,"path":["core","str","pattern"],"kind":"module"},"16:3782:6350":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:42633:4252":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:12419:5827":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:22501:171":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"11:644:4124":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"5:9149:35681":{"crate_id":5,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"5:7820:7034":{"crate_id":5,"path":["std","fs","OpenOptions"],"kind":"struct"},"4:7360:3396":{"crate_id":4,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"1:22402:4118":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:44291:7511":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"6:5817:8884":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:44299:7512":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:21976:7273":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:47750:7625":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"16:6544:6328":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:39920:7413":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"16:5418:6380":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"1:12608:3372":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"5:1768:609":{"crate_id":5,"path":["std","env"],"kind":"module"},"1:40358:3506":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:42664:7466":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:7168:3484":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"5:8176:3321":{"crate_id":5,"path":["std","io","Split"],"kind":"struct"},"5:9403:129":{"crate_id":5,"path":["std","sys","unix","fs","File"],"kind":"struct"},"17:10428:5501":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"5:6432:5023":{"crate_id":5,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"17:11532:5649":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"1:47613:7615":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"5:8525:7113":{"crate_id":5,"path":["std","path","StripPrefixError"],"kind":"struct"},"17:11969:5746":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:10580:5519":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"17:12059:5758":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:41870:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"18:574:5181":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"5:7837:7036":{"crate_id":5,"path":["std","fs","Permissions"],"kind":"struct"},"5:4097:7767":{"crate_id":5,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"11:817:6873":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"17:10569:5515":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:43614:7238":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:21781:7252":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:42362:68":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:39220:201":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:43230:4136":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:4811:798":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:39338:7285":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:2263:105":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"6:4495:8592":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"6:5050:8826":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"5:11917:418":{"crate_id":5,"path":["std","char"],"kind":"primitive"},"1:2740:3708":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:40165:7431":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"17:11770:5709":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:1466:1831":{"crate_id":1,"path":["core","mem"],"kind":"module"},"11:447:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:3141:3453":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:47179:7608":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:21441:4119":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"17:2933:5254":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:11573:5659":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"5:6211:5010":{"crate_id":5,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"1:40155:5091":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:9628:5399":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"5:0:1394":{"crate_id":5,"path":["std"],"kind":"module"},"18:766:26529":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:2150:588":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"5:11522:7020":{"crate_id":5,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:12646:5871":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"11:1538:6885":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:42876:4147":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:13419:6125":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"16:7437:6686":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:21000:15767":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"4:819:5050":{"crate_id":4,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"17:12959:6016":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:21453:30586":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:1947:5250":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"5:9032:9241":{"crate_id":5,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"17:9188:36701":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"6:4722:8660":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"6:6647:9103":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"16:7293:6646":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"6:4753:8673":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:2832:3444":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:2468:16109":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:2757:3433":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"4:2963:8059":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"17:9138:5366":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:9595:5100":{"crate_id":1,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:3513:3398":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"5:8416:7462":{"crate_id":5,"path":["std","path","State"],"kind":"enum"},"5:4437:16143":{"crate_id":5,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"1:41421:4124":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"17:8310:22672":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:8283:22671":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:22435:173":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"4:6619:3403":{"crate_id":4,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"5:10255:8051":{"crate_id":5,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"1:45809:7540":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"16:3446:6347":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"4:1500:6867":{"crate_id":4,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"5:2391:1832":{"crate_id":5,"path":["std","io"],"kind":"module"},"4:2458:8055":{"crate_id":4,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:8909:1692":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"16:6558:6530":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"16:8142:6772":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"15:198:7749":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"17:13041:6028":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:13385:6112":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:2779:3431":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"17:11109:5565":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:40383:3508":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"6:5014:8804":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"5:11224:7016":{"crate_id":5,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"5:11888:16062":{"crate_id":5,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"5:1785:6972":{"crate_id":5,"path":["std","env","VarsOs"],"kind":"struct"},"17:10516:5508":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:2816:3440":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"5:1783:6971":{"crate_id":5,"path":["std","env","Vars"],"kind":"struct"},"6:4747:8671":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"6:4780:8690":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"5:11254:7019":{"crate_id":5,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"5:6561:8047":{"crate_id":5,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"18:531:5185":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"6:5978:8977":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:13564:6186":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:9265:5369":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"11:1663:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"6:7539:9222":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:20770:15769":{"crate_id":1,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"17:11800:5718":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"5:11717:5044":{"crate_id":5,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"5:10971:5037":{"crate_id":5,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"4:6468:5045":{"crate_id":4,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"5:3406:2523":{"crate_id":5,"path":["std","io","Read"],"kind":"trait"},"17:8389:22674":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:11427:7232":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:11502:5645":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"5:3424:3315":{"crate_id":5,"path":["std","io","IoSliceMut"],"kind":"struct"},"5:3272:3338":{"crate_id":5,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"6:4482:8586":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"5:1561:2793":{"crate_id":5,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:2505:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"11:1845:6887":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"16:55:6750":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"1:4785:28428":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:5471:3306":{"crate_id":1,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:42126:3158":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:13024:6026":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"16:6351:22616":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:2928:3451":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:8753:5231":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:9946:5433":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:12592:5857":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:2743:3362":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:47631:7616":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:13812:6248":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"16:3585:6348":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"6:6606:9076":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:9145:112":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:45857:7541":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"5:11478:7156":{"crate_id":5,"path":["std","alloc","System"],"kind":"struct"},"6:6710:9112":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:43266:3540":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"18:491:5180":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:10478:5505":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"4:2032:2139":{"crate_id":4,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"11:798:6870":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"5:3898:16117":{"crate_id":5,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:43128:4132":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"5:6780:16215":{"crate_id":5,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:10095:4127":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:43586:7483":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:9120:132":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"6:5024:8809":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"1:43109:4121":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"9:0:3233":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:40009:7421":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:39317:6666":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"5:9067:219":{"crate_id":5,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:11252:4115":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"6:6572:9057":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:43849:7241":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:13625:6193":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"6:7574:9230":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"5:1821:6973":{"crate_id":5,"path":["std","env","SplitPaths"],"kind":"struct"},"17:12236:5798":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:45486:7523":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"6:5766:8864":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:11355:5618":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"5:11266:7773":{"crate_id":5,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"17:10026:5442":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"5:643:16059":{"crate_id":5,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"5:5090:191":{"crate_id":5,"path":["std","path","PathBuf"],"kind":"struct"},"11:1852:6888":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"5:6865:5026":{"crate_id":5,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"6:4861:8724":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"18:719:5220":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"6:1594:8386":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:21347:15778":{"crate_id":1,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"5:585:16057":{"crate_id":5,"path":["std","ascii","AsciiExt"],"kind":"trait"},"16:7557:6701":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"6:4412:8556":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:4254:207":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"5:11915:371":{"crate_id":5,"path":["std","bool"],"kind":"primitive"},"17:10125:5454":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:4409:3585":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:11372:5620":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"1:30428:28229":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"14:7:6857":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"16:5677:22612":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:7205:152":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:40035:7424":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"14:215:6862":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"16:5811:6406":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:3078:2625":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:43100:4123":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"4:7213:7187":{"crate_id":4,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"16:4818:6368":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"16:7029:6610":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:12259:5807":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"6:6704:9110":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:44061:9349":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:41790:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:39076:3367":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:46617:7572":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:40685:3480":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:10092:5451":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:43049:7469":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:43220:4135":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"6:6076:9008":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"4:3214:31639":{"crate_id":4,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:11924:5741":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:44069:9351":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:47537:7613":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"16:7478:6334":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:13777:6235":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"16:7652:198":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:47640:7617":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"5:4119:7768":{"crate_id":5,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:41339:7226":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"16:5402:5356":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"16:2616:6307":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:41556:1825":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:10807:4141":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"6:4505:8599":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"16:3300:6346":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"1:43118:4122":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:46381:7568":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:42872:9343":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"5:11197:4457":{"crate_id":5,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:47429:7611":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:41413:2793":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:44053:9347":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"5:618:6960":{"crate_id":5,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:10000:5437":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"5:4702:16132":{"crate_id":5,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"15:180:7745":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:6022:22615":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"5:6032:5013":{"crate_id":5,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"17:10798:22683":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"1:10289:4126":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"12:0:3236":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"6:5067:8830":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:4739:8667":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"5:11939:792":{"crate_id":5,"path":["std","isize"],"kind":"primitive"},"1:40028:7423":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"5:6396:7006":{"crate_id":5,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:43605:7485":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"5:10010:6973":{"crate_id":5,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:12536:5850":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"5:4706:16135":{"crate_id":5,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"17:13309:6094":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:13292:6086":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"4:4233:2793":{"crate_id":4,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:8718:5230":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"5:2215:2524":{"crate_id":5,"path":["std","fs","read"],"kind":"function"},"6:7598:9235":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:12006:5750":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"5:11360:6981":{"crate_id":5,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"6:4400:8547":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"4:1008:5045":{"crate_id":4,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:11813:5720":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"5:4760:5008":{"crate_id":5,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"11:2130:21690":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"1:20814:15775":{"crate_id":1,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:21849:28239":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"5:9410:7033":{"crate_id":5,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"1:22534:172":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"16:4445:6357":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"11:2174:7711":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:8931:5238":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"6:494:8265":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:10068:5449":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"16:5346:6379":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"6:4916:8756":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"4:1511:198":{"crate_id":4,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:43544:7482":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:40185:3487":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"6:4625:8635":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:13477:6137":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"16:2879:6318":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:10257:5486":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"5:3155:8031":{"crate_id":5,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"4:5:1570":{"crate_id":4,"path":["alloc","vec"],"kind":"macro"},"17:11234:5585":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"1:21117:16109":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"6:6725:9116":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"5:7891:2139":{"crate_id":5,"path":["std","io","cursor","Cursor"],"kind":"struct"},"5:4926:16175":{"crate_id":5,"path":["std","panic","always_abort"],"kind":"function"},"5:11929:747":{"crate_id":5,"path":["std","i8"],"kind":"primitive"},"17:10660:5528":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"5:11044:4451":{"crate_id":5,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"6:4817:8705":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:7516:9216":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"4:4845:204":{"crate_id":4,"path":["alloc","rc","Rc"],"kind":"struct"},"5:4665:16143":{"crate_id":5,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"5:676:8149":{"crate_id":5,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"6:4394:8544":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:10840:5546":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"11:119:4989":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"19:0:1035":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"4:1479:6883":{"crate_id":4,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:45587:7527":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:21813:7253":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"6:532:8290":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"16:4845:6369":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"4:4425:5065":{"crate_id":4,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:9164:3576":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"4:7121:1825":{"crate_id":4,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:12835:5924":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"5:11928:644":{"crate_id":5,"path":["std","f64"],"kind":"primitive"},"6:5862:8914":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:20752:15773":{"crate_id":1,"path":["core","core_simd","cast","SimdCastPtr"],"kind":"trait"},"16:154:4986":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"16:5779:6401":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"4:7030:7185":{"crate_id":4,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"17:13356:6104":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"6:1568:8370":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:40297:3502":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:41670:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:13324:6096":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:42380:110":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"4:35:3374":{"crate_id":4,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:42417:68":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:30264:28246":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"11:1048:36688":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"5:2855:5007":{"crate_id":5,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:12307:5812":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:46493:7570":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"5:10686:7034":{"crate_id":5,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"4:7294:3534":{"crate_id":4,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:39138:200":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"6:1512:8337":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:41910:85":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"17:12318:5813":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"4:4001:3398":{"crate_id":4,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"11:723:6868":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"6:4943:8774":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"6:4534:8613":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"5:8759:4449":{"crate_id":5,"path":["std","process","CommandArgs"],"kind":"struct"},"5:1568:3398":{"crate_id":5,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:12113:5766":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"5:4868:16168":{"crate_id":5,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"16:5000:6374":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"4:4031:5045":{"crate_id":4,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"18:515:5178":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"16:6164:6463":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"4:1254:6616":{"crate_id":4,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:9038:36707":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"16:5630:6386":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"1:10133:4143":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"16:7743:6327":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:1755:3569":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"4:6270:3398":{"crate_id":4,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:13651:6202":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"11:399:7759":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:3156:135":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"17:12046:5756":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"4:2167:9255":{"crate_id":4,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:9683:5406":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:11821:5722":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"6:4340:8511":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"5:7688:16061":{"crate_id":5,"path":["std","backtrace","RawFrame"],"kind":"enum"},"16:6793:6581":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:12516:5016":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"17:9917:5429":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"16:6728:6568":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"11:2168:8239":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:13744:6228":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:12550:5853":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"5:11899:35456":{"crate_id":5,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:11060:5528":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"5:11921:312":{"crate_id":5,"path":["std","array"],"kind":"primitive"},"6:7271:9201":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:40283:7434":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"16:8256:6781":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:12033:5755":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:10626:5524":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"1:47671:7620":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"11:760:3396":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"4:2959:8058":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"4:3201:6888":{"crate_id":4,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"17:13332:6097":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:6743:9126":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:42133:3159":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"5:11927:642":{"crate_id":5,"path":["std","f32"],"kind":"primitive"},"16:7572:36696":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:40629:3470":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:47037:7607":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:43911:7499":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:7321:159":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"4:4163:3306":{"crate_id":4,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"1:30322:28219":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"5:480:4997":{"crate_id":5,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:2469:10427":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:30228:2549":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:9529:5098":{"crate_id":1,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:6980:3471":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"6:5899:8928":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:2897:117":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"18:652:5181":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"11:285:7754":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"16:8156:6341":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:11615:5674":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:6588:9069":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"11:0:3235":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"6:4847:8716":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"5:8508:2793":{"crate_id":5,"path":["std","path","Iter"],"kind":"struct"},"1:43743:7492":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:13821:6250":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"11:736:6869":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"1:20604:30816":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"4:4193:3306":{"crate_id":4,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"16:5616:6382":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"5:7673:16060":{"crate_id":5,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:43472:7479":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"5:2558:5002":{"crate_id":5,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"1:0:496":{"crate_id":1,"path":["core"],"kind":"module"},"17:13488:6141":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"6:5919:8944":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:41248:9334":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:12224:5796":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"6:488:8262":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"18:736:26528":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:4010:7200":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:39303:7283":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"6:6833:9185":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"6:4555:8622":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:11459:5635":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:4400:6356":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"6:595:8325":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"6:4549:8620":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:47765:7626":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"5:1985:184":{"crate_id":5,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:6920:3346":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:9545:5350":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:40306:3503":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:11258:5599":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"5:2620:3332":{"crate_id":5,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"16:6767:6580":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"16:3640:5269":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"11:1103:6881":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:2353:189":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"5:953:6874":{"crate_id":5,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"4:673:231":{"crate_id":4,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:3151:234":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"5:5013:6994":{"crate_id":5,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"4:7305:3535":{"crate_id":4,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:7266:2496":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"5:10657:7144":{"crate_id":5,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"1:46681:7574":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:13145:6054":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:10555:5510":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"1:44238:205":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"17:11721:5684":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"18:690:5213":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:13344:6103":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"6:5736:8839":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:13121:6050":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"6:1662:8439":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:21988:10460":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"5:3962:16121":{"crate_id":5,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:10897:5549":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"5:7556:5031":{"crate_id":5,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"5:4459:16144":{"crate_id":5,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"16:7467:6695":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:12505:107":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"6:5848:8903":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"16:2668:6309":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:9721:5408":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:9876:5306":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"5:11101:9249":{"crate_id":5,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"6:4728:8663":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:1919:22721":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"5:844:2793":{"crate_id":5,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"5:8132:3319":{"crate_id":5,"path":["std","io","SeekFrom"],"kind":"enum"},"5:8867:16212":{"crate_id":5,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:11740:10701":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"16:7626:6705":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"17:11993:5747":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:21093:16109":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:43210:4137":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:1636:3417":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:20919:15777":{"crate_id":1,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:39154:198":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"4:3719:2139":{"crate_id":4,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:2931:2846":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"16:2967:21756":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"9:234:7462":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"5:6156:7004":{"crate_id":5,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"1:21872:7260":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:12072:5759":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:45508:7524":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:43596:7484":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"16:7042:6613":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"5:4010:16124":{"crate_id":5,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"14:31:6857":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"16:6876:6330":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"5:5044:6994":{"crate_id":5,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:4878:1005":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:42457:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"9:481:21616":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:21:683":{"crate_id":1,"path":["core","format_args"],"kind":"macro"},"1:41830:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:3385:7197":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"18:564:5190":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"17:12138:5768":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"16:5367:21728":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"6:4703:8652":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"6:482:8259":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"7:0:1548":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:9478:5383":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"4:1408:2793":{"crate_id":4,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:2826:3443":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"17:9596:5396":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:13101:6042":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"6:7557:9225":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"1:49633:15781":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:46335:7567":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:42654:7462":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"17:9228:36702":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"6:4290:8474":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"6:4615:8634":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:12510:5848":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:2773:3432":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:10743:5539":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:40092:28242":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:247:5237":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"6:5835:8894":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:44248:211":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:7201:134":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:10402:5496":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:12607:5861":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"4:3175:6887":{"crate_id":4,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"13:110:36689":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"17:12483:5846":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:12622:5528":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:41404:2469":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"17:8632:22659":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:9156:3158":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:8841:10362":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:10334:5368":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:2821:3441":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:11844:5727":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"18:599:36714":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"16:6431:6516":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:13469:6136":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"4:2957:33953":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:44041:9344":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"17:11544:5650":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"6:6564:9052":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:2762:3430":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"4:7168:3395":{"crate_id":4,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"5:8456:16192":{"crate_id":5,"path":["std","path","Component"],"kind":"enum"},"16:4568:6361":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:43175:3487":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:41590:84":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"5:4279:6986":{"crate_id":5,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"5:1931:655":{"crate_id":5,"path":["std","ffi"],"kind":"module"},"1:39178:199":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:40335:3492":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"4:7076:1825":{"crate_id":4,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:9028:5364":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:41630:91":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"6:1602:8391":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:12019:5459":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"18:671:5210":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"5:8514:7112":{"crate_id":5,"path":["std","path","Ancestors"],"kind":"struct"},"4:1135:7778":{"crate_id":4,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:9409:22693":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:10989:5258":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"5:5377:4442":{"crate_id":5,"path":["std","process","ChildStdout"],"kind":"struct"},"17:13461:6134":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"16:6919:36695":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"6:5828:8892":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:7294:9212":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:13316:6095":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"5:3233:3342":{"crate_id":5,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"6:7528:9218":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"8:0:3232":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:9148:112":{"crate_id":1,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"6:4948:8776":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"5:11920:1053":{"crate_id":5,"path":["std","pointer"],"kind":"primitive"},"6:5792:8879":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:47289:7609":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"5:2212:6978":{"crate_id":5,"path":["std","fs","DirEntry"],"kind":"struct"},"4:1115:8054":{"crate_id":4,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:12385:7246":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:43426:4128":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:40245:3497":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"6:4379:8537":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"6:554:8302":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"16:7449:6687":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"6:4809:8701":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:13233:6075":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"1:2783:3434":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"5:8120:1833":{"crate_id":5,"path":["std","io","IoSlice"],"kind":"struct"},"6:7522:9217":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"11:1858:6889":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"17:10885:5548":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:13689:6212":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"5:8941:107":{"crate_id":5,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"17:8195:22660":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:8823:5233":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:12902:5979":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:2842:3446":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:1746:9262":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:9475:1372":{"crate_id":1,"path":["core","slice"],"kind":"module"},"16:7803:6718":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"4:5684:232":{"crate_id":4,"path":["alloc","string","ToString"],"kind":"trait"},"5:8883:16211":{"crate_id":5,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"5:10386:5034":{"crate_id":5,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"4:1439:1825":{"crate_id":4,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"5:8813:2793":{"crate_id":5,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:10377:5494":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:11735:10702":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"5:8200:16114":{"crate_id":5,"path":["std","net","Shutdown"],"kind":"enum"},"5:355:6956":{"crate_id":5,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:8129:6769":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"4:1520:7168":{"crate_id":4,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:42435:128":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"5:5586:5010":{"crate_id":5,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:32109:7280":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"4:5874:8061":{"crate_id":4,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:9340:5371":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"16:7077:22620":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:45332:7517":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:45664:7531":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"16:7065:6615":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:9627:5104":{"crate_id":1,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:4605:10625":{"crate_id":1,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:9796:5414":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"17:10681:5530":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"6:6719:9115":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"5:3948:16119":{"crate_id":5,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"16:7669:6338":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:3168:3457":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:43822:7497":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"16:7411:6433":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"16:5693:6392":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"6:4303:8483":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"5:8899:16213":{"crate_id":5,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"17:11090:5562":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:2737:10590":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"6:6597:9075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:44341:3371":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"17:10052:5447":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:47827:7628":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:9275:36709":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:22369:174":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:43138:4133":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:21910:28236":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"11:332:4991":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"10:36:8243":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"5:11497:9250":{"crate_id":5,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"1:40080:7429":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"16:2524:6303":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"4:5233:5045":{"crate_id":4,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"16:8090:6765":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:2693:226":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:41162:155":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:41202:7223":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"6:4388:8542":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:13639:6199":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"5:5522:4446":{"crate_id":5,"path":["std","process","exit"],"kind":"function"},"17:13367:6108":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"5:8263:7084":{"crate_id":5,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:44329:3465":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:47660:7619":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:10823:5327":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"5:8765:186":{"crate_id":5,"path":["std","process","Output"],"kind":"struct"},"11:2194:8241":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"16:8047:6760":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"16:5071:6376":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"16:2862:6317":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"5:8829:1825":{"crate_id":5,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"5:867:1825":{"crate_id":5,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:9617:5398":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"5:6259:206":{"crate_id":5,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"1:40075:101":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:44057:9348":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:9816:222":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"16:6442:6517":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"5:9127:7132":{"crate_id":5,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"1:40255:3498":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"5:11930:744":{"crate_id":5,"path":["std","i16"],"kind":"primitive"},"1:43934:7507":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:10416:5500":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"6:6027:8995":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"6:1535:8347":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:5954:8965":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"6:5876:8915":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"16:2931:21755":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:21126:7249":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"16:6327:6505":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:9959:5434":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:10505:5507":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"0:6:1686":{"crate_id":0,"path":["bytes","buf"],"kind":"module"},"17:11193:5576":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"5:10491:5035":{"crate_id":5,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"1:21926:28245":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"11:1012:6878":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:5990:3513":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:4389:3583":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"5:3703:6982":{"crate_id":5,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"5:3638:16115":{"crate_id":5,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"1:21962:7272":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"5:10681:9247":{"crate_id":5,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"17:9933:5431":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"16:3225:6345":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"11:695:6867":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:10735:5537":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:40061:7428":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:30826:3945":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"4:7243:7190":{"crate_id":4,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"1:42672:7467":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"18:538:5188":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"4:5277:16030":{"crate_id":4,"path":["alloc","slice","Concat"],"kind":"trait"},"4:5062:5070":{"crate_id":4,"path":["alloc","rc","Weak"],"kind":"struct"},"16:5741:22613":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"5:936:16066":{"crate_id":5,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:7635:6706":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"5:8989:7126":{"crate_id":5,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"5:3904:16116":{"crate_id":5,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:3142:5256":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:40016:10631":{"crate_id":1,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"4:5948:3306":{"crate_id":4,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:22468:170":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"18:582:3945":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:10354:5493":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"4:1423:4124":{"crate_id":4,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:10774:4140":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:41565:183":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"6:4373:8535":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:4763:8679":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"6:4823:8706":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"11:1826:3398":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"4:4347:245":{"crate_id":4,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"5:7488:5243":{"crate_id":5,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"4:7227:28242":{"crate_id":4,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"5:1982:185":{"crate_id":5,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:46025:7547":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"5:1846:6974":{"crate_id":5,"path":["std","env","ArgsOs"],"kind":"struct"},"5:11923:1402":{"crate_id":5,"path":["std","str"],"kind":"primitive"},"0:0:1689":{"crate_id":0,"path":["bytes"],"kind":"module"},"1:45402:7520":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"4:1461:6868":{"crate_id":4,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"5:1565:1825":{"crate_id":5,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:10316:5491":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"5:888:6869":{"crate_id":5,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:44045:9345":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"4:1470:6869":{"crate_id":4,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"6:4786:8693":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"16:6293:6502":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"11:2049:6876":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:40652:3474":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"4:3209:6886":{"crate_id":4,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"6:1505:8334":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:43921:7503":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"6:4455:8573":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"4:6717:244":{"crate_id":4,"path":["alloc","vec","Vec"],"kind":"struct"},"5:2544:3330":{"crate_id":5,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"5:7499:7159":{"crate_id":5,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:47788:7627":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"5:2580:3322":{"crate_id":5,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"11:630:2793":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"4:6389:1825":{"crate_id":4,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:2695:109":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:40432:3510":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:4435:8565":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:11422:5629":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"4:5858:5070":{"crate_id":4,"path":["alloc","sync","Weak"],"kind":"struct"},"17:9866:5419":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"5:8289:7094":{"crate_id":5,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"5:3472:10360":{"crate_id":5,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"17:10967:5553":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:21797:9264":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:39929:7414":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"5:3315:3326":{"crate_id":5,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"1:6588:3486":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"4:7269:5071":{"crate_id":4,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"1:42408:71":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"16:6671:6555":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:8667:5356":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"6:587:8320":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:42857:7468":{"crate_id":1,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"6:4445:8570":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"4:1669:5045":{"crate_id":4,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:45646:7530":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:9653:5402":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"16:7335:36698":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"6:4715:8659":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:43372:7477":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"16:6321:6504":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"17:12194:5777":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"5:11083:7012":{"crate_id":5,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"17:10039:5445":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"6:6804:9169":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"4:6600:3402":{"crate_id":4,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"17:12388:5822":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:11538:4142":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"5:10977:5038":{"crate_id":5,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:10761:22682":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"3:0:3228":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"16:7016:6607":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:9696:5388":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"6:1695:8455":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:9895:5424":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:9350:36703":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:41268:28230":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:21098:15764":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"17:11220:5584":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:21675:7250":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:10545:5258":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"4:7113:1825":{"crate_id":4,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"4:1099:7777":{"crate_id":4,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:1666:1091":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"6:526:8287":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"5:10751:35677":{"crate_id":5,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:20778:29093":{"crate_id":1,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"4:7084:198":{"crate_id":4,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"4:626:7166":{"crate_id":4,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"16:7317:36697":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:12496:5847":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:2241:97":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"5:8835:6996":{"crate_id":5,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"6:1716:8463":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:22336:177":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:8252:3690":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"5:6392:3472":{"crate_id":5,"path":["std","sync","once","Once"],"kind":"struct"},"1:12553:140":{"crate_id":1,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:32022:7279":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"18:80:7737":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:47575:7614":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"18:614:36713":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:11720:3536":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"16:2502:6302":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:6400:6514":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"5:8821:7115":{"crate_id":5,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"5:7867:119":{"crate_id":5,"path":["std","fs","DirBuilder"],"kind":"struct"},"5:6319:166":{"crate_id":5,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:420:5241":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"5:11936:1502":{"crate_id":5,"path":["std","u32"],"kind":"primitive"},"17:13763:6233":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:46001:7546":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:9150:120":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:43340:4130":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"6:4954:8777":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"5:917:6883":{"crate_id":5,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"16:8180:22625":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"4:3799:3396":{"crate_id":4,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"1:40326:3504":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"11:805:16066":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:31982:4453":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"16:8170:6774":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"16:2786:6314":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:30003:10428":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"5:8244:9239":{"crate_id":5,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:12461:5835":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:13857:6254":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:6867:9194":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"5:9415:5033":{"crate_id":5,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"5:10855:1687":{"crate_id":5,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"16:4480:6358":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:43280:7474":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:12923:5987":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"16:4596:6362":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:2602:128":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"6:1637:8420":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"5:11272:7774":{"crate_id":5,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"16:5557:6321":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"16:7519:6700":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"5:9110:7131":{"crate_id":5,"path":["std","time","SystemTimeError"],"kind":"struct"},"18:113:7741":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:40108:7430":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"16:5305:6378":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"6:6014:8991":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:4263:7204":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"5:10167:4455":{"crate_id":5,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"16:2694:6310":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:9443:5380":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"5:1583:6887":{"crate_id":5,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"4:5527:3402":{"crate_id":4,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"5:8348:16179":{"crate_id":5,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"5:11932:746":{"crate_id":5,"path":["std","i64"],"kind":"primitive"},"5:7883:3331":{"crate_id":5,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:2311:188":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:3647:1825":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:10247:4128":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:3181:29710":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:43308:1692":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"11:97:8046":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"16:2642:6308":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"5:9213:4506":{"crate_id":5,"path":["std","sys","unix","args","Args"],"kind":"struct"},"6:6819:9176":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:6774:9152":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"5:4006:16123":{"crate_id":5,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:13612:6187":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:42392:6737":{"crate_id":1,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:8820:670":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"5:10699:7149":{"crate_id":5,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"17:9068:36705":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"16:6132:6458":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:32018:7032":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"17:13791:6242":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:13169:6056":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:40205:3488":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"5:11933:742":{"crate_id":5,"path":["std","i128"],"kind":"primitive"},"4:6156:1570":{"crate_id":4,"path":["alloc","vec"],"kind":"module"},"16:7529:6336":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"16:5998:22614":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:2316:125":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"6:4367:8534":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:2855:3449":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"6:6021:8992":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"4:2240:9258":{"crate_id":4,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:13453:6133":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"5:875:6868":{"crate_id":5,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"16:6990:6606":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:40042:10632":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:9152:3573":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"5:1433:144":{"crate_id":5,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"6:7545:9223":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:21571:15766":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:8979:36710":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"6:1556:8362":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:45979:7545":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:9469:5381":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:2850:3448":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"5:8984:7125":{"crate_id":5,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"17:9748:5368":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:21864:7259":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:8846:9950":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:43621:7421":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:22270:175":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"5:11941:1131":{"crate_id":5,"path":["std","reference"],"kind":"primitive"},"6:7462:9213":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"4:3668:5045":{"crate_id":4,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:1034:5245":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"16:7596:22622":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:9154:3574":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"10:0:3234":{"crate_id":10,"path":["adler"],"kind":"module"},"17:10721:5534":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"5:4599:9098":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"5:5408:4444":{"crate_id":5,"path":["std","process","Command"],"kind":"struct"},"6:4694:8647":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"5:2348:3543":{"crate_id":5,"path":["std","fs","metadata"],"kind":"function"},"11:1068:6880":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:39971:7418":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:10615:5523":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:42625:7460":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"5:2350:16096":{"crate_id":5,"path":["std","fs","symlink_metadata"],"kind":"function"},"11:2201:3395":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:8971:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"1:12360:192":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"5:1589:6888":{"crate_id":5,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:9158:3159":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:44256:195":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"17:11434:5630":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"16:7767:22623":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"5:8104:3346":{"crate_id":5,"path":["std","io","util","Empty"],"kind":"struct"},"5:6893:35602":{"crate_id":5,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"5:8255:7090":{"crate_id":5,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"1:9964:2793":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"5:9091:7012":{"crate_id":5,"path":["std","time","SystemTime"],"kind":"struct"},"5:3463:2623":{"crate_id":5,"path":["std","io","Write"],"kind":"trait"},"6:653:16661":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"16:2808:6315":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"5:5202:190":{"crate_id":5,"path":["std","path","Path"],"kind":"struct"},"17:10452:5503":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"11:749:3398":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:20994:15765":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:21342:15768":{"crate_id":1,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:40667:3476":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"5:10960:5036":{"crate_id":5,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:20780:3551":{"crate_id":1,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"1:41185:7221":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:2925:3450":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"17:11069:22686":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"6:1630:8416":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:40265:3499":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"16:5963:6429":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"5:10448:3341":{"crate_id":5,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"16:8072:6763":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"4:5754:3398":{"crate_id":4,"path":["alloc","string","Drain"],"kind":"struct"},"16:7488:6698":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:13015:6022":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"1:39037:3458":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"4:7196:102":{"crate_id":4,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"17:10635:5525":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"14:165:21701":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"11:1027:21695":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"11:311:7757":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"11:657:1825":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"4:775:96":{"crate_id":4,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:13443:6130":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:1732:3570":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"5:5787:5012":{"crate_id":5,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"6:4793:8695":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:20606:30819":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"6:1519:8339":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"6:1732:8468":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"6:5057:8829":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"6:5966:8970":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:9365:141":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"17:9734:5409":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"5:5270:120":{"crate_id":5,"path":["std","path","Display"],"kind":"struct"},"17:11037:22685":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"9:52:9929":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"17:11391:5625":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:41480:3732":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:44049:9346":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:30798:183":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"4:2956:3532":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:12178:5772":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:10142:22763":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"5:5579:206":{"crate_id":5,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:70:792":{"crate_id":1,"path":["core","isize"],"kind":"module"},"1:2347:182":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"16:2337:6290":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:6677:3496":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:21014:7249":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"5:8805:4452":{"crate_id":5,"path":["std","process","ExitCode"],"kind":"struct"},"4:1371:94":{"crate_id":4,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:8953:5357":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"4:1489:6866":{"crate_id":4,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"5:7624:7023":{"crate_id":5,"path":["std","thread","ThreadId"],"kind":"struct"},"6:1708:8459":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:9988:4124":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:5383:3306":{"crate_id":1,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"4:273:1835":{"crate_id":4,"path":["alloc","boxed","Box"],"kind":"struct"},"5:10451:3337":{"crate_id":5,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"1:43526:7481":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"17:13265:6082":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:9670:5405":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"11:968:6616":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:13698:6214":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"5:4531:16161":{"crate_id":5,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"5:5343:4440":{"crate_id":5,"path":["std","process","Child"],"kind":"struct"},"16:4327:6355":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:12770:5873":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"6:1648:8428":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"16:6890:6331":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"11:1831:3396":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"18:644:5181":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"5:922:6866":{"crate_id":5,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:8254:3688":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"4:2138:7171":{"crate_id":4,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:11891:5733":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"16:6943:22619":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"5:10711:7035":{"crate_id":5,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"5:7875:7038":{"crate_id":5,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"16:3749:6349":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"5:8249:16142":{"crate_id":5,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"16:2764:6313":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"9:325:8244":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"5:2376:16106":{"crate_id":5,"path":["std","fs","read_dir"],"kind":"function"},"17:13803:6244":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"1:4113:7201":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"4:6137:16042":{"crate_id":4,"path":["alloc","task","Wake"],"kind":"trait"},"9:445:21617":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:43292:3539":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"6:4937:8771":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"6:4517:8605":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:2748:3568":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"6:4871:8730":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:39242:203":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"18:590:5191":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:44077:9248":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:6724:7779":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:13411:6122":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:0:442":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"16:7103:7129":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:39296:3454":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"6:6129:9019":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"16:2720:6311":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:13879:6260":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"4:1285:6876":{"crate_id":4,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:42352:9335":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"11:2180:7753":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:10080:5450":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"4:4392:3306":{"crate_id":4,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"16:6535:4988":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"1:39914:7198":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:506:8270":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"4:6761:5082":{"crate_id":4,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:4380:5090":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"11:1822:1825":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:45312:7516":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"16:6460:6323":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"4:7377:3397":{"crate_id":4,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:30234:3420":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"16:7543:6337":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"6:5774:8866":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:4894:8740":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"9:174:9939":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"11:1501:21696":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"9:502:6942":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"5:10894:4452":{"crate_id":5,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:9314:731":{"crate_id":1,"path":["core","hash"],"kind":"module"},"4:892:2793":{"crate_id":4,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"16:4904:6371":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"18:96:7738":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"4:7062:31635":{"crate_id":4,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"5:8854:7116":{"crate_id":5,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"14:221:6864":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:2838:3445":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:43390:7478":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:43322:3321":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"17:8598:22681":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:41438:3686":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"17:13249:6078":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"5:11940:1558":{"crate_id":5,"path":["std","usize"],"kind":"primitive"},"1:9109:210":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"5:4662:16170":{"crate_id":5,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"5:1048:6616":{"crate_id":5,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:2962:3366":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"18:481:5179":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"4:7180:3464":{"crate_id":4,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"17:13181:6059":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"1:10013:3321":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"6:4649:8637":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:47697:7622":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"16:6696:22618":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"6:4427:8562":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:40001:7198":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:10206:4131":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"5:1062:6876":{"crate_id":5,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"16:6179:6465":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"6:5798:8882":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:9826:5416":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"5:7699:7028":{"crate_id":5,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"5:11239:7017":{"crate_id":5,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:40407:3494":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"4:5281:16031":{"crate_id":4,"path":["alloc","slice","Join"],"kind":"trait"},"17:9218:5368":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"6:7563:9226":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:9839:5417":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:43706:10715":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:11282:10703":{"crate_id":1,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:1820:2868":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:12799:5893":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:20992:16109":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"5:11937:1503":{"crate_id":5,"path":["std","u64"],"kind":"primitive"},"5:6575:5024":{"crate_id":5,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:45787:7539":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"5:3152:7880":{"crate_id":5,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"16:2426:6299":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:41990:3594":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"6:573:8312":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:2799:3437":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"11:1611:4995":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:9322:36708":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:41304:6984":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"16:6506:6526":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"1:44117:7508":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"4:3567:163":{"crate_id":4,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"6:1672:8445":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"5:8947:7121":{"crate_id":5,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:12098:5763":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:13066:6038":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"5:8293:9085":{"crate_id":5,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"5:731:142":{"crate_id":5,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"16:4702:6364":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:22567:169":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"17:13082:6041":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"4:6629:3404":{"crate_id":4,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"1:20574:30582":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"6:1701:8456":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"6:7551:9224":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:20739:15772":{"crate_id":1,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"17:13499:6142":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"16:6662:6554":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"16:7683:6339":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:9498:5388":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"6:6007:8990":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:11600:5668":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:3317:69":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"17:13194:6064":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"17:11484:5637":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"6:4907:8750":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"17:242:5236":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"16:5847:6413":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:9577:5395":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"16:6474:6340":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"6:7504:9214":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:39941:28251":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"4:3580:2793":{"crate_id":4,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:45456:7522":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"13:226:8238":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"5:7645:5035":{"crate_id":5,"path":["std","thread","Thread"],"kind":"struct"},"9:421:21619":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:2804:3442":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"17:11520:5646":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"16:4872:6370":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"5:11422:6983":{"crate_id":5,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:2846:3447":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:9523:5390":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"5:7815:7033":{"crate_id":5,"path":["std","fs","ReadDir"],"kind":"struct"},"1:7164:3485":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:8359:3536":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:13659:6205":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"6:547:8299":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:4436:3584":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"6:4928:8765":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"17:11471:5636":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"7:79:21611":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:13516:6149":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"1:43188:4138":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"6:1499:8331":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:11136:5566":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"6:4488:8589":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:30250:68":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"6:5804:8883":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:8420:22675":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:11163:5572":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"1:4325:5089":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:12345:5816":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"16:4624:6363":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"16:5920:6272":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:47491:7612":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:12298:136":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:43639:7420":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"5:8936:7118":{"crate_id":5,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"4:106:527":{"crate_id":4,"path":["alloc","alloc","dealloc"],"kind":"function"},"1:2921:1697":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:41353:181":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:2980:2550":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"17:9178:5367":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:43774:7496":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"5:11883:9948":{"crate_id":5,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"1:7591:3361":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"17:9986:5436":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:43757:7495":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:13426:6126":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:40658:3347":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"16:6819:6582":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:12449:5833":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"5:10029:7776":{"crate_id":5,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:10275:4129":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"5:6508:16207":{"crate_id":5,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"5:2890:210":{"crate_id":5,"path":["std","io","error","Result"],"kind":"typedef"},"1:9373:145":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:46076:7548":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"5:3700:6981":{"crate_id":5,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"11:2186:36687":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"4:3180:31638":{"crate_id":4,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:4022:103":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"16:6854:6586":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:9408:4250":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"5:7600:6958":{"crate_id":5,"path":["std","thread","local","AccessError"],"kind":"struct"},"5:11924:1486":{"crate_id":5,"path":["std","tuple"],"kind":"primitive"},"5:1594:6889":{"crate_id":5,"path":["std","collections","hash","set","Union"],"kind":"struct"},"11:1818:2793":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:20948:15763":{"crate_id":1,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"16:3063:5265":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"4:1299:6882":{"crate_id":4,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"5:947:6873":{"crate_id":5,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"5:501:4998":{"crate_id":5,"path":["std","thread","PanicGuard"],"kind":"struct"},"5:10676:9245":{"crate_id":5,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"1:2289:429":{"crate_id":1,"path":["core","cmp"],"kind":"module"},"5:7694:6968":{"crate_id":5,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"1:41497:210":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"6:1689:8452":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"16:6520:6528":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"6:4314:8491":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"5:1071:6878":{"crate_id":5,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"16:5571:6324":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"5:11032:4450":{"crate_id":5,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"6:1910:17651":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:20546:3945":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:386:5239":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"5:8498:6989":{"crate_id":5,"path":["std","path","Components"],"kind":"struct"},"1:44354:7515":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:13433:6127":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:0:3240":{"crate_id":17,"path":["object"],"kind":"module"},"17:10491:5506":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:40122:10642":{"crate_id":1,"path":["core","ffi","c_char"],"kind":"typedef"},"17:11410:5626":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:11946:5742":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"5:8183:3320":{"crate_id":5,"path":["std","io","Lines"],"kind":"struct"},"5:5593:5011":{"crate_id":5,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"5:5357:4441":{"crate_id":5,"path":["std","process","ChildStdin"],"kind":"struct"},"17:8360:22673":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:22303:176":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:20932:16109":{"crate_id":1,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:7635:10361":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:45526:7525":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"5:3956:16120":{"crate_id":5,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:41327:7224":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"6:1589:8384":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"5:1577:6886":{"crate_id":5,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"17:12403:5826":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"6:4462:8576":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"11:2060:6878":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"5:8170:1692":{"crate_id":5,"path":["std","io","Bytes"],"kind":"struct"},"5:530:4999":{"crate_id":5,"path":["std","thread","Packet"],"kind":"struct"},"1:43444:4125":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:13053:6033":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"4:7022:1825":{"crate_id":4,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:7594:3482":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"5:7722:7031":{"crate_id":5,"path":["std","env","JoinPathsError"],"kind":"struct"},"17:12522:5849":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"18:0:3241":{"crate_id":18,"path":["memchr"],"kind":"module"},"4:3734:7170":{"crate_id":4,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:2752:3428":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"17:9534:5392":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"5:7966:7040":{"crate_id":5,"path":["std","io","error","Custom"],"kind":"struct"},"16:5032:6375":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:46411:7569":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"11:2033:6616":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"5:8163:1827":{"crate_id":5,"path":["std","io","Take"],"kind":"struct"},"1:45933:7543":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"6:4853:8719":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"5:11337:5041":{"crate_id":5,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:45356:7518":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"6:6795:9166":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"5:10851:7031":{"crate_id":5,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"1:22600:7277":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"16:2404:6298":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:2588:116":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"17:11902:5734":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"4:3139:95":{"crate_id":4,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:5531:3501":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:11487:7236":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:39993:7420":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"6:5986:8978":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"16:8214:6666":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"5:10079:7135":{"crate_id":5,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"1:3196:3364":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"16:3030:6342":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:4605:8633":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:7243:121":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"5:8977:7124":{"crate_id":5,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"5:6108:5016":{"crate_id":5,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"6:4972:8788":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"16:6201:6480":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"16:8269:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"5:10731:119":{"crate_id":5,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"16:2357:6296":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"5:8439:7106":{"crate_id":5,"path":["std","path","PrefixComponent"],"kind":"struct"},"5:8954:34574":{"crate_id":5,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"11:667:6866":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"5:3348:3347":{"crate_id":5,"path":["std","io","util","Repeat"],"kind":"struct"},"6:0:820":{"crate_id":6,"path":["libc"],"kind":"module"},"6:1494:8329":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"5:4783:16131":{"crate_id":5,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"16:4789:6367":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"5:1080:6882":{"crate_id":5,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"6:500:8267":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"6:6170:9045":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:10936:5552":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:12915:5986":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"16:8025:6759":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:562:5243":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"6:119:16303":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"17:10857:22684":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:45609:7528":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:1915:3368":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"5:10864:4445":{"crate_id":5,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:43149:4139":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"16:4728:6365":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"5:1844:4506":{"crate_id":5,"path":["std","env","Args"],"kind":"struct"},"5:4018:16126":{"crate_id":5,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:11675:3541":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"16:7244:36700":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"17:12293:5810":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"4:779:5047":{"crate_id":4,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:76:1558":{"crate_id":1,"path":["core","usize"],"kind":"module"},"17:10589:5520":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"4:7052:5054":{"crate_id":4,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:42642:145":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:8548:22679":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"1:22237:178":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"16:2572:6305":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"5:7726:7032":{"crate_id":5,"path":["std","error","private","Internal"],"kind":"struct"},"11:844:6875":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:12563:5854":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"5:6644:7005":{"crate_id":5,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"5:6124:5019":{"crate_id":5,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"6:5073:8832":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"6:4474:8581":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"16:5944:6422":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:9298:7229":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"5:554:6959":{"crate_id":5,"path":["std","thread","JoinHandle"],"kind":"struct"},"4:2967:8060":{"crate_id":4,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:2795:3435":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"5:11918:1520":{"crate_id":5,"path":["std","unit"],"kind":"primitive"},"1:45903:7542":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"5:8189:7084":{"crate_id":5,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:4045:3360":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:11641:5679":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:2811:3439":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"16:7837:6722":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"16:5104:6377":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"6:4886:8735":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"17:12158:5771":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:43576:3320":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:42119:3573":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:11556:5651":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:10283:5489":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"5:8237:6984":{"crate_id":5,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:8678:86":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"5:635:6961":{"crate_id":5,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:20559:30582":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"17:12331:5815":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"6:4832:8709":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"4:1773:3396":{"crate_id":4,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"1:40274:3500":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:9557:5368":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"5:3934:16118":{"crate_id":5,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:10923:5550":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:5724:6397":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"6:4769:8682":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:9160:194":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"5:10445:3339":{"crate_id":5,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"5:9072:7011":{"crate_id":5,"path":["std","time","Instant"],"kind":"struct"},"16:6904:6590":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:43630:7198":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:45711:7532":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:2160:3551":{"crate_id":1,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"1:2690:2116":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"5:7285:36547":{"crate_id":5,"path":["std","panicking","Hook"],"kind":"enum"},"1:39331:3582":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"1:4335:3582":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"16:5976:6279":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"16:5886:6416":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:13159:6055":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"5:3158:8032":{"crate_id":5,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"1:40227:3489":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"5:3481:3316":{"crate_id":5,"path":["std","io","Seek"],"kind":"trait"},"5:3378:3306":{"crate_id":5,"path":["std","io","Guard"],"kind":"struct"},"17:10465:5504":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"6:4841:8715":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"5:2366:16101":{"crate_id":5,"path":["std","fs","canonicalize"],"kind":"function"},"5:10741:1833":{"crate_id":5,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"16:2546:6304":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"5:11934:1504":{"crate_id":5,"path":["std","u8"],"kind":"primitive"},"17:13135:6053":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:8443:22676":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"5:8777:4450":{"crate_id":5,"path":["std","process","ExitStatus"],"kind":"struct"},"5:4601:9100":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:3162:3455":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"4:4941:3306":{"crate_id":4,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"16:6390:6513":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"6:6687:9105":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:9424:5378":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"18:507:5181":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"5:3270:3337":{"crate_id":5,"path":["std","io","stdio","Stderr"],"kind":"struct"},"16:6218:6486":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:45627:7529":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"16:2830:6316":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:9380:22692":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"6:4637:8636":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"5:11942:13":{"crate_id":5,"path":["std","fn"],"kind":"primitive"},"1:42617:4253":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:11729:5216":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"5:7043:7771":{"crate_id":5,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"16:3047:21757":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:40643:3472":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:47735:7624":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"6:541:8296":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"6:4468:8578":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:20587:30814":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"5:7537:5029":{"crate_id":5,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"7:32:21604":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:13399:6119":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:43201:4134":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:44073:9352":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"6:4684:8640":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:46154:7550":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:10104:5452":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:39981:7419":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"16:6376:6322":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:9612:5002":{"crate_id":1,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:45424:7521":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"5:11490:34783":{"crate_id":5,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"16:6935:6593":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"5:3191:3339":{"crate_id":5,"path":["std","io","stdio","Stdin"],"kind":"struct"},"16:2448:6300":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"5:2892:128":{"crate_id":5,"path":["std","io","error","Error"],"kind":"struct"},"17:9772:5413":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:12333:31109":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:42112:3574":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"11:403:7760":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:39264:2718":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:46123:7549":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"6:4663:8638":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"16:7366:22621":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"6:6135:9020":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:2521:237":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"17:9853:5418":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:2910:2867":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:41540:2793":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"16:4037:6354":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:21837:7258":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"16:2594:6306":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"5:638:6963":{"crate_id":5,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:10527:22788":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"5:930:6870":{"crate_id":5,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:8673:79":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:20889:3551":{"crate_id":1,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"1:9162:3575":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"16:7697:6329":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"6:6670:9104":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:43954:3537":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"15:0:3238":{"crate_id":15,"path":["addr2line"],"kind":"module"},"5:10876:34812":{"crate_id":5,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"6:579:8315":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:10303:5490":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"5:5709:6998":{"crate_id":5,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"16:5655:6325":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:43490:7480":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"16:3872:6352":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"16:4932:6372":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"5:6609:217":{"crate_id":5,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"5:4587:16121":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:11785:5713":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"5:5393:4443":{"crate_id":5,"path":["std","process","ChildStderr"],"kind":"struct"},"5:926:6867":{"crate_id":5,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"11:1838:6886":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:9566:5369":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"5:11922:1372":{"crate_id":5,"path":["std","slice"],"kind":"primitive"},"14:202:3533":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:8651:5355":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"5:11064:9248":{"crate_id":5,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"1:20851:15776":{"crate_id":1,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"17:9488:5386":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:2767:3429":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"16:3899:6353":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"5:1572:3396":{"crate_id":5,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"6:4962:8782":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:47651:7618":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:41489:193":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"5:8271:7092":{"crate_id":5,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"5:8111:3348":{"crate_id":5,"path":["std","io","util","Sink"],"kind":"struct"},"4:5838:70":{"crate_id":4,"path":["alloc","sync","Arc"],"kind":"struct"},"14:40:5600":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"5:8076:3350":{"crate_id":5,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"17:10015:5441":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:2162:3552":{"crate_id":1,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"1:40236:3490":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"4:1270:6878":{"crate_id":4,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:3998:7199":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"14:160:6857":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:9453:22694":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"16:3815:6351":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:11503:7237":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"6:7510:9215":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:2791:3436":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"5:5525:4448":{"crate_id":5,"path":["std","process","Termination"],"kind":"trait"},"17:13211:6069":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:41950:92":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"16:535:6277":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:1978:5253":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"5:3083:3349":{"crate_id":5,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"17:13506:6144":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:12433:5829":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"4:0:286":{"crate_id":4,"path":["alloc"],"kind":"module"},"6:7277:9203":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"1:45557:7526":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:47712:7623":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:45378:7519":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:4:1018":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"17:9312:5370":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:3266:5257":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:229:210":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:7608:9237":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:6336:6506":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:21889:28255":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"4:7042:3398":{"crate_id":4,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"18:636:5203":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:11446:5633":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:1629:587":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:9806:16109":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:43728:7487":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:4186:3581":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"18:681:5211":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:11879:5731":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"16:6146:194":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"4:258:5045":{"crate_id":4,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"6:6840:9188":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:10747:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"16:7859:22624":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"6:6043:9000":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:11832:5725":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"6:4542:8618":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:5079:8835":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:45757:7538":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"16:6575:22617":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:10440:5502":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"5:4877:16169":{"crate_id":5,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:10649:5526":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"4:682:111":{"crate_id":4,"path":["alloc","borrow","Cow"],"kind":"enum"},"5:7827:7035":{"crate_id":5,"path":["std","fs","FileTimes"],"kind":"struct"},"1:2984:2551":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"5:8195:7086":{"crate_id":5,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"5:5716:7001":{"crate_id":5,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"5:4148:7770":{"crate_id":5,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"16:6488:6518":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"5:11174:5039":{"crate_id":5,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"17:12576:5855":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:8521:22678":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"6:5889:8921":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:11585:5662":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"11:836:6874":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:2508:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"6:5881:8916":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"16:6307:6320":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:46177:7551":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"16:6061:21729":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"16:6361:6510":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"5:11916:940":{"crate_id":5,"path":["std","never"],"kind":"primitive"},"9:388:21618":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:3934:3306":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:2244:98":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:1526:8342":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"5:5742:7002":{"crate_id":5,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"16:5594:6326":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"16:2742:6312":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:7214:3109":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"17:12894:5976":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"4:204:3376":{"crate_id":4,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:43298:7475":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"16:2470:6301":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:11282:5600":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"6:4567:8631":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:8256:22658":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:9108:36706":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"13:0:3231":{"crate_id":13,"path":["std_detect"],"kind":"module"},"5:911:3396":{"crate_id":5,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"1:11464:7235":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"5:4704:16134":{"crate_id":5,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:11941:112":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"17:11011:5555":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"1:30194:2809":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"5:361:6957":{"crate_id":5,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"6:4991:8796":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"16:4757:6366":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"16:7711:6708":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"16:7259:3686":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"5:1895:6975":{"crate_id":5,"path":["std","error","Report"],"kind":"struct"},"5:5933:5010":{"crate_id":5,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"5:6355:7005":{"crate_id":5,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"1:2694:225":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"4:4073:4124":{"crate_id":4,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:13721:6227":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:41710:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"6:4523:8608":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:47367:7610":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:25857:7194":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:41548:4124":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"6:474:7765":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"16:0:3239":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:2787:3438":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"5:11056:35675":{"crate_id":5,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"15:219:9926":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:21955:9267":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:44096:122":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"6:62:16249":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"17:13667:6206":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:13033:6027":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"4:6316:5045":{"crate_id":4,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:11786:10709":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"5:8997:7129":{"crate_id":5,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:9822:5415":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:46647:7573":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:41750:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:11628:5678":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"5:959:6875":{"crate_id":5,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"5:2481:3329":{"crate_id":5,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:40397:3509":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:41471:3687":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:2745:106":{"crate_id":1,"path":["core","marker","ConstParamTy"],"kind":"trait"},"6:5993:8979":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:12634:5864":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"5:10343:4449":{"crate_id":5,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"16:6868:6588":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"11:986:6876":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"5:413:165":{"crate_id":5,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:44065:9350":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:9110:2623":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1:14:2581":{"crate_id":1,"path":["core","write"],"kind":"macro"},"16:5797:6405":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"16:7509:6335":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"5:1924:10359":{"crate_id":5,"path":["std","error","Indented"],"kind":"struct"},"1:4764:388":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:10056:4142":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:10168:4130":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"5:7961:7039":{"crate_id":5,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"1:3233:3365":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"6:6155:9034":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"5:8791:4451":{"crate_id":5,"path":["std","process","ExitStatusError"],"kind":"struct"},"16:5708:6395":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:41219:10670":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:44129:10722":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"9:352:21632":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"5:2219:3314":{"crate_id":5,"path":["std","fs","read_to_string"],"kind":"function"},"1:40418:1827":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"16:2298:21730":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"5:2364:16100":{"crate_id":5,"path":["std","fs","read_link"],"kind":"function"},"16:6717:6567":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"6:6624:9085":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:40315:3512":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"5:7599:16109":{"crate_id":5,"path":["std","sealed","Sealed"],"kind":"trait"},"10:44:6891":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"1:8253:3689":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"18:707:5216":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"6:4983:8794":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:20879:15770":{"crate_id":1,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"16:8109:6768":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"16:6236:6496":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"16:7498:6699":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:45955:7544":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"16:7757:6710":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:2514:133":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"5:3231:3341":{"crate_id":5,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:13678:6211":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"5:3996:16122":{"crate_id":5,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:4144:7202":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:10712:22790":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:43886:7498":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"5:4135:16141":{"crate_id":5,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:41291:7451":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:8858:5234":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"18:755:5228":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"5:9057:167":{"crate_id":5,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:11268:4117":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"18:727:5223":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:7598:3483":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"4:2220:34083":{"crate_id":4,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"5:11935:1501":{"crate_id":5,"path":["std","u16"],"kind":"primitive"},"5:7706:16083":{"crate_id":5,"path":["std","env","VarError"],"kind":"enum"},"16:6981:6603":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"4:7280:224":{"crate_id":4,"path":["alloc","string","String"],"kind":"struct"},"5:8315:6988":{"crate_id":5,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:10270:5487":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:4258:7203":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"6:4419:8560":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:39511:26805":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"5:901:3398":{"crate_id":5,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:9973:5435":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:11339:5614":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"4:3327:3396":{"crate_id":4,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:12358:5817":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:12311:151":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:5589:3491":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"6:1680:8446":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:6617:9081":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"5:9062:218":{"crate_id":5,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"14:0:3237":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"16:2905:6319":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:40636:7215":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:47686:7621":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"5:3805:6983":{"crate_id":5,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:21124:15771":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:9098:5365":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"11:793:6883":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"17:13842:6253":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:2683:220":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"5:8922:7117":{"crate_id":5,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:10598:5553":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:40677:3478":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"5:11120:7011":{"crate_id":5,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"18:699:5214":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"5:11401:6982":{"crate_id":5,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"6:6849:9191":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"16:4969:6373":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"1:46571:7571":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"5:3488:2525":{"crate_id":5,"path":["std","io","BufRead"],"kind":"trait"},"17:8788:5232":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:9148:36704":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"11:1121:6882":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"6:568:8310":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"6:5043:8823":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"16:4510:6359":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:40348:3505":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:23047:7193":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"6:7249:9200":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:2517:238":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"16:2378:6297":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"5:9011:34791":{"crate_id":5,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"5:3193:3340":{"crate_id":5,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:487:5242":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"4:2046:7170":{"crate_id":4,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"1:40446:3511":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:10670:5529":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:6066:9006":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:8683:5229":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:11861:5730":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"4:2128:4998":{"crate_id":4,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"5:5462:4445":{"crate_id":5,"path":["std","process","Stdio"],"kind":"struct"},"18:624:36712":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:10691:22789":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"4:3235:6889":{"crate_id":4,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"5:11529:7020":{"crate_id":5,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"17:11653:5682":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:9907:5428":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"5:4199:6985":{"crate_id":5,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:2700:228":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"5:6935:5027":{"crate_id":5,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"17:12980:6021":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"5:6505:7007":{"crate_id":5,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"16:5386:5355":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:9413:4251":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:20589:30818":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"16:4540:6360":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"4:875:5052":{"crate_id":4,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"17:12282:5808":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"16:6243:36699":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:9512:5389":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"14:187:10358":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"6:123:16304":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"11:1517:6884":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:12372:5820":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"5:7810:5307":{"crate_id":5,"path":["std","fs","Metadata"],"kind":"struct"},"17:8573:22680":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"4:7092:7186":{"crate_id":4,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"4:2687:9259":{"crate_id":4,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"5:11866:7162":{"crate_id":5,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"4:4362:5065":{"crate_id":4,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"17:12085:5761":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:11319:5613":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"5:4351:6987":{"crate_id":5,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"4:7256:7192":{"crate_id":4,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"5:10721:130":{"crate_id":5,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"5:7971:3333":{"crate_id":5,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:2705:3393":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"17:13240:6077":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"5:4127:7769":{"crate_id":5,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:41429:1825":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:40214:1824":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:40367:3507":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}