{"root":"0:0:1695","crate_version":"1.4.0","includes_private":false,"index":{"0:485":{"id":"0:485","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[763,0],"end":[767,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"items":["0:486:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1129:774":{"id":"0:1129:774","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeInclusive","id":"1:39337:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1059:2272":{"id":"0:1059:2272","crate_id":0,"name":"put_u16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:407":{"id":"0:407","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[519,0],"end":[519,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2543-0:1103:1831":{"id":"b:1:2543-0:1103:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1831","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2545:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:31:1950":{"id":"0:31:1950","crate_id":0,"name":"get_i8","span":{"filename":"src/buf/buf_impl.rs","begin":[311,4],"end":[316,5]},"visibility":"default","docs":"Gets a signed 8 bit integer from `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08 hello\"[..];\nassert_eq!(8, buf.get_i8());\n```\n\n# Panics\n\nThis function panics if there is no more remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:503":{"id":"0:503","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[843,0],"end":[872,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"4:276:1839","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"4:7184:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:504:697"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12165:31911":{"id":"1:12165:31911","crate_id":1,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1103:1831":{"id":"0:1103:1831","crate_id":0,"name":"Take","span":{"filename":"src/buf/take.rs","begin":[10,0],"end":[13,1]},"visibility":"public","docs":"A `Buf` adapter which limits the bytes read from an underlying buffer.\n\nThis struct is generally created by calling `take()` on `Buf`. See\ndocumentation of [`take()`](trait.Buf.html#method.take) for more details.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:275","a:1:8316:3683-0:1103:1831","a:1:2683:220-0:1103:1831","a:1:2740:3702-0:1103:1831","a:1:8315:3684-0:1103:1831","a:1:2700:228-0:1103:1831","b:1:2554-0:1103:1831","b:1:3319-0:1103:1831","b:1:2249-0:1103:1831","b:1:2539-0:1103:1831","b:1:2549-0:1103:1831","b:1:2543-0:1103:1831","b:1:2252-0:1103:1831","0:282","0:1107"]}}},"0:669:551":{"id":"0:669:551","crate_id":0,"name":"deref","span":{"filename":"src/bytes_mut.rs","begin":[1151,4],"end":[1153,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:242:1822":{"id":"0:242:1822","crate_id":0,"name":"limit","span":{"filename":"src/buf/limit.rs","begin":[44,4],"end":[46,5]},"visibility":"public","docs":"Returns the maximum number of bytes that can be written\n\n# Note\n\nIf the inner `BufMut` has fewer bytes than indicated by this method then\nthat is the actual number of available bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:412:422":{"id":"0:412:422","crate_id":0,"name":"clone","span":{"filename":"src/bytes.rs","begin":[531,4],"end":[533,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195":{"id":"0:195","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[132,0],"end":[191,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["copy_to_slice","chunks_vectored","get_f64_ne","get_u16_le","reader","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_ne","get_u32","get_i128_le","get_i128","get_u128_ne","has_remaining","get_u16_ne","get_u128","get_i128_ne","get_f32_ne","take","chain","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","get_uint"],"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1828","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["0:198:1883","0:199:1846","0:200:1849","0:201:1911","0:203:2105"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:684":{"id":"0:684","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1194,0],"end":[1198,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:685:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:2553:1488":{"id":"1:2553:1488","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"1:41733:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:402:2783":{"id":"0:402:2783","crate_id":0,"name":"truncate","span":{"filename":"src/bytes.rs","begin":[456,4],"end":[469,5]},"visibility":"public","docs":"Shortens the buffer, keeping the first `len` bytes and dropping the\nrest.\n\nIf `len` is greater than the buffer's current length, this has no\neffect.\n\nThe [`split_off`] method can emulate `truncate`, but this causes the\nexcess bytes to be returned instead of dropped.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut buf = Bytes::from(&b\"hello world\"[..]);\nbuf.truncate(5);\nassert_eq!(buf, b\"hello\"[..]);\n```\n\n[`split_off`]: #method.split_off","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12144:31905":{"id":"1:12144:31905","crate_id":1,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"5:11980:418","str::splitn":"1:12141:31904","self::pattern":"1:11778:3544"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"1:43672:4119","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11798:10734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:459":{"id":"0:459","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[685,0],"end":[689,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:460:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1152":{"id":"0:1152","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[37,0],"end":[37,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"1:9221:3163","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1153:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:67:2097":{"id":"0:67:2097","crate_id":0,"name":"get_f64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1084,4],"end":[1086,5]},"visibility":"default","docs":"Gets an IEEE754 double-precision (8 bytes) floating point number from\n`self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33 hello\",\n    false => b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F hello\",\n};\nassert_eq!(1.2f64, buf.get_f64_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:282":{"id":"0:282","crate_id":0,"name":null,"span":{"filename":"src/buf/take.rs","begin":[132,0],"end":[155,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["copy_to_slice","chunks_vectored","get_f64_ne","get_u16_le","reader","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_ne","get_u32","get_i128_le","get_i128","get_u128_ne","has_remaining","get_u16_ne","get_u128","get_i128_ne","get_f32_ne","take","chain","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","get_uint"],"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1831","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:284:1883","0:285:1846","0:286:1849","0:287:2105"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:409":{"id":"0:409","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[522,0],"end":[527,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:2921:1703","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:410:587"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:699:1607":{"id":"0:699:1607","crate_id":0,"name":"write_str","span":{"filename":"src/bytes_mut.rs","begin":[1239,4],"end":[1246,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9172:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1029:2195":{"id":"0:1029:2195","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:753":{"id":"0:753","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1517,0],"end":[1521,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"4:6888:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}},{"type":{"resolved_path":{"name":"Global","id":"4:7184:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:754:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1107":{"id":"0:1107","crate_id":0,"name":null,"span":{"filename":"src/buf/take.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1831","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1109:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:654:1846":{"id":"0:654:1846","crate_id":0,"name":"chunk","span":{"filename":"src/bytes_mut.rs","begin":[1059,4],"end":[1061,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:158":{"id":"0:158","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1378,0],"end":[1380,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_bytes","put_u64","put_f32","put_f32_ne","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne"],"trait":{"name":"BufMut","id":"0:106:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:1027:2177","0:1028:2222","0:1029:2195","0:1030:2237","0:1031:2248","0:1032:2255","0:1033:2259","0:1034:2264","0:1035:2272","0:1036:2276","0:1037:2279","0:1038:2282","0:1039:2286","0:1040:2290","0:1041:2295","0:1042:2298","0:1043:2301","0:1044:2304","0:1045:2308","0:1046:2312","0:1047:2317","0:1048:2320","0:1049:2323","0:1050:2326"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8316:3683-0:1097:1833":{"id":"a:1:8316:3683-0:1097:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8316:3683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8316:3683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:73:1823":{"id":"0:73:1823","crate_id":0,"name":"reader","span":{"filename":"src/buf/buf_impl.rs","begin":[1188,4],"end":[1193,5]},"visibility":"default","docs":"Creates an adaptor which implements the `Read` trait for `self`.\n\nThis function returns a new value which implements `Read` by adapting\nthe `Read` trait functions to the `Buf` trait functions. Given that\n`Buf` operations are infallible, none of the `Read` functions will\nreturn with `Err`.\n\n# Examples\n\n```\nuse bytes::{Bytes, Buf};\nuse std::io::Read;\n\nlet buf = Bytes::from(\"hello world\");\n\nlet mut reader = buf.reader();\nlet mut dst = [0; 1024];\n\nlet num = reader.read(&mut dst).unwrap();\n\nassert_eq!(11, num);\nassert_eq!(&dst[..11], &b\"hello world\"[..]);\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Reader","id":"0:1097:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12103:1695":{"id":"1:12103:1695","crate_id":1,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"1:43536:1698","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:108:2195":{"id":"0:108:2195","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[104,4],"end":[104,49]},"visibility":"default","docs":"Advance the internal cursor of the BufMut\n\nThe next call to `chunk_mut` will return a slice starting `cnt` bytes\nfurther into the underlying buffer.\n\nThis function is unsafe because there is no guarantee that the bytes\nbeing advanced past have been initialized.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = Vec::with_capacity(16);\n\n// Write some data\nbuf.chunk_mut()[0..2].copy_from_slice(b\"he\");\nunsafe { buf.advance_mut(2) };\n\n// write more bytes\nbuf.chunk_mut()[0..3].copy_from_slice(b\"llo\");\n\nunsafe { buf.advance_mut(3); }\n\nassert_eq!(5, buf.len());\nassert_eq!(buf, b\"hello\");\n```\n\n# Panics\n\nThis function **may** panic if `cnt > self.remaining_mut()`.\n\n# Implementer notes\n\nIt is recommended for implementations of `advance_mut` to panic if\n`cnt > self.remaining_mut()`. If the implementation does not panic,\nthe call must behave as if `cnt == self.remaining_mut()`.\n\nA call with `cnt == 0` should never panic and be a no-op.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"1:12088:1941":{"id":"1:12088:1941","crate_id":1,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"5:11997:1510"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1127:773":{"id":"0:1127:773","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeInclusive","id":"1:39337:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2539-0:1140:1834":{"id":"b:1:2539-0:1140:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1834","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2542:2711"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1072:2320":{"id":"0:1072:2320","crate_id":0,"name":"put_i64","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:965:1850":{"id":"0:965:1850","crate_id":0,"name":"copy_to_slice","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:736":{"id":"0:736","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1461,0],"end":[1461,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1047:2317":{"id":"0:1047:2317","crate_id":0,"name":"put_u64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:446":{"id":"0:446","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[647,0],"end":[647,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2318:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:418":{"id":"0:418","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[572,0],"end":[579,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:2897:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:419:230","0:420:551"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:681:697":{"id":"0:681:697","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1183,4],"end":[1185,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1067:2301":{"id":"0:1067:2301","crate_id":0,"name":"put_i32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258:2144":{"id":"0:258:2144","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/reader.rs","begin":[33,4],"end":[35,5]},"visibility":"public","docs":"Gets a reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::Buf;\n\nlet buf = b\"hello world\".reader();\n\nassert_eq!(b\"hello world\", buf.get_ref());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1044:2304":{"id":"0:1044:2304","crate_id":0,"name":"put_i32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:56:2051":{"id":"0:56:2051","crate_id":0,"name":"get_uint","span":{"filename":"src/buf/buf_impl.rs","begin":[838,4],"end":[840,5]},"visibility":"default","docs":"Gets an unsigned n-byte integer from `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03 hello\"[..];\nassert_eq!(0x010203, buf.get_uint(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:34:1967":{"id":"0:34:1967","crate_id":0,"name":"get_u16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[377,4],"end":[379,5]},"visibility":"default","docs":"Gets an unsigned 16 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x08\\x09 hello\",\n    false => b\"\\x09\\x08 hello\",\n};\nassert_eq!(0x0809, buf.get_u16_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:506":{"id":"0:506","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[874,0],"end":[878,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:507:697"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:702:422":{"id":"0:702:422","crate_id":0,"name":"clone","span":{"filename":"src/bytes_mut.rs","begin":[1255,4],"end":[1257,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:741":{"id":"0:741","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1481,0],"end":[1485,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"slice":{"primitive":"u8"}},"items":["0:742:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12150:31907":{"id":"1:12150:31907","crate_id":1,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11798:10734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5529:3346":{"id":"4:5529:3346","crate_id":4,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"4:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:982:2014":{"id":"0:982:2014","crate_id":0,"name":"get_u64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:287:2105":{"id":"0:287:2105","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/take.rs","begin":[148,4],"end":[154,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1065:2295":{"id":"0:1065:2295","crate_id":0,"name":"put_u32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:192:2460":{"id":"0:192:2460","crate_id":0,"name":"last_ref","span":{"filename":"src/buf/chain.rs","begin":[90,4],"end":[92,5]},"visibility":"public","docs":"Gets a reference to the last underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet buf = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nassert_eq!(buf.last_ref()[..], b\"world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"U"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277:2471":{"id":"0:277:2471","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/take.rs","begin":[39,4],"end":[41,5]},"visibility":"public","docs":"Consumes this `Take`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\".take(2);\nlet mut dst = vec![];\n\ndst.put(&mut buf);\nassert_eq!(*dst, b\"he\"[..]);\n\nlet mut buf = buf.into_inner();\n\ndst.clear();\ndst.put(&mut buf);\nassert_eq!(*dst, b\"llo world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2249-0:1084:1829":{"id":"b:1:2249-0:1084:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2251:2630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:57:2056":{"id":"0:57:2056","crate_id":0,"name":"get_uint_le","span":{"filename":"src/buf/buf_impl.rs","begin":[858,4],"end":[860,5]},"visibility":"default","docs":"Gets an unsigned n-byte integer from `self` in little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x010203, buf.get_uint_le(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2539-0:1103:1831":{"id":"b:1:2539-0:1103:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1831","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2542:2711"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:985:2023":{"id":"0:985:2023","crate_id":0,"name":"get_i64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2740:3702-0:1097:1833":{"id":"a:1:2740:3702-0:1097:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2740:3702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2740:3702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:227:958":{"id":"0:227:958","crate_id":0,"name":"next","span":{"filename":"src/buf/iter.rs","begin":[113,4],"end":[122,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:444":{"id":"0:444","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[641,0],"end":[645,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"name":"Ord","id":"1:2349:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:445:429"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:194:2471":{"id":"0:194:2471","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/chain.rs","begin":[127,4],"end":[129,5]},"visibility":"public","docs":"Consumes this `Chain`, returning the underlying values.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet chain = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nlet (first, last) = chain.into_inner();\nassert_eq!(first[..], b\"hello\"[..]);\nassert_eq!(last[..], b\"world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"tuple":[{"generic":"T"},{"generic":"U"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:428":{"id":"0:428","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[603,0],"end":[610,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:429:2473","0:430:1829","0:431:788"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:636:2432":{"id":"0:636:2432","crate_id":0,"name":"extend_from_slice","span":{"filename":"src/bytes_mut.rs","begin":[764,4],"end":[779,5]},"visibility":"public","docs":"Appends given bytes to this `BytesMut`.\n\nIf this `BytesMut` object does not have enough capacity, it is resized\nfirst.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::with_capacity(0);\nbuf.extend_from_slice(b\"aaabbb\");\nbuf.extend_from_slice(b\"cccddd\");\n\nassert_eq!(b\"aaabbbcccddd\", &buf[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["extend",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1060:2276":{"id":"0:1060:2276","crate_id":0,"name":"put_i16","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:281:2513":{"id":"0:281:2513","crate_id":0,"name":"set_limit","span":{"filename":"src/buf/take.rs","begin":[127,4],"end":[129,5]},"visibility":"public","docs":"Sets the maximum number of bytes that can be read.\n\n# Note\n\nIf the inner `Buf` has fewer bytes than `lim` then that is the actual\nnumber of available bytes.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\".take(2);\nlet mut dst = vec![];\n\ndst.put(&mut buf);\nassert_eq!(*dst, b\"he\"[..]);\n\ndst.clear();\n\nbuf.set_limit(3);\ndst.put(&mut buf);\nassert_eq!(*dst, b\"llo\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["lim",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:80:1883":{"id":"0:80:1883","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1343,4],"end":[1345,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8315:3684-0:300:1832":{"id":"a:1:8315:3684-0:300:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8315:3684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1133":{"id":"0:1133","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:2984:2555","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeTo","id":"1:39315:202","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1134:774"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1026:2105":{"id":"0:1026:2105","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"crate::Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:123:2286":{"id":"0:123:2286","crate_id":0,"name":"put_u32","span":{"filename":"src/buf/buf_mut.rs","begin":[503,4],"end":[505,5]},"visibility":"default","docs":"Writes an unsigned 32 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u32(0x0809A0A1);\nassert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:127:2301":{"id":"0:127:2301","crate_id":0,"name":"put_i32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[595,4],"end":[597,5]},"visibility":"default","docs":"Writes a signed 32 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i32_le(0x0809A0A1);\nassert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:163:2177":{"id":"0:163:2177","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1388,4],"end":[1390,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:495":{"id":"0:495","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[789,0],"end":[794,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:2590:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:496:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8315:3684-0:599:1699":{"id":"a:1:8315:3684-0:599:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8315:3684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:778:613":{"id":"0:778:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1584,4],"end":[1586,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:738:613":{"id":"0:738:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1470,4],"end":[1472,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1063:2286":{"id":"0:1063:2286","crate_id":0,"name":"put_u32","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:24:1846":{"id":"0:24:1846","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[133,4],"end":[133,29]},"visibility":"default","docs":"Returns a slice starting at the current position and of length between 0\nand `Buf::remaining()`. Note that this *can* return shorter slice (this allows\nnon-continuous internal representation).\n\nThis is a lower level function. Most operations are done with other\nfunctions.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(buf.chunk(), &b\"hello world\"[..]);\n\nbuf.advance(6);\n\nassert_eq!(buf.chunk(), &b\"world\"[..]);\n```\n\n# Implementer notes\n\nThis function should never panic. Once the end of the buffer is reached,\ni.e., `Buf::remaining` returns 0, calls to `chunk()` should return an\nempty slice.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1062:2282":{"id":"0:1062:2282","crate_id":0,"name":"put_i16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1131:186":{"id":"0:1131:186","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:777":{"id":"0:777","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1583,0],"end":[1587,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"items":["0:778:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:744:1040":{"id":"0:744:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1488,4],"end":[1490,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1143":{"id":"0:1143","crate_id":0,"name":null,"span":{"filename":"src/buf/writer.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1834","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:1145:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:6:1692":{"id":"0:6:1692","crate_id":0,"name":"buf","span":{"filename":"src/buf/mod.rs","begin":[1,0],"end":[41,47]},"visibility":"public","docs":"Utilities for working with buffers.\n\nA buffer is any structure that contains a sequence of bytes. The bytes may\nor may not be stored in contiguous memory. This module contains traits used\nto abstract over buffers as well as utilities for working with buffer types.\n\n# `Buf`, `BufMut`\n\nThese are the two foundational traits for abstractly working with buffers.\nThey can be thought as iterators for byte structures. They offer additional\nperformance over `Iterator` by providing an API optimized for byte slices.\n\nSee [`Buf`] and [`BufMut`] for more details.\n\n[rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)\n[`Buf`]: trait.Buf.html\n[`BufMut`]: trait.BufMut.html","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:340-0:22:1693","0:341-0:106:1694","0:342-0:1075:1828","0:343-0:1084:1829","0:344-0:1090:1830","0:345-0:1103:1831","0:346-0:300:1832","0:348-0:1097:1833","0:349-0:1140:1834"],"is_stripped":false}}},"1:12093:31184":{"id":"1:12093:31184","crate_id":1,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:9879:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:9879:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2252-0:1084:1829":{"id":"b:1:2252-0:1084:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2254:3111"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2700:228-0:1097:1833":{"id":"a:1:2700:228-0:1097:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:285:1846":{"id":"0:285:1846","crate_id":0,"name":"chunk","span":{"filename":"src/buf/take.rs","begin":[137,4],"end":[140,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:175:2247":{"id":"0:175:2247","crate_id":0,"name":"put_bytes","span":{"filename":"src/buf/buf_mut.rs","begin":[1485,4],"end":[1488,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:53:2040":{"id":"0:53:2040","crate_id":0,"name":"get_i128","span":{"filename":"src/buf/buf_impl.rs","begin":[775,4],"end":[777,5]},"visibility":"default","docs":"Gets a signed 128 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_i128());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:649:3068":{"id":"0:649:3068","crate_id":0,"name":"spare_capacity_mut","span":{"filename":"src/bytes_mut.rs","begin":[1025,4],"end":[1032,5]},"visibility":"public","docs":"Returns the remaining spare capacity of the buffer as a slice of `MaybeUninit<u8>`.\n\nThe returned slice can be used to fill the buffer with data (e.g. by\nreading from a file) before marking the data as initialized using the\n[`set_len`] method.\n\n[`set_len`]: BytesMut::set_len\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\n// Allocate buffer big enough for 10 bytes.\nlet mut buf = BytesMut::with_capacity(10);\n\n// Fill in the first 3 elements.\nlet uninit = buf.spare_capacity_mut();\nuninit[0].write(0);\nuninit[1].write(1);\nuninit[2].write(2);\n\n// Mark the first 3 bytes of the buffer as being initialized.\nunsafe {\n    buf.set_len(3);\n}\n\nassert_eq!(&buf[..], &[0, 1, 2]);\n```","links":{"BytesMut::set_len":"0:633:2428"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"1:30345:2553","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12176:31917":{"id":"1:12176:31917","crate_id":1,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"5:11980:418","self::pattern":"1:11778:3544"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:456:613":{"id":"0:456:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[674,4],"end":[676,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:248:2195":{"id":"0:248:2195","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/limit.rs","begin":[70,4],"end":[74,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:460:613":{"id":"0:460:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[686,4],"end":[688,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:454:1040":{"id":"0:454:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[668,4],"end":[670,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:464:613":{"id":"0:464:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[698,4],"end":[700,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Vec","id":"4:6888:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:961:1911":{"id":"0:961:1911","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"5:8155:1837","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1006:1974":{"id":"0:1006:1974","crate_id":0,"name":"get_i16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2554-0:1075:1828":{"id":"b:1:2554-0:1075:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1828","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2557:128","1:2558:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12102:7509":{"id":"1:12102:7509","crate_id":1,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"5:11980:418"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"1:43526:7490","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2249-0:599:1699":{"id":"b:1:2249-0:599:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2251:2630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1046:2312":{"id":"0:1046:2312","crate_id":0,"name":"put_u64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:749":{"id":"0:749","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1505,0],"end":[1509,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:750:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:447":{"id":"0:447","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[649,0],"end":[653,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:448:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:653:1883":{"id":"0:653:1883","crate_id":0,"name":"remaining","span":{"filename":"src/bytes_mut.rs","begin":[1054,4],"end":[1056,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:307:2583":{"id":"0:307:2583","crate_id":0,"name":"write_byte","span":{"filename":"src/buf/uninit_slice.rs","begin":[73,4],"end":[77,5]},"visibility":"public","docs":"Write a single byte at the specified offset.\n\n# Panics\n\nThe function panics if `index` is out of bounds.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\n\nlet mut data = [b'f', b'o', b'o'];\nlet slice = unsafe { UninitSlice::from_raw_parts_mut(data.as_mut_ptr(), 3) };\n\nslice.write_byte(0, b'b');\n\nassert_eq!(b\"boo\", &data[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}],["byte",{"primitive":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:720:3067":{"id":"0:720:3067","crate_id":0,"name":"extend","span":{"filename":"src/bytes_mut.rs","begin":[1308,4],"end":[1315,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:707":{"id":"0:707","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1269,0],"end":[1276,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:709:2473","0:710:1829","0:711:788"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2740:3702-0:1084:1829":{"id":"a:1:2740:3702-0:1084:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2740:3702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2740:3702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:631:2789":{"id":"0:631:2789","crate_id":0,"name":"clear","span":{"filename":"src/bytes_mut.rs","begin":[435,4],"end":[437,5]},"visibility":"public","docs":"Clears the buffer, removing all data. Existing capacity is preserved.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::from(&b\"hello world\"[..]);\nbuf.clear();\nassert!(buf.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:670":{"id":"0:670","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1156,0],"end":[1161,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsMut","id":"1:2510:74","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:671:3110"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:115:2248":{"id":"0:115:2248","crate_id":0,"name":"put_u8","span":{"filename":"src/buf/buf_mut.rs","begin":[317,4],"end":[320,5]},"visibility":"default","docs":"Writes an unsigned 8 bit integer to `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u8(0x01);\nassert_eq!(buf, b\"\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1146":{"id":"0:1146","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[34,0],"end":[34,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"1:9219:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1147:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:779":{"id":"0:779","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1589,0],"end":[1593,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"items":["0:780:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8315:3684-0:1097:1833":{"id":"a:1:8315:3684-0:1097:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8315:3684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8315:3684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2554-0:599:1699":{"id":"b:1:2554-0:599:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2557:128","1:2558:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:745":{"id":"0:745","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1493,0],"end":[1497,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:746:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12179:31918":{"id":"1:12179:31918","crate_id":1,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"5:11980:418","self::pattern":"1:11778:3544"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12076":{"id":"1:12076","crate_id":1,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["1:12077:816","1:12078:1914","1:12079:31891","1:12080:31892","1:12082:31893","1:12085:2798","1:12086:31894","1:12087:314","1:12088:1941","1:12089:1847","1:12091:2498","1:12093:31184","1:12095:31185","1:12097:31895","1:12098:31896","1:12099:31897","1:12100:2423","1:12101:7254","1:12102:7509","1:12103:1695","1:12104:27709","1:12105:27694","1:12106:4101","1:12107:31898","1:12108:27697","1:12109:3158","1:12112:31899","1:12115:31900","1:12118:3912","1:12122:3878","1:12126:2978","1:12129:27700","1:12132:31901","1:12135:31902","1:12138:31903","1:12141:31904","1:12144:31905","1:12147:31906","1:12150:31907","1:12153:3215","1:12156:31908","1:12159:31909","1:12162:31910","1:12165:31911","1:12167:31912","1:12169:31913","1:12171:31914","1:12172:31915","1:12173:31916","1:12176:31917","1:12179:31918","1:12182:31919","1:12185:31920","1:12188:31921","1:12191:31922","1:12194:31923","1:12196:31924","1:12197:31925","1:12198:31926","1:12199:31927","1:12200:31928","1:12201:31929","1:12203:10642","1:12204:31930"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:491":{"id":"0:491","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[778,0],"end":[785,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:494:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3319-0:1075:1828":{"id":"b:1:3319-0:1075:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1828","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:3321:1501"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:971:1971":{"id":"0:971:1971","crate_id":0,"name":"get_i16","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1109:671":{"id":"0:1109:671","crate_id":0,"name":"fmt","span":{"filename":"src/buf/take.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:9183:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:9172:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1075:1828":{"id":"0:1075:1828","crate_id":0,"name":"Chain","span":{"filename":"src/buf/chain.rs","begin":[32,0],"end":[35,1]},"visibility":"public","docs":"A `Chain` sequences two buffers.\n\n`Chain` is an adapter that links two underlying buffers and provides a\ncontinuous view across both buffers. It is able to sequence either immutable\nbuffers ([`Buf`] values) or mutable buffers ([`BufMut`] values).\n\nThis struct is generally created by calling [`Buf::chain`]. Please see that\nfunction's documentation for more detail.\n\n# Examples\n\n```\nuse bytes::{Bytes, Buf};\n\nlet mut buf = (&b\"hello \"[..])\n    .chain(&b\"world\"[..]);\n\nlet full: Bytes = buf.copy_to_bytes(11);\nassert_eq!(full[..], b\"hello world\"[..]);\n```\n\n[`Buf::chain`]: trait.Buf.html#method.chain\n[`Buf`]: trait.Buf.html\n[`BufMut`]: trait.BufMut.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:186","a:1:8316:3683-0:1075:1828","a:1:2683:220-0:1075:1828","a:1:2740:3702-0:1075:1828","a:1:8315:3684-0:1075:1828","a:1:2700:228-0:1075:1828","b:1:2554-0:1075:1828","b:1:3319-0:1075:1828","b:1:2249-0:1075:1828","b:1:2539-0:1075:1828","b:1:2549-0:1075:1828","b:1:2543-0:1075:1828","b:1:2252-0:1075:1828","0:195","0:204","0:1080","0:210"]}}},"0:762:613":{"id":"0:762:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1542,4],"end":[1544,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:677":{"id":"0:677","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1176,0],"end":[1180,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:679:697"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:131:2317":{"id":"0:131:2317","crate_id":0,"name":"put_u64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[691,4],"end":[693,5]},"visibility":"default","docs":"Writes an unsigned 64 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u64_ne(0x0102030405060708);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");\n} else {\n    assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:46:2014":{"id":"0:46:2014","crate_id":0,"name":"get_u64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[629,4],"end":[631,5]},"visibility":"default","docs":"Gets an unsigned 64 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\",\n    false => b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x0102030405060708, buf.get_u64_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1051:2177":{"id":"0:1051:2177","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:247:2222":{"id":"0:247:2222","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/limit.rs","begin":[64,4],"end":[68,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:684:26788":{"id":"4:684:26788","crate_id":4,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:746:613":{"id":"0:746:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1494,4],"end":[1496,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8316:3683-0:1075:1828":{"id":"a:1:8316:3683-0:1075:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8316:3683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8316:3683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8316:3683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1828","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:692:731":{"id":"0:692:731","crate_id":0,"name":"hash","span":{"filename":"src/bytes_mut.rs","begin":[1216,4],"end":[1222,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"H"},"bounds":[{"trait_bound":{"trait":{"name":"hash::Hasher","id":"1:9436:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:787":{"id":"0:787","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1613,0],"end":[1617,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:788:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2543-0:381:1698":{"id":"b:1:2543-0:381:1698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2545:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:691":{"id":"0:691","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1215,0],"end":[1223,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"1:9428:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:692:731"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12098:31896":{"id":"1:12098:31896","crate_id":1,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"5:11986:1407","crate::ops::IndexMut":"1:2984:2555","str::slice_unchecked":"1:12097:31895"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1019:2023":{"id":"0:1019:2023","crate_id":0,"name":"get_i64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43:2000":{"id":"0:43:2000","crate_id":0,"name":"get_i32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[566,4],"end":[568,5]},"visibility":"default","docs":"Gets a signed 32 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x08\\x09\\xA0\\xA1 hello\",\n    false => b\"\\xA1\\xA0\\x09\\x08 hello\",\n};\nassert_eq!(0x0809A0A1, buf.get_i32_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:137:2339":{"id":"0:137:2339","crate_id":0,"name":"put_u128_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[831,4],"end":[833,5]},"visibility":"default","docs":"Writes an unsigned 128 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u128_ne(0x01020304050607080910111213141516);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");\n} else {\n    assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:170:2195":{"id":"0:170:2195","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1430,4],"end":[1442,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:140:2348":{"id":"0:140:2348","crate_id":0,"name":"put_i128_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[901,4],"end":[903,5]},"visibility":"default","docs":"Writes a signed 128 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i128_ne(0x01020304050607080910111213141516);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");\n} else {\n    assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2740:3702-0:1075:1828":{"id":"a:1:2740:3702-0:1075:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2740:3702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2740:3702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2740:3702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1828","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:2542:2711":{"id":"1:2542:2711","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2516:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:422:315":{"id":"0:422:315","crate_id":0,"name":"as_ref","span":{"filename":"src/bytes.rs","begin":[583,4],"end":[585,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2549-0:599:1699":{"id":"b:1:2549-0:599:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2552:128","1:2553:1488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:713:3067":{"id":"0:713:3067","crate_id":0,"name":"extend","span":{"filename":"src/bytes_mut.rs","begin":[1279,4],"end":[1295,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1012:1997":{"id":"0:1012:1997","crate_id":0,"name":"get_i32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1139:774":{"id":"0:1139:774","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeToInclusive","id":"1:39359:203","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:483":{"id":"0:483","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[757,0],"end":[761,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"items":["0:484:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2683:220-0:1084:1829":{"id":"a:1:2683:220-0:1084:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:266:2530":{"id":"0:266:2530","crate_id":0,"name":"fill_buf","span":{"filename":"src/buf/reader.rs","begin":[75,4],"end":[77,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"5:2918:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:659:2195":{"id":"0:659:2195","crate_id":0,"name":"advance_mut","span":{"filename":"src/bytes_mut.rs","begin":[1088,4],"end":[1097,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:474:1040":{"id":"0:474:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[728,4],"end":[730,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:421":{"id":"0:421","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[581,0],"end":[586,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"1:2507:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:422:315"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:819:671":{"id":"0:819:671","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/debug.rs","begin":[46,4],"end":[48,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:9183:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:9172:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:672":{"id":"0:672","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1163,0],"end":[1168,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"1:2910:2871","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:673:553"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:207:2177":{"id":"0:207:2177","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/chain.rs","begin":[198,4],"end":[202,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:671:3110":{"id":"0:671:3110","crate_id":0,"name":"as_mut","span":{"filename":"src/bytes_mut.rs","begin":[1158,4],"end":[1160,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:789":{"id":"0:789","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1619,0],"end":[1655,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Vec","id":"4:6888:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:790:697"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:308:2424":{"id":"0:308:2424","crate_id":0,"name":"copy_from_slice","span":{"filename":"src/buf/uninit_slice.rs","begin":[100,4],"end":[108,5]},"visibility":"public","docs":"Copies bytes  from `src` into `self`.\n\nThe length of `src` must be the same as `self`.\n\n# Panics\n\nThe function panics if `src` has a different length than `self`.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\n\nlet mut data = [b'f', b'o', b'o'];\nlet slice = unsafe { UninitSlice::from_raw_parts_mut(data.as_mut_ptr(), 3) };\n\nslice.copy_from_slice(b\"bar\");\n\nassert_eq!(b\"bar\", &data[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:785":{"id":"0:785","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1607,0],"end":[1611,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:786:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3319-0:1097:1833":{"id":"b:1:3319-0:1097:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:3321:1501"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12078:1914":{"id":"1:12078:1914","crate_id":1,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1042:2298":{"id":"0:1042:2298","crate_id":0,"name":"put_i32","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12086:31894":{"id":"1:12086:31894","crate_id":1,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"1:12109:3158":{"id":"1:12109:3158","crate_id":1,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"5:11980:418","self::pattern":"1:11778:3544"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5519:32603":{"id":"4:5519:32603","crate_id":4,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"4:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:682":{"id":"0:682","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1188,0],"end":[1192,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:683:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12185:31920":{"id":"1:12185:31920","crate_id":1,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"5:11980:418","self::pattern":"1:11778:3544"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11798:10734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:655:1849":{"id":"0:655:1849","crate_id":0,"name":"advance","span":{"filename":"src/bytes_mut.rs","begin":[1064,4],"end":[1074,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8316:3683-0:599:1699":{"id":"a:1:8316:3683-0:599:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8316:3683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:12199:31927":{"id":"1:12199:31927","crate_id":1,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12203:10642":{"id":"1:12203:10642","crate_id":1,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:4539:10642"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"1:43858:7213","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:36:1974":{"id":"0:36:1974","crate_id":0,"name":"get_i16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[417,4],"end":[419,5]},"visibility":"default","docs":"Gets a signed 16 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x09\\x08 hello\"[..];\nassert_eq!(0x0809, buf.get_i16_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12171:31914":{"id":"1:12171:31914","crate_id":1,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:145:2368":{"id":"0:145:2368","crate_id":0,"name":"put_int_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1019,4],"end":[1021,5]},"visibility":"default","docs":"Writes low `nbytes` of a signed integer to `self` in little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_int_le(0x0504010203, 3);\nassert_eq!(buf, b\"\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self` or if `nbytes` is greater than 8.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2539-0:1090:1830":{"id":"b:1:2539-0:1090:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2542:2711"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:788:613":{"id":"0:788:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1614,4],"end":[1616,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:413":{"id":"0:413","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[536,0],"end":[570,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["copy_to_slice","chunks_vectored","get_f64_ne","get_u16_le","reader","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_ne","get_u32","get_i128_le","get_i128","get_u128_ne","has_remaining","get_u16_ne","get_u128","get_i128_ne","get_f32_ne","take","chain","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","get_uint"],"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:414:1883","0:415:1846","0:416:1849","0:417:2105"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2549-0:1103:1831":{"id":"b:1:2549-0:1103:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1831","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2552:128","1:2553:1488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1137:773":{"id":"0:1137:773","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeToInclusive","id":"1:39359:203","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:430:1829":{"id":"0:430:1829","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes.rs","begin":[605,4],"end":[605,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IntoIter","id":"0:1084:1829","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:694":{"id":"0:694","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1225,0],"end":[1229,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2243:97","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:695:2630"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:818":{"id":"0:818","crate_id":0,"name":null,"span":{"filename":"src/fmt/debug.rs","begin":[45,0],"end":[49,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:819:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:33:1960":{"id":"0:33:1960","crate_id":0,"name":"get_u16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[354,4],"end":[356,5]},"visibility":"default","docs":"Gets an unsigned 16 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x09\\x08 hello\"[..];\nassert_eq!(0x0809, buf.get_u16_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:68:2105":{"id":"0:68:2105","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/buf_impl.rs","begin":[1103,4],"end":[1111,5]},"visibility":"default","docs":"Consumes `len` bytes inside self and returns new instance of `Bytes`\nwith this data.\n\nThis function may be optimized by the underlying type to avoid actual\ncopies. For example, `Bytes` implementation will do a shallow copy\n(ref-count increment).\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet bytes = (&b\"hello world\"[..]).copy_to_bytes(5);\nassert_eq!(&bytes[..], &b\"hello\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"crate::Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1057:2259":{"id":"0:1057:2259","crate_id":0,"name":"put_u16","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5511":{"id":"4:5511","crate_id":4,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["4:5512:32601","4:5513:2422","4:5516:32602","4:5519:32603","4:5527:32604","4:5528:32605","4:5529:3346","4:5530:32606","4:5531:32607"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1043:2301":{"id":"0:1043:2301","crate_id":0,"name":"put_i32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:37:1977":{"id":"0:37:1977","crate_id":0,"name":"get_i16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[440,4],"end":[442,5]},"visibility":"default","docs":"Gets a signed 16 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x08\\x09 hello\",\n    false => b\"\\x09\\x08 hello\",\n};\nassert_eq!(0x0809, buf.get_i16_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:997:1849":{"id":"0:997:1849","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:224":{"id":"0:224","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[110,0],"end":[128,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["size_hint","by_ref","map_while","filter","advance_by","copied","is_sorted_by_key","product","rev","try_find","try_for_each","try_collect","scan","filter_map","nth","zip","take","__iterator_get_unchecked","cmp_by","min","unzip","lt","rposition","fold","collect_into","flat_map","enumerate","step_by","cmp","position","partial_cmp_by","gt","cloned","max_by_key","reduce","partition","flatten","count","peekable","intersperse","eq","ne","eq_by","cycle","partial_cmp","max_by","try_reduce","ge","collect","partition_in_place","fuse","skip_while","max","intersperse_with","le","next_chunk","map","chain","skip","all","array_chunks","is_sorted","min_by_key","find","is_partitioned","inspect","take_while","for_each","any","last","is_sorted_by","sum","min_by","find_map","try_fold"],"trait":{"name":"Iterator","id":"1:7384:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:226:2473","0:227:958","0:228:2499"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:396:2424":{"id":"0:396:2424","crate_id":0,"name":"copy_from_slice","span":{"filename":"src/bytes.rs","begin":[212,4],"end":[214,5]},"visibility":"public","docs":"Creates `Bytes` instance from slice, by copying it.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["data",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:441:613":{"id":"0:441:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[630,4],"end":[632,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:993:1883":{"id":"0:993:1883","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:719":{"id":"0:719","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1307,0],"end":[1316,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"name":"Extend","id":"1:7277:3113","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:720:3067"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:783":{"id":"0:783","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1601,0],"end":[1605,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"items":["0:784:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:25:1911":{"id":"0:25:1911","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/buf_impl.rs","begin":[164,4],"end":[175,5]},"visibility":"default","docs":"Fills `dst` with potentially multiple slices starting at `self`'s\ncurrent position.\n\nIf the `Buf` is backed by disjoint slices of bytes, `chunk_vectored` enables\nfetching more than one slice at once. `dst` is a slice of `IoSlice`\nreferences, enabling the slice to be directly used with [`writev`]\nwithout any further conversion. The sum of the lengths of all the\nbuffers in `dst` will be less than or equal to `Buf::remaining()`.\n\nThe entries in `dst` will be overwritten, but the data **contained** by\nthe slices **will not** be modified. If `chunk_vectored` does not fill every\nentry in `dst`, then `dst` is guaranteed to contain all remaining slices\nin `self.\n\nThis is a lower level function. Most operations are done with other\nfunctions.\n\n# Implementer notes\n\nThis function should never panic. Once the end of the buffer is reached,\ni.e., `Buf::remaining` returns 0, calls to `chunk_vectored` must return 0\nwithout mutating `dst`.\n\nImplementations should also take care to properly handle being called\nwith `dst` being a zero length slice.\n\n[`writev`]: http://man7.org/linux/man-pages/man2/readv.2.html","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"5:8155:1837","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:213:2473":{"id":"0:213:2473","crate_id":0,"name":"Item","span":{"filename":"src/buf/chain.rs","begin":[236,4],"end":[236,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u8"}}}},"0:710:1829":{"id":"0:710:1829","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes_mut.rs","begin":[1271,4],"end":[1271,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"1:10027:2797","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"0:28:1915":{"id":"0:28:1915","crate_id":0,"name":"has_remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[226,4],"end":[228,5]},"visibility":"default","docs":"Returns true if there are any more bytes to consume\n\nThis is equivalent to `self.remaining() != 0`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"a\"[..];\n\nassert!(buf.has_remaining());\n\nbuf.get_u8();\n\nassert!(!buf.has_remaining());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:986:2051":{"id":"0:986:2051","crate_id":0,"name":"get_uint","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2545:697":{"id":"1:2545:697","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:500:697":{"id":"0:500:697","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[803,4],"end":[805,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:651:587":{"id":"0:651:587","crate_id":0,"name":"drop","span":{"filename":"src/bytes_mut.rs","begin":[1036,4],"end":[1049,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:715":{"id":"0:715","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1298,0],"end":[1305,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"name":"Extend","id":"1:7277:3113","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:717:3067"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:411":{"id":"0:411","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[529,0],"end":[534,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:412:422"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:696":{"id":"0:696","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1231,0],"end":[1235,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2246:98","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:697:3111"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1005:1971":{"id":"0:1005:1971","crate_id":0,"name":"get_i16","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:114:2247":{"id":"0:114:2247","crate_id":0,"name":"put_bytes","span":{"filename":"src/buf/buf_mut.rs","begin":[293,4],"end":[297,5]},"visibility":"default","docs":"Put `cnt` bytes `val` into `self`.\n\nLogically equivalent to calling `self.put_u8(val)` `cnt` times, but may work faster.\n\n`self` must have at least `cnt` remaining capacity.\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 6];\n\n{\n    let mut buf = &mut dst[..];\n    buf.put_bytes(b'a', 4);\n\n    assert_eq!(2, buf.remaining_mut());\n}\n\nassert_eq!(b\"aaaa\\0\\0\", &dst);\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:381:1698":{"id":"0:381:1698","crate_id":0,"name":"Bytes","span":{"filename":"src/bytes.rs","begin":[100,0],"end":[106,1]},"visibility":"public","docs":"A cheaply cloneable and sliceable chunk of contiguous memory.\n\n`Bytes` is an efficient container for storing and operating on contiguous\nslices of memory. It is intended for use primarily in networking code, but\ncould have applications elsewhere as well.\n\n`Bytes` values facilitate zero-copy network programming by allowing multiple\n`Bytes` objects to point to the same underlying memory.\n\n`Bytes` does not have a single implementation. It is an interface, whose\nexact behavior is implemented through dynamic dispatch in several underlying\nimplementations of `Bytes`.\n\nAll `Bytes` implementations must fulfill the following requirements:\n- They are cheaply cloneable and thereby shareable between an unlimited amount\n  of components, for example by modifying a reference count.\n- Instances can be sliced to refer to a subset of the original buffer.\n\n```\nuse bytes::Bytes;\n\nlet mut mem = Bytes::from(\"Hello world\");\nlet a = mem.slice(0..5);\n\nassert_eq!(a, \"Hello\");\n\nlet b = mem.split_to(6);\n\nassert_eq!(mem, \"world\");\nassert_eq!(b, \"Hello \");\n```\n\n# Memory layout\n\nThe `Bytes` struct itself is fairly small, limited to 4 `usize` fields used\nto track information about which segment of the underlying memory the\n`Bytes` handle has access to.\n\n`Bytes` keeps both a pointer to the shared state containing the full memory\nslice and a pointer to the start of the region visible by the handle.\n`Bytes` also tracks the length of its view into the memory.\n\n# Sharing\n\n`Bytes` contains a vtable, which allows implementations of `Bytes` to define\nhow sharing/cloning is implemented in detail.\nWhen `Bytes::clone()` is called, `Bytes` will call the vtable function for\ncloning the backing storage in order to share it behind between multiple\n`Bytes` instances.\n\nFor `Bytes` implementations which refer to constant memory (e.g. created\nvia `Bytes::from_static()`) the cloning implementation will be a no-op.\n\nFor `Bytes` implementations which point to a reference counted shared storage\n(e.g. an `Arc<[u8]>`), sharing will be implemented by increasing the\nreference count.\n\nDue to this mechanism, multiple `Bytes` instances may point to the same\nshared memory region.\nEach `Bytes` instance can point to different sections within that\nmemory region, and `Bytes` instances may or may not have overlapping views\ninto the memory.\n\nThe following diagram visualizes a scenario where 2 `Bytes` instances make\nuse of an `Arc`-based backing storage, and provide access to different views:\n\n```text\n\n   Arc ptrs                   ┌─────────┐\n   ________________________ / │ Bytes 2 │\n  /                           └─────────┘\n /          ┌───────────┐     |         |\n|_________/ │  Bytes 1  │     |         |\n|           └───────────┘     |         |\n|           |           | ___/ data     | tail\n|      data |      tail |/              |\nv           v           v               v\n┌─────┬─────┬───────────┬───────────────┬─────┐\n│ Arc │     │           │               │     │\n└─────┴─────┴───────────┴───────────────┴─────┘\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:390","a:1:8316:3683-0:381:1698","a:1:2740:3702-0:381:1698","a:1:8315:3684-0:381:1698","b:1:2554-0:381:1698","b:1:3319-0:381:1698","b:1:2249-0:381:1698","b:1:2539-0:381:1698","b:1:2549-0:381:1698","b:1:2543-0:381:1698","b:1:2252-0:381:1698","b:4:680-0:381:1698","0:467","0:499","0:497","0:446","0:459","0:508","0:418","0:471","0:1150","0:469","0:444","0:426","0:680","0:411","0:506","0:408","0:473","0:485","0:479","0:442","0:487","0:451","0:407","0:481","0:437","0:463","0:816","0:787","0:477","0:440","0:503","0:461","0:447","0:457","0:428","0:449","0:483","0:421","0:491","0:465","0:1146","0:423","0:475","0:719","0:413","0:785","0:455","0:495","0:453","0:432","0:501","0:409"]}}},"0:625:694":{"id":"0:625:694","crate_id":0,"name":"freeze","span":{"filename":"src/bytes_mut.rs","begin":[240,4],"end":[260,5]},"visibility":"public","docs":"Converts `self` into an immutable `Bytes`.\n\nThe conversion is zero cost and is used to indicate that the slice\nreferenced by the handle will no longer be mutated. Once the conversion\nis done, the handle can be cloned and shared across threads.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\nuse std::thread;\n\nlet mut b = BytesMut::with_capacity(64);\nb.put(&b\"hello world\"[..]);\nlet b1 = b.freeze();\nlet b2 = b1.clone();\n\nlet th = thread::spawn(move || {\n    assert_eq!(&b1[..], b\"hello world\");\n});\n\nassert_eq!(&b2[..], b\"hello world\");\nth.join().unwrap();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12104:27709":{"id":"1:12104:27709","crate_id":1,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"1:12105:27694"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"1:43824:7499","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:300:1832":{"id":"b:1:3319-0:300:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3321:1501"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:995:1911":{"id":"0:995:1911","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"5:8155:1837","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:124:2290":{"id":"0:124:2290","crate_id":0,"name":"put_u32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[525,4],"end":[527,5]},"visibility":"default","docs":"Writes an unsigned 32 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u32_le(0x0809A0A1);\nassert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:658:2177":{"id":"0:658:2177","crate_id":0,"name":"remaining_mut","span":{"filename":"src/bytes_mut.rs","begin":[1083,4],"end":[1085,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2249-0:1103:1831":{"id":"b:1:2249-0:1103:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1831","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2251:2630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1069:2308":{"id":"0:1069:2308","crate_id":0,"name":"put_u64","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:420:551":{"id":"0:420:551","crate_id":0,"name":"deref","span":{"filename":"src/bytes.rs","begin":[576,4],"end":[578,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:816":{"id":"0:816","crate_id":0,"name":null,"span":{"filename":"src/fmt/debug.rs","begin":[39,0],"end":[43,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:817:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1009:1986":{"id":"0:1009:1986","crate_id":0,"name":"get_u32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1074:2326":{"id":"0:1074:2326","crate_id":0,"name":"put_i64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:426":{"id":"0:426","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[597,0],"end":[601,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2243:97","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:427:2630"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:703":{"id":"0:703","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1260,0],"end":[1267,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:704:2473","0:705:1829","0:706:788"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2700:228-0:1075:1828":{"id":"a:1:2700:228-0:1075:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1828","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:203:2105":{"id":"0:203:2105","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/chain.rs","begin":[174,4],"end":[190,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:220:944":{"id":"0:220:944","crate_id":0,"name":"new","span":{"filename":"src/buf/iter.rs","begin":[44,4],"end":[46,5]},"visibility":"public","docs":"Creates an iterator over the bytes contained by the buffer.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet buf = Bytes::from_static(b\"abc\");\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\nassert_eq!(iter.next(), Some(b'b'));\nassert_eq!(iter.next(), Some(b'c'));\nassert_eq!(iter.next(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["inner",{"generic":"T"}]],"output":{"resolved_path":{"name":"IntoIter","id":"0:1084:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:54:2043":{"id":"0:54:2043","crate_id":0,"name":"get_i128_le","span":{"filename":"src/buf/buf_impl.rs","begin":[795,4],"end":[797,5]},"visibility":"default","docs":"Gets a signed 128 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_i128_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1087":{"id":"0:1087","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[23,9],"end":[23,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1089:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:630:2783":{"id":"0:630:2783","crate_id":0,"name":"truncate","span":{"filename":"src/bytes_mut.rs","begin":[416,4],"end":[422,5]},"visibility":"public","docs":"Shortens the buffer, keeping the first `len` bytes and dropping the\nrest.\n\nIf `len` is greater than the buffer's current length, this has no\neffect.\n\nExisting underlying capacity is preserved.\n\nThe [`split_off`] method can emulate `truncate`, but this causes the\nexcess bytes to be returned instead of dropped.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::from(&b\"hello world\"[..]);\nbuf.truncate(5);\nassert_eq!(buf, b\"hello\"[..]);\n```\n\n[`split_off`]: #method.split_off","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2543-0:1084:1829":{"id":"b:1:2543-0:1084:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2545:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:975:1986":{"id":"0:975:1986","crate_id":0,"name":"get_u32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:966:1947":{"id":"0:966:1947","crate_id":0,"name":"get_u8","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1071:2317":{"id":"0:1071:2317","crate_id":0,"name":"put_u64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:437":{"id":"0:437","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[621,0],"end":[625,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"1:7264:134","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:438:700"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:280:1822":{"id":"0:280:1822","crate_id":0,"name":"limit","span":{"filename":"src/buf/take.rs","begin":[99,4],"end":[101,5]},"visibility":"public","docs":"Returns the maximum number of bytes that can be read.\n\n# Note\n\nIf the inner `Buf` has fewer bytes than indicated by this method then\nthat is the actual number of available bytes.\n\n# Examples\n\n```rust\nuse bytes::Buf;\n\nlet mut buf = b\"hello world\".take(2);\n\nassert_eq!(2, buf.limit());\nassert_eq!(b'h', buf.get_u8());\nassert_eq!(1, buf.limit());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:739":{"id":"0:739","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1475,0],"end":[1479,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:740:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:2254:3111":{"id":"1:2254:3111","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:4:680-0:381:1698":{"id":"b:4:680-0:381:1698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["4:682:3534","4:683:26787","4:684:26788"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1117:773":{"id":"0:1117:773","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeFrom","id":"1:39295:199","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1022:2061":{"id":"0:1022:2061","crate_id":0,"name":"get_uint_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:59:2065":{"id":"0:59:2065","crate_id":0,"name":"get_int","span":{"filename":"src/buf/buf_impl.rs","begin":[905,4],"end":[907,5]},"visibility":"default","docs":"Gets a signed n-byte integer from `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03 hello\"[..];\nassert_eq!(0x010203, buf.get_int(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:482:1040":{"id":"0:482:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[752,4],"end":[754,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:286:1849":{"id":"0:286:1849","crate_id":0,"name":"advance","span":{"filename":"src/buf/take.rs","begin":[142,4],"end":[146,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2700:228-0:1084:1829":{"id":"a:1:2700:228-0:1084:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:451":{"id":"0:451","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[661,0],"end":[665,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"slice":{"primitive":"u8"}},"items":["0:452:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:504:697":{"id":"0:504:697","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[844,4],"end":[871,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"resolved_path":{"name":"Box","id":"4:276:1839","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:976:1991":{"id":"0:976:1991","crate_id":0,"name":"get_u32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:984:2020":{"id":"0:984:2020","crate_id":0,"name":"get_i64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:166:2237":{"id":"0:166:2237","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1406,4],"end":[1411,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:408":{"id":"0:408","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[520,0],"end":[520,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:461":{"id":"0:461","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[691,0],"end":[695,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:462:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:399:2744":{"id":"0:399:2744","crate_id":0,"name":"slice_ref","span":{"filename":"src/bytes.rs","begin":[305,4],"end":[336,5]},"visibility":"public","docs":"Returns a slice of self that is equivalent to the given `subset`.\n\nWhen processing a `Bytes` buffer with other tools, one often gets a\n`&[u8]` which is in fact a slice of the `Bytes`, i.e. a subset of it.\nThis function turns that `&[u8]` into another `Bytes`, as if one had\ncalled `self.slice()` with the offsets that correspond to `subset`.\n\nThis operation is `O(1)`.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet bytes = Bytes::from(&b\"012345678\"[..]);\nlet as_slice = bytes.as_ref();\nlet subset = &as_slice[2..6];\nlet subslice = bytes.slice_ref(&subset);\nassert_eq!(&subslice[..], b\"2345\");\n```\n\n# Panics\n\nRequires that the given `sub` slice is in fact contained within the\n`Bytes` buffer; otherwise this function will panic.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["subset",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:632:2434":{"id":"0:632:2434","crate_id":0,"name":"resize","span":{"filename":"src/bytes_mut.rs","begin":[461,4],"end":[474,5]},"visibility":"public","docs":"Resizes the buffer so that `len` is equal to `new_len`.\n\nIf `new_len` is greater than `len`, the buffer is extended by the\ndifference with each additional byte set to `value`. If `new_len` is\nless than `len`, the buffer is simply truncated.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::new();\n\nbuf.resize(3, 0x1);\nassert_eq!(&buf[..], &[0x1, 0x1, 0x1]);\n\nbuf.resize(2, 0x2);\nassert_eq!(&buf[..], &[0x1, 0x1]);\n\nbuf.resize(4, 0x3);\nassert_eq!(&buf[..], &[0x1, 0x1, 0x3, 0x3]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["new_len",{"primitive":"usize"}],["value",{"primitive":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:476:613":{"id":"0:476:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[734,4],"end":[736,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8315:3684-0:1103:1831":{"id":"a:1:8315:3684-0:1103:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8315:3684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8315:3684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1831","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:193:2465":{"id":"0:193:2465","crate_id":0,"name":"last_mut","span":{"filename":"src/buf/chain.rs","begin":[109,4],"end":[111,5]},"visibility":"public","docs":"Gets a mutable reference to the last underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = (&b\"hello \"[..])\n    .chain(&b\"world\"[..]);\n\nbuf.last_mut().advance(1);\n\nlet full = buf.copy_to_bytes(10);\nassert_eq!(full, b\"hello orld\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"U"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1027:2177":{"id":"0:1027:2177","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2558:1487":{"id":"1:2558:1487","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"1:41733:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"1:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:403:2789":{"id":"0:403:2789","crate_id":0,"name":"clear","span":{"filename":"src/bytes.rs","begin":[483,4],"end":[485,5]},"visibility":"public","docs":"Clears the buffer, removing all data.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut buf = Bytes::from(&b\"hello world\"[..]);\nbuf.clear();\nassert!(buf.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1132:773":{"id":"0:1132:773","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeTo","id":"1:39315:202","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:750:613":{"id":"0:750:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1506,4],"end":[1508,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12156:31908":{"id":"1:12156:31908","crate_id":1,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"1:11778:3544","`DoubleEndedIterator`":"1:7306:121","prim@char":"5:11980:418","str::matches":"1:12153:3215"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"1:43772:7497","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11798:10734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1002:1956":{"id":"0:1002:1956","crate_id":0,"name":"get_u16","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8315:3684-0:1140:1834":{"id":"a:1:8315:3684-0:1140:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8315:3684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8315:3684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1834","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1116:186":{"id":"0:1116:186","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:314":{"id":"0:314","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[180,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:315:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2549-0:1084:1829":{"id":"b:1:2549-0:1084:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2552:128","1:2553:1488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2740:3702-0:381:1698":{"id":"a:1:2740:3702-0:381:1698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2740:3702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:122:2282":{"id":"0:122:2282","crate_id":0,"name":"put_i16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[481,4],"end":[483,5]},"visibility":"default","docs":"Writes a signed 16 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i16_ne(0x0809);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x08\\x09\");\n} else {\n    assert_eq!(buf, b\"\\x09\\x08\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:679:697":{"id":"0:679:697","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1177,4],"end":[1179,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12173:31916":{"id":"1:12173:31916","crate_id":1,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"5:11980:418","self::pattern":"1:11778:3544"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"1:11803:10733","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[231,0],"end":[242,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1828","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["0:213:2473","0:214:1829","0:215:788"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12091:2498":{"id":"1:12091:2498","crate_id":1,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"1:41591:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:9879:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:9879:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:463":{"id":"0:463","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[697,0],"end":[701,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"4:6888:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}},{"type":{"resolved_path":{"name":"Global","id":"4:7184:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:464:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:106:1694":{"id":"0:106:1694","crate_id":0,"name":"BufMut","span":{"filename":"src/buf/buf_mut.rs","begin":[29,0],"end":[1276,1]},"visibility":"public","docs":"A trait for values that provide sequential write access to bytes.\n\nWrite bytes to a buffer\n\nA buffer stores bytes in memory such that write operations are infallible.\nThe underlying storage may or may not be in contiguous memory. A `BufMut`\nvalue is a cursor into the buffer. Writing to `BufMut` advances the cursor\nposition.\n\nThe simplest `BufMut` is a `Vec<u8>`.\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\n\nbuf.put(&b\"hello world\"[..]);\n\nassert_eq!(buf, b\"hello world\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"items":["0:107:2177","0:108:2195","0:109:2200","0:110:2222","0:111:2108","0:113:2237","0:114:2247","0:115:2248","0:116:2255","0:117:2259","0:118:2264","0:119:2272","0:120:2276","0:121:2279","0:122:2282","0:123:2286","0:124:2290","0:125:2295","0:126:2298","0:127:2301","0:128:2304","0:129:2308","0:130:2312","0:131:2317","0:132:2320","0:133:2323","0:134:2326","0:135:2330","0:136:2334","0:137:2339","0:138:2342","0:139:2345","0:140:2348","0:141:2352","0:142:2356","0:143:2361","0:144:2365","0:145:2368","0:146:2371","0:147:2375","0:148:2379","0:149:2384","0:150:2388","0:151:2391","0:152:2395","0:153:1822","0:154:1827","0:155:2419"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:168","0:160","0:204","0:162","0:158","0:657","0:244"]}}},"0:473":{"id":"0:473","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[727,0],"end":[731,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:474:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12082:31893":{"id":"1:12082:31893","crate_id":1,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:12080:31892"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:661:2108":{"id":"0:661:2108","crate_id":0,"name":"put","span":{"filename":"src/bytes_mut.rs","begin":[1110,4],"end":[1120,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"crate::Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:968:1956":{"id":"0:968:1956","crate_id":0,"name":"get_u16","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1021:2056":{"id":"0:1021:2056","crate_id":0,"name":"get_uint_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:453":{"id":"0:453","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[667,0],"end":[671,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"slice":{"primitive":"u8"}},"items":["0:454:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:134:2326":{"id":"0:134:2326","crate_id":0,"name":"put_i64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[761,4],"end":[763,5]},"visibility":"default","docs":"Writes a signed 64 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i64_ne(0x0102030405060708);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");\n} else {\n    assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1001:1950":{"id":"0:1001:1950","crate_id":0,"name":"get_i8","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:417:2105":{"id":"0:417:2105","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/bytes.rs","begin":[561,4],"end":[569,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"crate::Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2549-0:1090:1830":{"id":"b:1:2549-0:1090:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2552:128","1:2553:1488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1020:2051":{"id":"0:1020:2051","crate_id":0,"name":"get_uint","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1053:2195":{"id":"0:1053:2195","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"1:2251:2630":{"id":"1:2251:2630","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:226:2473":{"id":"0:226:2473","crate_id":0,"name":"Item","span":{"filename":"src/buf/iter.rs","begin":[111,4],"end":[111,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u8"}}}},"0:393:2697":{"id":"0:393:2697","crate_id":0,"name":"from_static","span":{"filename":"src/bytes.rs","begin":[162,4],"end":[169,5]},"visibility":"public","docs":"Creates a new `Bytes` from a static slice.\n\nThe returned `Bytes` will point directly to the static slice. There is\nno allocating or copying.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::from_static(b\"hello\");\nassert_eq!(&b[..], b\"hello\");\n```","links":{},"attrs":["#[inline]","#[cfg(not(all(loom, test)))]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bytes",{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2249-0:1075:1828":{"id":"b:1:2249-0:1075:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1828","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2251:2630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:989:2065":{"id":"0:989:2065","crate_id":0,"name":"get_int","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2539-0:1097:1833":{"id":"b:1:2539-0:1097:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2542:2711"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:626:2953":{"id":"0:626:2953","crate_id":0,"name":"zeroed","span":{"filename":"src/bytes_mut.rs","begin":[274,4],"end":[276,5]},"visibility":"public","docs":"Creates a new `BytesMut`, which is initialized with zero.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet zeros = BytesMut::zeroed(42);\n\nassert_eq!(zeros.len(), 42);\nzeros.into_iter().for_each(|x| assert_eq!(x, 0));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:759":{"id":"0:759","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1535,0],"end":[1539,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Vec","id":"4:6888:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:760:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:200:1849":{"id":"0:200:1849","crate_id":0,"name":"advance","span":{"filename":"src/buf/chain.rs","begin":[149,4],"end":[165,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:160":{"id":"0:160","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1382,0],"end":[1384,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_bytes","put_u64","put_f32","put_f32_ne","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne"],"trait":{"name":"BufMut","id":"0:106:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"4:276:1839","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1051:2177","0:1052:2222","0:1053:2195","0:1054:2237","0:1055:2248","0:1056:2255","0:1057:2259","0:1058:2264","0:1059:2272","0:1060:2276","0:1061:2279","0:1062:2282","0:1063:2286","0:1064:2290","0:1065:2295","0:1066:2298","0:1067:2301","0:1068:2304","0:1069:2308","0:1070:2312","0:1071:2317","0:1072:2320","0:1073:2323","0:1074:2326"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:259:2498":{"id":"0:259:2498","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/reader.rs","begin":[40,4],"end":[42,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2543-0:1097:1833":{"id":"b:1:2543-0:1097:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2545:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1023:2065":{"id":"0:1023:2065","crate_id":0,"name":"get_int","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:436:788":{"id":"0:436:788","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes.rs","begin":[616,4],"end":[618,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:7268:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[74,0],"end":[81,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["lines","split","read_until","read_line","has_data_left"],"trait":{"name":"BufRead","id":"5:3517:2529","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:266:2530","0:267:2531"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:690:60":{"id":"0:690:60","crate_id":0,"name":"default","span":{"filename":"src/bytes_mut.rs","begin":[1210,4],"end":[1212,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:486:1040":{"id":"0:486:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[764,4],"end":[766,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1015:2009":{"id":"0:1015:2009","crate_id":0,"name":"get_u64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8315:3684-0:1075:1828":{"id":"a:1:8315:3684-0:1075:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8315:3684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8315:3684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8315:3684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1828","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:455":{"id":"0:455","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[673,0],"end":[677,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:456:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:650":{"id":"0:650","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1035,0],"end":[1050,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:2921:1703","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:651:587"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1052:2222":{"id":"0:1052:2222","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:704:2473":{"id":"0:704:2473","crate_id":0,"name":"Item","span":{"filename":"src/bytes_mut.rs","begin":[1261,4],"end":[1261,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u8"}}}},"0:1039:2286":{"id":"0:1039:2286","crate_id":0,"name":"put_u32","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12112:31899":{"id":"1:12112:31899","crate_id":1,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"5:11980:418","self::pattern":"1:11778:3544"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1035:2272":{"id":"0:1035:2272","crate_id":0,"name":"put_u16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:133:2323":{"id":"0:133:2323","crate_id":0,"name":"put_i64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[735,4],"end":[737,5]},"visibility":"default","docs":"Writes a signed 64 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i64_le(0x0102030405060708);\nassert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12167:31912":{"id":"1:12167:31912","crate_id":1,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:82:1849":{"id":"0:82:1849","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1353,4],"end":[1355,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12188:31921":{"id":"1:12188:31921","crate_id":1,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"5:11980:418","self::pattern":"1:11778:3544"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:981:2009":{"id":"0:981:2009","crate_id":0,"name":"get_u64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:987:2056":{"id":"0:987:2056","crate_id":0,"name":"get_uint_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:772:613":{"id":"0:772:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1569,4],"end":[1571,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12194:31923":{"id":"1:12194:31923","crate_id":1,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"1:11739:127","`FromStr`":"1:11738:3543"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:41733:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"1:11738:3543","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"1:11738:3543","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:223:2498":{"id":"0:223:2498","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/iter.rs","begin":[105,4],"end":[107,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BytesMut};\n\nlet buf = BytesMut::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\n\niter.get_mut().advance(1);\n\nassert_eq!(iter.next(), Some(b'c'));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:743":{"id":"0:743","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1487,0],"end":[1491,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"slice":{"primitive":"u8"}},"items":["0:744:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1386,0],"end":[1420,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_bytes","put_u64","put_f32","put_f32_ne","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne"],"trait":{"name":"BufMut","id":"0:106:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"items":["0:163:2177","0:164:2222","0:165:2195","0:166:2237","0:167:2247"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2249-0:381:1698":{"id":"b:1:2249-0:381:1698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2251:2630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:979:2000":{"id":"0:979:2000","crate_id":0,"name":"get_i32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1031:2248":{"id":"0:1031:2248","crate_id":0,"name":"put_u8","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1007:1977":{"id":"0:1007:1977","crate_id":0,"name":"get_i16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2683:220-0:1090:1830":{"id":"a:1:2683:220-0:1090:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1008:1982":{"id":"0:1008:1982","crate_id":0,"name":"get_u32","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2539-0:1084:1829":{"id":"b:1:2539-0:1084:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2542:2711"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:448:613":{"id":"0:448:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[650,4],"end":[652,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:449":{"id":"0:449","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[655,0],"end":[659,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:450:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:191:2457":{"id":"0:191:2457","crate_id":0,"name":"first_mut","span":{"filename":"src/buf/chain.rs","begin":[74,4],"end":[76,5]},"visibility":"public","docs":"Gets a mutable reference to the first underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nbuf.first_mut().advance(1);\n\nlet full = buf.copy_to_bytes(9);\nassert_eq!(full, b\"elloworld\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:633:2428":{"id":"0:633:2428","crate_id":0,"name":"set_len","span":{"filename":"src/bytes_mut.rs","begin":[502,4],"end":[505,5]},"visibility":"public","docs":"Sets the length of the buffer.\n\nThis will explicitly set the size of the buffer without actually\nmodifying the data, so it is up to the caller to ensure that the data\nhas been initialized.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut b = BytesMut::from(&b\"hello world\"[..]);\n\nunsafe {\n    b.set_len(5);\n}\n\nassert_eq!(&b[..], b\"hello\");\n\nunsafe {\n    b.set_len(11);\n}\n\nassert_eq!(&b[..], b\"hello world\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:784:1040":{"id":"0:784:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1602,4],"end":[1604,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:48:2020":{"id":"0:48:2020","crate_id":0,"name":"get_i64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[669,4],"end":[671,5]},"visibility":"default","docs":"Gets a signed 64 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_i64_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:38:1982":{"id":"0:38:1982","crate_id":0,"name":"get_u32","span":{"filename":"src/buf/buf_impl.rs","begin":[460,4],"end":[462,5]},"visibility":"default","docs":"Gets an unsigned 32 bit integer from `self` in the big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_u32());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:391:944":{"id":"0:391:944","crate_id":0,"name":"new","span":{"filename":"src/bytes.rs","begin":[134,4],"end":[139,5]},"visibility":"public","docs":"Creates a new empty `Bytes`.\n\nThis will not allocate and the returned `Bytes` handle will be empty.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::new();\nassert_eq!(&b[..], b\"\");\n```","links":{},"attrs":["#[inline]","#[cfg(not(all(loom, test)))]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2252-0:381:1698":{"id":"b:1:2252-0:381:1698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2254:3111"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:685:1040":{"id":"0:685:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1195,4],"end":[1197,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:322:1846":{"id":"0:322:1846","crate_id":0,"name":"chunk","span":{"filename":"src/buf/vec_deque.rs","begin":[10,4],"end":[17,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1061:2279":{"id":"0:1061:2279","crate_id":0,"name":"put_i16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2740:3702-0:1090:1830":{"id":"a:1:2740:3702-0:1090:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2740:3702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2740:3702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1018:2020":{"id":"0:1018:2020","crate_id":0,"name":"get_i64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1136:186":{"id":"0:1136:186","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:457":{"id":"0:457","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[679,0],"end":[683,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:458:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1113":{"id":"0:1113","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:2984:2555","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Range","id":"1:39271:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1114:774"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1003:1960":{"id":"0:1003:1960","crate_id":0,"name":"get_u16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:118:2264":{"id":"0:118:2264","crate_id":0,"name":"put_u16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[385,4],"end":[387,5]},"visibility":"default","docs":"Writes an unsigned 16 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u16_le(0x0809);\nassert_eq!(buf, b\"\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:125:2295":{"id":"0:125:2295","crate_id":0,"name":"put_u32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[551,4],"end":[553,5]},"visibility":"default","docs":"Writes an unsigned 32 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u32_ne(0x0809A0A1);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");\n} else {\n    assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2554-0:1084:1829":{"id":"b:1:2554-0:1084:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2557:128","1:2558:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:215:788":{"id":"0:215:788","crate_id":0,"name":"into_iter","span":{"filename":"src/buf/chain.rs","begin":[239,4],"end":[241,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:7268:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:260:2471":{"id":"0:260:2471","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/reader.rs","begin":[60,4],"end":[62,5]},"visibility":"public","docs":"Consumes this `Reader`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::Buf;\nuse std::io;\n\nlet mut buf = b\"hello world\".reader();\nlet mut dst = vec![];\n\nio::copy(&mut buf, &mut dst).unwrap();\n\nlet buf = buf.into_inner();\nassert_eq!(0, buf.remaining());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"B"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:65:2090":{"id":"0:65:2090","crate_id":0,"name":"get_f64","span":{"filename":"src/buf/buf_impl.rs","begin":[1039,4],"end":[1041,5]},"visibility":"default","docs":"Gets an IEEE754 double-precision (8 bytes) floating point number from\n`self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33 hello\"[..];\nassert_eq!(1.2f64, buf.get_f64());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2549-0:1097:1833":{"id":"b:1:2549-0:1097:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2552:128","1:2553:1488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[65,0],"end":[72,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["read_exact","read_vectored","by_ref","chain","read_to_string","read_buf","is_read_vectored","take","read_buf_exact","read_to_end","bytes"],"trait":{"name":"Read","id":"5:3435:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:263:2528"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:663:2237":{"id":"0:663:2237","crate_id":0,"name":"put_slice","span":{"filename":"src/bytes_mut.rs","begin":[1122,4],"end":[1124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:509:697":{"id":"0:509:697","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[881,4],"end":[884,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bytes",{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Vec","id":"4:6888:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1130":{"id":"0:1130","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:2980:2554","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeTo","id":"1:39315:202","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1131:186","0:1132:773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1114:774":{"id":"0:1114:774","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"Range","id":"1:39271:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:458:1040":{"id":"0:458:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[680,4],"end":[682,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:666:315":{"id":"0:666:315","crate_id":0,"name":"as_ref","span":{"filename":"src/bytes_mut.rs","begin":[1142,4],"end":[1144,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:970:1967":{"id":"0:970:1967","crate_id":0,"name":"get_u16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:168":{"id":"0:168","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1422,0],"end":[1489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_bytes","put_u64","put_f32","put_f32_ne","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne"],"trait":{"name":"BufMut","id":"0:106:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Vec","id":"4:6888:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:169:2177","0:170:2195","0:171:2222","0:172:2108","0:174:2237","0:175:2247"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:7276:788":{"id":"1:7276:788","crate_id":1,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2252-0:1097:1833":{"id":"b:1:2252-0:1097:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2254:3111"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:988:2061":{"id":"0:988:2061","crate_id":0,"name":"get_uint_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1151:671":{"id":"0:1151:671","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[36,0],"end":[36,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:9183:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:9172:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1089:671":{"id":"0:1089:671","crate_id":0,"name":"fmt","span":{"filename":"src/buf/iter.rs","begin":[23,9],"end":[23,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:9183:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:9172:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2252-0:1090:1830":{"id":"b:1:2252-0:1090:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2254:3111"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:620:2107":{"id":"0:620:2107","crate_id":0,"name":"with_capacity","span":{"filename":"src/bytes_mut.rs","begin":[142,4],"end":[144,5]},"visibility":"public","docs":"Creates a new `BytesMut` with the specified capacity.\n\nThe returned `BytesMut` will be able to hold at least `capacity` bytes\nwithout reallocating.\n\nIt is important to note that this function does not specify the length\nof the returned `BytesMut`, but only the capacity.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut bytes = BytesMut::with_capacity(64);\n\n// `bytes` contains no data, even though there is capacity\nassert_eq!(bytes.len(), 0);\n\nbytes.put(&b\"hello world\"[..]);\n\nassert_eq!(&bytes[..], b\"hello world\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["capacity",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:1140:1834":{"id":"b:1:3319-0:1140:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1834","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:3321:1501"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:256":{"id":"0:256","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[19,0],"end":[63,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Reader","id":"0:1097:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:258:2144","0:259:2498","0:260:2471"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:751":{"id":"0:751","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1511,0],"end":[1515,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:752:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:204":{"id":"0:204","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[193,0],"end":[229,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_bytes","put_u64","put_f32","put_f32_ne","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne"],"trait":{"name":"BufMut","id":"0:106:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1828","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["0:207:2177","0:208:2222","0:209:2195"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12080:31892":{"id":"1:12080:31892","crate_id":1,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12107:31898":{"id":"1:12107:31898","crate_id":1,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"1:43814:7498","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12162:31910":{"id":"1:12162:31910","crate_id":1,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"1:11778:3544","`DoubleEndedIterator`":"1:7306:121","prim@char":"5:11980:418","str::match_indices":"1:12159:31909"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"1:43718:7495","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11798:10734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1153:671":{"id":"0:1153:671","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[37,0],"end":[37,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:9183:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:9172:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:748:1040":{"id":"0:748:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1500,4],"end":[1502,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:190:2451":{"id":"0:190:2451","crate_id":0,"name":"first_ref","span":{"filename":"src/buf/chain.rs","begin":[55,4],"end":[57,5]},"visibility":"public","docs":"Gets a reference to the first underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet buf = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nassert_eq!(buf.first_ref()[..], b\"hello\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:499":{"id":"0:499","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[802,0],"end":[806,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:500:697"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2543-0:1075:1828":{"id":"b:1:2543-0:1075:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1828","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2545:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12108:27697":{"id":"1:12108:27697","crate_id":1,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"1:43842:7253","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:44:2005":{"id":"0:44:2005","crate_id":0,"name":"get_u64","span":{"filename":"src/buf/buf_impl.rs","begin":[586,4],"end":[588,5]},"visibility":"default","docs":"Gets an unsigned 64 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_u64());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:120:2276":{"id":"0:120:2276","crate_id":0,"name":"put_i16","span":{"filename":"src/buf/buf_mut.rs","begin":[433,4],"end":[435,5]},"visibility":"default","docs":"Writes a signed 16 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i16(0x0809);\nassert_eq!(buf, b\"\\x08\\x09\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:214:1829":{"id":"0:214:1829","crate_id":0,"name":"IntoIter","span":{"filename":"src/buf/chain.rs","begin":[237,4],"end":[237,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IntoIter","id":"0:1084:1829","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Chain","id":"0:1075:1828","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:660:2222":{"id":"0:660:2222","crate_id":0,"name":"chunk_mut","span":{"filename":"src/bytes_mut.rs","begin":[1100,4],"end":[1105,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1135":{"id":"0:1135","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:2980:2554","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeToInclusive","id":"1:39359:203","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1136:186","0:1137:773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2554-0:1140:1834":{"id":"b:1:2554-0:1140:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1834","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2557:128","1:2558:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:470:1040":{"id":"0:470:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[716,4],"end":[718,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:747":{"id":"0:747","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1499,0],"end":[1503,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:748:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:39:1986":{"id":"0:39:1986","crate_id":0,"name":"get_u32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[480,4],"end":[482,5]},"visibility":"default","docs":"Gets an unsigned 32 bit integer from `self` in the little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_u32_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:780:1040":{"id":"0:780:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1590,4],"end":[1592,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1028:2222":{"id":"0:1028:2222","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12196:31924":{"id":"1:12196:31924","crate_id":1,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:126:2298":{"id":"0:126:2298","crate_id":0,"name":"put_i32","span":{"filename":"src/buf/buf_mut.rs","begin":[573,4],"end":[575,5]},"visibility":"default","docs":"Writes a signed 32 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i32(0x0809A0A1);\nassert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:117:2259":{"id":"0:117:2259","crate_id":0,"name":"put_u16","span":{"filename":"src/buf/buf_mut.rs","begin":[363,4],"end":[365,5]},"visibility":"default","docs":"Writes an unsigned 16 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u16(0x0809);\nassert_eq!(buf, b\"\\x08\\x09\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2249-0:1097:1833":{"id":"b:1:2249-0:1097:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2251:2630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2690:2120-0:300:1832":{"id":"a:1:2690:2120-0:300:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"1:12197:31925":{"id":"1:12197:31925","crate_id":1,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"1:39628:27398","Self::is_ascii":"1:12196:31924"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"1:39628:27398","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1112:773":{"id":"0:1112:773","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"Range","id":"1:39271:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:240:2144":{"id":"0:240:2144","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/limit.rs","begin":[27,4],"end":[29,5]},"visibility":"public","docs":"Gets a reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:682:3534":{"id":"4:682:3534","crate_id":4,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:700:3112":{"id":"0:700:3112","crate_id":0,"name":"write_fmt","span":{"filename":"src/bytes_mut.rs","begin":[1249,4],"end":[1251,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["args",{"resolved_path":{"name":"fmt::Arguments","id":"1:42685:73","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9172:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5516:32602":{"id":"4:5516:32602","crate_id":4,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"4:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8316:3683-0:300:1832":{"id":"a:1:8316:3683-0:300:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8316:3683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:311:2605":{"id":"0:311:2605","crate_id":0,"name":"as_uninit_slice_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[153,4],"end":[155,5]},"visibility":"public","docs":"Return a `&mut [MaybeUninit<u8>]` to this slice's buffer.\n\n# Safety\n\nThe caller **must not** read from the referenced memory and **must not** write\n**uninitialized** bytes to the slice either. This is because `BufMut` implementation\nthat created the `UninitSlice` knows which parts are initialized. Writing uninitalized\nbytes to the slice may cause the `BufMut` to read those bytes and trigger undefined\nbehavior.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut data = [0, 1, 2];\nlet mut slice = &mut data[..];\nunsafe {\n    let uninit_slice = BufMut::chunk_mut(&mut slice).as_uninit_slice_mut();\n};\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"1:30345:2553","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:107:2177":{"id":"0:107:2177","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[63,4],"end":[63,37]},"visibility":"default","docs":"Returns the number of bytes that can be written from the current\nposition until the end of the buffer is reached.\n\nThis value is greater than or equal to the length of the slice returned\nby `chunk_mut()`.\n\nWriting to a `BufMut` may involve allocating more memory on the fly.\nImplementations may fail before reaching the number of bytes indicated\nby this method if they encounter an allocation failure.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 10];\nlet mut buf = &mut dst[..];\n\nlet original_remaining = buf.remaining_mut();\nbuf.put(&b\"hello\"[..]);\n\nassert_eq!(original_remaining - 5, buf.remaining_mut());\n```\n\n# Implementer notes\n\nImplementations of `remaining_mut` should ensure that the return value\ndoes not change unless a call is made to `advance_mut` or any other\nfunction that is documented to change the `BufMut`'s current position.\n\n# Note\n\n`remaining_mut` may return value smaller than actual available space.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:497":{"id":"0:497","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[796,0],"end":[800,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"primitive":"u8"}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:498:697"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:737":{"id":"0:737","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1469,0],"end":[1473,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:738:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:7272-0:1084:1829":{"id":"b:1:7272-0:1084:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7384:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:7274:2473","1:7275:1829","1:7276:788"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:1126:186":{"id":"0:1126:186","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:340-0:22:1693":{"id":"0:340-0:22:1693","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[32,0],"end":[32,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::buf_impl::Buf","name":"Buf","id":"0:22:1693","glob":false}}},"0:349-0:1140:1834":{"id":"0:349-0:1140:1834","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[41,31],"end":[41,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"self::writer::Writer","name":"Writer","id":"0:1140:1834","glob":false}}},"0:390":{"id":"0:390","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[119,0],"end":[516,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:391:944","0:393:2697","0:394:816","0:395:1914","0:396:2424","0:397:1377","0:399:2744","0:400:2762","0:401:2771","0:402:2783","0:403:2789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12138:31903":{"id":"1:12138:31903","crate_id":1,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"1:11778:3544","str::split":"1:12126:2978","prim@char":"5:11980:418","str::split_terminator":"1:12135:31902"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"1:43618:7493","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11798:10734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144:2365":{"id":"0:144:2365","crate_id":0,"name":"put_int","span":{"filename":"src/buf/buf_mut.rs","begin":[997,4],"end":[999,5]},"visibility":"default","docs":"Writes low `nbytes` of a signed integer to `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_int(0x0504010203, 3);\nassert_eq!(buf, b\"\\x01\\x02\\x03\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self` or if `nbytes` is greater than 8.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1041:2295":{"id":"0:1041:2295","crate_id":0,"name":"put_u32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:42:1997":{"id":"0:42:1997","crate_id":0,"name":"get_i32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[543,4],"end":[545,5]},"visibility":"default","docs":"Gets a signed 32 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_i32_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1014:2005":{"id":"0:1014:2005","crate_id":0,"name":"get_u64","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1083:671":{"id":"0:1083:671","crate_id":0,"name":"fmt","span":{"filename":"src/buf/chain.rs","begin":[31,9],"end":[31,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:9183:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:9172:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2554-0:1103:1831":{"id":"b:1:2554-0:1103:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1831","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2557:128","1:2558:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:310:1941":{"id":"0:310:1941","crate_id":0,"name":"as_mut_ptr","span":{"filename":"src/buf/uninit_slice.rs","begin":[127,4],"end":[129,5]},"visibility":"public","docs":"Return a raw pointer to the slice's buffer.\n\n# Safety\n\nThe caller **must not** read from the referenced memory and **must not**\nwrite **uninitialized** bytes to the slice either.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut data = [0, 1, 2];\nlet mut slice = &mut data[..];\nlet ptr = BufMut::chunk_mut(&mut slice).as_mut_ptr();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1138":{"id":"0:1138","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:2984:2555","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeToInclusive","id":"1:39359:203","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1139:774"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12204:31930":{"id":"1:12204:31930","crate_id":1,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:4536:31930"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"1:43867:7435","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12153:3215":{"id":"1:12153:3215","crate_id":1,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"1:11778:3544","`DoubleEndedIterator`":"1:7306:121","prim@char":"5:11980:418","str::matches":"1:12153:3215"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"1:43754:7496","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:683:26787":{"id":"4:683:26787","crate_id":4,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:978:1997":{"id":"0:978:1997","crate_id":0,"name":"get_i32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:154:1827":{"id":"0:154:1827","crate_id":0,"name":"writer","span":{"filename":"src/buf/buf_mut.rs","begin":[1243,4],"end":[1248,5]},"visibility":"default","docs":"Creates an adaptor which implements the `Write` trait for `self`.\n\nThis function returns a new value which implements `Write` by adapting\nthe `Write` trait functions to the `BufMut` trait functions. Given that\n`BufMut` operations are infallible, none of the `Write` functions will\nreturn with `Err`.\n\n# Examples\n\n```\nuse bytes::BufMut;\nuse std::io::Write;\n\nlet mut buf = vec![].writer();\n\nlet num = buf.write(&b\"hello world\"[..]).unwrap();\nassert_eq!(11, num);\n\nlet buf = buf.into_inner();\n\nassert_eq!(*buf, b\"hello world\"[..]);\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Writer","id":"0:1140:1834","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:507:697":{"id":"0:507:697","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[875,4],"end":[877,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:70:1824":{"id":"0:70:1824","crate_id":0,"name":"take","span":{"filename":"src/buf/buf_impl.rs","begin":[1134,4],"end":[1139,5]},"visibility":"default","docs":"Creates an adaptor which will read at most `limit` bytes from `self`.\n\nThis function returns a new instance of `Buf` which will read at most\n`limit` bytes.\n\n# Examples\n\n```\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\"[..].take(5);\nlet mut dst = vec![];\n\ndst.put(&mut buf);\nassert_eq!(dst, b\"hello\");\n\nlet mut buf = buf.into_inner();\ndst.clear();\ndst.put(&mut buf);\nassert_eq!(dst, b\" world\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["limit",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Take","id":"0:1103:1831","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12159:31909":{"id":"1:12159:31909","crate_id":1,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"1:11778:3544","`DoubleEndedIterator`":"1:7306:121","prim@char":"5:11980:418","str::rmatch_indices":"1:12162:31910"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"1:43700:7494","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1148":{"id":"0:1148","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[35,0],"end":[35,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"1:9219:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1149:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12191:31922":{"id":"1:12191:31922","crate_id":1,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"5:11980:418","self::pattern":"1:11778:3544"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11798:10734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:637:3081":{"id":"0:637:3081","crate_id":0,"name":"unsplit","span":{"filename":"src/bytes_mut.rs","begin":[805,4],"end":[814,5]},"visibility":"public","docs":"Absorbs a `BytesMut` that was previously split off.\n\nIf the two `BytesMut` objects were previously contiguous and not mutated\nin a way that causes re-allocation i.e., if `other` was created by\ncalling `split_off` on this `BytesMut`, then this is an `O(1)` operation\nthat just decreases a reference count and sets a few indices.\nOtherwise this method degenerates to\n`self.extend_from_slice(other.as_ref())`.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::with_capacity(64);\nbuf.extend_from_slice(b\"aaabbbcccddd\");\n\nlet split = buf.split_off(6);\nassert_eq!(b\"aaabbb\", &buf[..]);\nassert_eq!(b\"cccddd\", &split[..]);\n\nbuf.unsplit(split);\nassert_eq!(b\"aaabbbcccddd\", &buf[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:427:2630":{"id":"0:427:2630","crate_id":0,"name":"borrow","span":{"filename":"src/bytes.rs","begin":[598,4],"end":[600,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1033:2259":{"id":"0:1033:2259","crate_id":0,"name":"put_u16","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1068:2304":{"id":"0:1068:2304","crate_id":0,"name":"put_i32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1032:2255":{"id":"0:1032:2255","crate_id":0,"name":"put_i8","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:723:700":{"id":"0:723:700","crate_id":0,"name":"from_iter","span":{"filename":"src/bytes_mut.rs","begin":[1319,4],"end":[1321,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["into_iter",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:415:1846":{"id":"0:415:1846","crate_id":0,"name":"chunk","span":{"filename":"src/bytes.rs","begin":[543,4],"end":[545,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:351-0:22:1693":{"id":"0:351-0:22:1693","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[85,21],"end":[85,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::buf::Buf","name":"Buf","id":"0:22:1693","glob":false}}},"0:445:429":{"id":"0:445:429","crate_id":0,"name":"cmp","span":{"filename":"src/bytes.rs","begin":[642,4],"end":[644,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:695:2630":{"id":"0:695:2630","crate_id":0,"name":"borrow","span":{"filename":"src/bytes_mut.rs","begin":[1226,4],"end":[1228,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:320":{"id":"0:320","crate_id":0,"name":null,"span":{"filename":"src/buf/vec_deque.rs","begin":[5,0],"end":[22,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["copy_to_slice","chunks_vectored","get_f64_ne","get_u16_le","reader","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_ne","get_u32","get_i128_le","get_i128","get_u128_ne","has_remaining","get_u16_ne","get_u128","get_i128_ne","get_f32_ne","take","chain","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","get_uint"],"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VecDeque","id":"4:4350:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:321:1883","0:322:1846","0:323:1849"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:121:2279":{"id":"0:121:2279","crate_id":0,"name":"put_i16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[455,4],"end":[457,5]},"visibility":"default","docs":"Writes a signed 16 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i16_le(0x0809);\nassert_eq!(buf, b\"\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:71:1821":{"id":"0:71:1821","crate_id":0,"name":"chain","span":{"filename":"src/buf/buf_impl.rs","begin":[1156,4],"end":[1161,5]},"visibility":"default","docs":"Creates an adaptor which will chain this buffer with another.\n\nThe returned `Buf` instance will first consume all bytes from `self`.\nAfterwards the output is equivalent to the output of next.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut chain = b\"hello \"[..].chain(&b\"world\"[..]);\n\nlet full = chain.copy_to_bytes(11);\nassert_eq!(full.chunk(), b\"hello world\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["next",{"generic":"U"}]],"output":{"resolved_path":{"name":"Chain","id":"0:1075:1828","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:786:613":{"id":"0:786:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1608,4],"end":[1610,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:58:2061":{"id":"0:58:2061","crate_id":0,"name":"get_uint_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[881,4],"end":[887,5]},"visibility":"default","docs":"Gets an unsigned n-byte integer from `self` in native-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03 hello\",\n    false => b\"\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x010203, buf.get_uint_ne(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2543-0:599:1699":{"id":"b:1:2543-0:599:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2545:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:980:2005":{"id":"0:980:2005","crate_id":0,"name":"get_u64","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:969:1960":{"id":"0:969:1960","crate_id":0,"name":"get_u16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1034:2264":{"id":"0:1034:2264","crate_id":0,"name":"put_u16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1111:186":{"id":"0:1111:186","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:438:700":{"id":"0:438:700","crate_id":0,"name":"from_iter","span":{"filename":"src/bytes.rs","begin":[622,4],"end":[624,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["into_iter",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:138:2342":{"id":"0:138:2342","crate_id":0,"name":"put_i128","span":{"filename":"src/buf/buf_mut.rs","begin":[853,4],"end":[855,5]},"visibility":"default","docs":"Writes a signed 128 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i128(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1056:2255":{"id":"0:1056:2255","crate_id":0,"name":"put_i8","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2740:3702-0:300:1832":{"id":"a:1:2740:3702-0:300:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2740:3702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:676:697":{"id":"0:676:697","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1171,4],"end":[1173,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:81:1846":{"id":"0:81:1846","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1348,4],"end":[1350,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:959:1883":{"id":"0:959:1883","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110:2222":{"id":"0:110:2222","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[175,4],"end":[175,48]},"visibility":"default","docs":"Returns a mutable slice starting at the current BufMut position and of\nlength between 0 and `BufMut::remaining_mut()`. Note that this *can* be shorter than the\nwhole remainder of the buffer (this allows non-continuous implementation).\n\nThis is a lower level function. Most operations are done with other\nfunctions.\n\nThe returned byte slice may represent uninitialized memory.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = Vec::with_capacity(16);\n\nunsafe {\n    // MaybeUninit::as_mut_ptr\n    buf.chunk_mut()[0..].as_mut_ptr().write(b'h');\n    buf.chunk_mut()[1..].as_mut_ptr().write(b'e');\n\n    buf.advance_mut(2);\n\n    buf.chunk_mut()[0..].as_mut_ptr().write(b'l');\n    buf.chunk_mut()[1..].as_mut_ptr().write(b'l');\n    buf.chunk_mut()[2..].as_mut_ptr().write(b'o');\n\n    buf.advance_mut(3);\n}\n\nassert_eq!(5, buf.len());\nassert_eq!(buf, b\"hello\");\n```\n\n# Implementer notes\n\nThis function should never panic. `chunk_mut` should return an empty\nslice **if and only if** `remaining_mut()` returns 0. In other words,\n`chunk_mut()` returning an empty slice implies that `remaining_mut()` will\nreturn 0 and `remaining_mut()` returning 0 implies that `chunk_mut()` will\nreturn an empty slice.\n\nThis function may trigger an out-of-memory abort if it tries to allocate\nmemory and fails to do so.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:64:2086":{"id":"0:64:2086","crate_id":0,"name":"get_f32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1020,5]},"visibility":"default","docs":"Gets an IEEE754 single-precision (4 bytes) floating point number from\n`self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x3F\\x99\\x99\\x9A hello\",\n    false => b\"\\x9A\\x99\\x99\\x3F hello\",\n};\nassert_eq!(1.2f32, buf.get_f32_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:237":{"id":"0:237","crate_id":0,"name":null,"span":{"filename":"src/buf/limit.rs","begin":[18,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Limit","id":"0:1090:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:239:2471","0:240:2144","0:241:2498","0:242:1822","0:243:2513"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:967:1950":{"id":"0:967:1950","crate_id":0,"name":"get_i8","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1124:774":{"id":"0:1124:774","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeFull","id":"1:39255:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:712":{"id":"0:712","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1278,0],"end":[1296,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"name":"Extend","id":"1:7277:3113","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:713:3067"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2700:228-0:1103:1831":{"id":"a:1:2700:228-0:1103:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1831","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2252-0:1075:1828":{"id":"b:1:2252-0:1075:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1828","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2254:3111"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:478:1040":{"id":"0:478:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[740,4],"end":[742,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12079:31891":{"id":"1:12079:31891","crate_id":1,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1066:2298":{"id":"0:1066:2298","crate_id":0,"name":"put_i32","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:468:613":{"id":"0:468:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[710,4],"end":[712,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12089:1847":{"id":"1:12089:1847","crate_id":1,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"1:41591:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:9879:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:9879:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:472:613":{"id":"0:472:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[722,4],"end":[724,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:111:2108":{"id":"0:111:2108","crate_id":0,"name":"put","span":{"filename":"src/buf/buf_mut.rs","begin":[197,4],"end":[219,5]},"visibility":"default","docs":"Transfer bytes into `self` from `src` and advance the cursor by the\nnumber of bytes written.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\n\nbuf.put_u8(b'h');\nbuf.put(&b\"ello\"[..]);\nbuf.put(&b\" world\"[..]);\n\nassert_eq!(buf, b\"hello world\");\n```\n\n# Panics\n\nPanics if `self` does not have enough capacity to contain `src`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"super::Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:132:2320":{"id":"0:132:2320","crate_id":0,"name":"put_i64","span":{"filename":"src/buf/buf_mut.rs","begin":[713,4],"end":[715,5]},"visibility":"default","docs":"Writes a signed 64 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i64(0x0102030405060708);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:23:1883":{"id":"0:23:1883","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[102,4],"end":[102,33]},"visibility":"default","docs":"Returns the number of bytes between the current position and the end of\nthe buffer.\n\nThis value is greater than or equal to the length of the slice returned\nby `chunk()`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(buf.remaining(), 11);\n\nbuf.get_u8();\n\nassert_eq!(buf.remaining(), 10);\n```\n\n# Implementer notes\n\nImplementations of `remaining` should ensure that the return value does\nnot change unless a call is made to `advance` or any other function that\nis documented to change the `Buf`'s current position.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:279:2498":{"id":"0:279:2498","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/take.rs","begin":[77,4],"end":[79,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\".take(2);\nlet mut dst = vec![];\n\nbuf.get_mut().advance(2);\n\ndst.put(&mut buf);\nassert_eq!(*dst, b\"ll\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:467":{"id":"0:467","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[709,0],"end":[713,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Vec","id":"4:6888:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:468:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2539-0:1075:1828":{"id":"b:1:2539-0:1075:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1828","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2542:2711"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:47:2017":{"id":"0:47:2017","crate_id":0,"name":"get_i64","span":{"filename":"src/buf/buf_impl.rs","begin":[649,4],"end":[651,5]},"visibility":"default","docs":"Gets a signed 64 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_i64());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:109:2200":{"id":"0:109:2200","crate_id":0,"name":"has_remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[124,4],"end":[126,5]},"visibility":"default","docs":"Returns true if there is space in `self` for more bytes.\n\nThis is equivalent to `self.remaining_mut() != 0`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 5];\nlet mut buf = &mut dst[..];\n\nassert!(buf.has_remaining_mut());\n\nbuf.put(&b\"hello\"[..]);\n\nassert!(!buf.has_remaining_mut());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:85:1883":{"id":"0:85:1883","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1360,4],"end":[1369,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2252-0:300:1832":{"id":"b:1:2252-0:300:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2254:3111"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:765":{"id":"0:765","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1553,0],"end":[1557,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:766:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:769":{"id":"0:769","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1565,0],"end":[1572,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:772:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:423":{"id":"0:423","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[588,0],"end":[595,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"1:9428:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:424:731"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12135:31902":{"id":"1:12135:31902","crate_id":1,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"1:11778:3544","str::split":"1:12126:2978","prim@char":"5:11980:418","`DoubleEndedIterator`":"1:7306:121","str::rsplit_terminator":"1:12138:31903"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"1:43600:7492","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:466:1040":{"id":"0:466:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[704,4],"end":[706,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Vec","id":"4:6888:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:7275:1829":{"id":"1:7275:1829","crate_id":1,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"I"}}}},"0:284:1883":{"id":"0:284:1883","crate_id":0,"name":"remaining","span":{"filename":"src/buf/take.rs","begin":[133,4],"end":[135,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2252-0:599:1699":{"id":"b:1:2252-0:599:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2254:3111"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:246:2177":{"id":"0:246:2177","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/limit.rs","begin":[60,4],"end":[62,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:711:788":{"id":"0:711:788","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes_mut.rs","begin":[1273,4],"end":[1275,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:7268:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:400:2762":{"id":"0:400:2762","crate_id":0,"name":"split_off","span":{"filename":"src/bytes.rs","begin":[362,4],"end":[385,5]},"visibility":"public","docs":"Splits the bytes into two at the given index.\n\nAfterwards `self` contains elements `[0, at)`, and the returned `Bytes`\ncontains elements `[at, len)`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut a = Bytes::from(&b\"hello world\"[..]);\nlet b = a.split_off(5);\n\nassert_eq!(&a[..], b\"hello\");\nassert_eq!(&b[..], b\" world\");\n```\n\n# Panics\n\nPanics if `at > len`.","links":{},"attrs":["#[must_use = \"consider Bytes::truncate if you don't need the other half\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["at",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:754:613":{"id":"0:754:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1518,4],"end":[1520,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Vec","id":"4:6888:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:343-0:1084:1829":{"id":"0:343-0:1084:1829","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[35,0],"end":[35,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::iter::IntoIter","name":"IntoIter","id":"0:1084:1829","glob":false}}},"0:432":{"id":"0:432","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[612,0],"end":[619,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:434:2473","0:435:1829","0:436:788"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:977:1994":{"id":"0:977:1994","crate_id":0,"name":"get_i32","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:964:1915":{"id":"0:964:1915","crate_id":0,"name":"has_remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:758:613":{"id":"0:758:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1530,4],"end":[1532,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:1695":{"id":"0:0:1695","crate_id":0,"name":"bytes","span":{"filename":"src/lib.rs","begin":[1,0],"end":[117,1]},"visibility":"public","docs":"Provides abstractions for working with bytes.\n\nThe `bytes` crate provides an efficient byte buffer structure\n([`Bytes`](struct.Bytes.html)) and traits for working with buffer\nimplementations ([`Buf`], [`BufMut`]).\n\n[`Buf`]: trait.Buf.html\n[`BufMut`]: trait.BufMut.html\n\n# `Bytes`\n\n`Bytes` is an efficient container for storing and operating on contiguous\nslices of memory. It is intended for use primarily in networking code, but\ncould have applications elsewhere as well.\n\n`Bytes` values facilitate zero-copy network programming by allowing multiple\n`Bytes` objects to point to the same underlying memory. This is managed by\nusing a reference count to track when the memory is no longer needed and can\nbe freed.\n\nA `Bytes` handle can be created directly from an existing byte store (such as `&[u8]`\nor `Vec<u8>`), but usually a `BytesMut` is used first and written to. For\nexample:\n\n```rust\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(1024);\nbuf.put(&b\"hello world\"[..]);\nbuf.put_u16(1234);\n\nlet a = buf.split();\nassert_eq!(a, b\"hello world\\x04\\xD2\"[..]);\n\nbuf.put(&b\"goodbye world\"[..]);\n\nlet b = buf.split();\nassert_eq!(b, b\"goodbye world\"[..]);\n\nassert_eq!(buf.capacity(), 998);\n```\n\nIn the above example, only a single buffer of 1024 is allocated. The handles\n`a` and `b` will share the underlying buffer and maintain indices tracking\nthe view into the buffer represented by the handle.\n\nSee the [struct docs] for more details.\n\n[struct docs]: struct.Bytes.html\n\n# `Buf`, `BufMut`\n\nThese two traits provide read and write access to buffers. The underlying\nstorage may or may not be in contiguous memory. For example, `Bytes` is a\nbuffer that guarantees contiguous memory, but a [rope] stores the bytes in\ndisjoint chunks. `Buf` and `BufMut` maintain cursors tracking the current\nposition in the underlying byte storage. When bytes are read or written, the\ncursor is advanced.\n\n[rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)\n\n## Relation with `Read` and `Write`\n\nAt first glance, it may seem that `Buf` and `BufMut` overlap in\nfunctionality with `std::io::Read` and `std::io::Write`. However, they\nserve different purposes. A buffer is the value that is provided as an\nargument to `Read::read` and `Write::write`. `Read` and `Write` may then\nperform a syscall, which has the potential of failing. Operations on `Buf`\nand `BufMut` are infallible.","links":{},"attrs":["#![warn(missing_docs, missing_debug_implementations, rust_2018_idioms)]","#![doc(test(no_crate_inject,\nattr(deny(warnings, rust_2018_idioms), allow(dead_code, unused_variables))))]","#![no_std]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:6:1692","0:351-0:22:1693","0:352-0:106:1694","0:856-0:381:1698","0:857-0:599:1699"],"is_stripped":false}}},"a:1:2740:3702-0:1103:1831":{"id":"a:1:2740:3702-0:1103:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2740:3702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2740:3702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1831","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:12085:2798":{"id":"1:12085:2798","crate_id":1,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"1:11345:10735"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:61:2071":{"id":"0:61:2071","crate_id":0,"name":"get_int_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[948,4],"end":[954,5]},"visibility":"default","docs":"Gets a signed n-byte integer from `self` in native-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03 hello\",\n    false => b\"\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x010203, buf.get_int_ne(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12201:31929":{"id":"1:12201:31929","crate_id":1,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:4538:31929"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"1:43849:7436","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:687:429":{"id":"0:687:429","crate_id":0,"name":"cmp","span":{"filename":"src/bytes_mut.rs","begin":[1201,4],"end":[1203,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:757":{"id":"0:757","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1529,0],"end":[1533,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Vec","id":"4:6888:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:758:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12141:31904":{"id":"1:12141:31904","crate_id":1,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"5:11980:418","self::pattern":"1:11778:3544","str::rsplitn":"1:12144:31905"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"1:43654:4122","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1000:1947":{"id":"0:1000:1947","crate_id":0,"name":"get_u8","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:22:1693":{"id":"0:22:1693","crate_id":0,"name":"Buf","span":{"filename":"src/buf/buf_impl.rs","begin":[76,0],"end":[1194,1]},"visibility":"public","docs":"Read bytes from a buffer.\n\nA buffer stores bytes in memory such that read operations are infallible.\nThe underlying storage may or may not be in contiguous memory. A `Buf` value\nis a cursor into the buffer. Reading from `Buf` advances the cursor\nposition. It can be thought of as an efficient `Iterator` for collections of\nbytes.\n\nThe simplest `Buf` is a `&[u8]`.\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(b'h', buf.get_u8());\nassert_eq!(b'e', buf.get_u8());\nassert_eq!(b'l', buf.get_u8());\n\nlet mut rest = [0; 8];\nbuf.copy_to_slice(&mut rest);\n\nassert_eq!(&rest[..], &b\"lo world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:23:1883","0:24:1846","0:25:1911","0:27:1849","0:28:1915","0:29:1850","0:30:1947","0:31:1950","0:32:1956","0:33:1960","0:34:1967","0:35:1971","0:36:1974","0:37:1977","0:38:1982","0:39:1986","0:40:1991","0:41:1994","0:42:1997","0:43:2000","0:44:2005","0:45:2009","0:46:2014","0:47:2017","0:48:2020","0:49:2023","0:50:2028","0:51:2032","0:52:2037","0:53:2040","0:54:2043","0:55:2046","0:56:2051","0:57:2056","0:58:2061","0:59:2065","0:60:2068","0:61:2071","0:62:2076","0:63:2081","0:64:2086","0:65:2090","0:66:2093","0:67:2097","0:68:2105","0:70:1824","0:71:1821","0:73:1823"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:652","0:83","0:282","0:79","0:75","0:77","0:195","0:320","0:413"]}}},"0:152:2395":{"id":"0:152:2395","crate_id":0,"name":"put_f64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1195,4],"end":[1197,5]},"visibility":"default","docs":"Writes  an IEEE754 double-precision (8 bytes) floating point number to\n`self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f64_ne(1.2f64);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33\");\n} else {\n    assert_eq!(buf, b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:335:2471":{"id":"0:335:2471","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/writer.rs","begin":[72,4],"end":[74,5]},"visibility":"public","docs":"Consumes this `Writer`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::BufMut;\nuse std::io;\n\nlet mut buf = vec![].writer();\nlet mut src = &b\"hello world\"[..];\n\nio::copy(&mut src, &mut buf).unwrap();\n\nlet buf = buf.into_inner();\nassert_eq!(*buf, b\"hello world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"B"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1121:186":{"id":"0:1121:186","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:502:697":{"id":"0:502:697","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[809,4],"end":[840,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["vec",{"resolved_path":{"name":"Vec","id":"4:6888:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1024:2068":{"id":"0:1024:2068","crate_id":0,"name":"get_int_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:171:2222":{"id":"0:171:2222","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1445,4],"end":[1455,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:963:1849":{"id":"0:963:1849","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1045:2308":{"id":"0:1045:2308","crate_id":0,"name":"put_u64","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1050:2326":{"id":"0:1050:2326","crate_id":0,"name":"put_i64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:599:1699":{"id":"b:1:3319-0:599:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3321:1501"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12198:31926":{"id":"1:12198:31926","crate_id":1,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:66:2093":{"id":"0:66:2093","crate_id":0,"name":"get_f64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1060,4],"end":[1062,5]},"visibility":"default","docs":"Gets an IEEE754 double-precision (8 bytes) floating point number from\n`self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F hello\"[..];\nassert_eq!(1.2f64, buf.get_f64_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:487":{"id":"0:487","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[769,0],"end":[776,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:490:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:480:613":{"id":"0:480:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[746,4],"end":[748,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:128:2304":{"id":"0:128:2304","crate_id":0,"name":"put_i32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[621,4],"end":[623,5]},"visibility":"default","docs":"Writes a signed 32 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i32_ne(0x0809A0A1);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");\n} else {\n    assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:139:2345":{"id":"0:139:2345","crate_id":0,"name":"put_i128_le","span":{"filename":"src/buf/buf_mut.rs","begin":[875,4],"end":[877,5]},"visibility":"default","docs":"Writes a signed 128 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i128_le(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:345-0:1103:1831":{"id":"0:345-0:1103:1831","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[37,0],"end":[37,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::take::Take","name":"Take","id":"0:1103:1831","glob":false}}},"0:300:1832":{"id":"0:300:1832","crate_id":0,"name":"UninitSlice","span":{"filename":"src/buf/uninit_slice.rs","begin":[22,0],"end":[22,42]},"visibility":"public","docs":"Uninitialized byte slice.\n\nReturned by `BufMut::chunk_mut()`, the referenced byte slice may be\nuninitialized. The wrapper provides safe access without introducing\nundefined behavior.\n\nThe safety invariants of this wrapper are:\n\n 1. Reading from an `UninitSlice` is undefined behavior.\n 2. Writing uninitialized bytes to an `UninitSlice` is undefined behavior.\n\nThe difference between `&mut UninitSlice` and `&mut [MaybeUninit<u8>]` is\nthat it is possible in safe code to write uninitialized bytes to an\n`&mut [MaybeUninit<u8>]`, which this type prohibits.","links":{},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:303","a:1:8316:3683-0:300:1832","a:1:2683:220-0:300:1832","a:1:2740:3702-0:300:1832","a:1:8315:3684-0:300:1832","a:1:2700:228-0:300:1832","a:1:2690:2120-0:300:1832","b:1:3319-0:300:1832","b:1:2249-0:300:1832","b:1:2252-0:300:1832","0:1135","0:1138","0:1110","0:1115","0:1123","0:1118","0:1113","0:314","0:1128","0:1120","0:1133","0:1125","0:1130"]}}},"0:624:2426":{"id":"0:624:2426","crate_id":0,"name":"capacity","span":{"filename":"src/bytes_mut.rs","begin":[211,4],"end":[213,5]},"visibility":"public","docs":"Returns the number of bytes the `BytesMut` can hold without reallocating.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet b = BytesMut::with_capacity(64);\nassert_eq!(b.capacity(), 64);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2683:220-0:1103:1831":{"id":"a:1:2683:220-0:1103:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1831","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1134:774":{"id":"0:1134:774","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeTo","id":"1:39315:202","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:275":{"id":"0:275","crate_id":0,"name":null,"span":{"filename":"src/buf/take.rs","begin":[19,0],"end":[130,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Take","id":"0:1103:1831","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:277:2471","0:278:2144","0:279:2498","0:280:1822","0:281:2513"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:30:1947":{"id":"0:30:1947","crate_id":0,"name":"get_u8","span":{"filename":"src/buf/buf_impl.rs","begin":[288,4],"end":[293,5]},"visibility":"default","docs":"Gets an unsigned 8 bit integer from `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08 hello\"[..];\nassert_eq!(8, buf.get_u8());\n```\n\n# Panics\n\nThis function panics if there is no more remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:755":{"id":"0:755","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1523,0],"end":[1527,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"4:6888:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}},{"type":{"resolved_path":{"name":"Global","id":"4:7184:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:756:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:315:671":{"id":"0:315:671","crate_id":0,"name":"fmt","span":{"filename":"src/buf/uninit_slice.rs","begin":[177,4],"end":[179,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9183:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9172:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:686":{"id":"0:686","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1200,0],"end":[1204,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"name":"Ord","id":"1:2349:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:687:429"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:623:1914":{"id":"0:623:1914","crate_id":0,"name":"is_empty","span":{"filename":"src/bytes_mut.rs","begin":[196,4],"end":[198,5]},"visibility":"public","docs":"Returns true if the `BytesMut` has a length of 0.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet b = BytesMut::with_capacity(64);\nassert!(b.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:727:700":{"id":"0:727:700","crate_id":0,"name":"from_iter","span":{"filename":"src/bytes_mut.rs","begin":[1325,4],"end":[1327,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["into_iter",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1145:671":{"id":"0:1145:671","crate_id":0,"name":"fmt","span":{"filename":"src/buf/writer.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:9183:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:9172:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:960:1846":{"id":"0:960:1846","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:199:1846":{"id":"0:199:1846","crate_id":0,"name":"chunk","span":{"filename":"src/buf/chain.rs","begin":[141,4],"end":[147,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:992:2105":{"id":"0:992:2105","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"crate::Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1073:2323":{"id":"0:1073:2323","crate_id":0,"name":"put_i64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:164:2222":{"id":"0:164:2222","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1393,4],"end":[1396,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1037:2279":{"id":"0:1037:2279","crate_id":0,"name":"put_i16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1040:2290":{"id":"0:1040:2290","crate_id":0,"name":"put_u32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2252-0:1103:1831":{"id":"b:1:2252-0:1103:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1831","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2254:3111"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1016:2014":{"id":"0:1016:2014","crate_id":0,"name":"get_u64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2549-0:1140:1834":{"id":"b:1:2549-0:1140:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1834","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2552:128","1:2553:1488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:419:230":{"id":"0:419:230","crate_id":0,"name":"Target","span":{"filename":"src/bytes.rs","begin":[573,4],"end":[573,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"slice":{"primitive":"u8"}}}}},"0:479":{"id":"0:479","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[745,0],"end":[749,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"items":["0:480:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:657":{"id":"0:657","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1081,0],"end":[1138,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_bytes","put_u64","put_f32","put_f32_ne","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne"],"trait":{"name":"BufMut","id":"0:106:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:658:2177","0:659:2195","0:660:2222","0:661:2108","0:663:2237","0:664:2247"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:475":{"id":"0:475","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[733,0],"end":[737,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:476:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:435:1829":{"id":"0:435:1829","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes.rs","begin":[614,4],"end":[614,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"1:10027:2797","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"0:667":{"id":"0:667","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1147,0],"end":[1154,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:2897:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:668:230","0:669:551"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:40:1991":{"id":"0:40:1991","crate_id":0,"name":"get_u32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[503,4],"end":[505,5]},"visibility":"default","docs":"Gets an unsigned 32 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x08\\x09\\xA0\\xA1 hello\",\n    false => b\"\\xA1\\xA0\\x09\\x08 hello\",\n};\nassert_eq!(0x0809A0A1, buf.get_u32_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2700:228-0:1140:1834":{"id":"a:1:2700:228-0:1140:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1834","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:766:613":{"id":"0:766:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1554,4],"end":[1556,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:7274:2473":{"id":"1:7274:2473","crate_id":1,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"Iterator","id":"1:7384:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:760:1040":{"id":"0:760:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1536,4],"end":[1538,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:764:1040":{"id":"0:764:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1548,4],"end":[1550,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:209:2195":{"id":"0:209:2195","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/chain.rs","begin":[212,4],"end":[228,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:973:1977":{"id":"0:973:1977","crate_id":0,"name":"get_i16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1150":{"id":"0:1150","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[36,0],"end":[36,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"1:9221:3163","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1151:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:155:2419":{"id":"0:155:2419","crate_id":0,"name":"chain_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1270,4],"end":[1275,5]},"visibility":"default","docs":"Creates an adapter which will chain this buffer with another.\n\nThe returned `BufMut` instance will first write to all bytes from\n`self`. Afterwards, it will write to `next`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut a = [0u8; 5];\nlet mut b = [0u8; 6];\n\nlet mut chain = (&mut a[..]).chain_mut(&mut b[..]);\n\nchain.put_slice(b\"hello world\");\n\nassert_eq!(&a[..], b\"hello\");\nassert_eq!(&b[..], b\" world\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["next",{"generic":"U"}]],"output":{"resolved_path":{"name":"Chain","id":"0:1075:1828","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1011:1994":{"id":"0:1011:1994","crate_id":0,"name":"get_i32","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:652":{"id":"0:652","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1052,0],"end":[1079,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["copy_to_slice","chunks_vectored","get_f64_ne","get_u16_le","reader","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_ne","get_u32","get_i128_le","get_i128","get_u128_ne","has_remaining","get_u16_ne","get_u128","get_i128_ne","get_f32_ne","take","chain","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","get_uint"],"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:653:1883","0:654:1846","0:655:1849","0:656:2105"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1070:2312":{"id":"0:1070:2312","crate_id":0,"name":"put_u64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:424:731":{"id":"0:424:731","crate_id":0,"name":"hash","span":{"filename":"src/bytes.rs","begin":[589,4],"end":[594,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"H"},"bounds":[{"trait_bound":{"trait":{"name":"hash::Hasher","id":"1:9436:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:717:3067":{"id":"0:717:3067","crate_id":0,"name":"extend","span":{"filename":"src/bytes_mut.rs","begin":[1299,4],"end":[1304,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2700:228-0:300:1832":{"id":"a:1:2700:228-0:300:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:12105:27694":{"id":"1:12105:27694","crate_id":1,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"1:12104:27709"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"1:43833:7500","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:243:2513":{"id":"0:243:2513","crate_id":0,"name":"set_limit","span":{"filename":"src/buf/limit.rs","begin":[54,4],"end":[56,5]},"visibility":"public","docs":"Sets the maximum number of bytes that can be written.\n\n# Note\n\nIf the inner `BufMut` has fewer bytes than `lim` then that is the actual\nnumber of available bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["lim",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12118:3912":{"id":"1:12118:3912","crate_id":1,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"1:41591:179","prim@char":"5:11980:418","self::pattern":"1:11778:3544"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:153:1822":{"id":"0:153:1822","crate_id":0,"name":"limit","span":{"filename":"src/buf/buf_mut.rs","begin":[1212,4],"end":[1217,5]},"visibility":"default","docs":"Creates an adaptor which can write at most `limit` bytes to `self`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet arr = &mut [0u8; 128][..];\nassert_eq!(arr.remaining_mut(), 128);\n\nlet dst = arr.limit(10);\nassert_eq!(dst.remaining_mut(), 10);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["limit",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Limit","id":"0:1090:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:136:2334":{"id":"0:136:2334","crate_id":0,"name":"put_u128_le","span":{"filename":"src/buf/buf_mut.rs","begin":[805,4],"end":[807,5]},"visibility":"default","docs":"Writes an unsigned 128 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u128_le(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1120":{"id":"0:1120","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:2980:2554","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeFull","id":"1:39255:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1121:186","0:1122:773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2252-0:1140:1834":{"id":"b:1:2252-0:1140:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1834","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2254:3111"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:508":{"id":"0:508","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[880,0],"end":[885,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Vec","id":"4:6888:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:509:697"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:338:2585":{"id":"0:338:2585","crate_id":0,"name":"write","span":{"filename":"src/buf/writer.rs","begin":[78,4],"end":[83,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"5:2918:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:186":{"id":"0:186","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[37,0],"end":[130,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Chain","id":"0:1075:1828","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["0:190:2451","0:191:2457","0:192:2460","0:193:2465","0:194:2471"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:339:2628":{"id":"0:339:2628","crate_id":0,"name":"flush","span":{"filename":"src/buf/writer.rs","begin":[85,4],"end":[87,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"5:2918:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1036:2276":{"id":"0:1036:2276","crate_id":0,"name":"put_i16","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:689":{"id":"0:689","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1208,0],"end":[1213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:2590:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:690:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:50:2028":{"id":"0:50:2028","crate_id":0,"name":"get_u128","span":{"filename":"src/buf/buf_impl.rs","begin":[712,4],"end":[714,5]},"visibility":"default","docs":"Gets an unsigned 128 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_u128());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:51:2032":{"id":"0:51:2032","crate_id":0,"name":"get_u128_le","span":{"filename":"src/buf/buf_impl.rs","begin":[732,4],"end":[734,5]},"visibility":"default","docs":"Gets an unsigned 128 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_u128_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:63:2081":{"id":"0:63:2081","crate_id":0,"name":"get_f32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[994,4],"end":[996,5]},"visibility":"default","docs":"Gets an IEEE754 single-precision (4 bytes) floating point number from\n`self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x9A\\x99\\x99\\x3F hello\"[..];\nassert_eq!(1.2f32, buf.get_f32_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:129:2308":{"id":"0:129:2308","crate_id":0,"name":"put_u64","span":{"filename":"src/buf/buf_mut.rs","begin":[643,4],"end":[645,5]},"visibility":"default","docs":"Writes an unsigned 64 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u64(0x0102030405060708);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1055:2248":{"id":"0:1055:2248","crate_id":0,"name":"put_u8","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8315:3684-0:381:1698":{"id":"a:1:8315:3684-0:381:1698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8315:3684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[28,0],"end":[108,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:220:944","0:221:2471","0:222:2144","0:223:2498"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:452:613":{"id":"0:452:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[662,4],"end":[664,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:501":{"id":"0:501","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[808,0],"end":[841,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"4:6888:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}},{"type":{"resolved_path":{"name":"Global","id":"4:7184:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:502:697"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8315:3684-0:1084:1829":{"id":"a:1:8315:3684-0:1084:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8315:3684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8315:3684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1122:773":{"id":"0:1122:773","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeFull","id":"1:39255:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2683:220-0:1097:1833":{"id":"a:1:2683:220-0:1097:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2543-0:1090:1830":{"id":"b:1:2543-0:1090:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2545:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12115:31900":{"id":"1:12115:31900","crate_id":1,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"5:11980:418","self::pattern":"1:11778:3544"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11798:10734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1123":{"id":"0:1123","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:2984:2555","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeFull","id":"1:39255:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1124:774"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1125":{"id":"0:1125","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:2980:2554","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeInclusive","id":"1:39337:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1126:186","0:1127:773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:752:1040":{"id":"0:752:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1512,4],"end":[1514,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:55:2046":{"id":"0:55:2046","crate_id":0,"name":"get_i128_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[818,4],"end":[820,5]},"visibility":"default","docs":"Gets a signed 128 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\",\n    false => b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x01020304050607080910111213141516, buf.get_i128_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:344-0:1090:1830":{"id":"0:344-0:1090:1830","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[36,0],"end":[36,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::limit::Limit","name":"Limit","id":"0:1090:1830","glob":false}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1359,0],"end":[1390,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:2507:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["copy_to_slice","chunks_vectored","get_f64_ne","get_u16_le","reader","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_ne","get_u32","get_i128_le","get_i128","get_u128_ne","has_remaining","get_u16_ne","get_u128","get_i128_ne","get_f32_ne","take","chain","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","get_uint"],"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::io::Cursor","id":"5:7926:2143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:85:1883","0:86:1846","0:87:1849"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:471":{"id":"0:471","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[721,0],"end":[725,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:472:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1013:2000":{"id":"0:1013:2000","crate_id":0,"name":"get_i32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2549-0:381:1698":{"id":"b:1:2549-0:381:1698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2552:128","1:2553:1488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:169:2177":{"id":"0:169:2177","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1424,4],"end":[1427,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:698":{"id":"0:698","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1237,0],"end":[1252,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_fmt","write_char"],"trait":{"name":"Write","id":"1:9173:2627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:699:1607","0:700:3112"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2543-0:1140:1834":{"id":"b:1:2543-0:1140:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1834","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2545:697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:2552:128":{"id":"1:2552:128","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:790:697":{"id":"0:790:697","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1620,4],"end":[1654,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bytes",{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5527:32604":{"id":"4:5527:32604","crate_id":4,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"4:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:62:2076":{"id":"0:62:2076","crate_id":0,"name":"get_f32","span":{"filename":"src/buf/buf_impl.rs","begin":[973,4],"end":[975,5]},"visibility":"default","docs":"Gets an IEEE754 single-precision (4 bytes) floating point number from\n`self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x3F\\x99\\x99\\x9A hello\"[..];\nassert_eq!(1.2f32, buf.get_f32());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1110":{"id":"0:1110","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:2980:2554","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Range","id":"1:39271:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1111:186","0:1112:773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:484:613":{"id":"0:484:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[758,4],"end":[760,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:742:613":{"id":"0:742:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1482,4],"end":[1484,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1341,0],"end":[1356,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["copy_to_slice","chunks_vectored","get_f64_ne","get_u16_le","reader","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_ne","get_u32","get_i128_le","get_i128","get_u128_ne","has_remaining","get_u16_ne","get_u128","get_i128_ne","get_f32_ne","take","chain","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","get_uint"],"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"items":["0:80:1883","0:81:1846","0:82:1849"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1090:1830":{"id":"0:1090:1830","crate_id":0,"name":"Limit","span":{"filename":"src/buf/limit.rs","begin":[9,0],"end":[12,1]},"visibility":"public","docs":"A `BufMut` adapter which limits the amount of bytes that can be written\nto an underlying buffer.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:237","a:1:8316:3683-0:1090:1830","a:1:2683:220-0:1090:1830","a:1:2740:3702-0:1090:1830","a:1:8315:3684-0:1090:1830","a:1:2700:228-0:1090:1830","b:1:2554-0:1090:1830","b:1:3319-0:1090:1830","b:1:2249-0:1090:1830","b:1:2539-0:1090:1830","b:1:2549-0:1090:1830","b:1:2543-0:1090:1830","b:1:2252-0:1090:1830","0:244","0:1094"]}}},"0:1128":{"id":"0:1128","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:2984:2555","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeInclusive","id":"1:39337:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1129:774"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:336":{"id":"0:336","crate_id":0,"name":null,"span":{"filename":"src/buf/writer.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["write_fmt","write_all_vectored","write_vectored","by_ref","write_all","is_write_vectored"],"trait":{"name":"Write","id":"5:3492:2627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1834","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:338:2585","0:339:2628"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:8316:3683-0:1103:1831":{"id":"a:1:8316:3683-0:1103:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8316:3683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8316:3683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1831","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:494:1040":{"id":"0:494:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[782,4],"end":[784,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:147:2375":{"id":"0:147:2375","crate_id":0,"name":"put_f32","span":{"filename":"src/buf/buf_mut.rs","begin":[1072,4],"end":[1074,5]},"visibility":"default","docs":"Writes  an IEEE754 single-precision (4 bytes) floating point number to\n`self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f32(1.2f32);\nassert_eq!(buf, b\"\\x3F\\x99\\x99\\x9A\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8315:3684-0:1090:1830":{"id":"a:1:8315:3684-0:1090:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:8315:3684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8315:3684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:2700:228-0:1090:1830":{"id":"a:1:2700:228-0:1090:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:12126:2978":{"id":"1:12126:2978","crate_id":1,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"1:11778:3544","`DoubleEndedIterator`":"1:7306:121","prim@char":"5:11980:418","str::split_whitespace":"1:12104:27709","str::rsplit":"1:12132:31901"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"1:43550:3323","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8316:3683-0:381:1698":{"id":"a:1:8316:3683-0:381:1698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8316:3683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:2557:128":{"id":"1:2557:128","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"1:32099:4447","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:1:3319-0:1103:1831":{"id":"b:1:3319-0:1103:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1103:1831","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3321:1501"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:305:2431":{"id":"0:305:2431","crate_id":0,"name":"from_raw_parts_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[48,4],"end":[52,5]},"visibility":"public","docs":"Create a `&mut UninitSlice` from a pointer and a length.\n\n# Safety\n\nThe caller must ensure that `ptr` references a valid memory region owned\nby the caller representing a byte slice for the duration of `'a`.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\n\nlet bytes = b\"hello world\".to_vec();\nlet ptr = bytes.as_ptr() as *mut _;\nlet len = bytes.len();\n\nlet slice = unsafe { UninitSlice::from_raw_parts_mut(ptr, len) };\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ptr",{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}}],["len",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:629:2771":{"id":"0:629:2771","crate_id":0,"name":"split_to","span":{"filename":"src/bytes_mut.rs","begin":[378,4],"end":[392,5]},"visibility":"public","docs":"Splits the buffer into two at the given index.\n\nAfterwards `self` contains elements `[at, len)`, and the returned `BytesMut`\ncontains elements `[0, at)`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut a = BytesMut::from(&b\"hello world\"[..]);\nlet mut b = a.split_to(5);\n\na[0] = b'!';\nb[0] = b'j';\n\nassert_eq!(&a[..], b\"!world\");\nassert_eq!(&b[..], b\"jello\");\n```\n\n# Panics\n\nPanics if `at > len`.","links":{},"attrs":["#[must_use = \"consider BytesMut::advance if you don't need the other half\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["at",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1115":{"id":"0:1115","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:2980:2554","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeFrom","id":"1:39295:199","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1116:186","0:1117:773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:697:3111":{"id":"0:697:3111","crate_id":0,"name":"borrow_mut","span":{"filename":"src/bytes_mut.rs","begin":[1232,4],"end":[1234,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12182:31919":{"id":"1:12182:31919","crate_id":1,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"5:11980:418","self::pattern":"1:11778:3544"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11798:10734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1025:2071":{"id":"0:1025:2071","crate_id":0,"name":"get_int_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12099:31897":{"id":"1:12099:31897","crate_id":1,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:12100:2423"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:990:2068":{"id":"0:990:2068","crate_id":0,"name":"get_int_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12100:2423":{"id":"1:12100:2423","crate_id":1,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:12099:31897"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:776:1040":{"id":"0:776:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1578,4],"end":[1580,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:303":{"id":"0:303","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[24,0],"end":[174,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:305:2431","0:307:2583","0:308:2424","0:310:1941","0:311:2605","0:313:816"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12106:4101":{"id":"1:12106:4101","crate_id":1,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"1:43804:3322","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:77":{"id":"0:77","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1337,0],"end":[1339,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["copy_to_slice","chunks_vectored","get_f64_ne","get_u16_le","reader","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_ne","get_u32","get_i128_le","get_i128","get_u128_ne","has_remaining","get_u16_ne","get_u128","get_i128_ne","get_f32_ne","take","chain","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","get_uint"],"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"4:276:1839","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:993:1883","0:994:1846","0:995:1911","0:997:1849","0:998:1915","0:999:1850","0:1000:1947","0:1001:1950","0:1002:1956","0:1003:1960","0:1004:1967","0:1005:1971","0:1006:1974","0:1007:1977","0:1008:1982","0:1009:1986","0:1010:1991","0:1011:1994","0:1012:1997","0:1013:2000","0:1014:2005","0:1015:2009","0:1016:2014","0:1017:2017","0:1018:2020","0:1019:2023","0:1020:2051","0:1021:2056","0:1022:2061","0:1023:2065","0:1024:2068","0:1025:2071","0:1026:2105"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:599:1699":{"id":"0:599:1699","crate_id":0,"name":"BytesMut","span":{"filename":"src/bytes_mut.rs","begin":[61,0],"end":[66,1]},"visibility":"public","docs":"A unique reference to a contiguous slice of memory.\n\n`BytesMut` represents a unique view into a potentially shared memory region.\nGiven the uniqueness guarantee, owners of `BytesMut` handles are able to\nmutate the memory.\n\n`BytesMut` can be thought of as containing a `buf: Arc<Vec<u8>>`, an offset\ninto `buf`, a slice length, and a guarantee that no other `BytesMut` for the\nsame `buf` overlaps with its slice. That guarantee means that a write lock\nis not required.\n\n# Growth\n\n`BytesMut`'s `BufMut` implementation will implicitly grow its buffer as\nnecessary. However, explicitly reserving the required space up-front before\na series of inserts will be more efficient.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(64);\n\nbuf.put_u8(b'h');\nbuf.put_u8(b'e');\nbuf.put(&b\"llo\"[..]);\n\nassert_eq!(&buf[..], b\"hello\");\n\n// Freeze the buffer so that it can be shared\nlet a = buf.freeze();\n\n// This does not allocate, instead `b` points to the same memory.\nlet b = a.clone();\n\nassert_eq!(&a[..], b\"hello\");\nassert_eq!(&b[..], b\"hello\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:619","a:1:8316:3683-0:599:1699","a:1:2740:3702-0:599:1699","a:1:8315:3684-0:599:1699","b:1:2554-0:599:1699","b:1:3319-0:599:1699","b:1:2249-0:599:1699","b:1:2539-0:599:1699","b:1:2549-0:599:1699","b:1:2543-0:599:1699","b:1:2252-0:599:1699","b:4:680-0:599:1699","0:667","0:652","0:818","0:698","0:781","0:777","0:689","0:765","0:680","0:783","0:696","0:743","0:741","0:1148","0:712","0:1152","0:761","0:739","0:707","0:686","0:773","0:753","0:677","0:650","0:672","0:691","0:701","0:749","0:684","0:715","0:694","0:674","0:759","0:755","0:787","0:665","0:735","0:703","0:722","0:763","0:751","0:789","0:657","0:670","0:682","0:719","0:779","0:785","0:747","0:745","0:767","0:725","0:736","0:688","0:757","0:737","0:769"]}}},"0:151:2391":{"id":"0:151:2391","crate_id":0,"name":"put_f64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1168,4],"end":[1170,5]},"visibility":"default","docs":"Writes  an IEEE754 double-precision (8 bytes) floating point number to\n`self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f64_le(1.2f64);\nassert_eq!(buf, b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:142:2356":{"id":"0:142:2356","crate_id":0,"name":"put_uint_le","span":{"filename":"src/buf/buf_mut.rs","begin":[945,4],"end":[947,5]},"visibility":"default","docs":"Writes an unsigned n-byte integer to `self` in the little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_uint_le(0x010203, 3);\nassert_eq!(buf, b\"\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2740:3702-0:599:1699":{"id":"a:1:2740:3702-0:599:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2740:3702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:725":{"id":"0:725","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1324,0],"end":[1328,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"1:7264:134","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:727:700"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:735":{"id":"0:735","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1460,0],"end":[1460,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:208:2222":{"id":"0:208:2222","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/chain.rs","begin":[204,4],"end":[210,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1004:1967":{"id":"0:1004:1967","crate_id":0,"name":"get_u16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:49:2023":{"id":"0:49:2023","crate_id":0,"name":"get_i64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[692,4],"end":[694,5]},"visibility":"default","docs":"Gets a signed 64 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\",\n    false => b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x0102030405060708, buf.get_i64_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1058:2264":{"id":"0:1058:2264","crate_id":0,"name":"put_u16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8316:3683-0:1140:1834":{"id":"a:1:8316:3683-0:1140:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8316:3683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8316:3683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1834","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:333:2144":{"id":"0:333:2144","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/writer.rs","begin":[33,4],"end":[35,5]},"visibility":"public","docs":"Gets a reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.\n\n# Examples\n\n```rust\nuse bytes::BufMut;\n\nlet buf = Vec::with_capacity(1024).writer();\n\nassert_eq!(1024, buf.get_ref().capacity());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:239:2471":{"id":"0:239:2471","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/limit.rs","begin":[20,4],"end":[22,5]},"visibility":"public","docs":"Consumes this `Limit`, returning the underlying value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/buf/limit.rs","begin":[59,0],"end":[75,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_bytes","put_u64","put_f32","put_f32_ne","put_u32_le","put_i128_ne","put_i128_le","put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne"],"trait":{"name":"BufMut","id":"0:106:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:246:2177","0:247:2222","0:248:2195"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1102:671":{"id":"0:1102:671","crate_id":0,"name":"fmt","span":{"filename":"src/buf/reader.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:9183:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:9172:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1118":{"id":"0:1118","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:2984:2555","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeFrom","id":"1:39295:199","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1119:774"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:331":{"id":"0:331","crate_id":0,"name":null,"span":{"filename":"src/buf/writer.rs","begin":[19,0],"end":[75,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Writer","id":"0:1140:1834","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:333:2144","0:334:2498","0:335:2471"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:341-0:106:1694":{"id":"0:341-0:106:1694","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[33,0],"end":[33,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::buf_mut::BufMut","name":"BufMut","id":"0:106:1694","glob":false}}},"0:342-0:1075:1828":{"id":"0:342-0:1075:1828","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[34,0],"end":[34,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::chain::Chain","name":"Chain","id":"0:1075:1828","glob":false}}},"0:116:2255":{"id":"0:116:2255","crate_id":0,"name":"put_i8","span":{"filename":"src/buf/buf_mut.rs","begin":[340,4],"end":[343,5]},"visibility":"default","docs":"Writes a signed 8 bit integer to `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i8(0x01);\nassert_eq!(buf, b\"\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2554-0:381:1698":{"id":"b:1:2554-0:381:1698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2557:128","1:2558:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:705:1829":{"id":"0:705:1829","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes_mut.rs","begin":[1262,4],"end":[1262,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IntoIter","id":"0:1084:1829","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:972:1974":{"id":"0:972:1974","crate_id":0,"name":"get_i16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:722":{"id":"0:722","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1318,0],"end":[1322,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"1:7264:134","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:723:700"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2539-0:599:1699":{"id":"b:1:2539-0:599:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2542:2711"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12147:31906":{"id":"1:12147:31906","crate_id":1,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:75":{"id":"0:75","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1333,0],"end":[1335,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["copy_to_slice","chunks_vectored","get_f64_ne","get_u16_le","reader","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_ne","get_u32","get_i128_le","get_i128","get_u128_ne","has_remaining","get_u16_ne","get_u128","get_i128_ne","get_f32_ne","take","chain","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64","get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","get_uint"],"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:959:1883","0:960:1846","0:961:1911","0:963:1849","0:964:1915","0:965:1850","0:966:1947","0:967:1950","0:968:1956","0:969:1960","0:970:1967","0:971:1971","0:972:1974","0:973:1977","0:974:1982","0:975:1986","0:976:1991","0:977:1994","0:978:1997","0:979:2000","0:980:2005","0:981:2009","0:982:2014","0:983:2017","0:984:2020","0:985:2023","0:986:2051","0:987:2056","0:988:2061","0:989:2065","0:990:2068","0:991:2071","0:992:2105"],"negative":false,"synthetic":false,"blanket_impl":null}}},"4:5528:32605":{"id":"4:5528:32605","crate_id":4,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"4:276:1839","`String`":"4:7451:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"4:276:1839","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"4:7184:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12169:31913":{"id":"1:12169:31913","crate_id":1,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:222:2144":{"id":"0:222:2144","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/iter.rs","begin":[83,4],"end":[85,5]},"visibility":"public","docs":"Gets a reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::{Buf, Bytes};\n\nlet buf = Bytes::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\n\nassert_eq!(2, iter.get_ref().remaining());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3321:1501":{"id":"1:3321:1501","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"1:39420:7298","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:991:2071":{"id":"0:991:2071","crate_id":0,"name":"get_int_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8316:3683-0:1084:1829":{"id":"a:1:8316:3683-0:1084:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8316:3683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8316:3683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:397:1377":{"id":"0:397:1377","crate_id":0,"name":"slice","span":{"filename":"src/bytes.rs","begin":[238,4],"end":[278,5]},"visibility":"public","docs":"Returns a slice of self for the provided range.\n\nThis will increment the reference count for the underlying memory and\nreturn a new `Bytes` handle set to the slice.\n\nThis operation is `O(1)`.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet a = Bytes::from(&b\"hello world\"[..]);\nlet b = a.slice(2..5);\n\nassert_eq!(&b[..], b\"llo\");\n```\n\n# Panics\n\nRequires that `begin <= end` and `end <= self.len()`, otherwise slicing\nwill panic.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["range",{"impl_trait":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"1:3078:2629","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl RangeBounds<usize>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"1:3078:2629","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2554-0:1097:1833":{"id":"b:1:2554-0:1097:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2557:128","1:2558:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:817:671":{"id":"0:817:671","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/debug.rs","begin":[40,4],"end":[42,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:9183:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:9172:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:172:2108":{"id":"0:172:2108","crate_id":0,"name":"put","span":{"filename":"src/buf/buf_mut.rs","begin":[1459,4],"end":[1478,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"super::Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:8316:3683-0:1090:1830":{"id":"a:1:8316:3683-0:1090:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:8316:3683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8316:3683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:442":{"id":"0:442","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[635,0],"end":[639,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:443:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12200:31928":{"id":"1:12200:31928","crate_id":1,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:416:1849":{"id":"0:416:1849","crate_id":0,"name":"advance","span":{"filename":"src/bytes.rs","begin":[548,4],"end":[559,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5530:32606":{"id":"4:5530:32606","crate_id":4,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:12199:31927"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:29:1850":{"id":"0:29:1850","crate_id":0,"name":"copy_to_slice","span":{"filename":"src/buf/buf_impl.rs","begin":[251,4],"end":[270,5]},"visibility":"default","docs":"Copies bytes from `self` into `dst`.\n\nThe cursor is advanced by the number of bytes copied. `self` must have\nenough remaining bytes to fill `dst`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\nlet mut dst = [0; 5];\n\nbuf.copy_to_slice(&mut dst);\nassert_eq!(&b\"hello\"[..], &dst);\nassert_eq!(6, buf.remaining());\n```\n\n# Panics\n\nThis function panics if `self.remaining() < dst.len()`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:149:2384":{"id":"0:149:2384","crate_id":0,"name":"put_f32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1122,4],"end":[1124,5]},"visibility":"default","docs":"Writes an IEEE754 single-precision (4 bytes) floating point number to\n`self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f32_ne(1.2f32);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x3F\\x99\\x99\\x9A\");\n} else {\n    assert_eq!(buf, b\"\\x9A\\x99\\x99\\x3F\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12129:27700":{"id":"1:12129:27700","crate_id":1,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"5:11980:418","self::pattern":"1:11778:3544"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"1:11601:4136","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:45:2009":{"id":"0:45:2009","crate_id":0,"name":"get_u64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[606,4],"end":[608,5]},"visibility":"default","docs":"Gets an unsigned 64 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_u64_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2249-0:1140:1834":{"id":"b:1:2249-0:1140:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1834","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2251:2630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1119:774":{"id":"0:1119:774","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeFrom","id":"1:39295:199","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:668:230":{"id":"0:668:230","crate_id":0,"name":"Target","span":{"filename":"src/bytes_mut.rs","begin":[1148,4],"end":[1148,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"slice":{"primitive":"u8"}}}}},"0:756:1040":{"id":"0:756:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1524,4],"end":[1526,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Vec","id":"4:6888:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:706:788":{"id":"0:706:788","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes_mut.rs","begin":[1264,4],"end":[1266,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:7268:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:229":{"id":"0:229","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[130,0],"end":[130,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"1:7329:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:622:816":{"id":"0:622:816","crate_id":0,"name":"len","span":{"filename":"src/bytes_mut.rs","begin":[181,4],"end":[183,5]},"visibility":"public","docs":"Returns the number of bytes contained in this `BytesMut`.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet b = BytesMut::from(&b\"hello\"[..]);\nassert_eq!(b.len(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:323:1849":{"id":"0:323:1849","crate_id":0,"name":"advance","span":{"filename":"src/buf/vec_deque.rs","begin":[19,4],"end":[21,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:32:1956":{"id":"0:32:1956","crate_id":0,"name":"get_u16","span":{"filename":"src/buf/buf_impl.rs","begin":[334,4],"end":[336,5]},"visibility":"default","docs":"Gets an unsigned 16 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09 hello\"[..];\nassert_eq!(0x0809, buf.get_u16());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:346-0:300:1832":{"id":"0:346-0:300:1832","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[38,0],"end":[38,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::uninit_slice::UninitSlice","name":"UninitSlice","id":"0:300:1832","glob":false}}},"0:334:2498":{"id":"0:334:2498","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/writer.rs","begin":[52,4],"end":[54,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.\n\n# Examples\n\n```rust\nuse bytes::BufMut;\n\nlet mut buf = vec![].writer();\n\nbuf.get_mut().reserve(1024);\n\nassert_eq!(1024, buf.get_ref().capacity());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:998:1915":{"id":"0:998:1915","crate_id":0,"name":"has_remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148:2379":{"id":"0:148:2379","crate_id":0,"name":"put_f32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1095,4],"end":[1097,5]},"visibility":"default","docs":"Writes  an IEEE754 single-precision (4 bytes) floating point number to\n`self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f32_le(1.2f32);\nassert_eq!(buf, b\"\\x9A\\x99\\x99\\x3F\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:165:2195":{"id":"0:165:2195","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1399,4],"end":[1403,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:782:613":{"id":"0:782:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1596,4],"end":[1598,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:974:1982":{"id":"0:974:1982","crate_id":0,"name":"get_u32","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:135:2330":{"id":"0:135:2330","crate_id":0,"name":"put_u128","span":{"filename":"src/buf/buf_mut.rs","begin":[783,4],"end":[785,5]},"visibility":"default","docs":"Writes an unsigned 128 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u128(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:113:2237":{"id":"0:113:2237","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[240,4],"end":[266,5]},"visibility":"default","docs":"Transfer bytes into `self` from `src` and advance the cursor by the\nnumber of bytes written.\n\n`self` must have enough remaining capacity to contain all of `src`.\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 6];\n\n{\n    let mut buf = &mut dst[..];\n    buf.put_slice(b\"hello\");\n\n    assert_eq!(1, buf.remaining_mut());\n}\n\nassert_eq!(b\"hello\\0\", &dst);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:146:2371":{"id":"0:146:2371","crate_id":0,"name":"put_int_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1045,4],"end":[1051,5]},"visibility":"default","docs":"Writes low `nbytes` of a signed integer to `self` in native-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_int_ne(0x010203, 3);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\");\n} else {\n    assert_eq!(buf, b\"\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self` or if `nbytes` is greater than 8.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:241:2498":{"id":"0:241:2498","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/limit.rs","begin":[34,4],"end":[36,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:278:2144":{"id":"0:278:2144","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/take.rs","begin":[56,4],"end":[58,5]},"visibility":"public","docs":"Gets a reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::Buf;\n\nlet buf = b\"hello world\".take(2);\n\nassert_eq!(11, buf.get_ref().remaining());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:761":{"id":"0:761","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1541,0],"end":[1545,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:762:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:321:1883":{"id":"0:321:1883","crate_id":0,"name":"remaining","span":{"filename":"src/buf/vec_deque.rs","begin":[6,4],"end":[8,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1054:2237":{"id":"0:1054:2237","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:481":{"id":"0:481","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[751,0],"end":[755,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"items":["0:482:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2740:3702-0:1140:1834":{"id":"a:1:2740:3702-0:1140:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:2740:3702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2740:3702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1834","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1094":{"id":"0:1094","crate_id":0,"name":null,"span":{"filename":"src/buf/limit.rs","begin":[8,9],"end":[8,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1096:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:440":{"id":"0:440","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[629,0],"end":[633,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:441:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:465":{"id":"0:465","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[703,0],"end":[707,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"4:6888:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}},{"type":{"resolved_path":{"name":"Global","id":"4:7184:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:466:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:740:1040":{"id":"0:740:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1476,4],"end":[1478,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:2272":{"id":"0:119:2272","crate_id":0,"name":"put_u16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[411,4],"end":[413,5]},"visibility":"default","docs":"Writes an unsigned 16 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u16_ne(0x0809);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x08\\x09\");\n} else {\n    assert_eq!(buf, b\"\\x09\\x08\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1084:1829":{"id":"0:1084:1829","crate_id":0,"name":"IntoIter","span":{"filename":"src/buf/iter.rs","begin":[24,0],"end":[26,1]},"visibility":"public","docs":"Iterator over the bytes contained by the buffer.\n\n# Examples\n\nBasic usage:\n\n```\nuse bytes::Bytes;\n\nlet buf = Bytes::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\nassert_eq!(iter.next(), Some(b'b'));\nassert_eq!(iter.next(), Some(b'c'));\nassert_eq!(iter.next(), None);\n```\n\n[`iter`]: trait.Buf.html#method.iter\n[`Buf`]: trait.Buf.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:218","a:1:8316:3683-0:1084:1829","a:1:2683:220-0:1084:1829","a:1:2740:3702-0:1084:1829","a:1:8315:3684-0:1084:1829","a:1:2700:228-0:1084:1829","b:1:2554-0:1084:1829","b:1:3319-0:1084:1829","b:1:7272-0:1084:1829","b:1:2249-0:1084:1829","b:1:2539-0:1084:1829","b:1:2549-0:1084:1829","b:1:2543-0:1084:1829","b:1:2252-0:1084:1829","0:1087","0:224","0:229"]}}},"0:674":{"id":"0:674","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1170,0],"end":[1174,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:676:697"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12101:7254":{"id":"1:12101:7254","crate_id":1,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"5:11980:418"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"1:43520:3541","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:763":{"id":"0:763","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1547,0],"end":[1551,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:764:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1038:2282":{"id":"0:1038:2282","crate_id":0,"name":"put_i16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2249-0:1090:1830":{"id":"b:1:2249-0:1090:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2251:2630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2683:220-0:1140:1834":{"id":"a:1:2683:220-0:1140:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1140:1834","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:228:2499":{"id":"0:228:2499","crate_id":0,"name":"size_hint","span":{"filename":"src/buf/iter.rs","begin":[124,4],"end":[127,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1017:2017":{"id":"0:1017:2017","crate_id":0,"name":"get_i64","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:680":{"id":"0:680","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1182,0],"end":[1186,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:681:697"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:450:1040":{"id":"0:450:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[656,4],"end":[658,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2683:220-0:300:1832":{"id":"a:1:2683:220-0:300:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:709:2473":{"id":"0:709:2473","crate_id":0,"name":"Item","span":{"filename":"src/bytes_mut.rs","begin":[1270,4],"end":[1270,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}}},"0:60:2068":{"id":"0:60:2068","crate_id":0,"name":"get_int_le","span":{"filename":"src/buf/buf_impl.rs","begin":[925,4],"end":[927,5]},"visibility":"default","docs":"Gets a signed n-byte integer from `self` in little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x010203, buf.get_int_le(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:141:2352":{"id":"0:141:2352","crate_id":0,"name":"put_uint","span":{"filename":"src/buf/buf_mut.rs","begin":[923,4],"end":[925,5]},"visibility":"default","docs":"Writes an unsigned n-byte integer to `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_uint(0x010203, 3);\nassert_eq!(buf, b\"\\x01\\x02\\x03\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:198:1883":{"id":"0:198:1883","crate_id":0,"name":"remaining","span":{"filename":"src/buf/chain.rs","begin":[137,4],"end":[139,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:664:2247":{"id":"0:664:2247","crate_id":0,"name":"put_bytes","span":{"filename":"src/bytes_mut.rs","begin":[1126,4],"end":[1137,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2683:220-0:1075:1828":{"id":"a:1:2683:220-0:1075:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1828","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:52:2037":{"id":"0:52:2037","crate_id":0,"name":"get_u128_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[755,4],"end":[757,5]},"visibility":"default","docs":"Gets an unsigned 128 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\",\n    false => b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x01020304050607080910111213141516, buf.get_u128_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1080":{"id":"0:1080","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[31,9],"end":[31,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1828","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["0:1083:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:221:2471":{"id":"0:221:2471","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/iter.rs","begin":[63,4],"end":[65,5]},"visibility":"public","docs":"Consumes this `IntoIter`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::{Buf, Bytes};\n\nlet buf = Bytes::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\n\nlet buf = iter.into_inner();\nassert_eq!(2, buf.remaining());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2249-0:300:1832":{"id":"b:1:2249-0:300:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:300:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2251:2630"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:429:2473":{"id":"0:429:2473","crate_id":0,"name":"Item","span":{"filename":"src/bytes.rs","begin":[604,4],"end":[604,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u8"}}}},"0:348-0:1097:1833":{"id":"0:348-0:1097:1833","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[41,15],"end":[41,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"self::reader::Reader","name":"Reader","id":"0:1097:1833","glob":false}}},"0:773":{"id":"0:773","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1574,0],"end":[1581,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:776:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:701":{"id":"0:701","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1254,0],"end":[1258,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:702:422"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:143:2361":{"id":"0:143:2361","crate_id":0,"name":"put_uint_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[971,4],"end":[977,5]},"visibility":"default","docs":"Writes an unsigned n-byte integer to `self` in the native-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_uint_ne(0x010203, 3);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\");\n} else {\n    assert_eq!(buf, b\"\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:4:680-0:599:1699":{"id":"b:4:680-0:599:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["4:682:3534","4:683:26787","4:684:26788"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:999:1850":{"id":"0:999:1850","crate_id":0,"name":"copy_to_slice","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:401:2771":{"id":"0:401:2771","crate_id":0,"name":"split_to","span":{"filename":"src/bytes.rs","begin":[411,4],"end":[433,5]},"visibility":"public","docs":"Splits the bytes into two at the given index.\n\nAfterwards `self` contains elements `[at, len)`, and the returned\n`Bytes` contains elements `[0, at)`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut a = Bytes::from(&b\"hello world\"[..]);\nlet b = a.split_to(5);\n\nassert_eq!(&a[..], b\" world\");\nassert_eq!(&b[..], b\"hello\");\n```\n\n# Panics\n\nPanics if `at > len`.","links":{},"attrs":["#[must_use = \"consider Bytes::advance if you don't need the other half\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["at",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:683:613":{"id":"0:683:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1189,4],"end":[1191,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2554-0:1090:1830":{"id":"b:1:2554-0:1090:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2557:128","1:2558:1487"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:856-0:381:1698":{"id":"0:856-0:381:1698","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[91,0],"end":[91,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::bytes::Bytes","name":"Bytes","id":"0:381:1698","glob":false}}},"1:12097:31895":{"id":"1:12097:31895","crate_id":1,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"5:11986:1407","str::slice_mut_unchecked":"1:12098:31896","crate::ops::Index":"1:2980:2554"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:628:2978":{"id":"0:628:2978","crate_id":0,"name":"split","span":{"filename":"src/bytes_mut.rs","begin":[346,4],"end":[349,5]},"visibility":"public","docs":"Removes the bytes from the current view, returning them in a new\n`BytesMut` handle.\n\nAfterwards, `self` will be empty, but will retain any additional\ncapacity that it had before the operation. This is identical to\n`self.split_to(self.len())`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(1024);\nbuf.put(&b\"hello world\"[..]);\n\nlet other = buf.split();\n\nassert!(buf.is_empty());\nassert_eq!(1013, buf.capacity());\n\nassert_eq!(other, b\"hello world\"[..]);\n```","links":{},"attrs":["#[must_use =\n\"consider BytesMut::advance(len()) if you don't need the other half\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:994:1846":{"id":"0:994:1846","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5531:32607":{"id":"4:5531:32607","crate_id":4,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:12200:31928"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:431:788":{"id":"0:431:788","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes.rs","begin":[607,4],"end":[609,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:7268:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:35:1971":{"id":"0:35:1971","crate_id":0,"name":"get_i16","span":{"filename":"src/buf/buf_impl.rs","begin":[397,4],"end":[399,5]},"visibility":"default","docs":"Gets a signed 16 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09 hello\"[..];\nassert_eq!(0x0809, buf.get_i16());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:781":{"id":"0:781","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1595,0],"end":[1599,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"items":["0:782:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3319-0:1084:1829":{"id":"b:1:3319-0:1084:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1084:1829","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3321:1501"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3319-0:381:1698":{"id":"b:1:3319-0:381:1698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3321:1501"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:634:2429":{"id":"0:634:2429","crate_id":0,"name":"reserve","span":{"filename":"src/bytes_mut.rs","begin":[566,4],"end":[577,5]},"visibility":"public","docs":"Reserves capacity for at least `additional` more bytes to be inserted\ninto the given `BytesMut`.\n\nMore than `additional` bytes may be reserved in order to avoid frequent\nreallocations. A call to `reserve` may result in an allocation.\n\nBefore allocating new buffer space, the function will attempt to reclaim\nspace in the existing buffer. If the current handle references a view\ninto a larger original buffer, and all other handles referencing part\nof the same original buffer have been dropped, then the current view\ncan be copied/shifted to the front of the buffer and the handle can take\nownership of the full buffer, provided that the full buffer is large\nenough to fit the requested additional capacity.\n\nThis optimization will only happen if shifting the data from the current\nview to the front of the buffer is not too expensive in terms of the\n(amortized) time required. The precise condition is subject to change;\nas of now, the length of the data being shifted needs to be at least as\nlarge as the distance that it's shifted by. If the current view is empty\nand the original buffer is large enough to fit the requested additional\ncapacity, then reallocations will never happen.\n\n# Examples\n\nIn the following example, a new buffer is allocated.\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::from(&b\"hello\"[..]);\nbuf.reserve(64);\nassert!(buf.capacity() >= 69);\n```\n\nIn the following example, the existing buffer is reclaimed.\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(128);\nbuf.put(&[0; 64][..]);\n\nlet ptr = buf.as_ptr();\nlet other = buf.split();\n\nassert!(buf.is_empty());\nassert_eq!(buf.capacity(), 64);\n\ndrop(other);\nbuf.reserve(128);\n\nassert_eq!(buf.capacity(), 128);\nassert_eq!(buf.as_ptr(), ptr);\n```\n\n# Panics\n\nPanics if the new capacity overflows `usize`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["additional",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:86:1846":{"id":"0:86:1846","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1371,4],"end":[1380,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:443:1040":{"id":"0:443:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[636,4],"end":[638,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:983:2017":{"id":"0:983:2017","crate_id":0,"name":"get_i64","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:394:816":{"id":"0:394:816","crate_id":0,"name":"len","span":{"filename":"src/bytes.rs","begin":[192,4],"end":[194,5]},"visibility":"public","docs":"Returns the number of bytes contained in this `Bytes`.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::from(&b\"hello\"[..]);\nassert_eq!(b.len(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:27:1849":{"id":"0:27:1849","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[207,4],"end":[207,38]},"visibility":"default","docs":"Advance the internal cursor of the Buf\n\nThe next call to `chunk()` will return a slice starting `cnt` bytes\nfurther into the underlying buffer.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(buf.chunk(), &b\"hello world\"[..]);\n\nbuf.advance(6);\n\nassert_eq!(buf.chunk(), &b\"world\"[..]);\n```\n\n# Panics\n\nThis function **may** panic if `cnt > self.remaining()`.\n\n# Implementer notes\n\nIt is recommended for implementations of `advance` to panic if `cnt >\nself.remaining()`. If the implementation does not panic, the call must\nbehave as if `cnt == self.remaining()`.\n\nA call with `cnt == 0` should never panic and be a no-op.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:41:1994":{"id":"0:41:1994","crate_id":0,"name":"get_i32","span":{"filename":"src/buf/buf_impl.rs","begin":[523,4],"end":[525,5]},"visibility":"default","docs":"Gets a signed 32 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_i32());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1147:671":{"id":"0:1147:671","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[34,0],"end":[34,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:9183:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:9172:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:167:2247":{"id":"0:167:2247","crate_id":0,"name":"put_bytes","span":{"filename":"src/buf/buf_mut.rs","begin":[1413,4],"end":[1419,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1030:2237":{"id":"0:1030:2237","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1010:1991":{"id":"0:1010:1991","crate_id":0,"name":"get_u32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:469":{"id":"0:469","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[715,0],"end":[719,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Vec","id":"4:6888:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:470:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:434:2473":{"id":"0:434:2473","crate_id":0,"name":"Item","span":{"filename":"src/bytes.rs","begin":[613,4],"end":[613,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}}},"0:87:1849":{"id":"0:87:1849","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1382,4],"end":[1389,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:352-0:106:1694":{"id":"0:352-0:106:1694","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[85,26],"end":[85,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::buf::BufMut","name":"BufMut","id":"0:106:1694","glob":false}}},"0:150:2388":{"id":"0:150:2388","crate_id":0,"name":"put_f64","span":{"filename":"src/buf/buf_mut.rs","begin":[1145,4],"end":[1147,5]},"visibility":"default","docs":"Writes  an IEEE754 double-precision (8 bytes) floating point number to\n`self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f64(1.2f64);\nassert_eq!(buf, b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:621:944":{"id":"0:621:944","crate_id":0,"name":"new","span":{"filename":"src/bytes_mut.rs","begin":[166,4],"end":[168,5]},"visibility":"public","docs":"Creates a new `BytesMut` with default capacity.\n\nResulting object has length 0 and unspecified capacity.\nThis function does not allocate.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut bytes = BytesMut::new();\n\nassert_eq!(0, bytes.len());\n\nbytes.reserve(2);\nbytes.put_slice(b\"xy\");\n\nassert_eq!(&b\"xy\"[..], &bytes[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1149:671":{"id":"0:1149:671","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[35,0],"end":[35,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:9183:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:9172:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:174:2237":{"id":"0:174:2237","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1481,4],"end":[1483,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:130:2312":{"id":"0:130:2312","crate_id":0,"name":"put_u64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[665,4],"end":[667,5]},"visibility":"default","docs":"Writes an unsigned 64 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u64_le(0x0102030405060708);\nassert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:767":{"id":"0:767","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1559,0],"end":[1563,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:768:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:857-0:599:1699":{"id":"0:857-0:599:1699","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[92,0],"end":[92,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::bytes_mut::BytesMut","name":"BytesMut","id":"0:599:1699","glob":false}}},"1:12077:816":{"id":"1:12077:816","crate_id":1,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"5:11980:418"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1097:1833":{"id":"0:1097:1833","crate_id":0,"name":"Reader","span":{"filename":"src/buf/reader.rs","begin":[11,0],"end":[13,1]},"visibility":"public","docs":"A `Buf` adapter which implements `io::Read` for the inner value.\n\nThis struct is generally created by calling `reader()` on `Buf`. See\ndocumentation of [`reader()`](trait.Buf.html#method.reader) for more\ndetails.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:256","a:1:8316:3683-0:1097:1833","a:1:2683:220-0:1097:1833","a:1:2740:3702-0:1097:1833","a:1:8315:3684-0:1097:1833","a:1:2700:228-0:1097:1833","b:1:2554-0:1097:1833","b:1:3319-0:1097:1833","b:1:2249-0:1097:1833","b:1:2539-0:1097:1833","b:1:2549-0:1097:1833","b:1:2543-0:1097:1833","b:1:2252-0:1097:1833","0:264","0:1100","0:261"]}}},"0:1140:1834":{"id":"0:1140:1834","crate_id":0,"name":"Writer","span":{"filename":"src/buf/writer.rs","begin":[11,0],"end":[13,1]},"visibility":"public","docs":"A `BufMut` adapter which implements `io::Write` for the inner value.\n\nThis struct is generally created by calling `writer()` on `BufMut`. See\ndocumentation of [`writer()`](trait.BufMut.html#method.writer) for more\ndetails.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:331","a:1:8316:3683-0:1140:1834","a:1:2683:220-0:1140:1834","a:1:2740:3702-0:1140:1834","a:1:8315:3684-0:1140:1834","a:1:2700:228-0:1140:1834","b:1:2554-0:1140:1834","b:1:3319-0:1140:1834","b:1:2249-0:1140:1834","b:1:2539-0:1140:1834","b:1:2549-0:1140:1834","b:1:2543-0:1140:1834","b:1:2252-0:1140:1834","0:1143","0:336"]}}},"b:1:2549-0:1075:1828":{"id":"b:1:2549-0:1075:1828","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1075:1828","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2552:128","1:2553:1488"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:768:1040":{"id":"0:768:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1560,4],"end":[1562,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:688":{"id":"0:688","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1206,0],"end":[1206,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2318:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12172:31915":{"id":"1:12172:31915","crate_id":1,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1049:2323":{"id":"0:1049:2323","crate_id":0,"name":"put_i64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:627:2762":{"id":"0:627:2762","crate_id":0,"name":"split_off","span":{"filename":"src/bytes_mut.rs","begin":[305,4],"end":[318,5]},"visibility":"public","docs":"Splits the bytes into two at the given index.\n\nAfterwards `self` contains elements `[0, at)`, and the returned\n`BytesMut` contains elements `[at, capacity)`.\n\nThis is an `O(1)` operation that just increases the reference count\nand sets a few indices.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut a = BytesMut::from(&b\"hello world\"[..]);\nlet mut b = a.split_off(5);\n\na[0] = b'j';\nb[0] = b'!';\n\nassert_eq!(&a[..], b\"jello\");\nassert_eq!(&b[..], b\"!world\");\n```\n\n# Panics\n\nPanics if `at > capacity`.","links":{},"attrs":["#[must_use = \"consider BytesMut::truncate if you don't need the other half\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["at",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:498:697":{"id":"0:498:697","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[797,4],"end":[799,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:490:613":{"id":"0:490:613","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[773,4],"end":[775,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:477":{"id":"0:477","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[739,0],"end":[743,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"1:2355:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:478:1040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:201:1911":{"id":"0:201:1911","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/chain.rs","begin":[168,4],"end":[172,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"5:8155:1837","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:267:2531":{"id":"0:267:2531","crate_id":0,"name":"consume","span":{"filename":"src/buf/reader.rs","begin":[78,4],"end":[80,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["amt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:496:60":{"id":"0:496:60","crate_id":0,"name":"default","span":{"filename":"src/bytes.rs","begin":[791,4],"end":[793,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:673:553":{"id":"0:673:553","crate_id":0,"name":"deref_mut","span":{"filename":"src/bytes_mut.rs","begin":[1165,4],"end":[1167,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:665":{"id":"0:665","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1140,0],"end":[1145,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"1:2507:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:666:315"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12087:314":{"id":"1:12087:314","crate_id":1,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:12088:1941","`u8`":"5:11997:1510"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1048:2320":{"id":"0:1048:2320","crate_id":0,"name":"put_i64","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12132:31901":{"id":"1:12132:31901","crate_id":1,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"1:11778:3544","`DoubleEndedIterator`":"1:7306:121","prim@char":"5:11980:418","str::split":"1:12126:2978"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"1:43568:4124","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11798:10734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:414:1883":{"id":"0:414:1883","crate_id":0,"name":"remaining","span":{"filename":"src/bytes.rs","begin":[538,4],"end":[540,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:263:2528":{"id":"0:263:2528","crate_id":0,"name":"read","span":{"filename":"src/buf/reader.rs","begin":[66,4],"end":[71,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"5:2918:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5513:2422":{"id":"4:5513:2422","crate_id":4,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"4:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3319-0:1090:1830":{"id":"b:1:3319-0:1090:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2690:2120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1090:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3321:1501"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:656:2105":{"id":"0:656:2105","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/bytes_mut.rs","begin":[1076,4],"end":[1078,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"crate::Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:395:1914":{"id":"0:395:1914","crate_id":0,"name":"is_empty","span":{"filename":"src/bytes.rs","begin":[207,4],"end":[209,5]},"visibility":"public","docs":"Returns true if the `Bytes` has a length of 0.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::new();\nassert!(b.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:410:587":{"id":"0:410:587","crate_id":0,"name":"drop","span":{"filename":"src/bytes.rs","begin":[524,4],"end":[526,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1096:671":{"id":"0:1096:671","crate_id":0,"name":"fmt","span":{"filename":"src/buf/limit.rs","begin":[8,9],"end":[8,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:9183:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:9172:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2539-0:381:1698":{"id":"b:1:2539-0:381:1698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2542:2711"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12122:3878":{"id":"1:12122:3878","crate_id":1,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"1:41591:179","prim@char":"5:11980:418","self::pattern":"1:11778:3544"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:11783:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11798:10734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:619":{"id":"0:619","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[118,0],"end":[1033,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BytesMut","id":"0:599:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:620:2107","0:621:944","0:622:816","0:623:1914","0:624:2426","0:625:694","0:626:2953","0:627:2762","0:628:2978","0:629:2771","0:630:2783","0:631:2789","0:632:2434","0:633:2428","0:634:2429","0:636:2432","0:637:3081","0:649:3068"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1064:2290":{"id":"0:1064:2290","crate_id":0,"name":"put_u32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12095:31185":{"id":"1:12095:31185","crate_id":1,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:9879:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:9879:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:462:1040":{"id":"0:462:1040","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[692,4],"end":[694,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:381:1698","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:41589:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:30915:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5512:32601":{"id":"4:5512:32601","crate_id":4,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"4:276:1839","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"4:7184:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"4:276:1839","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"4:7184:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1100":{"id":"0:1100","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9208:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1097:1833","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:1102:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:313:816":{"id":"0:313:816","crate_id":0,"name":"len","span":{"filename":"src/buf/uninit_slice.rs","begin":[171,4],"end":[173,5]},"visibility":"public","docs":"Returns the number of bytes in the slice.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut data = [0, 1, 2];\nlet mut slice = &mut data[..];\nlet len = BufMut::chunk_mut(&mut slice).len();\n\nassert_eq!(len, 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"17:9821:5379":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:13435:5996":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:10870:4135":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:41784:4118":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"17:13456:6004":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"5:933:16099":{"crate_id":5,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:10529:5453":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"6:4854:8751":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:13591:6046":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:3181:28132":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"5:7757:7046":{"crate_id":5,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:41484:9366":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"16:7833:6734":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"6:62:16282":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"1:21060:15795":{"crate_id":1,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"6:5793:8911":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:9223:5228":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:22552:173":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:7661:3485":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:11290:22725":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:30311:2813":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"19:0:1036":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:6289:6515":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:4785:27353":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:44301:9384":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:256:5230":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"11:285:7773":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:4258:7218":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"4:1411:2797":{"crate_id":4,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:21966:27411":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"16:5959:6443":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"5:5622:5006":{"crate_id":5,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"4:3212:6900":{"crate_id":4,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"5:1558:2797":{"crate_id":5,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"6:4929:8797":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"17:11034:5523":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:48016:7642":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:2510:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"16:4724:6378":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:9875:5384":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:14282:6241":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"4:2962:8077":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:21989:7275":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"5:8230:7101":{"crate_id":5,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"4:7201:7200":{"crate_id":4,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"4:2049:7185":{"crate_id":4,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"1:9471:4244":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"6:595:8358":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"5:6240:5005":{"crate_id":5,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"16:6372:6335":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"6:5025:8841":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"17:13749:6082":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"0:6:1692":{"crate_id":0,"path":["bytes","buf"],"kind":"module"},"16:2497:6315":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:8210:6678":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"5:898:3400":{"crate_id":5,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:11815:5617":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:12448:7261":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"5:5608:206":{"crate_id":5,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"11:1012:6892":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:46485:7567":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:21914:9296":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"6:4436:8597":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:40098:7434":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"6:4535:8645":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"5:410:165":{"crate_id":5,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:46563:7582":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:46639:7584":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"5:10071:6988":{"crate_id":5,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"16:4814:6381":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"6:5737:8871":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"5:11980:418":{"crate_id":5,"path":["std","char"],"kind":"primitive"},"1:21205:16142":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"5:10512:3339":{"crate_id":5,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"5:7910:7053":{"crate_id":5,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"1:40133:10663":{"crate_id":1,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"4:676:231":{"crate_id":4,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"5:352:6971":{"crate_id":5,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:6915:36879":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:11527:7250":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:4186:3583":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"4:2223:34701":{"crate_id":4,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"5:7729:6983":{"crate_id":5,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"17:10066:5401":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:39455:7300":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:2842:3448":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"17:10471:5445":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"5:3991:16154":{"crate_id":5,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:3647:1829":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"16:3810:6364":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:9561:5368":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:12579:5773":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"16:6438:6529":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:43618:7493":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"5:3963:16151":{"crate_id":5,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"16:6470:6353":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"16:7739:6340":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"6:4895:8772":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"6:4764:8711":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:2925:3452":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"4:7339:3397":{"crate_id":4,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:21112:15799":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"5:0:1399":{"crate_id":5,"path":["std"],"kind":"module"},"6:4944:8806":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"5:2217:3316":{"crate_id":5,"path":["std","fs","read_to_string"],"kind":"function"},"1:9213:120":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"5:8864:1829":{"crate_id":5,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:9153:5226":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:10231:4124":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:41563:7239":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:12318:5730":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:9217:3576":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"17:10161:5410":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:39441:7299":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"16:6872:6343":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:9706:5371":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"4:7531:3398":{"crate_id":4,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"11:447:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:20974:15804":{"crate_id":1,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"17:13862:6109":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"5:2378:16134":{"crate_id":5,"path":["std","fs","canonicalize"],"kind":"function"},"6:1733:8501":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"6:4723:8692":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:25974:7209":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"16:4928:6385":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:11250:5550":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:14197:6218":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:8872:22721":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"11:365:4988":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:12815:5825":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"4:1288:6890":{"crate_id":4,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"5:6534:7022":{"crate_id":5,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"16:8043:6772":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:40654:1831":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"5:3344:3328":{"crate_id":5,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"6:506:8303":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"5:8279:9271":{"crate_id":5,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"5:4228:7000":{"crate_id":5,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:4380:5084":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"16:5382:5355":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:10633:5468":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:43104:4141":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"16:5651:6338":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"5:8533:7004":{"crate_id":5,"path":["std","path","Components"],"kind":"struct"},"6:562:8340":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:22618:171":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"5:12001:1506":{"crate_id":5,"path":["std","u128"],"kind":"primitive"},"1:7384:159":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:10883:5509":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"5:11335:7793":{"crate_id":5,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:40903:3478":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:43600:7492":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"17:12711:5789":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"1:41725:193":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:47595:7625":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:12671:3375":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"5:3407:3308":{"crate_id":5,"path":["std","io","Guard"],"kind":"struct"},"17:12346:5737":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"17:9604:5369":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"5:9012:7139":{"crate_id":5,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:22105:10492":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:12174:5696":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"6:653:16694":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:11738:3543":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"5:8211:3323":{"crate_id":5,"path":["std","io","Split"],"kind":"struct"},"17:11144:5539":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"5:1780:6986":{"crate_id":5,"path":["std","env","Vars"],"kind":"struct"},"17:504:5236":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"16:0:3241":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:2737:10622":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"17:10597:5465":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"16:2759:6326":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"6:5900:8960":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:7505:9246":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"6:4475:8613":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:44345:7523":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"17:11109:5535":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"5:8474:7121":{"crate_id":5,"path":["std","path","PrefixComponent"],"kind":"struct"},"11:97:8065":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:49861:15812":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"6:547:8332":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"5:1565:3400":{"crate_id":5,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"6:6067:9038":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:10957:5517":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"16:7631:6718":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:20805:15801":{"crate_id":1,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"5:8111:3352":{"crate_id":5,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"5:11254:7028":{"crate_id":5,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"16:5673:22655":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:20855:3553":{"crate_id":1,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"17:11955:5646":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:30367:68":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"5:5554:4442":{"crate_id":5,"path":["std","process","Termination"],"kind":"trait"},"5:10742:9283":{"crate_id":5,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"11:1663:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"6:4496:8624":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"4:7292:1829":{"crate_id":4,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"16:7799:6730":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"5:8918:16244":{"crate_id":5,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:8909:9982":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"6:4315:8524":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:9219:3162":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:5994:22657":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:261:5231":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:12502:5763":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:3233:3368":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"5:8298:7099":{"crate_id":5,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"5:11994:746":{"crate_id":5,"path":["std","i32"],"kind":"primitive"},"17:12851:5830":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"6:4908:8782":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"1:10027:2797":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"4:629:7181":{"crate_id":4,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"5:9046:35250":{"crate_id":5,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"17:12303:5726":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:6900:6602":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"4:3722:2143":{"crate_id":4,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"6:4949:8808":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:4794:8727":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"5:4148:7787":{"crate_id":5,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:21027:15800":{"crate_id":1,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"5:8840:4446":{"crate_id":5,"path":["std","process","ExitCode"],"kind":"struct"},"1:47879:7633":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:13639:6055":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:12592:5775":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:12878:5833":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"4:3217:34237":{"crate_id":4,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"16:6332:6519":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"4:5364:16063":{"crate_id":4,"path":["alloc","slice","Concat"],"kind":"trait"},"6:7546:9255":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:2243:97":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"5:2493:3331":{"crate_id":5,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:13332:5910":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:22486:174":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"16:5067:6389":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"5:5231:190":{"crate_id":5,"path":["std","path","Path"],"kind":"struct"},"5:1921:10391":{"crate_id":5,"path":["std","error","Indented"],"kind":"struct"},"1:22043:27401":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"16:5689:6405":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:41421:7236":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:13140:5878":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:11155:5540":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"5:11541:7171":{"crate_id":5,"path":["std","alloc","System"],"kind":"struct"},"4:6560:1829":{"crate_id":4,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:44050:7512":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:40362:3499":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:43867:7435":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"5:5962:5005":{"crate_id":5,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"5:6288:206":{"crate_id":5,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"6:4368:8567":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"5:1045:6628":{"crate_id":5,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"16:7707:6720":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"16:4753:6379":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:40432:3514":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:11234:5548":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"4:1273:6892":{"crate_id":4,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:1636:3419":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"5:7855:7049":{"crate_id":5,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:9592:5092":{"crate_id":1,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:4254:207":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"5:10802:1837":{"crate_id":5,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"5:5978:206":{"crate_id":5,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"1:6740:3498":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"11:817:6887":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:20853:27244":{"crate_id":1,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"6:1690:8485":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"5:2362:16129":{"crate_id":5,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:2821:3443":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"5:11125:9284":{"crate_id":5,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"1:10269:4125":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:21454:15802":{"crate_id":1,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"17:12118:5679":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"4:3330:3398":{"crate_id":4,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"1:40423:3505":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"14:202:3535":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:46015:7554":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"4:4196:3308":{"crate_id":4,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"5:8543:2797":{"crate_id":5,"path":["std","path","Iter"],"kind":"struct"},"1:40197:7444":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"5:4694:16176":{"crate_id":5,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:46304:7563":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:11241:22847":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:43672:4119":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:10403:5440":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:11778:3544":{"crate_id":1,"path":["core","str","pattern"],"kind":"module"},"1:2762:3432":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"16:8068:6775":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"6:4291:8507":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"16:4506:6372":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"5:9126:7027":{"crate_id":5,"path":["std","time","SystemTime"],"kind":"struct"},"5:10404:4443":{"crate_id":5,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"16:7331:36881":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:13179:5888":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:1755:3571":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"11:644:4118":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"16:2781:6327":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"5:5119:191":{"crate_id":5,"path":["std","path","PathBuf"],"kind":"struct"},"17:9344:36890":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"4:1138:7797":{"crate_id":4,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:10969:5518":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"5:9967:7463":{"crate_id":5,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"11:1822:1829":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:22027:27392":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:21238:7264":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"5:864:1829":{"crate_id":5,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"6:4729:8695":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"9:0:3235":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"16:6886:6344":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"1:21673:16142":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"6:7278:9235":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"5:4691:16203":{"crate_id":5,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:45736:7539":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"16:7099:7144":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:43328:4117":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:11803:10733":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:70:793":{"crate_id":1,"path":["core","isize"],"kind":"module"},"1:43100:9375":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:40465:3507":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"6:1513:8370":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:10310:4122":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"5:5771:7017":{"crate_id":5,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"5:11984:312":{"crate_id":5,"path":["std","array"],"kind":"primitive"},"17:12994:5852":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:40344:3491":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:8605:22701":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"5:4047:16159":{"crate_id":5,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"11:332:4986":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:12089:5668":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"6:474:7784":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"16:6554:6542":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:42845:4247":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"5:11992:748":{"crate_id":5,"path":["std","i8"],"kind":"primitive"},"5:2632:3334":{"crate_id":5,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"16:7693:6342":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:44293:9382":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"18:531:5179":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"5:2208:129":{"crate_id":5,"path":["std","fs","File"],"kind":"struct"},"16:3894:6366":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"11:793:6897":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:2783:3436":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:13957:6138":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:5994:9011":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"6:1536:8380":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:12374:151":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:44540:161":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"5:8848:2797":{"crate_id":5,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:6607:9108":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"4:4395:3308":{"crate_id":4,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"4:1523:7183":{"crate_id":4,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"5:11317:7034":{"crate_id":5,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"5:8383:16212":{"crate_id":5,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:13707:6069":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:2984:2555":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:2690:2120":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:2318:125":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"17:8899:22722":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"5:11991:645":{"crate_id":5,"path":["std","f64"],"kind":"primitive"},"1:47859:7631":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:8771:22718":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"4:276:1839":{"crate_id":4,"path":["alloc","boxed","Box"],"kind":"struct"},"1:40118:7213":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"16:7763:22666":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:14177:6212":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"5:7532:7174":{"crate_id":5,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:4010:7215":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"5:8794:4443":{"crate_id":5,"path":["std","process","CommandArgs"],"kind":"struct"},"17:12646:5783":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"6:6022:9024":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"6:7586:9263":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"17:10581:5463":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:12568:107":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:41776:2797":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"6:4917:8788":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"4:6932:5076":{"crate_id":4,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:4263:7219":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"11:399:7778":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"5:5406:4436":{"crate_id":5,"path":["std","process","ChildStdout"],"kind":"struct"},"11:736:6883":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"17:0:3242":{"crate_id":17,"path":["object"],"kind":"module"},"5:11038:5033":{"crate_id":5,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"5:8401:7118":{"crate_id":5,"path":["std","path","Prefix"],"kind":"enum"},"16:6456:6336":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"5:3517:2529":{"crate_id":5,"path":["std","io","BufRead"],"kind":"trait"},"5:10912:7046":{"crate_id":5,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"17:13029:5864":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"5:1068:6892":{"crate_id":5,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:3934:3308":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"4:4365:5060":{"crate_id":4,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:45837:7543":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"6:1911:17685":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"5:3184:8050":{"crate_id":5,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"16:4536:6373":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:11045:5524":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:41801:183":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:12361:136":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"4:3802:3398":{"crate_id":4,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"16:3042:21798":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:47899:7635":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:12727:5794":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"18:690:5207":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:11315:4109":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:21106:15797":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:41904:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"18:80:7756":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"4:5614:3404":{"crate_id":4,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:5990:3515":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"16:7433:6698":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"9:52:9961":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"5:8146:3350":{"crate_id":5,"path":["std","io","util","Sink"],"kind":"struct"},"1:1732:3572":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:22684:169":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"5:1765:610":{"crate_id":5,"path":["std","env"],"kind":"module"},"1:3513:3400":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"17:14189:6215":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"4:35:3377":{"crate_id":4,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"5:5386:4435":{"crate_id":5,"path":["std","process","ChildStdin"],"kind":"struct"},"6:1603:8424":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:7698:10393":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"17:12133:5685":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:11428:5565":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:12757:5813":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:12053:5663":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:41540:6999":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"5:5745:7016":{"crate_id":5,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:44289:9381":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"5:12004:1134":{"crate_id":5,"path":["std","reference"],"kind":"primitive"},"1:43814:7498":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"6:5015:8836":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:11696:5589":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"1:47868:7632":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:6077:9040":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:9913:5390":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:3156:135":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"5:8982:7136":{"crate_id":5,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"5:11464:6997":{"crate_id":5,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:45652:7536":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"6:4984:8826":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"6:5080:8867":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:40058:27406":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"5:11996:743":{"crate_id":5,"path":["std","i128"],"kind":"primitive"},"6:5818:8916":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"16:6018:22658":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"16:7665:6351":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"5:7761:7047":{"crate_id":5,"path":["std","error","private","Internal"],"kind":"struct"},"6:494:8298":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"16:6939:22662":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"6:4818:8737":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:30915:183":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"5:9107:7026":{"crate_id":5,"path":["std","time","Instant"],"kind":"struct"},"18:727:5217":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:11276:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"5:7872:7051":{"crate_id":5,"path":["std","fs","Permissions"],"kind":"struct"},"16:6540:6341":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"5:6604:5019":{"crate_id":5,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"4:207:3379":{"crate_id":4,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"5:10737:9281":{"crate_id":5,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"17:10199:5414":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"10:44:6905":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"9:393:21652":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:12792:5824":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"6:6711:9144":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:9399:5365":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"4:6639:5040":{"crate_id":4,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:76:1564":{"crate_id":1,"path":["core","usize"],"kind":"module"},"6:7529:9250":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"5:11032:5032":{"crate_id":5,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"4:5771:232":{"crate_id":4,"path":["alloc","string","ToString"],"kind":"trait"},"1:2897:117":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:42590:68":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"16:6724:6580":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"18:755:5222":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"6:5877:8947":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:11454:5566":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:43833:7500":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"16:6763:6592":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"16:3441:6360":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"7:0:1554":{"crate_id":7,"path":["unwind"],"kind":"module"},"5:872:6882":{"crate_id":5,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"11:695:6881":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"16:6160:6477":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:0:496":{"crate_id":1,"path":["core"],"kind":"module"},"1:20941:15809":{"crate_id":1,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"5:4733:16167":{"crate_id":5,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"16:6713:6579":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:14163:6206":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"14:187:10390":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"6:6850:9223":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"11:1517:6898":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"5:10772:7050":{"crate_id":5,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"1:42861:4246":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:44285:9380":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:5383:3308":{"crate_id":1,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"1:11849:10741":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:3151:234":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:4113:7216":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"5:3927:16150":{"crate_id":5,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"17:11074:5253":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"5:11993:745":{"crate_id":5,"path":["std","i16"],"kind":"primitive"},"16:7622:6717":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"4:5925:70":{"crate_id":4,"path":["alloc","sync","Arc"],"kind":"struct"},"1:4389:3585":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"5:6425:7021":{"crate_id":5,"path":["std","sync","once","OnceState"],"kind":"struct"},"16:2874:6331":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"11:2201:3397":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"6:4395:8577":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"16:5028:6388":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:47841:7630":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:47978:7640":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"5:6153:5014":{"crate_id":5,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:43416:4132":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"16:4564:6374":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"5:10552:5030":{"crate_id":5,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"5:3222:3342":{"crate_id":5,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:41589:181":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"16:4996:6387":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:43550:3323":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"5:6590:8066":{"crate_id":5,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"16:6427:6528":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:7277:3113":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"5:11181:7026":{"crate_id":5,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"5:8989:34894":{"crate_id":5,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"5:4035:16156":{"crate_id":5,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"18:538:5182":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"18:707:5210":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:4045:3362":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"11:1103:6895":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"17:2133:5245":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:2519:238":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"5:11105:4445":{"crate_id":5,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"1:8422:3538":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:40031:7213":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:4616:8666":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:9172:210":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"1:1666:1092":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"1:40372:3500":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"5:1591:6903":{"crate_id":5,"path":["std","collections","hash","set","Union"],"kind":"struct"},"6:4328:8534":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"5:11485:6998":{"crate_id":5,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:43508:7489":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:10313:5422":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"5:4560:16194":{"crate_id":5,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"1:3078:2629":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"5:9471:7048":{"crate_id":5,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"1:40239:10674":{"crate_id":1,"path":["core","ffi","c_char"],"kind":"typedef"},"17:8542:22703":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"5:2403:1836":{"crate_id":5,"path":["std","io"],"kind":"module"},"4:7255:198":{"crate_id":4,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"5:3262:3344":{"crate_id":5,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"6:4606:8665":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"4:1257:6628":{"crate_id":4,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"5:9019:7140":{"crate_id":5,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"5:8934:16246":{"crate_id":5,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:11550:7251":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:41398:155":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"9:507:6957":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"16:6128:6472":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:4335:3584":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"17:11520:5253":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"6:4664:8670":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"5:11946:9980":{"crate_id":5,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"1:6834:3470":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"4:782:5042":{"crate_id":4,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:12017:5654":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"5:2918:210":{"crate_id":5,"path":["std","io","error","Result"],"kind":"typedef"},"6:7540:9254":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"5:3834:6998":{"crate_id":5,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:20897:15808":{"crate_id":1,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"6:6573:9089":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:12631:5780":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:3635:5264":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:44114:7513":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"6:4401:8580":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:12864:5832":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:11600:22729":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"5:7680:5030":{"crate_id":5,"path":["std","thread","Thread"],"kind":"struct"},"6:6805:9201":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:40302:3489":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:4409:3587":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"16:2352:6309":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"5:4812:16164":{"crate_id":5,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"11:836:6888":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"5:5042:7009":{"crate_id":5,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:39359:203":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"4:1118:8073":{"crate_id":4,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:40074:7432":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"5:10299:4438":{"crate_id":5,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"16:7445:6699":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:10361:5435":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"14:160:6871":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:42636:71":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"5:8188:1828":{"crate_id":5,"path":["std","io","Chain"],"kind":"struct"},"17:1075:5238":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:9336:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"17:12605:5776":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:10249:5416":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:39337:201":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"9:426:21653":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"5:8328:9117":{"crate_id":5,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:43277:7484":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"4:4350:245":{"crate_id":4,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:13368:5941":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"4:2966:8078":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"16:6142:194":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"5:6894:5021":{"crate_id":5,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"1:9215:3575":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"6:1663:8472":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:9777:22735":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"5:8155:1837":{"crate_id":5,"path":["std","io","IoSlice"],"kind":"struct"},"16:5843:6427":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"6:1575:8405":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:13659:6063":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:12457:5758":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:12365:5742":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"11:1818:2797":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"5:7128:7790":{"crate_id":5,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"16:8105:6780":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"11:1538:6899":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"16:2689:6323":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"18:582:3939":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"5:10925:4439":{"crate_id":5,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:2246:98":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:10330:5427":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"4:1776:3398":{"crate_id":4,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"6:5044:8855":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"16:6317:6517":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"17:10544:5457":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"5:4039:16157":{"crate_id":5,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:2804:3444":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"6:1673:8478":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:12004:5653":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"10:0:3236":{"crate_id":10,"path":["adler"],"kind":"module"},"1:45584:7533":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"5:4488:16177":{"crate_id":5,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:2470:16142":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:43842:7253":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"5:6537:16240":{"crate_id":5,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"9:330:8277":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"5:854:4118":{"crate_id":5,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:10555:5458":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"4:7414:7205":{"crate_id":4,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"11:1838:6900":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:11118:5536":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"11:1027:21730":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:12616:140":{"crate_id":1,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"6:4469:8610":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:47657:7626":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"9:486:21650":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:11852:5630":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:12579:5011":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"11:986:6890":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:10076:3323":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"5:8167:3321":{"crate_id":5,"path":["std","io","SeekFrom"],"kind":"enum"},"6:1709:8492":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:10303:5302":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:40400:7449":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:41649:2797":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"4:1464:6882":{"crate_id":4,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"4:7233:34236":{"crate_id":4,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"16:8152:6354":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:10417:5441":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"5:944:6887":{"crate_id":5,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:2740:3702":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:44357:10754":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"5:1928:656":{"crate_id":5,"path":["std","ffi"],"kind":"module"},"4:261:5040":{"crate_id":4,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"1:45714:7538":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"5:9067:9273":{"crate_id":5,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"17:10511:5451":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"16:3777:6363":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"18:624:36896":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:40331:1828":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:9939:5393":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"8:0:3234":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"5:3111:3351":{"crate_id":5,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"5:11287:7031":{"crate_id":5,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"5:3377:3349":{"crate_id":5,"path":["std","io","util","Repeat"],"kind":"struct"},"1:40110:7435":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"15:306:7768":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"11:119:4984":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"6:5882:8948":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"5:498:4993":{"crate_id":5,"path":["std","thread","PanicGuard"],"kind":"struct"},"5:11237:5034":{"crate_id":5,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"5:12003:1564":{"crate_id":5,"path":["std","usize"],"kind":"primitive"},"6:4506:8631":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:13882:6116":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"5:9097:218":{"crate_id":5,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:44277:9378":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"16:7568:36878":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"18:590:5185":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"13:0:3233":{"crate_id":13,"path":["std_detect"],"kind":"module"},"17:10568:5461":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"5:4164:16174":{"crate_id":5,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:14301:6246":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:5531:3503":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:2693:226":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"6:0:821":{"crate_id":6,"path":["libc"],"kind":"module"},"6:4568:8663":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"5:3985:16153":{"crate_id":5,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"15:394:21762":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"6:500:8300":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:2757:3435":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"5:3732:6997":{"crate_id":5,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"4:1672:5040":{"crate_id":4,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"11:2174:7726":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"9:237:7477":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"4:2461:8074":{"crate_id":4,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:13847:6107":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:9966:5369":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"5:3501:10392":{"crate_id":5,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"0:0:1695":{"crate_id":0,"path":["bytes"],"kind":"module"},"1:44269:9376":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"17:9571:36888":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"17:11542:5571":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"5:5491:4439":{"crate_id":5,"path":["std","process","Stdio"],"kind":"struct"},"1:47888:7634":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"5:9464:129":{"crate_id":5,"path":["std","sys","unix","fs","File"],"kind":"struct"},"1:42685:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"16:5301:6391":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"5:477:4992":{"crate_id":5,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"17:12394:5747":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:8736:79":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"5:2570:4997":{"crate_id":5,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"4:685:111":{"crate_id":4,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:4605:10657":{"crate_id":1,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"6:4973:8820":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:43654:4122":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"5:8198:1831":{"crate_id":5,"path":["std","io","Take"],"kind":"struct"},"16:5567:6337":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"17:9866:5382":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:4868:6383":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:41943:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"5:8549:7127":{"crate_id":5,"path":["std","path","Ancestors"],"kind":"struct"},"11:760:3398":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"16:2900:6332":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:2152:588":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:21459:15810":{"crate_id":1,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"4:2959:3534":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:13914:6124":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"16:4785:6380":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:43403:3489":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:45540:7531":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"17:8841:22720":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:9428:141":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:22519:4112":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"6:4938:8803":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"5:1077:6896":{"crate_id":5,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"5:6978:35728":{"crate_id":5,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:2516:133":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"17:11791:5616":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:42645:68":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"17:9032:5356":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"5:6061:5008":{"crate_id":5,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"6:7558:9257":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"6:4463:8608":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:9538:1377":{"crate_id":1,"path":["core","slice"],"kind":"module"},"4:2690:9291":{"crate_id":4,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"4:7223:5049":{"crate_id":4,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:20841:15803":{"crate_id":1,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"1:46799:7586":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"5:8957:7132":{"crate_id":5,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:5829:8924":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:21236:15805":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:11792:5210":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"16:5807:6420":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"11:1826:3400":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"5:7862:7050":{"crate_id":5,"path":["std","fs","FileTimes"],"kind":"struct"},"17:13557:6043":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"6:5955:8997":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:21104:16142":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:1917:3371":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"16:6658:6566":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:11084:5526":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"17:11007:5521":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"15:327:9958":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:6130:9051":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"5:8324:7109":{"crate_id":5,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:12077:5667":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:2743:3364":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"5:5615:5005":{"crate_id":5,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"11:2033:6628":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"17:11056:22845":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:2799:3439":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"7:32:21638":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"5:12002:793":{"crate_id":5,"path":["std","isize"],"kind":"primitive"},"4:3671:5040":{"crate_id":4,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:3196:3367":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:11164:5541":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:2838:3447":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"16:5363:22654":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:9361:7244":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:44297:9383":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"17:10430:5442":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"5:8971:7133":{"crate_id":5,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"6:5058:8861":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:13830:6099":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"5:6185:7019":{"crate_id":5,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:13427:5993":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"17:11767:5602":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:11098:5531":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:20669:28125":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:39315:202":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"16:6396:6526":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"6:6744:9158":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:11888:5635":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"16:7539:6350":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:9485:36889":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:13894:6117":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:42663:128":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"17:13604:6051":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"16:6386:6525":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:13937:6132":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:40524:3496":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:12035:5662":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:10293:5420":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:45630:7535":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"11:1858:6903":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"1:2850:3450":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"18:699:5208":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:2265:105":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"9:177:9971":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"16:6815:6594":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"5:8306:7107":{"crate_id":5,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"16:2332:6303":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"5:10228:4449":{"crate_id":5,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"11:749:3400":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:2695:109":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"5:632:6976":{"crate_id":5,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:3162:3457":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:14044:6157":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"4:878:5047":{"crate_id":4,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:20803:16142":{"crate_id":1,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"4:6800:3406":{"crate_id":4,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"4:7184:3376":{"crate_id":4,"path":["alloc","alloc","Global"],"kind":"struct"},"5:6137:5011":{"crate_id":5,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"4:6308:16075":{"crate_id":4,"path":["alloc","task","Wake"],"kind":"trait"},"5:551:6974":{"crate_id":5,"path":["std","thread","JoinHandle"],"kind":"struct"},"5:2920:128":{"crate_id":5,"path":["std","io","error","Error"],"kind":"struct"},"17:10351:5434":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:12396:29153":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"17:14150:6200":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"6:1527:8375":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"4:2141:7186":{"crate_id":4,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:3385:7212":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"17:3186:5249":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"16:6232:6510":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:9879:222":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"11:844:6889":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:11178:5542":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:45785:7541":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"16:7255:3680":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:47940:7638":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:14395:6267":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:541:8329":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"5:7885:130":{"crate_id":5,"path":["std","fs","FileType"],"kind":"struct"},"16:7061:6627":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:4144:7217":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"6:4524:8640":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"11:2180:7772":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"5:5372:4434":{"crate_id":5,"path":["std","process","Child"],"kind":"struct"},"17:13109:5872":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:9528:36885":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:13803:6095":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:13923:6125":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:45985:7553":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:13870:6110":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:43772:7497":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"16:6931:6605":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:10324:4119":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"16:7515:6712":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:43366:4127":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"16:2825:6329":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:9377:731":{"crate_id":1,"path":["core","hash"],"kind":"module"},"6:4413:8589":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:20988:3553":{"crate_id":1,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"16:2314:6301":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:4811:799":{"crate_id":1,"path":["core","iter"],"kind":"module"},"6:4842:8747":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"16:5972:6292":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"4:1374:94":{"crate_id":4,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"5:3977:16152":{"crate_id":5,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"4:7398:27417":{"crate_id":4,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:6197:6494":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:41657:4118":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"5:3181:7899":{"crate_id":5,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"5:11093:4444":{"crate_id":5,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"6:7599:9267":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:46909:7589":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"4:3183:34235":{"crate_id":4,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"12:0:3238":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:44162:7522":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"6:5890:8953":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:6775:9184":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"5:11983:1054":{"crate_id":5,"path":["std","pointer"],"kind":"primitive"},"4:6771:3404":{"crate_id":4,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:39434:6678":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"18:660:5198":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"16:4323:6368":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"6:1495:8362":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"5:8889:7131":{"crate_id":5,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"4:7367:102":{"crate_id":4,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"5:4025:16155":{"crate_id":5,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:10253:5417":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"17:10123:5389":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:42347:3575":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"4:895:2797":{"crate_id":4,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"5:8856:7130":{"crate_id":5,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:2164:3554":{"crate_id":1,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"18:652:5175":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:30351:3422":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:8924:22723":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:12412:5748":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"5:1892:6990":{"crate_id":5,"path":["std","error","Report"],"kind":"struct"},"17:11669:5583":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:43934:10747":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:2602:128":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"5:919:6880":{"crate_id":5,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:46382:7565":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"5:4126:7786":{"crate_id":5,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"6:1717:8496":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"4:3570:163":{"crate_id":4,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"5:4897:16201":{"crate_id":5,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:21210:15796":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:2513:149":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:43824:7499":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:9476:4245":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:42892:7481":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"6:6705:9142":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"16:5612:6395":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:47803:7629":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:8632:22714":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"6:4428:8595":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"6:5051:8858":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"1:11490:7247":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:22093:7288":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:39413:3456":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"5:11302:7032":{"crate_id":5,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"5:2556:3332":{"crate_id":5,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"17:11371:5562":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"16:6850:6598":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:14007:6149":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"1:44128:10748":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"5:885:6883":{"crate_id":5,"path":["std","collections","hash","map","Values"],"kind":"struct"},"4:5130:5065":{"crate_id":4,"path":["alloc","rc","Weak"],"kind":"struct"},"1:4325:5083":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"4:3142:95":{"crate_id":4,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:8794:22719":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"5:11962:35255":{"crate_id":5,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:10080:5403":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"5:8272:6999":{"crate_id":5,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"6:7564:9258":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"5:10747:7049":{"crate_id":5,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"5:3492:2627":{"crate_id":5,"path":["std","io","Write"],"kind":"trait"},"1:20667:28127":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"5:7572:5024":{"crate_id":5,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:2291:429":{"crate_id":1,"path":["core","cmp"],"kind":"module"},"1:32135:7047":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"17:9840:5381":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"5:5551:4440":{"crate_id":5,"path":["std","process","exit"],"kind":"function"},"16:6175:6479":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"17:9734:5372":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:13795:6093":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:22420:176":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"4:6081:3308":{"crate_id":4,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:22006:27389":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"4:4987:3308":{"crate_id":4,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"5:1982:184":{"crate_id":5,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:4543:8650":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:12148:5691":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:10931:5512":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:10175:5369":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"16:5342:6392":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:44273:9377":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"17:12671:5785":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:39193:3370":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"17:12936:5843":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:9690:5098":{"crate_id":1,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"6:4695:8679":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:22651:172":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:42853:7475":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:9665:36892":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"11:798:6884":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"6:1631:8449":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"4:822:5045":{"crate_id":4,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"5:728:142":{"crate_id":5,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"5:1059:6890":{"crate_id":5,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:9658:5094":{"crate_id":1,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"17:12891:5834":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:12065:5666":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"16:2519:6316":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:2164:5248":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:9655:5370":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:9318:5357":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:11967:5647":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"5:7635:6973":{"crate_id":5,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:42354:3162":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:11388:22727":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"5:8800:186":{"crate_id":5,"path":["std","process","Output"],"kind":"struct"},"5:11560:7035":{"crate_id":5,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"16:4841:6382":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:13620:6054":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:40913:3480":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:1466:1835":{"crate_id":1,"path":["core","mem"],"kind":"module"},"1:9436:145":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"17:9806:22736":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"5:8451:7477":{"crate_id":5,"path":["std","path","State"],"kind":"enum"},"6:7463:9245":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"5:582:16090":{"crate_id":5,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:9048:5223":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"16:7753:6722":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:43429:4128":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:11568:22728":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:30345:2553":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"18:0:3243":{"crate_id":18,"path":["memchr"],"kind":"module"},"16:8138:6784":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"4:5368:16064":{"crate_id":4,"path":["alloc","slice","Join"],"kind":"trait"},"5:11998:1507":{"crate_id":5,"path":["std","u16"],"kind":"primitive"},"4:4076:4118":{"crate_id":4,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"18:736:26678":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"4:1514:198":{"crate_id":4,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"5:12000:1509":{"crate_id":5,"path":["std","u64"],"kind":"primitive"},"1:47993:7641":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"11:723:6882":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:46229:7561":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"4:3171:2797":{"crate_id":4,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"15:0:3240":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:41674:3680":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"17:12840:5829":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"16:7313:36882":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:14315:6248":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:13732:6077":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"18:644:5175":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"4:5977:8080":{"crate_id":4,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:44324:122":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:9211:112":{"crate_id":1,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"6:5799:8914":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:8659:22715":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"11:657:1829":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:43754:7496":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:22585:170":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:21229:16142":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"5:950:6888":{"crate_id":5,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:13778:6090":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"3:0:3232":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"5:9162:7147":{"crate_id":5,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"5:11997:1510":{"crate_id":5,"path":["std","u8"],"kind":"primitive"},"4:6888:244":{"crate_id":4,"path":["alloc","vec","Vec"],"kind":"struct"},"1:6651:3488":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:22453:177":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:43804:3322":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:2355:189":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"6:6156:9066":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"6:7609:9269":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"5:635:6978":{"crate_id":5,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:10390:5439":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"5:9102:219":{"crate_id":5,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"6:4716:8691":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"4:1473:6883":{"crate_id":4,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"1:43438:4131":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:13167:5881":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"6:1557:8395":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"14:40:5617":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"6:5920:8976":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:21954:7273":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"6:4685:8672":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"16:6667:6567":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"6:1500:8364":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:4770:8714":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"5:6421:3474":{"crate_id":5,"path":["std","sync","once","Once"],"kind":"struct"},"1:42608:110":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"17:12982:5850":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:14205:6219":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"5:11329:7792":{"crate_id":5,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:1746:9294":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"11:1852:6902":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"5:10812:36505":{"crate_id":5,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"11:1831:3398":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"16:5100:6390":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:3373:10620":{"crate_id":1,"path":["core","any","Provider"],"kind":"trait"},"5:11144:7027":{"crate_id":5,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"17:10038:5399":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:10654:5470":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"4:2243:9290":{"crate_id":4,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"6:5849:8935":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"6:4824:8738":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:13771:6088":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"4:4034:5040":{"crate_id":4,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"16:2421:6312":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:14015:6150":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"4:3204:6902":{"crate_id":4,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"5:1979:185":{"crate_id":5,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:2816:3442":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:45560:7532":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"6:5979:9009":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"5:956:6889":{"crate_id":5,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"4:3583:2797":{"crate_id":4,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"16:5775:6414":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:10499:5448":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"5:8218:3322":{"crate_id":5,"path":["std","io","Lines"],"kind":"struct"},"2:0:442":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:7657:3484":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:8740:22717":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"14:215:6876":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"15:288:7764":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:9409:36891":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:8316:3683":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"11:630:2797":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:40046:7429":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"6:6796:9198":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:42620:6749":{"crate_id":1,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:14259:6240":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:10280:5419":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:32099:4447":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"5:3435:2527":{"crate_id":5,"path":["std","io","Read"],"kind":"trait"},"17:10148:5409":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:40514:3511":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:40682:3513":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:39420:7298":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"17:13574:6045":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:46037:7555":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:2910:2871":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:12423:192":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"5:8350:7003":{"crate_id":5,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:30381:27400":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"5:1430:144":{"crate_id":5,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:13083:5870":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"5:11999:1508":{"crate_id":5,"path":["std","u32"],"kind":"primitive"},"5:8235:16147":{"crate_id":5,"path":["std","net","Shutdown"],"kind":"enum"},"5:11553:35970":{"crate_id":5,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:2779:3433":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"16:5882:6430":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"16:2373:6310":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:22717:7292":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:9675:4997":{"crate_id":1,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:2752:3430":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"6:4887:8767":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"4:5:1576":{"crate_id":4,"path":["alloc","vec"],"kind":"macro"},"1:40152:7439":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"16:2567:6318":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"16:4698:6377":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:46207:7560":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:6983:3348":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"16:2541:6317":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:39448:3584":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"6:5805:8915":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:13513:6038":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:43956:7502":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:9227:3578":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:12254:5701":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"5:8870:7011":{"crate_id":5,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"16:4620:6376":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:11753:5601":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:40282:7446":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:40225:7445":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:10323:5424":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"5:8139:3348":{"crate_id":5,"path":["std","io","util","Empty"],"kind":"struct"},"5:11567:7035":{"crate_id":5,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"17:10266:5418":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"5:11423:6996":{"crate_id":5,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"6:4638:8668":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"5:11021:5031":{"crate_id":5,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:2826:3445":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"16:8125:6781":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:6618:9113":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"4:1482:6897":{"crate_id":4,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"16:5793:6419":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"11:403:7779":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"17:12566:5772":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:9716:36894":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"5:4626:9128":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"6:6598:9107":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"6:119:16336":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"4:1102:7796":{"crate_id":4,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:14403:6270":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:2773:3434":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"16:7592:22665":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"17:9990:5396":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:3395:5251":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"4:3737:7185":{"crate_id":4,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:41733:210":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:44182:3539":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:2931:2850":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:2962:3369":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"17:10621:5467":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:7264:134":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"6:6820:9208":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"16:6303:6333":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"6:1696:8488":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"6:4992:8828":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:43985:7510":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:14417:6273":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"5:6384:7020":{"crate_id":5,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"5:7902:119":{"crate_id":5,"path":["std","fs","DirBuilder"],"kind":"struct"},"5:1580:6901":{"crate_id":5,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"1:40192:101":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"17:3519:5252":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"16:7073:22663":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"16:2443:6313":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"5:11987:1491":{"crate_id":5,"path":["std","tuple"],"kind":"primitive"},"17:9016:5355":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"5:4466:16176":{"crate_id":5,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"5:7845:5303":{"crate_id":5,"path":["std","fs","Metadata"],"kind":"struct"},"11:968:6628":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"4:1011:5040":{"crate_id":4,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"5:7591:5026":{"crate_id":5,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:9223:194":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"17:10051:5400":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"4:778:96":{"crate_id":4,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:47059:7590":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"14:0:3239":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"5:5422:4437":{"crate_id":5,"path":["std","process","ChildStderr"],"kind":"struct"},"5:2213:2528":{"crate_id":5,"path":["std","fs","read"],"kind":"function"},"17:9083:5224":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"16:3058:5260":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"16:5737:22656":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:47517:7624":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"16:5626:6399":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"5:11995:747":{"crate_id":5,"path":["std","i64"],"kind":"primitive"},"1:46405:7566":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:14216:6224":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"18:681:5205":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"16:5940:6436":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:13905:6121":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:10110:5407":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"5:3301:3340":{"crate_id":5,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"6:6171:9077":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:2507:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"18:671:5204":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:44466:205":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"17:11905:5637":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"16:7289:6658":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"17:10945:5516":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:3317:69":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"18:113:7760":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:46131:7557":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:11189:5544":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:11020:5522":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"5:1818:6988":{"crate_id":5,"path":["std","env","SplitPaths"],"kind":"struct"},"5:9274:4500":{"crate_id":5,"path":["std","sys","unix","args","Args"],"kind":"struct"},"4:4004:3400":{"crate_id":4,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"16:8086:6777":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"6:4963:8814":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:12618:5778":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:5471:3308":{"crate_id":1,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"5:4735:16168":{"crate_id":5,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:40391:3502":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:2162:3553":{"crate_id":1,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"1:2705:3396":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"7:79:21645":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:12905:5837":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:11872:5631":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:41455:10702":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"6:6008:9022":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"5:10509:3343":{"crate_id":5,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"5:4731:16165":{"crate_id":5,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"17:13787:6091":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:11726:5593":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"1:45684:7537":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"16:8252:6793":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:13492:6033":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"5:6673:7020":{"crate_id":5,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"6:7295:9244":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:40145:7438":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"16:4396:6369":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"6:488:8295":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:234:210":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"4:4166:3308":{"crate_id":4,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"1:46875:7588":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:2523:237":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"5:11763:5039":{"crate_id":5,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"5:2592:3324":{"crate_id":5,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"5:7370:36007":{"crate_id":5,"path":["std","panicking","Hook"],"kind":"enum"},"4:7440:5066":{"crate_id":4,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"6:4489:8621":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:4740:8699":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:44527:7527":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"16:2589:6319":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"17:9118:5225":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:14102:6199":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:9173:2627":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"17:9926:5391":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"1:4436:3586":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"6:4781:8722":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:10158:4121":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:44305:9284":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:20652:28128":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:13448:6003":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"16:6347:22659":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"6:4587:8664":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"5:11981:1526":{"crate_id":5,"path":["std","unit"],"kind":"primitive"},"1:44557:3467":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"4:106:527":{"crate_id":4,"path":["alloc","alloc","dealloc"],"kind":"function"},"16:6789:6593":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"5:2388:16139":{"crate_id":5,"path":["std","fs","read_dir"],"kind":"function"},"16:2803:6328":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"6:4748:8703":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:2791:3438":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:13991:6146":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:9221:3163":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:11642:5582":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"4:6957:5079":{"crate_id":4,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"6:4626:8667":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:22387:175":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"16:8176:22668":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:13125:5874":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"4:3238:6903":{"crate_id":4,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"5:3453:3317":{"crate_id":5,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:46721:7585":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:40126:7436":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"4:3178:6901":{"crate_id":4,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"1:45892:7546":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"5:11978:371":{"crate_id":5,"path":["std","bool"],"kind":"primitive"},"5:5738:7013":{"crate_id":5,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:42580:9367":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"17:9744:36887":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:2590:116":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"5:7734:7043":{"crate_id":5,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"4:7213:3400":{"crate_id":4,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"17:10812:5505":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"1:4022:103":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"5:2376:16133":{"crate_id":5,"path":["std","fs","read_link"],"kind":"function"},"1:40322:3490":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:10338:4123":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:39255:200":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:44476:211":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"5:11951:16095":{"crate_id":5,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:8997:22702":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:13016:5863":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"5:527:4994":{"crate_id":5,"path":["std","thread","Packet"],"kind":"struct"},"18:766:26679":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"6:123:16337":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"16:4032:6367":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"18:96:7757":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"11:311:7776":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:10837:4134":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:42870:145":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"14:7:6871":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"16:4900:6384":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:11798:10734":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:4420:8593":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:43494:3542":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"16:2737:6325":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"5:358:6972":{"crate_id":5,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"5:8006:3335":{"crate_id":5,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:40668:3512":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:6036:9029":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"6:4518:8637":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:1543:3308":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"6:1681:8479":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"16:4441:6370":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"4:1503:6881":{"crate_id":4,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"6:5863:8946":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"5:5299:120":{"crate_id":5,"path":["std","path","Display"],"kind":"struct"},"4:7351:3466":{"crate_id":4,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"6:4800:8730":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"16:3744:6362":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:8883:671":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"1:40452:3494":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"16:3295:6359":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"18:515:5172":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"4:7384:7202":{"crate_id":4,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:14380:6266":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"16:2399:6311":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"6:568:8343":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"16:6516:6540":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"4:7451:224":{"crate_id":4,"path":["alloc","string","String"],"kind":"struct"},"1:43448:4129":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"6:587:8353":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:42021:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:13303:5890":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"5:10447:5029":{"crate_id":5,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"6:1638:8453":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:40353:3492":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"5:10792:119":{"crate_id":5,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"6:4650:8669":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"5:7708:16093":{"crate_id":5,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"5:8826:4445":{"crate_id":5,"path":["std","process","ExitStatusError"],"kind":"struct"},"4:1492:6880":{"crate_id":4,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"5:11400:5036":{"crate_id":5,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:20650:28130":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"16:149:4981":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"6:4446:8602":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"9:357:21666":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:3168:3459":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:44139:7514":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:10786:5502":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"5:11979:941":{"crate_id":5,"path":["std","never"],"kind":"primitive"},"16:7648:198":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:42218:3596":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:46183:7559":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:8904:10394":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:9977:5370":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"5:10718:7159":{"crate_id":5,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"18:599:36898":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"16:2293:21771":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"6:1569:8403":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"5:3510:3318":{"crate_id":5,"path":["std","io","Seek"],"kind":"trait"},"17:12354:5739":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:13055:5866":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"17:12333:5735":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:2349:182":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:7227:3487":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:40894:3349":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"17:14236:6227":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"4:5841:3400":{"crate_id":4,"path":["alloc","string","Drain"],"kind":"struct"},"1:9869:16142":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"18:564:5184":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:23164:7208":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:21126:7264":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:11924:5642":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"6:7511:9247":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:12552:5475":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:4341:8544":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"5:11260:4451":{"crate_id":5,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:41575:7241":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"5:10782:130":{"crate_id":5,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"4:1426:4118":{"crate_id":4,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"16:4592:6375":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:45754:7540":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"4:5956:5065":{"crate_id":4,"path":["alloc","sync","Weak"],"kind":"struct"},"11:0:3237":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"18:719:5214":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"5:9184:35848":{"crate_id":5,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"17:10845:5507":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"5:1586:6902":{"crate_id":5,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"6:7552:9256":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"6:1506:8367":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"5:11929:7177":{"crate_id":5,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"17:12424:5750":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:40475:3508":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"5:2360:3545":{"crate_id":5,"path":["std","fs","metadata"],"kind":"function"},"1:7306:121":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:42340:3576":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:21845:7266":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:40209:27417":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:13566:6044":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:41438:7238":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"4:2131:4993":{"crate_id":4,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"16:6239:36883":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"4:4236:2797":{"crate_id":4,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:10223:5415":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"17:12966:5846":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"16:7484:6710":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"6:5008:8833":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:3998:7214":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"16:7012:6619":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"10:36:8276":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"1:1820:2872":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"5:4380:7002":{"crate_id":5,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"6:4848:8748":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:5836:8926":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"18:481:5173":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:4810:8733":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"4:2960:34204":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"17:10377:5437":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"16:7463:6707":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"5:9024:7141":{"crate_id":5,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"1:21044:16142":{"crate_id":1,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"16:530:6290":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"6:554:8335":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"4:1442:1829":{"crate_id":4,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"13:226:8271":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"6:6625:9117":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"5:841:2797":{"crate_id":5,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:46351:7564":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:12106:5676":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"16:2715:6324":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"16:6214:6500":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:44484:195":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"17:13999:6147":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"4:4848:204":{"crate_id":4,"path":["alloc","rc","Rc"],"kind":"struct"},"1:5589:3493":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:39628:27398":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:11354:5323":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:47925:7637":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"5:4906:16202":{"crate_id":5,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"1:40382:3501":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"5:4616:16154":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:11199:5545":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"11:2194:8274":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"1:14:2585":{"crate_id":1,"path":["core","write"],"kind":"macro"},"5:6348:166":{"crate_id":5,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:10609:5466":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:43858:7213":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"5:7996:7054":{"crate_id":5,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"5:3187:8051":{"crate_id":5,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"6:4678:8671":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:1973:5241":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"5:7659:7038":{"crate_id":5,"path":["std","thread","ThreadId"],"kind":"struct"},"17:10863:5369":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"6:1702:8489":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:14037:6155":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:8315:3684":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"5:10316:8070":{"crate_id":5,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"17:13673:6066":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"18:614:36895":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"5:6809:16248":{"crate_id":5,"path":["std","std_float","StdFloat"],"kind":"trait"},"16:7407:6447":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:11979:5650":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:42882:7477":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"5:9194:9277":{"crate_id":5,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"4:2170:9287":{"crate_id":4,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"5:4630:9132":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:8317:3682":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:21563:27718":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:2787:3440":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:9274:1698":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"5:914:6897":{"crate_id":5,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:10444:5443":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"1:43718:7495":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"5:10937:35246":{"crate_id":5,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"5:4177:7789":{"crate_id":5,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:45939:7547":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:6787:7798":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:2748:3570":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"11:2186:36870":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"6:4389:8575":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"5:11117:36507":{"crate_id":5,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"5:640:16092":{"crate_id":5,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"6:1590:8417":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:14054:6162":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"1:43849:7436":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"16:2611:6320":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"4:6327:1576":{"crate_id":4,"path":["alloc","vec"],"kind":"module"},"17:10458:5444":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"1:45874:7545":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"16:5720:6410":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:10119:4136":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"16:8166:6786":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"11:1845:6901":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"6:5068:8862":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:12526:5764":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"5:10916:1693":{"crate_id":5,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"1:44002:7511":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"6:1595:8419":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"4:7547:3399":{"crate_id":4,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"4:7284:1829":{"crate_id":4,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:12186:5699":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"5:615:6975":{"crate_id":5,"path":["std","backtrace","Backtrace"],"kind":"struct"},"5:11162:9285":{"crate_id":5,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"16:6484:6530":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"1:40272:5085":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:10906:5510":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:11345:10735":{"crate_id":1,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:47719:7627":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"5:8560:7128":{"crate_id":5,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:32139:7294":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"6:5775:8898":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:10520:5452":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"1:41792:1829":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"16:7855:22667":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"16:7553:6713":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"1:22072:9299":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:43536:1698":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:43520:3541":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"5:7926:2143":{"crate_id":5,"path":["std","io","cursor","Cursor"],"kind":"struct"},"17:9887:5387":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:13964:6139":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"11:2049:6890":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:43346:4116":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"5:4789:5003":{"crate_id":5,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:39154:3460":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"16:6250:6513":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:9518:5367":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"5:8976:107":{"crate_id":5,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"17:11264:5553":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"5:7521:5237":{"crate_id":5,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"5:4955:16208":{"crate_id":5,"path":["std","panic","always_abort"],"kind":"function"},"6:5767:8896":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:43700:7494":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"5:10955:4446":{"crate_id":5,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:21898:7267":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"6:4879:1006":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"17:12435:5751":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"5:908:3398":{"crate_id":5,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"5:8205:1698":{"crate_id":5,"path":["std","io","Bytes"],"kind":"struct"},"16:6357:6522":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"11:805:16099":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"16:7679:6352":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:21981:7274":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"16:5704:6408":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"6:6015:9023":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"4:3596:4118":{"crate_id":4,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:4704:8684":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:13719:6072":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"1:45606:7534":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"16:6986:6618":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:42361:3163":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"16:7505:6348":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:7329:2500":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:2980:2554":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"16:4476:6371":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"6:6726:9148":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:5590:6339":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:7043:3473":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"6:6648:9135":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:44519:7526":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:41865:91":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:20622:27714":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"5:8284:16175":{"crate_id":5,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:7654:3363":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"17:10981:5519":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"18:636:5197":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:43568:4124":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"16:8265:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"5:7723:16094":{"crate_id":5,"path":["std","backtrace","RawFrame"],"kind":"enum"},"16:6057:21770":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:42099:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"6:7250:9232":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"4:6790:3405":{"crate_id":4,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"6:4380:8570":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"6:4550:8652":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"5:5816:5007":{"crate_id":5,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"9:450:21651":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:44281:9379":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"16:2857:6330":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:41982:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:43458:4130":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:20637:27714":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"6:7272:9233":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:11591:5544":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"4:7427:7207":{"crate_id":4,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"16:6323:6518":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"6:1649:8461":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:46253:7562":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"6:6136:9052":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:10671:22820":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"16:7494:6711":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:30545:27414":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:46161:7558":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:12659:5784":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:13757:6085":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:2313:188":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"5:11990:643":{"crate_id":5,"path":["std","f32"],"kind":"primitive"},"1:40888:3476":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:11329:22726":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:11832:5620":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"6:5987:9010":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:14227:6225":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"5:3667:16148":{"crate_id":5,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:13854:6108":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"18:609:5192":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"5:7654:7036":{"crate_id":5,"path":["std","thread","Builder"],"kind":"struct"},"5:8902:16245":{"crate_id":5,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"6:5967:9002":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:11566:7252":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"4:6441:3400":{"crate_id":4,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:39271:198":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"17:10097:5406":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:12004:112":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:48055:7643":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"4:0:286":{"crate_id":4,"path":["alloc"],"kind":"module"},"1:10196:4137":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:41527:7466":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"5:3933:16149":{"crate_id":5,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"5:9092:167":{"crate_id":5,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:47407:7623":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"11:667:6880":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:1629:587":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"16:4965:6386":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"6:6868:9226":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"6:4787:8725":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"4:2035:2143":{"crate_id":4,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"1:2767:3431":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"17:11992:5652":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"6:6841:9220":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:11272:5555":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:10013:5397":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:40037:7428":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"5:3220:3341":{"crate_id":5,"path":["std","io","stdio","Stdin"],"kind":"struct"},"17:2105:22778":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"6:6028:9027":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"11:2168:8272":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:434:5235":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:12921:5839":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:45815:7542":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"5:927:6884":{"crate_id":5,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"6:1545:8386":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:11127:5569":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:41716:3726":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"11:1068:6894":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:44149:7518":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:10352:4120":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:44569:3374":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"17:12377:5744":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"6:526:8320":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"5:8491:16225":{"crate_id":5,"path":["std","path","Component"],"kind":"enum"},"1:39240:3454":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"16:6692:22661":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"16:7038:6625":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"5:4628:9130":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"5:5437:4438":{"crate_id":5,"path":["std","process","Command"],"kind":"struct"},"17:9899:5389":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:9952:5346":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"6:5074:8864":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"6:4304:8516":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"14:165:21736":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:10799:5503":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"17:9850:22737":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"6:6589:9101":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:2855:3451":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"6:6834:9217":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:21:684":{"crate_id":1,"path":["core","format_args"],"kind":"macro"},"17:1184:5240":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"6:6720:9147":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:2471:10459":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:32226:7295":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:9225:3577":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"4:2970:8079":{"crate_id":4,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"6:4955:8809":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:43526:7490":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"16:2663:6322":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"16:2465:6314":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"16:7474:6347":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"16:3220:6358":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"1:22079:7287":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:2694:225":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:40921:3482":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"5:9476:5028":{"crate_id":5,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"4:5320:5040":{"crate_id":4,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:46845:7587":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"14:221:6878":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"16:5916:6285":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:39295:199":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:2832:3446":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"4:1302:6896":{"crate_id":4,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:46609:7583":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"6:573:8345":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:40159:10664":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"5:8812:4444":{"crate_id":5,"path":["std","process","ExitStatus"],"kind":"struct"},"17:11467:5568":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:43971:7507":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:40178:7443":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"4:4428:5060":{"crate_id":4,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"18:491:5174":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:47265:7622":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:13971:6140":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"16:6977:6615":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:11601:4136":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"5:3260:3343":{"crate_id":5,"path":["std","io","stdio","Stdout"],"kind":"struct"},"16:5639:6404":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"5:673:8182":{"crate_id":5,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"4:7193:1829":{"crate_id":4,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"6:6688:9137":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:40879:3474":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"6:4833:8741":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:2745:106":{"crate_id":1,"path":["core","marker","ConstParamTy"],"kind":"trait"},"17:13069:5867":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:9296:5232":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"5:11986:1407":{"crate_id":5,"path":["std","str"],"kind":"primitive"},"16:5398:5356":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:13043:5865":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:8949:22724":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"5:2883:5002":{"crate_id":5,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"5:5073:7009":{"crate_id":5,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:532:8323":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:6671:9136":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:9614:36886":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"5:9032:7144":{"crate_id":5,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"16:7525:6349":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:4764:388":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"17:11623:5579":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:40414:3504":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"6:579:8348":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:10994:5520":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"1:21930:7268":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:11498:5569":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"6:4483:8618":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:8741:86":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"5:1562:1829":{"crate_id":5,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"11:1501:21731":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:3141:3455":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"5:10506:3341":{"crate_id":5,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"4:7247:1829":{"crate_id":4,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"5:9145:7146":{"crate_id":5,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:9183:132":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:10051:4118":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:39381:2722":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"17:12826:5827":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"5:3729:6996":{"crate_id":5,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"6:4456:8605":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:40500:3510":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:43337:4115":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"6:7575:9262":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:11220:22846":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"1:42900:7482":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"6:1520:8372":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:42140:85":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"17:14350:6261":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"16:3025:6355":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:4872:8762":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:11783:3538":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:41665:1829":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"17:12479:5759":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:46085:7556":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"4:7263:7201":{"crate_id":4,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:21792:7265":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"5:10140:7150":{"crate_id":5,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"1:21675:15798":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"16:3580:6361":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:2795:3437":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"16:6531:4983":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"1:30439:27385":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"16:2926:21796":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:43085:7483":{"crate_id":1,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"6:4754:8705":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:30943:3939":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"5:2210:6993":{"crate_id":5,"path":["std","fs","DirEntry"],"kind":"struct"},"5:7634:16142":{"crate_id":5,"path":["std","sealed","Sealed"],"kind":"trait"},"1:2928:3453":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:20609:3939":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"4:6487:5040":{"crate_id":4,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"11:1611:4990":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:9475:5366":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"6:6044:9032":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:14329:6255":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"6:4556:8654":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:43377:4133":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"16:2637:6321":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:11416:5564":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"5:12005:13":{"crate_id":5,"path":["std","fn"],"kind":"primitive"},"5:7850:7048":{"crate_id":5,"path":["std","fs","ReadDir"],"kind":"struct"},"18:507:5175":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:40872:7230":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:47914:7636":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"16:6502:6538":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:10832:5506":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"16:7025:6622":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:21551:4113":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:40484:3509":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:12161:5695":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:44077:7256":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"16:5553:6334":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:47765:7628":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"5:4156:7788":{"crate_id":5,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"5:8290:7105":{"crate_id":5,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"1:2683:220":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"17:13548:6039":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:400:5233":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:4:1019":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"11:1048:36869":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"5:6638:217":{"crate_id":5,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"6:7523:9249":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"16:6571:22660":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:12691:5788":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"4:7465:3536":{"crate_id":4,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:10486:5447":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"1:41826:84":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"14:31:6871":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"13:110:36871":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"5:1569:3398":{"crate_id":5,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"17:14026:6154":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:2921:1703":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"5:7741:16116":{"crate_id":5,"path":["std","env","VarError"],"kind":"enum"},"17:12539:5767":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:55:6762":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"1:44582:7530":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:12952:5844":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"5:4308:7001":{"crate_id":5,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"5:8224:7099":{"crate_id":5,"path":["std","net","tcp","Incoming"],"kind":"struct"},"16:7240:36884":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"17:13683:6067":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:14341:6257":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"1:41707:3681":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:42179:92":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"16:7584:6716":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:11331:4111":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:42060:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:9208:112":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:40865:3472":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"16:5414:6393":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"17:13949:6135":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"16:7362:22664":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:12769:5815":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"16:2962:21797":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:11210:5546":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:9188:5227":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:41640:2473":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"17:11943:5643":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"5:6461:5018":{"crate_id":5,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"5:1843:6989":{"crate_id":5,"path":["std","env","ArgsOs"],"kind":"struct"},"5:923:6881":{"crate_id":5,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"5:1782:6987":{"crate_id":5,"path":["std","env","VarsOs"],"kind":"struct"},"5:7918:3333":{"crate_id":5,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:13155:5544":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"4:7476:3537":{"crate_id":4,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:40443:3506":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:2700:228":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"17:582:5237":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"11:1121:6896":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"6:7517:9248":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"18:521:26680":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"5:11985:1377":{"crate_id":5,"path":["std","slice"],"kind":"primitive"},"1:47963:7639":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"5:8001:7055":{"crate_id":5,"path":["std","io","error","Custom"],"kind":"struct"},"17:13981:6143":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:41504:27363":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:2846:3449":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:7268:152":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"6:4374:8568":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:13096:5871":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:7231:3486":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"6:4862:8756":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:10339:5430":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:43356:4126":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"11:2130:21725":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"5:3299:3339":{"crate_id":5,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:8711:22716":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:13697:6068":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"16:6864:6600":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:14359:6263":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"5:1574:6900":{"crate_id":5,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"16:3867:6365":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"6:482:8292":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"5:1841:4500":{"crate_id":5,"path":["std","env","Args"],"kind":"struct"},"18:574:5175":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:9442:36893":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:40088:7433":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"11:2060:6892":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"5:7020:5022":{"crate_id":5,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"6:6565:9084":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"5:10760:7164":{"crate_id":5,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"1:2811:3441":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:2691:3365":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:30120:10460":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:45855:7544":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"16:8021:6771":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:22354:178":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"5:10090:7795":{"crate_id":5,"path":["std","sys","unix","os","Env"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}