{"root":"0:0","crate_version":"1.1.0","includes_private":false,"index":{"1:9593":{"id":"1:9593","crate_id":1,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9594"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:620":{"id":"0:620","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[717,0],"end":[721,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:621"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:333":{"id":"0:333","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/take.rs","begin":[77,4],"end":[79,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\".take(2);\nlet mut dst = vec![];\n\nbuf.get_mut().advance(2);\n\ndst.put(&mut buf);\nassert_eq!(*dst, b\"ll\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3736-0:1261":{"id":"b:1:3736-0:1261","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3734","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3738"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:938":{"id":"0:938","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1393,0],"end":[1397,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7089","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:7409","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:939"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2958-0:1248":{"id":"b:1:2958-0:1248","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2961","1:2962"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:594":{"id":"0:594","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[639,0],"end":[643,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:595"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1248":{"id":"0:1248","crate_id":0,"name":"Limit","span":{"filename":"src/buf/limit.rs","begin":[9,0],"end":[12,1]},"visibility":"public","docs":"A `BufMut` adapter which limits the amount of bytes that can be written\nto an underlying buffer.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:279","a:1:8621-0:1248","a:1:3026-0:1248","a:1:3014-0:1248","a:1:8620-0:1248","a:1:3055-0:1248","b:1:2619-0:1248","b:1:2943-0:1248","b:1:3736-0:1248","b:1:2622-0:1248","b:1:2958-0:1248","b:1:2953-0:1248","b:1:2947-0:1248","0:1252","0:286"]}},"0:838":{"id":"0:838","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[942,0],"end":[969,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["get_uint_le","get_i16","get_u16_le","take","chain","copy_to_bytes","has_remaining","get_f32_le","get_uint","get_u128","get_u64","get_f64_le","copy_to_slice","get_f64","get_u32","get_f32","get_u16","get_i8","get_u8","get_i128","get_u128_le","get_i128_le","reader","get_i64_le","get_i64","get_u64_le","get_i32_le","get_i32","chunks_vectored","get_u32_le","get_i16_le","get_int_le","get_int"],"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:839","0:840","0:841","0:842"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:6":{"id":"0:6","crate_id":0,"name":"buf","span":{"filename":"src/buf/mod.rs","begin":[1,0],"end":[41,47]},"visibility":"public","docs":"Utilities for working with buffers.\n\nA buffer is any structure that contains a sequence of bytes. The bytes may\nor may not be stored in contiguous memory. This module contains traits used\nto abstract over buffers as well as utilities for working with buffer types.\n\n# `Buf`, `BufMut`\n\nThese are the two foundational traits for abstractly working with buffers.\nThey can be thought as iterators for byte structures. They offer additional\nperformance over `Iterator` by providing an API optimized for byte slices.\n\nSee [`Buf`] and [`BufMut`] for more details.\n\n[rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)\n[`Buf`]: trait.Buf.html\n[`BufMut`]: trait.BufMut.html","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:42","0:140","0:1233","0:1242","0:1248","0:1261","0:374","0:1255","0:1298"]}},"1:12677":{"id":"1:12677","crate_id":1,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"1:12239","`DoubleEndedIterator`":"1:7746","str::matches":"5:15818","prim@char":"5:15813"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"1:48037","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:603":{"id":"0:603","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[664,4],"end":[666,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:281":{"id":"0:281","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/limit.rs","begin":[20,4],"end":[22,5]},"visibility":"public","docs":"Consumes this `Limit`, returning the underlying value.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:562":{"id":"0:562","crate_id":0,"name":"chunk","span":{"filename":"src/bytes.rs","begin":[533,4],"end":[535,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:67":{"id":"0:67","crate_id":0,"name":"get_i128_le","span":{"filename":"src/buf/buf_impl.rs","begin":[633,4],"end":[635,5]},"visibility":"default","docs":"Gets a signed 128 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_i128_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:7665":{"id":"1:7665","crate_id":1,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7667"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:1293":{"id":"0:1293","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"1:3317","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeToInclusive","id":"1:44557","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1294","0:1295"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1221":{"id":"0:1221","crate_id":0,"name":"put_u16","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3022":{"id":"1:3022","crate_id":1,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:283":{"id":"0:283","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/limit.rs","begin":[34,4],"end":[36,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:644":{"id":"0:644","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[786,0],"end":[790,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:645"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5731":{"id":"5:5731","crate_id":5,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5732","5:5733","5:5734","5:5735"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:969":{"id":"0:969","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1478,4],"end":[1480,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12601":{"id":"1:12601","crate_id":1,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"5:15813"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3019":{"id":"1:3019","crate_id":1,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:7661":{"id":"1:7661","crate_id":1,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7663"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:931":{"id":"0:931","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1370,4],"end":[1372,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1010":{"id":"0:1010","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/debug.rs","begin":[46,4],"end":[48,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2622-0:1255":{"id":"b:1:2622-0:1255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2616","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:2624"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1274":{"id":"0:1274","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"0:381":{"id":"0:381","crate_id":0,"name":"copy_from_slice","span":{"filename":"src/buf/uninit_slice.rs","begin":[96,4],"end":[104,5]},"visibility":"public","docs":"Copies bytes  from `src` into `self`.\n\nThe length of `src` must be the same as `self`.\n\n# Panics\n\nThe function panics if `src` has a different length than `self`.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\n\nlet mut data = [b'f', b'o', b'o'];\nlet slice = unsafe { UninitSlice::from_raw_parts_mut(data.as_mut_ptr(), 3) };\n\nslice.copy_from_slice(b\"bar\");\n\nassert_eq!(b\"bar\", &data[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3120":{"id":"1:3120","crate_id":1,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3122"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:307":{"id":"0:307","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/reader.rs","begin":[40,4],"end":[42,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:158":{"id":"0:158","crate_id":0,"name":"put_i32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[513,4],"end":[515,5]},"visibility":"default","docs":"Writes a signed 32 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i32_le(0x0809A0A1);\nassert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:89":{"id":"0:89","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1021,0],"end":[1036,1]},"visibility":{"restricted":{"parent":"0:7","path":"::buf::buf_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["get_uint_le","get_i16","get_u16_le","take","chain","copy_to_bytes","has_remaining","get_f32_le","get_uint","get_u128","get_u64","get_f64_le","copy_to_slice","get_f64","get_u32","get_f32","get_u16","get_i8","get_u8","get_i128","get_u128_le","get_i128_le","reader","get_i64_le","get_i64","get_u64_le","get_i32_le","get_i32","chunks_vectored","get_u32_le","get_i16_le","get_int_le","get_int"],"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:90","0:91","0:92"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:3736-0:1233":{"id":"b:1:3736-0:1233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3734","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["1:3738"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:12695":{"id":"1:12695","crate_id":1,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[inline]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.33.0\", reason = \"superseded by `trim_start`\",\nsuggestion = \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1163":{"id":"0:1163","crate_id":0,"name":"get_u64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:573":{"id":"0:573","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[587,0],"end":[591,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:574"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:954":{"id":"0:954","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1441,0],"end":[1448,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:957"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:418":{"id":"0:418","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/writer.rs","begin":[72,4],"end":[74,5]},"visibility":"public","docs":"Consumes this `Writer`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::BufMut;\nuse std::io;\n\nlet mut buf = vec![].writer();\nlet mut src = &b\"hello world\"[..];\n\nio::copy(&mut src, &mut buf).unwrap();\n\nlet buf = buf.into_inner();\nassert_eq!(*buf, b\"hello world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"B"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12653":{"id":"1:12653","crate_id":1,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"5:15813","self::pattern":"1:12239"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"1:12031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:60":{"id":"0:60","crate_id":0,"name":"get_u64","span":{"filename":"src/buf/buf_impl.rs","begin":[493,4],"end":[495,5]},"visibility":"default","docs":"Gets an unsigned 64 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_u64());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12715":{"id":"1:12715","crate_id":1,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"1:12239","prim@char":"5:15813"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.33.0\", reason =\n\"superseded by `trim_end_matches`\", suggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9597":{"id":"1:9597","crate_id":1,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9598"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:546":{"id":"0:546","crate_id":0,"name":"slice_ref","span":{"filename":"src/bytes.rs","begin":[295,4],"end":[326,5]},"visibility":"public","docs":"Returns a slice of self that is equivalent to the given `subset`.\n\nWhen processing a `Bytes` buffer with other tools, one often gets a\n`&[u8]` which is in fact a slice of the `Bytes`, i.e. a subset of it.\nThis function turns that `&[u8]` into another `Bytes`, as if one had\ncalled `self.slice()` with the offsets that correspond to `subset`.\n\nThis operation is `O(1)`.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet bytes = Bytes::from(&b\"012345678\"[..]);\nlet as_slice = bytes.as_ref();\nlet subset = &as_slice[2..6];\nlet subslice = bytes.slice_ref(&subset);\nassert_eq!(&subslice[..], b\"2345\");\n```\n\n# Panics\n\nRequires that the given `sub` slice is in fact contained within the\n`Bytes` buffer; otherwise this function will panic.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["subset",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:387":{"id":"0:387","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[146,0],"end":[150,1]},"visibility":{"restricted":{"parent":"0:342","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:388"],"negative":false,"synthetic":false,"blanket_impl":null}},"4:669":{"id":"4:669","crate_id":4,"name":"Owned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"generic","inner":"T"},"generics":{"params":[],"where_predicates":[]}}},"0:926":{"id":"0:926","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1357,0],"end":[1361,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}},"items":["0:927"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:388":{"id":"0:388","crate_id":0,"name":"fmt","span":{"filename":"src/buf/uninit_slice.rs","begin":[147,4],"end":[149,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:57":{"id":"0:57","crate_id":0,"name":"get_u32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[433,4],"end":[435,5]},"visibility":"default","docs":"Gets an unsigned 32 bit integer from `self` in the little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_u32_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1166":{"id":"0:1166","crate_id":0,"name":"get_uint","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1254":{"id":"0:1254","crate_id":0,"name":"fmt","span":{"filename":"src/buf/limit.rs","begin":[8,9],"end":[8,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:53":{"id":"0:53","crate_id":0,"name":"get_u16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[353,4],"end":[355,5]},"visibility":"default","docs":"Gets an unsigned 16 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x09\\x08 hello\"[..];\nassert_eq!(0x0809, buf.get_u16_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1212":{"id":"0:1212","crate_id":0,"name":"put_u64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3014-0:1242":{"id":"a:1:3014-0:1242","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:12680":{"id":"1:12680","crate_id":1,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"prim@char":"5:15813","str::matches":"5:15818","self::pattern":"1:12239","`DoubleEndedIterator`":"1:7746"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"1:48055","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:49":{"id":"0:49","crate_id":0,"name":"copy_to_slice","span":{"filename":"src/buf/buf_impl.rs","begin":[250,4],"end":[269,5]},"visibility":"default","docs":"Copies bytes from `self` into `dst`.\n\nThe cursor is advanced by the number of bytes copied. `self` must have\nenough remaining bytes to fill `dst`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\nlet mut dst = [0; 5];\n\nbuf.copy_to_slice(&mut dst);\nassert_eq!(&b\"hello\"[..], &dst);\nassert_eq!(6, buf.remaining());\n```\n\n# Panics\n\nThis function panics if `self.remaining() < dst.len()`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:606":{"id":"0:606","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[675,0],"end":[679,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"primitive","inner":"str"},"items":["0:607"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:549":{"id":"0:549","crate_id":0,"name":"truncate","span":{"filename":"src/bytes.rs","begin":[446,4],"end":[459,5]},"visibility":"public","docs":"Shortens the buffer, keeping the first `len` bytes and dropping the\nrest.\n\nIf `len` is greater than the buffer's current length, this has no\neffect.\n\nThe [`split_off`] method can emulate `truncate`, but this causes the\nexcess bytes to be returned instead of dropped.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut buf = Bytes::from(&b\"hello world\"[..]);\nbuf.truncate(5);\nassert_eq!(buf, b\"hello\"[..]);\n```\n\n[`split_off`]: #method.split_off","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1298":{"id":"0:1298","crate_id":0,"name":"Writer","span":{"filename":"src/buf/writer.rs","begin":[11,0],"end":[13,1]},"visibility":"public","docs":"A `BufMut` adapter which implements `io::Write` for the inner value.\n\nThis struct is generally created by calling `writer()` on `BufMut`. See\ndocumentation of [`writer()`](trait.BufMut.html#method.writer) for more\ndetails.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:414","a:1:8621-0:1298","a:1:3026-0:1298","a:1:3014-0:1298","a:1:8620-0:1298","a:1:3055-0:1298","b:1:2619-0:1298","b:1:2943-0:1298","b:1:3736-0:1298","b:1:2622-0:1298","b:1:2958-0:1298","b:1:2953-0:1298","b:1:2947-0:1298","0:1301","0:419"]}},"0:96":{"id":"0:96","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1051,4],"end":[1060,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1269":{"id":"0:1269","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"0:309":{"id":"0:309","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[65,0],"end":[72,1]},"visibility":{"restricted":{"parent":"0:291","path":"::buf::reader"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["read_to_end","take","read_to_string","chain","read_exact","read_vectored","by_ref","bytes","read_buf","is_read_vectored","read_buf_exact"],"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"5:4628","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:311"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:154":{"id":"0:154","crate_id":0,"name":"put_i16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[425,4],"end":[427,5]},"visibility":"default","docs":"Writes a signed 16 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i16_le(0x0809);\nassert_eq!(buf, b\"\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:8620-0:526":{"id":"a:1:8620-0:526","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:929":{"id":"0:929","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1364,4],"end":[1366,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:611":{"id":"0:611","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[688,4],"end":[690,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7089","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5420":{"id":"4:5420","crate_id":4,"name":null,"span":null,"visibility":{"restricted":{"parent":"4:5240","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[lang = \"str_alloc\"]","#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["4:5421","4:5422","4:5425","4:5428","4:5440","4:5441","4:5442","4:5443","4:5444"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:172":{"id":"0:172","crate_id":0,"name":"put_f32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[823,4],"end":[825,5]},"visibility":"default","docs":"Writes  an IEEE754 single-precision (4 bytes) floating point number to\n`self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f32_le(1.2f32);\nassert_eq!(buf, b\"\\x9A\\x99\\x99\\x3F\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"f32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1027,0],"end":[1029,1]},"visibility":{"restricted":{"parent":"0:99","path":"::buf::buf_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["has_remaining_mut","put_u16_le","put_int","put_i8","put_int_le","put_i128_le","put_i128","put_u128_le","writer","put","put_slice","put_u64","put_i16_le","put_i16","put_f32","put_u16","limit","put_uint","put_bytes","put_i64_le","put_i64","put_u64_le","put_u32","put_f32_le","put_uint_le","put_u8","put_u128","chain_mut","put_i32_le","put_i32","put_u32_le","put_f64","put_f64_le"],"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"items":["0:1197","0:1198","0:1199","0:1200","0:1201","0:1202","0:1203","0:1204","0:1205","0:1206","0:1207","0:1208","0:1209","0:1210","0:1211","0:1212","0:1213","0:1214"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:399":{"id":"0:399","crate_id":0,"name":"chunk","span":{"filename":"src/buf/vec_deque.rs","begin":[10,4],"end":[17,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:881":{"id":"0:881","crate_id":0,"name":"borrow","span":{"filename":"src/bytes_mut.rs","begin":[1116,4],"end":[1118,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3055-0:1255":{"id":"a:1:3055-0:1255","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3167":{"id":"1:3167","crate_id":1,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3169"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3259":{"id":"1:3259","crate_id":1,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3261"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3262","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"5:4991":{"id":"5:4991","crate_id":5,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:4992","5:4993"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:279":{"id":"0:279","crate_id":0,"name":null,"span":{"filename":"src/buf/limit.rs","begin":[18,0],"end":[57,1]},"visibility":{"restricted":{"parent":"0:267","path":"::buf::limit"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:281","0:282","0:283","0:284","0:285"],"negative":false,"synthetic":false,"blanket_impl":null}},"4:5742":{"id":"4:5742","crate_id":4,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5743"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:42":{"id":"0:42","crate_id":0,"name":"Buf","span":{"filename":"src/buf/buf_impl.rs","begin":[76,0],"end":[906,1]},"visibility":"public","docs":"Read bytes from a buffer.\n\nA buffer stores bytes in memory such that read operations are infallible.\nThe underlying storage may or may not be in contiguous memory. A `Buf` value\nis a cursor into the buffer. Reading from `Buf` advances the cursor\nposition. It can be thought of as an efficient `Iterator` for collections of\nbytes.\n\nThe simplest `Buf` is a `&[u8]`.\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(b'h', buf.get_u8());\nassert_eq!(b'e', buf.get_u8());\nassert_eq!(b'l', buf.get_u8());\n\nlet mut rest = [0; 8];\nbuf.copy_to_slice(&mut rest);\n\nassert_eq!(&rest[..], &b\"lo world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:43","0:44","0:45","0:47","0:48","0:49","0:50","0:51","0:52","0:53","0:54","0:55","0:56","0:57","0:58","0:59","0:60","0:61","0:62","0:63","0:64","0:65","0:66","0:67","0:68","0:69","0:70","0:71","0:72","0:73","0:74","0:75","0:76","0:80","0:81","0:83"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":["0:85","0:87","0:89","0:93","0:229","0:336","0:397","0:560","0:838"]}},"1:12722":{"id":"1:12722","crate_id":1,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:7698":{"id":"1:7698","crate_id":1,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7700"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:289":{"id":"0:289","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/limit.rs","begin":[64,4],"end":[68,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12696":{"id":"1:12696","crate_id":1,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[inline]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.33.0\", reason = \"superseded by `trim_end`\",\nsuggestion = \"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12665":{"id":"1:12665","crate_id":1,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"str::rsplitn":"5:15818","prim@char":"5:15813","self::pattern":"1:12239"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"1:47937","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12622":{"id":"1:12622","crate_id":1,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"str::slice_unchecked":"5:15818","crate::ops::IndexMut":"1:3321","`str`":"5:15818"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[rustc_deprecated(since = \"1.29.0\", reason =\n\"use `get_unchecked_mut(begin..end)` instead\")]","#[inline]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:340":{"id":"0:340","crate_id":0,"name":"advance","span":{"filename":"src/buf/take.rs","begin":[142,4],"end":[146,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5747":{"id":"5:5747","crate_id":5,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5748","5:5749"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3469":{"id":"1:3469","crate_id":1,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3470","1:3471","1:3472","1:3473"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"1:3474","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"1:3469","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"a:1:8621-0:1233":{"id":"a:1:8621-0:1233","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:12619":{"id":"1:12619","crate_id":1,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10168","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10168","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:9532":{"id":"1:9532","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9533","1:9534","1:9536"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:380":{"id":"0:380","crate_id":0,"name":"write_byte","span":{"filename":"src/buf/uninit_slice.rs","begin":[69,4],"end":[73,5]},"visibility":"public","docs":"Write a single byte at the specified offset.\n\n# Panics\n\nThe function panics if `index` is out of bounds.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\n\nlet mut data = [b'f', b'o', b'o'];\nlet slice = unsafe { UninitSlice::from_raw_parts_mut(data.as_mut_ptr(), 3) };\n\nslice.write_byte(0, b'b');\n\nassert_eq!(b\"boo\", &data[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}],["byte",{"kind":"primitive","inner":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:637":{"id":"0:637","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[763,4],"end":[765,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2622-0:1248":{"id":"b:1:2622-0:1248","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2616","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2624"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2619-0:1242":{"id":"b:1:2619-0:1242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2622-0:1242":{"id":"b:1:2622-0:1242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2616","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2624"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1247":{"id":"0:1247","crate_id":0,"name":"fmt","span":{"filename":"src/buf/iter.rs","begin":[25,9],"end":[25,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12646":{"id":"1:12646","crate_id":1,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the rightmost match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"prim@char":"5:15813","`None`":"1:45964","self::pattern":"1:12239"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:582":{"id":"0:582","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes.rs","begin":[604,4],"end":[604,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"core::slice::Iter","id":"1:10348","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"1:12249":{"id":"1:12249","crate_id":1,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12251","1:12252","1:12253","1:12254","1:12255","1:12256","1:12257"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:182":{"id":"0:182","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1031,0],"end":[1033,1]},"visibility":{"restricted":{"parent":"0:99","path":"::buf::buf_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["has_remaining_mut","put_u16_le","put_int","put_i8","put_int_le","put_i128_le","put_i128","put_u128_le","writer","put","put_slice","put_u64","put_i16_le","put_i16","put_f32","put_u16","limit","put_uint","put_bytes","put_i64_le","put_i64","put_u64_le","put_u32","put_f32_le","put_uint_le","put_u8","put_u128","chain_mut","put_i32_le","put_i32","put_u32_le","put_f64","put_f64_le"],"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Box","id":"4:315","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:1215","0:1216","0:1217","0:1218","0:1219","0:1220","0:1221","0:1222","0:1223","0:1224","0:1225","0:1226","0:1227","0:1228","0:1229","0:1230","0:1231","0:1232"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3317":{"id":"1:3317","crate_id":1,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3319","1:3320"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"0:80":{"id":"0:80","crate_id":0,"name":"take","span":{"filename":"src/buf/buf_impl.rs","begin":[847,4],"end":[852,5]},"visibility":"default","docs":"Creates an adaptor which will read at most `limit` bytes from `self`.\n\nThis function returns a new instance of `Buf` which will read at most\n`limit` bytes.\n\n# Examples\n\n```\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\"[..].take(5);\nlet mut dst = vec![];\n\ndst.put(&mut buf);\nassert_eq!(dst, b\"hello\");\n\nlet mut buf = buf.into_inner();\ndst.clear();\ndst.put(&mut buf);\nassert_eq!(dst, b\" world\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:967":{"id":"0:967","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1472,4],"end":[1474,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:417":{"id":"0:417","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/writer.rs","begin":[52,4],"end":[54,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.\n\n# Examples\n\n```rust\nuse bytes::BufMut;\n\nlet mut buf = vec![].writer();\n\nbuf.get_mut().reserve(1024);\n\nassert_eq!(1024, buf.get_ref().capacity());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:175":{"id":"0:175","crate_id":0,"name":"limit","span":{"filename":"src/buf/buf_mut.rs","begin":[886,4],"end":[891,5]},"visibility":"default","docs":"Creates an adaptor which can write at most `limit` bytes to `self`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet arr = &mut [0u8; 128][..];\nassert_eq!(arr.remaining_mut(), 128);\n\nlet dst = arr.limit(10);\nassert_eq!(dst.remaining_mut(), 10);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:818":{"id":"0:818","crate_id":0,"name":"resize","span":{"filename":"src/bytes_mut.rs","begin":[444,4],"end":[457,5]},"visibility":"public","docs":"Resizes the buffer so that `len` is equal to `new_len`.\n\nIf `new_len` is greater than `len`, the buffer is extended by the\ndifference with each additional byte set to `value`. If `new_len` is\nless than `len`, the buffer is simply truncated.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::new();\n\nbuf.resize(3, 0x1);\nassert_eq!(&buf[..], &[0x1, 0x1, 0x1]);\n\nbuf.resize(2, 0x2);\nassert_eq!(&buf[..], &[0x1, 0x1]);\n\nbuf.resize(4, 0x3);\nassert_eq!(&buf[..], &[0x1, 0x1, 0x3, 0x3]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["new_len",{"kind":"primitive","inner":"usize"}],["value",{"kind":"primitive","inner":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1158":{"id":"0:1158","crate_id":0,"name":"get_u32","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:652":{"id":"0:652","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[836,0],"end":[840,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:653"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1232":{"id":"0:1232","crate_id":0,"name":"put_i64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3736-0:1248":{"id":"b:1:3736-0:1248","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3734","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3738"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:843":{"id":"0:843","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[971,0],"end":[1028,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["has_remaining_mut","put_u16_le","put_int","put_i8","put_int_le","put_i128_le","put_i128","put_u128_le","writer","put","put_slice","put_u64","put_i16_le","put_i16","put_f32","put_u16","limit","put_uint","put_bytes","put_i64_le","put_i64","put_u64_le","put_u32","put_f32_le","put_uint_le","put_u8","put_u128","chain_mut","put_i32_le","put_i32","put_u32_le","put_f64","put_f64_le"],"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:844","0:845","0:846","0:847","0:849","0:850"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:945":{"id":"0:945","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1412,4],"end":[1414,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1189":{"id":"0:1189","crate_id":0,"name":"get_u64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:249":{"id":"0:249","crate_id":0,"name":"into_iter","span":{"filename":"src/buf/chain.rs","begin":[240,4],"end":[242,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"1:7702","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9582":{"id":"1:9582","crate_id":1,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9583"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:907":{"id":"0:907","crate_id":0,"name":"from_iter","span":{"filename":"src/bytes_mut.rs","begin":[1198,4],"end":[1200,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["into_iter",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:7702","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:911":{"id":"0:911","crate_id":0,"name":"from_iter","span":{"filename":"src/bytes_mut.rs","begin":[1204,4],"end":[1206,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["into_iter",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:7702","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12258":{"id":"1:12258","crate_id":1,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:12260","1:12261","1:12262","1:12263"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:8167":{"id":"1:8167","crate_id":1,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:7894","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:616":{"id":"0:616","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[705,0],"end":[709,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7089","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"items":["0:617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:286":{"id":"0:286","crate_id":0,"name":null,"span":{"filename":"src/buf/limit.rs","begin":[59,0],"end":[75,1]},"visibility":{"restricted":{"parent":"0:267","path":"::buf::limit"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["has_remaining_mut","put_u16_le","put_int","put_i8","put_int_le","put_i128_le","put_i128","put_u128_le","writer","put","put_slice","put_u64","put_i16_le","put_i16","put_f32","put_u16","limit","put_uint","put_bytes","put_i64_le","put_i64","put_u64_le","put_u32","put_f32_le","put_uint_le","put_u8","put_u128","chain_mut","put_i32_le","put_i32","put_u32_le","put_f64","put_f64_le"],"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:288","0:289","0:290"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:526":{"id":"0:526","crate_id":0,"name":"Bytes","span":{"filename":"src/bytes.rs","begin":[94,0],"end":[100,1]},"visibility":"public","docs":"A cheaply cloneable and sliceable chunk of contiguous memory.\n\n`Bytes` is an efficient container for storing and operating on contiguous\nslices of memory. It is intended for use primarily in networking code, but\ncould have applications elsewhere as well.\n\n`Bytes` values facilitate zero-copy network programming by allowing multiple\n`Bytes` objects to point to the same underlying memory.\n\n`Bytes` does not have a single implementation. It is an interface, whose\nexact behavior is implemented through dynamic dispatch in several underlying\nimplementations of `Bytes`.\n\nAll `Bytes` implementations must fulfill the following requirements:\n- They are cheaply cloneable and thereby shareable between an unlimited amount\n  of components, for example by modifying a reference count.\n- Instances can be sliced to refer to a subset of the the original buffer.\n\n```\nuse bytes::Bytes;\n\nlet mut mem = Bytes::from(\"Hello world\");\nlet a = mem.slice(0..5);\n\nassert_eq!(a, \"Hello\");\n\nlet b = mem.split_to(6);\n\nassert_eq!(mem, \"world\");\nassert_eq!(b, \"Hello \");\n```\n\n# Memory layout\n\nThe `Bytes` struct itself is fairly small, limited to 4 `usize` fields used\nto track information about which segment of the underlying memory the\n`Bytes` handle has access to.\n\n`Bytes` keeps both a pointer to the shared state containing the full memory\nslice and a pointer to the start of the region visible by the handle.\n`Bytes` also tracks the length of its view into the memory.\n\n# Sharing\n\n`Bytes` contains a vtable, which allows implementations of `Bytes` to define\nhow sharing/cloneing is implemented in detail.\nWhen `Bytes::clone()` is called, `Bytes` will call the vtable function for\ncloning the backing storage in order to share it behind between multiple\n`Bytes` instances.\n\nFor `Bytes` implementations which refer to constant memory (e.g. created\nvia `Bytes::from_static()`) the cloning implementation will be a no-op.\n\nFor `Bytes` implementations which point to a reference counted shared storage\n(e.g. an `Arc<[u8]>`), sharing will be implemented by increasing the\nthe reference count.\n\nDue to this mechanism, multiple `Bytes` instances may point to the same\nshared memory region.\nEach `Bytes` instance can point to different sections within that\nmemory region, and `Bytes` instances may or may not have overlapping views\ninto the memory.\n\nThe following diagram visualizes a scenario where 2 `Bytes` instances make\nuse of an `Arc`-based backing storage, and provide access to different views:\n\n```text\n\n   Arc ptrs                   +---------+\n   ________________________ / | Bytes 2 |\n  /                           +---------+\n /          +-----------+     |         |\n|_________/ |  Bytes 1  |     |         |\n|           +-----------+     |         |\n|           |           | ___/ data     | tail\n|      data |      tail |/              |\nv           v           v               v\n+-----+---------------------------------+-----+\n| Arc |     |           |               |     |\n+-----+---------------------------------+-----+\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:534","a:1:8621-0:526","a:1:8620-0:526","a:1:3055-0:526","b:1:2619-0:526","b:1:2943-0:526","b:1:3736-0:526","b:1:2622-0:526","b:1:2958-0:526","b:1:2953-0:526","b:1:2947-0:526","b:4:667-0:526","0:554","0:555","0:556","0:558","0:560","0:565","0:568","0:570","0:573","0:575","0:579","0:584","0:587","0:589","0:591","0:593","0:594","0:596","0:598","0:600","0:602","0:604","0:606","0:608","0:610","0:612","0:614","0:616","0:618","0:620","0:622","0:624","0:626","0:628","0:630","0:632","0:634","0:638","0:642","0:644","0:646","0:648","0:650","0:652","0:866","0:970","0:972","0:1007","0:1304","0:1308"]}},"b:1:2619-0:374":{"id":"b:1:2619-0:374","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:570":{"id":"0:570","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[578,0],"end":[585,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"1:9789","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:571"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:618":{"id":"0:618","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[711,0],"end":[715,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:619"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3055":{"id":"1:3055","crate_id":1,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:1147":{"id":"0:1147","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"IoSlice","id":"5:11122","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}}}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3150":{"id":"1:3150","crate_id":1,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3152","1:3153"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:1:3736-0:1298":{"id":"b:1:3736-0:1298","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3734","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:3738"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:837":{"id":"0:837","crate_id":0,"name":"drop","span":{"filename":"src/bytes_mut.rs","begin":[926,4],"end":[939,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12700":{"id":"1:12700","crate_id":1,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"1:12239","prim@char":"5:15813"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2953-0:1298":{"id":"b:1:2953-0:1298","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:2923","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:2956","1:2957"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:164":{"id":"0:164","crate_id":0,"name":"put_u128_le","span":{"filename":"src/buf/buf_mut.rs","begin":[645,4],"end":[647,5]},"visibility":"default","docs":"Writes an unsigned 128 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u128_le(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12721":{"id":"1:12721","crate_id":1,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6470":{"id":"5:6470","crate_id":5,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6471","5:6472","5:6473","5:6474","5:6475","5:6476"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"5:10525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:1200":{"id":"0:1200","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1222":{"id":"0:1222","crate_id":0,"name":"put_u16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1281":{"id":"0:1281","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IndexMut","id":"1:3321","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFull","id":"1:44449","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1282"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1231":{"id":"0:1231","crate_id":0,"name":"put_i64","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2619-0:526":{"id":"b:1:2619-0:526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3457":{"id":"1:3457","crate_id":1,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"1:3388","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"a:1:3055-0:1298":{"id":"a:1:3055-0:1298","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:2914":{"id":"1:2914","crate_id":1,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2916"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"1:2956":{"id":"1:2956","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"qualified_path","inner":{"name":"Error","self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"0:633":{"id":"0:633","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[754,4],"end":[756,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2958-0:1261":{"id":"b:1:2958-0:1261","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2961","1:2962"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:923":{"id":"0:923","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1346,4],"end":[1348,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12727":{"id":"1:12727","crate_id":1,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{}\", c);\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"5:15813"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"1:48150","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:4:667-0:526":{"id":"b:4:667-0:526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"4:663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["4:669","4:670","4:671"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1159":{"id":"0:1159","crate_id":0,"name":"get_u32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:627":{"id":"0:627","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[736,4],"end":[738,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:8620-0:1261":{"id":"a:1:8620-0:1261","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:897":{"id":"0:897","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes_mut.rs","begin":[1163,4],"end":[1165,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"1:7702","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:8620-0:1255":{"id":"a:1:8620-0:1255","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:59":{"id":"0:59","crate_id":0,"name":"get_i32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[473,4],"end":[475,5]},"visibility":"default","docs":"Gets a signed 32 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_i32_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:155":{"id":"0:155","crate_id":0,"name":"put_u32","span":{"filename":"src/buf/buf_mut.rs","begin":[447,4],"end":[449,5]},"visibility":"default","docs":"Writes an unsigned 32 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u32(0x0809A0A1);\nassert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2953-0:1242":{"id":"b:1:2953-0:1242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:2923","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2956","1:2957"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:8621-0:1298":{"id":"a:1:8621-0:1298","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:1:3026-0:374":{"id":"a:1:3026-0:374","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:1:3026-0:1242":{"id":"a:1:3026-0:1242","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1185":{"id":"0:1185","crate_id":0,"name":"get_u32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:397":{"id":"0:397","crate_id":0,"name":null,"span":{"filename":"src/buf/vec_deque.rs","begin":[5,0],"end":[22,1]},"visibility":{"restricted":{"parent":"0:390","path":"::buf::vec_deque"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["get_uint_le","get_i16","get_u16_le","take","chain","copy_to_bytes","has_remaining","get_f32_le","get_uint","get_u128","get_u64","get_f64_le","copy_to_slice","get_f64","get_u32","get_f32","get_u16","get_i8","get_u8","get_i128","get_u128_le","get_i128_le","reader","get_i64_le","get_i64","get_u64_le","get_i32_le","get_i32","chunks_vectored","get_u32_le","get_i16_le","get_int_le","get_int"],"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecDeque","id":"4:4173","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"items":["0:398","0:399","0:400"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:166":{"id":"0:166","crate_id":0,"name":"put_i128_le","span":{"filename":"src/buf/buf_mut.rs","begin":[689,4],"end":[691,5]},"visibility":"default","docs":"Writes a signed 128 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i128_le(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:822":{"id":"0:822","crate_id":0,"name":"extend_from_slice","span":{"filename":"src/bytes_mut.rs","begin":[684,4],"end":[699,5]},"visibility":"public","docs":"Appends given bytes to this `BytesMut`.\n\nIf this `BytesMut` object does not have enough capacity, it is resized\nfirst.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::with_capacity(0);\nbuf.extend_from_slice(b\"aaabbb\");\nbuf.extend_from_slice(b\"cccddd\");\n\nassert_eq!(b\"aaabbbcccddd\", &buf[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["extend",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:623":{"id":"0:623","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[724,4],"end":[726,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1291":{"id":"0:1291","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IndexMut","id":"1:3321","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"1:44511","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1292"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12709":{"id":"1:12709","crate_id":1,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"1:12239","prim@char":"5:15813"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:643":{"id":"0:643","crate_id":0,"name":"default","span":{"filename":"src/bytes.rs","begin":[781,4],"end":[783,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3133":{"id":"1:3133","crate_id":1,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3134","1:3135"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3124":{"id":"1:3124","crate_id":1,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3126"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:581":{"id":"0:581","crate_id":0,"name":"Item","span":{"filename":"src/bytes.rs","begin":[603,4],"end":[603,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"generics":{"params":[],"where_predicates":[]}}},"0:1203":{"id":"0:1203","crate_id":0,"name":"put_u16","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3245":{"id":"1:3245","crate_id":1,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3246"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"1:3232","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:891":{"id":"0:891","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes_mut.rs","begin":[1152,4],"end":[1152,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"b:1:2619-0:1261":{"id":"b:1:2619-0:1261","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1226":{"id":"0:1226","crate_id":0,"name":"put_u32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:588":{"id":"0:588","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[620,4],"end":[622,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1194":{"id":"0:1194","crate_id":0,"name":"get_int","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:335":{"id":"0:335","crate_id":0,"name":"set_limit","span":{"filename":"src/buf/take.rs","begin":[127,4],"end":[129,5]},"visibility":"public","docs":"Sets the maximum number of bytes that can be read.\n\n# Note\n\nIf the inner `Buf` has fewer bytes than `lim` then that is the actual\nnumber of available bytes.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\".take(2);\nlet mut dst = vec![];\n\ndst.put(&mut buf);\nassert_eq!(*dst, b\"he\"[..]);\n\ndst.clear();\n\nbuf.set_limit(3);\ndst.put(&mut buf);\nassert_eq!(*dst, b\"llo\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["lim",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:569":{"id":"0:569","crate_id":0,"name":"as_ref","span":{"filename":"src/bytes.rs","begin":[573,4],"end":[575,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:191":{"id":"0:191","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1073,4],"end":[1076,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:548":{"id":"0:548","crate_id":0,"name":"split_to","span":{"filename":"src/bytes.rs","begin":[401,4],"end":[423,5]},"visibility":"public","docs":"Splits the bytes into two at the given index.\n\nAfterwards `self` contains elements `[at, len)`, and the returned\n`Bytes` contains elements `[0, at)`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut a = Bytes::from(&b\"hello world\"[..]);\nlet b = a.split_to(5);\n\nassert_eq!(&a[..], b\" world\");\nassert_eq!(&b[..], b\"hello\");\n```\n\n# Panics\n\nPanics if `at > len`.","links":{},"attrs":["#[must_use = \"consider Bytes::advance if you don't need the other half\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:315":{"id":"0:315","crate_id":0,"name":"consume","span":{"filename":"src/buf/reader.rs","begin":[78,4],"end":[80,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["amt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1261":{"id":"0:1261","crate_id":0,"name":"Take","span":{"filename":"src/buf/take.rs","begin":[10,0],"end":[13,1]},"visibility":"public","docs":"A `Buf` adapter which limits the bytes read from an underlying buffer.\n\nThis struct is generally created by calling `take()` on `Buf`. See\ndocumentation of [`take()`](trait.Buf.html#method.take) for more details.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:329","a:1:8621-0:1261","a:1:3026-0:1261","a:1:3014-0:1261","a:1:8620-0:1261","a:1:3055-0:1261","b:1:2619-0:1261","b:1:2943-0:1261","b:1:3736-0:1261","b:1:2622-0:1261","b:1:2958-0:1261","b:1:2953-0:1261","b:1:2947-0:1261","0:1265","0:336"]}},"0:1009":{"id":"0:1009","crate_id":0,"name":null,"span":{"filename":"src/fmt/debug.rs","begin":[45,0],"end":[49,1]},"visibility":{"restricted":{"parent":"0:984","path":"::fmt::debug"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1010"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12610":{"id":"1:12610","crate_id":1,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]","#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:921":{"id":"0:921","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1337,0],"end":[1337,32]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:3055-0:1242":{"id":"a:1:3055-0:1242","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[132,0],"end":[132,49]},"visibility":{"restricted":{"parent":"0:250","path":"::buf::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"kind":"resolved_path","inner":{"name":"ExactSizeIterator","id":"1:7771","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:909":{"id":"0:909","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1203,0],"end":[1207,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromIterator","id":"1:7698","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:911"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:884":{"id":"0:884","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1127,0],"end":[1142,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_char","write_fmt"],"trait":{"kind":"resolved_path","inner":{"name":"Write","id":"1:9532","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:885","0:886"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:238":{"id":"0:238","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[193,0],"end":[230,1]},"visibility":{"restricted":{"parent":"0:199","path":"::buf::chain"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["has_remaining_mut","put_u16_le","put_int","put_i8","put_int_le","put_i128_le","put_i128","put_u128_le","writer","put","put_slice","put_u64","put_i16_le","put_i16","put_f32","put_u16","limit","put_uint","put_bytes","put_i64_le","put_i64","put_u64_le","put_u32","put_f32_le","put_uint_le","put_u8","put_u128","chain_mut","put_i32_le","put_i32","put_u32_le","put_f64","put_f64_le"],"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["0:241","0:242","0:243"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:624":{"id":"0:624","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[729,0],"end":[733,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:625"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1181":{"id":"0:1181","crate_id":0,"name":"get_u16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1306":{"id":"0:1306","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[35,0],"end":[35,29]},"visibility":{"restricted":{"parent":"0:1011","path":"::fmt::hex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"LowerHex","id":"1:9595","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1307"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:899":{"id":"0:899","crate_id":0,"name":"extend","span":{"filename":"src/bytes_mut.rs","begin":[1169,4],"end":[1185,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:7702","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2947-0:1261":{"id":"b:1:2947-0:1261","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:12642":{"id":"1:12642","crate_id":1,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"prim@char":"5:15813","`None`":"1:45964","self::pattern":"1:12239"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8174":{"id":"1:8174","crate_id":1,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"1:7251","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"a:1:8621-0:374":{"id":"a:1:8621-0:374","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:284":{"id":"0:284","crate_id":0,"name":"limit","span":{"filename":"src/buf/limit.rs","begin":[44,4],"end":[46,5]},"visibility":"public","docs":"Returns the maximum number of bytes that can be written\n\n# Note\n\nIf the inner `BufMut` has fewer bytes than indicated by this method then\nthat is the actual number of available bytes.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1176":{"id":"0:1176","crate_id":0,"name":"has_remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:7710":{"id":"1:7710","crate_id":1,"name":"into_iter","span":null,"visibility":"public","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:942":{"id":"0:942","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1405,0],"end":[1409,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7089","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"items":["0:943"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:398":{"id":"0:398","crate_id":0,"name":"remaining","span":{"filename":"src/buf/vec_deque.rs","begin":[6,4],"end":[8,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3734":{"id":"1:3734","crate_id":1,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3735"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementors":[]}},"0:385":{"id":"0:385","crate_id":0,"name":"as_mut_ptr","span":{"filename":"src/buf/uninit_slice.rs","begin":[123,4],"end":[125,5]},"visibility":"public","docs":"Return a raw pointer to the slice's buffer.\n\n# Safety\n\nThe caller **must not** read from the referenced memory and **must not**\nwrite **uninitialized** bytes to the slice either.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut data = [0, 1, 2];\nlet mut slice = &mut data[..];\nlet ptr = BufMut::chunk_mut(&mut slice).as_mut_ptr();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:76":{"id":"0:76","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/buf_impl.rs","begin":[816,4],"end":[824,5]},"visibility":"default","docs":"Consumes `len` bytes inside self and returns new instance of `Bytes`\nwith this data.\n\nThis function may be optimized by the underlying type to avoid actual\ncopies. For example, `Bytes` implementation will do a shallow copy\n(ref-count increment).\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet bytes = (&b\"hello world\"[..]).copy_to_bytes(5);\nassert_eq!(&bytes[..], &b\"hello\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"crate::Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3477":{"id":"1:3477","crate_id":1,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3479"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3474":{"id":"1:3474","crate_id":1,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3476"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"1:3469","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:1184":{"id":"0:1184","crate_id":0,"name":"get_u32","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3055-0:1233":{"id":"a:1:3055-0:1233","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:1:8621-0:526":{"id":"a:1:8621-0:526","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:2453":{"id":"5:2453","crate_id":5,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:2454","5:2456","5:2457","5:2458"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"1:9589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:613":{"id":"0:613","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[694,4],"end":[696,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7089","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9789":{"id":"1:9789","crate_id":1,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9790","1:9792"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:893":{"id":"0:893","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1159,0],"end":[1166,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:7702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"items":["0:895","0:896","0:897"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:541":{"id":"0:541","crate_id":0,"name":"slice","span":{"filename":"src/bytes.rs","begin":[228,4],"end":[268,5]},"visibility":"public","docs":"Returns a slice of self for the provided range.\n\nThis will increment the reference count for the underlying memory and\nreturn a new `Bytes` handle set to the slice.\n\nThis operation is `O(1)`.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet a = Bytes::from(&b\"hello world\"[..]);\nlet b = a.slice(2..5);\n\nassert_eq!(&b[..], b\"llo\");\n```\n\n# Panics\n\nRequires that `begin <= end` and `end <= self.len()`, otherwise slicing\nwill panic.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["range",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"1:3388","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"impl RangeBounds<usize>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"1:3388","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1288":{"id":"0:1288","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"1:3317","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"1:44511","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1289","0:1290"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:571":{"id":"0:571","crate_id":0,"name":"hash","span":{"filename":"src/bytes.rs","begin":[579,4],"end":[584,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"hash::Hasher","id":"1:9799","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2953-0:1233":{"id":"b:1:2953-0:1233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:2923","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["1:2956","1:2957"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1180":{"id":"0:1180","crate_id":0,"name":"get_u16","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:196":{"id":"0:196","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1130,4],"end":[1132,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:290":{"id":"0:290","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/limit.rs","begin":[70,4],"end":[74,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:12630":{"id":"1:12630","crate_id":1,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"1:48087","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:625":{"id":"0:625","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[730,4],"end":[732,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1188":{"id":"0:1188","crate_id":0,"name":"get_u64","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:595":{"id":"0:595","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[640,4],"end":[642,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8170":{"id":"1:8170","crate_id":1,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:7894","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:3549":{"id":"1:3549","crate_id":1,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"5:4628":{"id":"5:4628","crate_id":5,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:4629","5:4630","5:4632","5:4633","5:4634","5:4635","5:4636","5:4638","5:4639","5:4640","5:4641","5:4643"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:868":{"id":"0:868","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1078,0],"end":[1082,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:869"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1270":{"id":"0:1270","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"Range","id":"1:44465","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:8621-0:786":{"id":"a:1:8621-0:786","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:948":{"id":"0:948","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1423,0],"end":[1427,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:949"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:547":{"id":"0:547","crate_id":0,"name":"split_off","span":{"filename":"src/bytes.rs","begin":[352,4],"end":[375,5]},"visibility":"public","docs":"Splits the bytes into two at the given index.\n\nAfterwards `self` contains elements `[0, at)`, and the returned `Bytes`\ncontains elements `[at, len)`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut a = Bytes::from(&b\"hello world\"[..]);\nlet b = a.split_off(5);\n\nassert_eq!(&a[..], b\"hello\");\nassert_eq!(&b[..], b\" world\");\n```\n\n# Panics\n\nPanics if `at > len`.","links":{},"attrs":["#[must_use = \"consider Bytes::truncate if you don't need the other half\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:860":{"id":"0:860","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1060,0],"end":[1064,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:862"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:9595":{"id":"1:9595","crate_id":1,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9596"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12627":{"id":"1:12627","crate_id":1,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"1:47819","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:227":{"id":"0:227","crate_id":0,"name":"last_mut","span":{"filename":"src/buf/chain.rs","begin":[109,4],"end":[111,5]},"visibility":"public","docs":"Gets a mutable reference to the last underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = (&b\"hello \"[..])\n    .chain(&b\"world\"[..]);\n\nbuf.last_mut().advance(1);\n\nlet full = buf.copy_to_bytes(10);\nassert_eq!(full, b\"hello orld\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"U"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6798":{"id":"5:6798","crate_id":5,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6799","5:6800"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"5:10525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:1167":{"id":"0:1167","crate_id":0,"name":"get_uint_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5665":{"id":"5:5665","crate_id":5,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5666","5:5667"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"5:10525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:54":{"id":"0:54","crate_id":0,"name":"get_i16","span":{"filename":"src/buf/buf_impl.rs","begin":[373,4],"end":[375,5]},"visibility":"default","docs":"Gets a signed 16 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09 hello\"[..];\nassert_eq!(0x0809, buf.get_i16());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1229":{"id":"0:1229","crate_id":0,"name":"put_u64","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:170":{"id":"0:170","crate_id":0,"name":"put_int_le","span":{"filename":"src/buf/buf_mut.rs","begin":[777,4],"end":[779,5]},"visibility":"default","docs":"Writes low `nbytes` of a signed integer to `self` in little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_int_le(0x0504010203, 3);\nassert_eq!(buf, b\"\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self` or if `nbytes` is greater than 8.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i64"}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1304":{"id":"0:1304","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[34,0],"end":[34,26]},"visibility":{"restricted":{"parent":"0:1011","path":"::fmt::hex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"LowerHex","id":"1:9595","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1305"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:93":{"id":"0:93","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1039,0],"end":[1070,1]},"visibility":{"restricted":{"parent":"0:7","path":"::buf::buf_impl"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"1:2911","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["get_uint_le","get_i16","get_u16_le","take","chain","copy_to_bytes","has_remaining","get_f32_le","get_uint","get_u128","get_u64","get_f64_le","copy_to_slice","get_f64","get_u32","get_f32","get_u16","get_i8","get_u8","get_i128","get_u128_le","get_i128_le","reader","get_i64_le","get_i64","get_u64_le","get_i32_le","get_i32","chunks_vectored","get_u32_le","get_i16_le","get_int_le","get_int"],"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"std::io::Cursor","id":"5:10919","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:95","0:96","0:97"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:587":{"id":"0:587","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[619,0],"end":[623,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:588"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:806":{"id":"0:806","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[117,0],"end":[923,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:807","0:808","0:809","0:810","0:811","0:812","0:813","0:814","0:815","0:816","0:817","0:818","0:819","0:820","0:822","0:823"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1190":{"id":"0:1190","crate_id":0,"name":"get_i64","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:885":{"id":"0:885","crate_id":0,"name":"write_str","span":{"filename":"src/bytes_mut.rs","begin":[1129,4],"end":[1136,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3091":{"id":"1:3091","crate_id":1,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3093","1:3094"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:64":{"id":"0:64","crate_id":0,"name":"get_u128","span":{"filename":"src/buf/buf_impl.rs","begin":[573,4],"end":[575,5]},"visibility":"default","docs":"Gets an unsigned 128 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_u128());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:925":{"id":"0:925","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1352,4],"end":[1354,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3184":{"id":"1:3184","crate_id":1,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3186"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:1168":{"id":"0:1168","crate_id":0,"name":"get_int","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:144":{"id":"0:144","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[171,4],"end":[171,48]},"visibility":"default","docs":"Returns a mutable slice starting at the current BufMut position and of\nlength between 0 and `BufMut::remaining_mut()`. Note that this *can* be shorter than the\nwhole remainder of the buffer (this allows non-continuous implementation).\n\nThis is a lower level function. Most operations are done with other\nfunctions.\n\nThe returned byte slice may represent uninitialized memory.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = Vec::with_capacity(16);\n\nunsafe {\n    // MaybeUninit::as_mut_ptr\n    buf.chunk_mut()[0..].as_mut_ptr().write(b'h');\n    buf.chunk_mut()[1..].as_mut_ptr().write(b'e');\n\n    buf.advance_mut(2);\n\n    buf.chunk_mut()[0..].as_mut_ptr().write(b'l');\n    buf.chunk_mut()[1..].as_mut_ptr().write(b'l');\n    buf.chunk_mut()[2..].as_mut_ptr().write(b'o');\n\n    buf.advance_mut(3);\n}\n\nassert_eq!(5, buf.len());\nassert_eq!(buf, b\"hello\");\n```\n\n# Implementer notes\n\nThis function should never panic. `chunk_mut` should return an empty\nslice **if and only if** `remaining_mut()` returns 0. In other words,\n`chunk_mut()` returning an empty slice implies that `remaining_mut()` will\nreturn 0 and `remaining_mut()` returning 0 implies that `chunk_mut()` will\nreturn an empty slice.\n\nThis function may trigger an out-of-memory abort if it tries to allocate\nmemory and fails to do so.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:3102":{"id":"1:3102","crate_id":1,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3104","1:3105"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:416":{"id":"0:416","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/writer.rs","begin":[33,4],"end":[35,5]},"visibility":"public","docs":"Gets a reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.\n\n# Examples\n\n```rust\nuse bytes::BufMut;\n\nlet buf = Vec::with_capacity(1024).writer();\n\nassert_eq!(1024, buf.get_ref().capacity());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2947-0:526":{"id":"b:1:2947-0:526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1199":{"id":"0:1199","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"5:7786":{"id":"5:7786","crate_id":5,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:7787"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:264":{"id":"0:264","crate_id":0,"name":"size_hint","span":{"filename":"src/buf/iter.rs","begin":[126,4],"end":[129,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3055-0:786":{"id":"a:1:3055-0:786","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:1:3026-0:1261":{"id":"a:1:3026-0:1261","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:9603":{"id":"1:9603","crate_id":1,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9604"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:314":{"id":"0:314","crate_id":0,"name":"fill_buf","span":{"filename":"src/buf/reader.rs","begin":[75,4],"end":[77,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"5:4042","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1170":{"id":"0:1170","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"crate::Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1153":{"id":"0:1153","crate_id":0,"name":"get_i8","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1303":{"id":"0:1303","crate_id":0,"name":"fmt","span":{"filename":"src/buf/writer.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:422":{"id":"0:422","crate_id":0,"name":"flush","span":{"filename":"src/buf/writer.rs","begin":[85,4],"end":[87,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"5:4042","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:563":{"id":"0:563","crate_id":0,"name":"advance","span":{"filename":"src/bytes.rs","begin":[538,4],"end":[549,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:641":{"id":"0:641","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[772,4],"end":[774,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:577":{"id":"0:577","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes.rs","begin":[595,4],"end":[595,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"0:638":{"id":"0:638","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[768,0],"end":[775,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:641"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1161":{"id":"0:1161","crate_id":0,"name":"get_i32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:932":{"id":"0:932","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1375,0],"end":[1379,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:933"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:844":{"id":"0:844","crate_id":0,"name":"remaining_mut","span":{"filename":"src/bytes_mut.rs","begin":[973,4],"end":[975,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1265":{"id":"0:1265","crate_id":0,"name":null,"span":{"filename":"src/buf/take.rs","begin":[9,9],"end":[9,14]},"visibility":{"restricted":{"parent":"0:316","path":"::buf::take"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:1267"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:3736-0:526":{"id":"b:1:3736-0:526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3734","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3738"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:856":{"id":"0:856","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1046,0],"end":[1051,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"AsMut","id":"1:2914","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:857"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:565":{"id":"0:565","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[562,0],"end":[569,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"1:3232","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:566","0:567"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1178":{"id":"0:1178","crate_id":0,"name":"get_u8","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:632":{"id":"0:632","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[753,0],"end":[757,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:633"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1164":{"id":"0:1164","crate_id":0,"name":"get_i64","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1278":{"id":"0:1278","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"1:3317","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFull","id":"1:44449","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1279","0:1280"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1151":{"id":"0:1151","crate_id":0,"name":"copy_to_slice","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:243":{"id":"0:243","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/chain.rs","begin":[213,4],"end":[229,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:159":{"id":"0:159","crate_id":0,"name":"put_u64","span":{"filename":"src/buf/buf_mut.rs","begin":[535,4],"end":[537,5]},"visibility":"default","docs":"Writes an unsigned 64 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u64(0x0102030405060708);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:539":{"id":"0:539","crate_id":0,"name":"is_empty","span":{"filename":"src/bytes.rs","begin":[197,4],"end":[199,5]},"visibility":"public","docs":"Returns true if the `Bytes` has a length of 0.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::new();\nassert!(b.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:51":{"id":"0:51","crate_id":0,"name":"get_i8","span":{"filename":"src/buf/buf_impl.rs","begin":[310,4],"end":[315,5]},"visibility":"default","docs":"Gets a signed 8 bit integer from `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08 hello\"[..];\nassert_eq!(8, buf.get_i8());\n```\n\n# Panics\n\nThis function panics if there is no more remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1071,0],"end":[1138,1]},"visibility":{"restricted":{"parent":"0:99","path":"::buf::buf_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["has_remaining_mut","put_u16_le","put_int","put_i8","put_int_le","put_i128_le","put_i128","put_u128_le","writer","put","put_slice","put_u64","put_i16_le","put_i16","put_f32","put_u16","limit","put_uint","put_bytes","put_i64_le","put_i64","put_u64_le","put_u32","put_f32_le","put_uint_le","put_u8","put_u128","chain_mut","put_i32_le","put_i32","put_u32_le","put_f64","put_f64_le"],"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7089","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"items":["0:191","0:192","0:193","0:194","0:196","0:197"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:557":{"id":"0:557","crate_id":0,"name":"drop","span":{"filename":"src/bytes.rs","begin":[514,4],"end":[516,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:162":{"id":"0:162","crate_id":0,"name":"put_i64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[601,4],"end":[603,5]},"visibility":"default","docs":"Writes a signed 64 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i64_le(0x0102030405060708);\nassert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12718":{"id":"1:12718","crate_id":1,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"1:12179","`FromStr`":"1:12178"},"attrs":["#[inline]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:46091","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"1:12178","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"1:12178","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12636":{"id":"1:12636","crate_id":1,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"1:12239","prim@char":"5:15813"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:339":{"id":"0:339","crate_id":0,"name":"chunk","span":{"filename":"src/buf/take.rs","begin":[137,4],"end":[140,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:876":{"id":"0:876","crate_id":0,"name":"default","span":{"filename":"src/bytes_mut.rs","begin":[1100,4],"end":[1102,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:642":{"id":"0:642","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[779,0],"end":[784,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"1:2992","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:643"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2947-0:1248":{"id":"b:1:2947-0:1248","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1289":{"id":"0:1289","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"0:538":{"id":"0:538","crate_id":0,"name":"len","span":{"filename":"src/bytes.rs","begin":[182,4],"end":[184,5]},"visibility":"public","docs":"Returns the number of bytes contained in this `Bytes`.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::from(&b\"hello\"[..]);\nassert_eq!(b.len(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12631":{"id":"1:12631","crate_id":1,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.4.0\", reason = \"use lines() instead now\")]","#[inline]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"1:48097","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13349":{"id":"1:13349","crate_id":1,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:13350","1:13351","1:13352","1:13353"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:1279":{"id":"0:1279","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"0:308":{"id":"0:308","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/reader.rs","begin":[60,4],"end":[62,5]},"visibility":"public","docs":"Consumes this `Reader`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::Buf;\nuse std::io;\n\nlet mut buf = b\"hello world\".reader();\nlet mut dst = vec![];\n\nio::copy(&mut buf, &mut dst).unwrap();\n\nlet buf = buf.into_inner();\nassert_eq!(0, buf.remaining());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"B"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:73":{"id":"0:73","crate_id":0,"name":"get_f32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[755,4],"end":[757,5]},"visibility":"default","docs":"Gets an IEEE754 single-precision (4 bytes) floating point number from\n`self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x9A\\x99\\x99\\x3F hello\"[..];\nassert_eq!(1.2f32, buf.get_f32_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"f32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12628":{"id":"1:12628","crate_id":1,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"5:15818"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"1:48107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:953":{"id":"0:953","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1436,4],"end":[1438,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:863":{"id":"0:863","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1066,0],"end":[1070,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:865"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12625":{"id":"1:12625","crate_id":1,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"5:15813"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"1:47803","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:619":{"id":"0:619","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[712,4],"end":[714,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1187":{"id":"0:1187","crate_id":0,"name":"get_i32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1162":{"id":"0:1162","crate_id":0,"name":"get_u64","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:852":{"id":"0:852","crate_id":0,"name":"as_ref","span":{"filename":"src/bytes_mut.rs","begin":[1032,4],"end":[1034,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:940":{"id":"0:940","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1399,0],"end":[1403,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7089","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:7409","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:941"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12624":{"id":"1:12624","crate_id":1,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"5:15818"},"attrs":["#[inline]","#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1224":{"id":"0:1224","crate_id":0,"name":"put_i16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12662":{"id":"1:12662","crate_id":1,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split_terminator":"5:15818","prim@char":"5:15813","self::pattern":"1:12239","str::split":"5:15818"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"1:47901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:414":{"id":"0:414","crate_id":0,"name":null,"span":{"filename":"src/buf/writer.rs","begin":[19,0],"end":[75,1]},"visibility":{"restricted":{"parent":"0:401","path":"::buf::writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:416","0:417","0:418"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:3026-0:1255":{"id":"a:1:3026-0:1255","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1245":{"id":"0:1245","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[25,9],"end":[25,14]},"visibility":{"restricted":{"parent":"0:250","path":"::buf::iter"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:1247"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:91":{"id":"0:91","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1028,4],"end":[1030,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12950":{"id":"1:12950","crate_id":1,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12951","1:12952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:1241":{"id":"0:1241","crate_id":0,"name":"fmt","span":{"filename":"src/buf/chain.rs","begin":[31,9],"end":[31,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5421":{"id":"4:5421","crate_id":4,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"4:315","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:7409","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"4:315","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:7409","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:850":{"id":"0:850","crate_id":0,"name":"put_bytes","span":{"filename":"src/bytes_mut.rs","begin":[1016,4],"end":[1027,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u8"}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:192":{"id":"0:192","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1079,4],"end":[1091,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2622-0:786":{"id":"b:1:2622-0:786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2616","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2624"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:7251":{"id":"1:7251","crate_id":1,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7252","1:7253","1:7254","1:7255","1:7256","1:7257","1:7258"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:241":{"id":"0:241","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/chain.rs","begin":[198,4],"end":[203,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:961":{"id":"0:961","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1454,4],"end":[1456,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3019-0:374":{"id":"a:1:3019-0:374","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"1:2665":{"id":"1:2665","crate_id":1,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2667","1:2668"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"5:5659":{"id":"5:5659","crate_id":5,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5660","5:5661"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"5:10525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"5:6874":{"id":"5:6874","crate_id":5,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6875"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:1156":{"id":"0:1156","crate_id":0,"name":"get_i16","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2947-0:1255":{"id":"b:1:2947-0:1255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:922":{"id":"0:922","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1345,0],"end":[1349,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:923"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:590":{"id":"0:590","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[626,4],"end":[628,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:600":{"id":"0:600","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[657,0],"end":[661,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}},"items":["0:601"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12659":{"id":"1:12659","crate_id":1,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"`DoubleEndedIterator`":"1:7746","prim@char":"5:15813","str::split":"5:15818","str::rsplit_terminator":"5:15818","self::pattern":"1:12239"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"1:47883","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:671":{"id":"4:671","crate_id":4,"name":"clone_into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:880":{"id":"0:880","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1115,0],"end":[1119,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:881"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2670":{"id":"1:2670","crate_id":1,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:883":{"id":"0:883","crate_id":0,"name":"borrow_mut","span":{"filename":"src/bytes_mut.rs","begin":[1122,4],"end":[1124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:648":{"id":"0:648","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[798,0],"end":[803,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7089","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:7409","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:649"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:169":{"id":"0:169","crate_id":0,"name":"put_int","span":{"filename":"src/buf/buf_mut.rs","begin":[755,4],"end":[757,5]},"visibility":"default","docs":"Writes low `nbytes` of a signed integer to `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_int(0x0504010203, 3);\nassert_eq!(buf, b\"\\x01\\x02\\x03\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self` or if `nbytes` is greater than 8.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i64"}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1273":{"id":"0:1273","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"1:3317","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"1:44490","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1274","0:1275"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1219":{"id":"0:1219","crate_id":0,"name":"put_u8","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:90":{"id":"0:90","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1023,4],"end":[1025,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2958-0:786":{"id":"b:1:2958-0:786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2961","1:2962"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:646":{"id":"0:646","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[792,0],"end":[796,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:647"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1196":{"id":"0:1196","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"crate::Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12724":{"id":"1:12724","crate_id":1,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{}\", c);\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"5:15813"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"1:48132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1294":{"id":"0:1294","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"0:957":{"id":"0:957","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1445,4],"end":[1447,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1225":{"id":"0:1225","crate_id":0,"name":"put_u32","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:22834":{"id":"1:22834","crate_id":1,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:22835"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22830","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:58":{"id":"0:58","crate_id":0,"name":"get_i32","span":{"filename":"src/buf/buf_impl.rs","begin":[453,4],"end":[455,5]},"visibility":"default","docs":"Gets a signed 32 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_i32());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1146":{"id":"0:1146","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:874":{"id":"0:874","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1096,0],"end":[1096,23]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:601":{"id":"0:601","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[658,4],"end":[660,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12178":{"id":"1:12178","crate_id":1,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12179","1:12180"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:970":{"id":"0:970","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1483,0],"end":[1487,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:971"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:875":{"id":"0:875","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1098,0],"end":[1103,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"1:2992","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:876"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5739":{"id":"5:5739","crate_id":5,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5740","5:5741","5:5742"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:554":{"id":"0:554","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[509,0],"end":[509,29]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:556":{"id":"0:556","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[512,0],"end":[517,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Drop","id":"1:3256","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:557"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:650":{"id":"0:650","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[805,0],"end":[834,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Box","id":"4:315","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:7409","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:651"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:66":{"id":"0:66","crate_id":0,"name":"get_i128","span":{"filename":"src/buf/buf_impl.rs","begin":[613,4],"end":[615,5]},"visibility":"default","docs":"Gets a signed 128 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_i128());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:583":{"id":"0:583","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes.rs","begin":[606,4],"end":[608,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"1:7702","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2917":{"id":"1:2917","crate_id":1,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2919"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"4:5176":{"id":"4:5176","crate_id":4,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5178","4:5179"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:7711":{"id":"1:7711","crate_id":1,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7713","1:7715","1:7716"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:645":{"id":"0:645","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[787,4],"end":[789,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["slice",{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1307":{"id":"0:1307","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[35,0],"end":[35,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:865":{"id":"0:865","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1067,4],"end":[1069,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:836":{"id":"0:836","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[925,0],"end":[940,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Drop","id":"1:3256","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:837"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:605":{"id":"0:605","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[670,4],"end":[672,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:596":{"id":"0:596","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[645,0],"end":[649,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:597"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:3014-0:1261":{"id":"a:1:3014-0:1261","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:568":{"id":"0:568","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[571,0],"end":[576,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"1:2911","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:569"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3026":{"id":"1:3026","crate_id":1,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:9830":{"id":"1:9830","crate_id":1,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9831","1:9832","1:9833"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12611":{"id":"1:12611","crate_id":1,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"5:15827","str::as_mut_ptr":"5:15818"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:4:667-0:786":{"id":"b:4:667-0:786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"4:663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["4:669","4:670","4:671"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:895":{"id":"0:895","crate_id":0,"name":"Item","span":{"filename":"src/bytes_mut.rs","begin":[1160,4],"end":[1160,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"generics":{"params":[],"where_predicates":[]}}},"5:6568":{"id":"5:6568","crate_id":5,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6569","5:6570"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:9599":{"id":"1:9599","crate_id":1,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9600"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:193":{"id":"0:193","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1094,4],"end":[1104,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2701":{"id":"1:2701","crate_id":1,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2702","1:2703","1:2704","1:2705"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:304":{"id":"0:304","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[19,0],"end":[63,1]},"visibility":{"restricted":{"parent":"0:291","path":"::buf::reader"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:306","0:307","0:308"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:229":{"id":"0:229","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[132,0],"end":[191,1]},"visibility":{"restricted":{"parent":"0:199","path":"::buf::chain"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["get_uint_le","get_i16","get_u16_le","take","chain","copy_to_bytes","has_remaining","get_f32_le","get_uint","get_u128","get_u64","get_f64_le","copy_to_slice","get_f64","get_u32","get_f32","get_u16","get_i8","get_u8","get_i128","get_u128_le","get_i128_le","reader","get_i64_le","get_i64","get_u64_le","get_i32_le","get_i32","chunks_vectored","get_u32_le","get_i16_le","get_int_le","get_int"],"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["0:232","0:233","0:234","0:235","0:237"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:888":{"id":"0:888","crate_id":0,"name":"clone","span":{"filename":"src/bytes_mut.rs","begin":[1145,4],"end":[1147,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:143":{"id":"0:143","crate_id":0,"name":"has_remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[120,4],"end":[122,5]},"visibility":"default","docs":"Returns true if there is space in `self` for more bytes.\n\nThis is equivalent to `self.remaining_mut() != 0`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 5];\nlet mut buf = &mut dst[..];\n\nassert!(buf.has_remaining_mut());\n\nbuf.put(&b\"hello\"[..]);\n\nassert!(!buf.has_remaining_mut());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1220":{"id":"0:1220","crate_id":0,"name":"put_i8","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2943-0:1242":{"id":"b:1:2943-0:1242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2946"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:2712":{"id":"1:2712","crate_id":1,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2714","1:2715","1:2716","1:2717","1:2718"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"a:1:8620-0:1248":{"id":"a:1:8620-0:1248","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"4:5428":{"id":"4:5428","crate_id":4,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"4:7626"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12706":{"id":"1:12706","crate_id":1,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"5:15813","self::pattern":"1:12239"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1272":{"id":"0:1272","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"Range","id":"1:44465","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:599":{"id":"0:599","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[652,4],"end":[654,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:45":{"id":"0:45","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/buf_impl.rs","begin":[163,4],"end":[174,5]},"visibility":"default","docs":"Fills `dst` with potentially multiple slices starting at `self`'s\ncurrent position.\n\nIf the `Buf` is backed by disjoint slices of bytes, `chunk_vectored` enables\nfetching more than one slice at once. `dst` is a slice of `IoSlice`\nreferences, enabling the slice to be directly used with [`writev`]\nwithout any further conversion. The sum of the lengths of all the\nbuffers in `dst` will be less than or equal to `Buf::remaining()`.\n\nThe entries in `dst` will be overwritten, but the data **contained** by\nthe slices **will not** be modified. If `chunk_vectored` does not fill every\nentry in `dst`, then `dst` is guaranteed to contain all remaining slices\nin `self.\n\nThis is a lower level function. Most operations are done with other\nfunctions.\n\n# Implementer notes\n\nThis function should never panic. Once the end of the buffer is reached,\ni.e., `Buf::remaining` returns 0, calls to `chunk_vectored` must return 0\nwithout mutating `dst`.\n\nImplementations should also take care to properly handle being called\nwith `dst` being a zero length slice.\n\n[`writev`]: http://man7.org/linux/man-pages/man2/readv.2.html","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"IoSlice","id":"5:11122","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1186":{"id":"0:1186","crate_id":0,"name":"get_i32","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:651":{"id":"0:651","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[806,4],"end":[833,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["slice",{"kind":"resolved_path","inner":{"name":"Box","id":"4:315","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:254":{"id":"0:254","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[30,0],"end":[110,1]},"visibility":{"restricted":{"parent":"0:250","path":"::buf::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:257","0:258","0:259"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:840":{"id":"0:840","crate_id":0,"name":"chunk","span":{"filename":"src/bytes_mut.rs","begin":[949,4],"end":[951,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:288":{"id":"0:288","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/limit.rs","begin":[60,4],"end":[62,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3179":{"id":"1:3179","crate_id":1,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3181"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:933":{"id":"0:933","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1376,4],"end":[1378,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2958-0:526":{"id":"b:1:2958-0:526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2961","1:2962"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:628":{"id":"0:628","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[741,0],"end":[745,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:629"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1160":{"id":"0:1160","crate_id":0,"name":"get_i32","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:973":{"id":"0:973","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1490,4],"end":[1492,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5422":{"id":"4:5422","crate_id":4,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"4:7626"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:869":{"id":"0:869","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1079,4],"end":[1081,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:7706-0:1242":{"id":"b:1:7706-0:1242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:7894","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:7702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:7708","1:7709","1:7710"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:939":{"id":"0:939","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1394,4],"end":[1396,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7089","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5797":{"id":"5:5797","crate_id":5,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5798"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3161":{"id":"1:3161","crate_id":1,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3163","1:3164"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:1276":{"id":"0:1276","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IndexMut","id":"1:3321","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"1:44490","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1277"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:927":{"id":"0:927","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1358,4],"end":[1360,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3055-0:1261":{"id":"a:1:3055-0:1261","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1211":{"id":"0:1211","crate_id":0,"name":"put_u64","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6801":{"id":"5:6801","crate_id":5,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6802"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"5:10525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:4374":{"id":"1:4374","crate_id":1,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4375","1:4376","1:4377"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[510,0],"end":[510,29]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1280":{"id":"0:1280","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"RangeFull","id":"1:44449","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:186":{"id":"0:186","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1042,4],"end":[1045,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3738":{"id":"1:3738","crate_id":1,"name":"type_id","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"1:44613","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11686":{"id":"1:11686","crate_id":1,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:11687","1:11688"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12671":{"id":"1:12671","crate_id":1,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:578":{"id":"0:578","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes.rs","begin":[597,4],"end":[599,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"1:7702","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5441":{"id":"4:5441","crate_id":4,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"4:315","`String`":"4:7626"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"4:315","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:7409","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2961":{"id":"1:2961","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Infallible","id":"1:37397","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"0:1205":{"id":"0:1205","crate_id":0,"name":"put_i16","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:8621-0:1261":{"id":"a:1:8621-0:1261","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:968":{"id":"0:968","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1477,0],"end":[1481,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:969"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12712":{"id":"1:12712","crate_id":1,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"5:15813","self::pattern":"1:12239"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.33.0\", reason =\n\"superseded by `trim_start_matches`\", suggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12697":{"id":"1:12697","crate_id":1,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"5:15813","self::pattern":"1:12239"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"1:12269","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:226":{"id":"0:226","crate_id":0,"name":"last_ref","span":{"filename":"src/buf/chain.rs","begin":[90,4],"end":[92,5]},"visibility":"public","docs":"Gets a reference to the last underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet buf = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nassert_eq!(buf.last_ref()[..], b\"world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"U"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:68":{"id":"0:68","crate_id":0,"name":"get_uint","span":{"filename":"src/buf/buf_impl.rs","begin":[653,4],"end":[655,5]},"visibility":"default","docs":"Gets an unsigned n-byte integer from `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03 hello\"[..];\nassert_eq!(0x010203, buf.get_uint(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3026-0:1298":{"id":"a:1:3026-0:1298","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:946":{"id":"0:946","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1417,0],"end":[1421,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:947"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:7746":{"id":"1:7746","crate_id":1,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7747","1:7748","1:7749","1:7750","1:7754","1:7757"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:7894","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:564":{"id":"0:564","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/bytes.rs","begin":[551,4],"end":[559,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"crate::Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:95":{"id":"0:95","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1040,4],"end":[1049,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:173":{"id":"0:173","crate_id":0,"name":"put_f64","span":{"filename":"src/buf/buf_mut.rs","begin":[846,4],"end":[848,5]},"visibility":"default","docs":"Writes  an IEEE754 double-precision (8 bytes) floating point number to\n`self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f64(1.2f64);\nassert_eq!(buf, b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"f64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:842":{"id":"0:842","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/bytes_mut.rs","begin":[966,4],"end":[968,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"crate::Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3262":{"id":"1:3262","crate_id":1,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3264"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"1:3265","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:1198":{"id":"0:1198","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:535":{"id":"0:535","crate_id":0,"name":"new","span":{"filename":"src/bytes.rs","begin":[124,4],"end":[129,5]},"visibility":"public","docs":"Creates a new empty `Bytes`.\n\nThis will not allocate and the returned `Bytes` handle will be empty.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::new();\nassert_eq!(&b[..], b\"\");\n```","links":{},"attrs":["#[inline]","#[cfg(not(all(loom, test)))]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:184":{"id":"0:184","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1035,0],"end":[1069,1]},"visibility":{"restricted":{"parent":"0:99","path":"::buf::buf_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["has_remaining_mut","put_u16_le","put_int","put_i8","put_int_le","put_i128_le","put_i128","put_u128_le","writer","put","put_slice","put_u64","put_i16_le","put_i16","put_f32","put_u16","limit","put_uint","put_bytes","put_i64_le","put_i64","put_u64_le","put_u32","put_f32_le","put_uint_le","put_u8","put_u128","chain_mut","put_i32_le","put_i32","put_u32_le","put_f64","put_f64_le"],"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:185","0:186","0:187","0:188","0:189"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2958-0:1242":{"id":"b:1:2958-0:1242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2961","1:2962"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:892":{"id":"0:892","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes_mut.rs","begin":[1154,4],"end":[1156,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"1:7702","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:971":{"id":"0:971","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1484,4],"end":[1486,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:947":{"id":"0:947","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1418,4],"end":[1420,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9589":{"id":"1:9589","crate_id":1,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9590"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12691":{"id":"1:12691","crate_id":1,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\nassert_eq!(\"Hello\\tworld\\t\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[inline]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:574":{"id":"0:574","crate_id":0,"name":"borrow","span":{"filename":"src/bytes.rs","begin":[588,4],"end":[590,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2622-0:1261":{"id":"b:1:2622-0:1261","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2616","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2624"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3096":{"id":"1:3096","crate_id":1,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3098","1:3099"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"a:1:8620-0:786":{"id":"a:1:8620-0:786","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:928":{"id":"0:928","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1363,0],"end":[1367,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}},"items":["0:929"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:839":{"id":"0:839","crate_id":0,"name":"remaining","span":{"filename":"src/bytes_mut.rs","begin":[944,4],"end":[946,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2992":{"id":"1:2992","crate_id":1,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2993"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:2920":{"id":"1:2920","crate_id":1,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2922"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:83":{"id":"0:83","crate_id":0,"name":"reader","span":{"filename":"src/buf/buf_impl.rs","begin":[900,4],"end":[905,5]},"visibility":"default","docs":"Creates an adaptor which implements the `Read` trait for `self`.\n\nThis function returns a new value which implements `Read` by adapting\nthe `Read` trait functions to the `Buf` trait functions. Given that\n`Buf` operations are infallible, none of the `Read` functions will\nreturn with `Err`.\n\n# Examples\n\n```\nuse bytes::{Bytes, Buf};\nuse std::io::Read;\n\nlet buf = Bytes::from(\"hello world\");\n\nlet mut reader = buf.reader();\nlet mut dst = [0; 1024];\n\nlet num = reader.read(&mut dst).unwrap();\n\nassert_eq!(11, num);\nassert_eq!(&dst[..11], &b\"hello world\"[..]);\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1177":{"id":"0:1177","crate_id":0,"name":"copy_to_slice","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:814":{"id":"0:814","crate_id":0,"name":"split","span":{"filename":"src/bytes_mut.rs","begin":[329,4],"end":[332,5]},"visibility":"public","docs":"Removes the bytes from the current view, returning them in a new\n`BytesMut` handle.\n\nAfterwards, `self` will be empty, but will retain any additional\ncapacity that it had before the operation. This is identical to\n`self.split_to(self.len())`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(1024);\nbuf.put(&b\"hello world\"[..]);\n\nlet other = buf.split();\n\nassert!(buf.is_empty());\nassert_eq!(1013, buf.capacity());\n\nassert_eq!(other, b\"hello world\"[..]);\n```","links":{},"attrs":["#[must_use =\n\"consider BytesMut::advance(len()) if you don't need the other half\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12639":{"id":"1:12639","crate_id":1,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"1:12239","prim@char":"5:15813"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:934":{"id":"0:934","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1381,0],"end":[1385,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"primitive","inner":"str"},"items":["0:935"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1169":{"id":"0:1169","crate_id":0,"name":"get_int_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:69":{"id":"0:69","crate_id":0,"name":"get_uint_le","span":{"filename":"src/buf/buf_impl.rs","begin":[673,4],"end":[675,5]},"visibility":"default","docs":"Gets an unsigned n-byte integer from `self` in little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x010203, buf.get_uint_le(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:386":{"id":"0:386","crate_id":0,"name":"len","span":{"filename":"src/buf/uninit_slice.rs","begin":[141,4],"end":[143,5]},"visibility":"public","docs":"Returns the number of bytes in the slice.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut data = [0, 1, 2];\nlet mut slice = &mut data[..];\nlet len = BufMut::chunk_mut(&mut slice).len();\n\nassert_eq!(len, 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:965":{"id":"0:965","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1466,4],"end":[1468,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:819":{"id":"0:819","crate_id":0,"name":"set_len","span":{"filename":"src/bytes_mut.rs","begin":[485,4],"end":[488,5]},"visibility":"public","docs":"Sets the length of the buffer.\n\nThis will explicitly set the size of the buffer without actually\nmodifying the data, so it is up to the caller to ensure that the data\nhas been initialized.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut b = BytesMut::from(&b\"hello world\"[..]);\n\nunsafe {\n    b.set_len(5);\n}\n\nassert_eq!(&b[..], b\"hello\");\n\nunsafe {\n    b.set_len(11);\n}\n\nassert_eq!(&b[..], b\"hello world\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:3388":{"id":"1:3388","crate_id":1,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3390","1:3391","1:3392"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"0:157":{"id":"0:157","crate_id":0,"name":"put_i32","span":{"filename":"src/buf/buf_mut.rs","begin":[491,4],"end":[493,5]},"visibility":"default","docs":"Writes a signed 32 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i32(0x0809A0A1);\nassert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:867":{"id":"0:867","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1073,4],"end":[1075,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:153":{"id":"0:153","crate_id":0,"name":"put_i16","span":{"filename":"src/buf/buf_mut.rs","begin":[403,4],"end":[405,5]},"visibility":"default","docs":"Writes a signed 16 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i16(0x0809);\nassert_eq!(buf, b\"\\x08\\x09\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3145":{"id":"1:3145","crate_id":1,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3147","1:3148"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:1208":{"id":"0:1208","crate_id":0,"name":"put_u32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:612":{"id":"0:612","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[693,0],"end":[697,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7089","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:7409","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:613"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:943":{"id":"0:943","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1406,4],"end":[1408,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1297":{"id":"0:1297","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"RangeToInclusive","id":"1:44557","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2622-0:374":{"id":"b:1:2622-0:374","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2616","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2624"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:561":{"id":"0:561","crate_id":0,"name":"remaining","span":{"filename":"src/bytes.rs","begin":[528,4],"end":[530,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12726":{"id":"1:12726","crate_id":1,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{}\", c);\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"5:15813"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"1:48141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3086":{"id":"1:3086","crate_id":1,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3088","1:3089"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:0":{"id":"0:0","crate_id":0,"name":"bytes","span":{"filename":"src/lib.rs","begin":[1,0],"end":[116,1]},"visibility":"public","docs":"Provides abstractions for working with bytes.\n\nThe `bytes` crate provides an efficient byte buffer structure\n([`Bytes`](struct.Bytes.html)) and traits for working with buffer\nimplementations ([`Buf`], [`BufMut`]).\n\n[`Buf`]: trait.Buf.html\n[`BufMut`]: trait.BufMut.html\n\n# `Bytes`\n\n`Bytes` is an efficient container for storing and operating on contiguous\nslices of memory. It is intended for use primarily in networking code, but\ncould have applications elsewhere as well.\n\n`Bytes` values facilitate zero-copy network programming by allowing multiple\n`Bytes` objects to point to the same underlying memory. This is managed by\nusing a reference count to track when the memory is no longer needed and can\nbe freed.\n\nA `Bytes` handle can be created directly from an existing byte store (such as `&[u8]`\nor `Vec<u8>`), but usually a `BytesMut` is used first and written to. For\nexample:\n\n```rust\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(1024);\nbuf.put(&b\"hello world\"[..]);\nbuf.put_u16(1234);\n\nlet a = buf.split();\nassert_eq!(a, b\"hello world\\x04\\xD2\"[..]);\n\nbuf.put(&b\"goodbye world\"[..]);\n\nlet b = buf.split();\nassert_eq!(b, b\"goodbye world\"[..]);\n\nassert_eq!(buf.capacity(), 998);\n```\n\nIn the above example, only a single buffer of 1024 is allocated. The handles\n`a` and `b` will share the underlying buffer and maintain indices tracking\nthe view into the buffer represented by the handle.\n\nSee the [struct docs] for more details.\n\n[struct docs]: struct.Bytes.html\n\n# `Buf`, `BufMut`\n\nThese two traits provide read and write access to buffers. The underlying\nstorage may or may not be in contiguous memory. For example, `Bytes` is a\nbuffer that guarantees contiguous memory, but a [rope] stores the bytes in\ndisjoint chunks. `Buf` and `BufMut` maintain cursors tracking the current\nposition in the underlying byte storage. When bytes are read or written, the\ncursor is advanced.\n\n[rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)\n\n## Relation with `Read` and `Write`\n\nAt first glance, it may seem that `Buf` and `BufMut` overlap in\nfunctionality with `std::io::Read` and `std::io::Write`. However, they\nserve different purposes. A buffer is the value that is provided as an\nargument to `Read::read` and `Write::write`. `Read` and `Write` may then\nperform a syscall, which has the potential of failing. Operations on `Buf`\nand `BufMut` are infallible.","links":{},"attrs":["#![warn(missing_docs, missing_debug_implementations, rust_2018_idioms)]","#![doc(test(no_crate_inject,\nattr(deny(warnings, rust_2018_idioms), allow(dead_code, unused_variables))))]","#![no_std]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:6","0:42","0:140","0:526","0:786"]}},"0:1179":{"id":"0:1179","crate_id":0,"name":"get_i8","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:247":{"id":"0:247","crate_id":0,"name":"Item","span":{"filename":"src/buf/chain.rs","begin":[237,4],"end":[237,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"primitive","inner":"u8"},"generics":{"params":[],"where_predicates":[]}}},"1:2949":{"id":"1:2949","crate_id":1,"name":"from","span":null,"visibility":"public","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:263":{"id":"0:263","crate_id":0,"name":"next","span":{"filename":"src/buf/iter.rs","begin":[115,4],"end":[124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:171":{"id":"0:171","crate_id":0,"name":"put_f32","span":{"filename":"src/buf/buf_mut.rs","begin":[800,4],"end":[802,5]},"visibility":"default","docs":"Writes  an IEEE754 single-precision (4 bytes) floating point number to\n`self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f32(1.2f32);\nassert_eq!(buf, b\"\\x3F\\x99\\x99\\x9A\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"f32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1305":{"id":"0:1305","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[34,0],"end":[34,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1295":{"id":"0:1295","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"RangeToInclusive","id":"1:44557","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:331":{"id":"0:331","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/take.rs","begin":[39,4],"end":[41,5]},"visibility":"public","docs":"Consumes this `Take`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\".take(2);\nlet mut dst = vec![];\n\ndst.put(&mut buf);\nassert_eq!(*dst, b\"he\"[..]);\n\nlet mut buf = buf.into_inner();\n\ndst.clear();\ndst.put(&mut buf);\nassert_eq!(*dst, b\"llo world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:56":{"id":"0:56","crate_id":0,"name":"get_u32","span":{"filename":"src/buf/buf_impl.rs","begin":[413,4],"end":[415,5]},"visibility":"default","docs":"Gets an unsigned 32 bit integer from `self` in the big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_u32());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3055-0:374":{"id":"a:1:3055-0:374","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:12720":{"id":"1:12720","crate_id":1,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1202":{"id":"0:1202","crate_id":0,"name":"put_i8","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:167":{"id":"0:167","crate_id":0,"name":"put_uint","span":{"filename":"src/buf/buf_mut.rs","begin":[711,4],"end":[713,5]},"visibility":"default","docs":"Writes an unsigned n-byte integer to `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_uint(0x010203, 3);\nassert_eq!(buf, b\"\\x01\\x02\\x03\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u64"}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:537":{"id":"0:537","crate_id":0,"name":"from_static","span":{"filename":"src/bytes.rs","begin":[152,4],"end":[159,5]},"visibility":"public","docs":"Creates a new `Bytes` from a static slice.\n\nThe returned `Bytes` will point directly to the static slice. There is\nno allocating or copying.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::from_static(b\"hello\");\nassert_eq!(&b[..], b\"hello\");\n```","links":{},"attrs":["#[inline]","#[cfg(not(all(loom, test)))]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["bytes",{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:160":{"id":"0:160","crate_id":0,"name":"put_u64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[557,4],"end":[559,5]},"visibility":"default","docs":"Writes an unsigned 64 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u64_le(0x0102030405060708);\nassert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12615":{"id":"1:12615","crate_id":1,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"1:45964"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10168","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10168","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2958-0:1298":{"id":"b:1:2958-0:1298","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:2961","1:2962"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2622-0:1233":{"id":"b:1:2622-0:1233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2616","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["1:2624"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2953-0:786":{"id":"b:1:2953-0:786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:2923","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2956","1:2957"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1215":{"id":"0:1215","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2953-0:1248":{"id":"b:1:2953-0:1248","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:2923","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2956","1:2957"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:75":{"id":"0:75","crate_id":0,"name":"get_f64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[797,4],"end":[799,5]},"visibility":"default","docs":"Gets an IEEE754 double-precision (8 bytes) floating point number from\n`self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F hello\"[..];\nassert_eq!(1.2f64, buf.get_f64_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:924":{"id":"0:924","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1351,0],"end":[1355,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:925"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1228":{"id":"0:1228","crate_id":0,"name":"put_i32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:7771":{"id":"1:7771","crate_id":1,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7772","1:7773"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:7894","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:558":{"id":"0:558","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[519,0],"end":[524,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:559"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12626":{"id":"1:12626","crate_id":1,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"5:15813"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"1:47809","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1216":{"id":"0:1216","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:8621-0:1242":{"id":"a:1:8621-0:1242","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:9799":{"id":"1:9799","crate_id":1,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9800","1:9801","1:9802","1:9803","1:9804","1:9805","1:9806","1:9807","1:9808","1:9809","1:9810","1:9811","1:9812","1:9813"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:812":{"id":"0:812","crate_id":0,"name":"freeze","span":{"filename":"src/bytes_mut.rs","begin":[239,4],"end":[259,5]},"visibility":"public","docs":"Converts `self` into an immutable `Bytes`.\n\nThe conversion is zero cost and is used to indicate that the slice\nreferenced by the handle will no longer be mutated. Once the conversion\nis done, the handle can be cloned and shared across threads.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\nuse std::thread;\n\nlet mut b = BytesMut::with_capacity(64);\nb.put(&b\"hello world\"[..]);\nlet b1 = b.freeze();\nlet b2 = b1.clone();\n\nlet th = thread::spawn(move || {\n    assert_eq!(&b1[..], b\"hello world\");\n});\n\nassert_eq!(&b2[..], b\"hello world\");\nth.join().unwrap();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:941":{"id":"0:941","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1400,4],"end":[1402,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7089","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:8620-0:1233":{"id":"a:1:8620-0:1233","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:2613":{"id":"1:2613","crate_id":1,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2615"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"0:1309":{"id":"0:1309","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[36,0],"end":[36,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3175":{"id":"1:3175","crate_id":1,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3177"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:311":{"id":"0:311","crate_id":0,"name":"read","span":{"filename":"src/buf/reader.rs","begin":[66,4],"end":[71,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"5:4042","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12723":{"id":"1:12723","crate_id":1,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:81":{"id":"0:81","crate_id":0,"name":"chain","span":{"filename":"src/buf/buf_impl.rs","begin":[869,4],"end":[874,5]},"visibility":"default","docs":"Creates an adaptor which will chain this buffer with another.\n\nThe returned `Buf` instance will first consume all bytes from `self`.\nAfterwards the output is equivalent to the output of next.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut chain = b\"hello \"[..].chain(&b\"world\"[..]);\n\nlet full = chain.copy_to_bytes(11);\nassert_eq!(full.chunk(), b\"hello world\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["next",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1311":{"id":"0:1311","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[37,0],"end":[37,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:847":{"id":"0:847","crate_id":0,"name":"put","span":{"filename":"src/bytes_mut.rs","begin":[1000,4],"end":[1010,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"crate::Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:161":{"id":"0:161","crate_id":0,"name":"put_i64","span":{"filename":"src/buf/buf_mut.rs","begin":[579,4],"end":[581,5]},"visibility":"default","docs":"Writes a signed 64 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i64(0x0102030405060708);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2947-0:786":{"id":"b:1:2947-0:786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1310":{"id":"0:1310","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[37,0],"end":[37,29]},"visibility":{"restricted":{"parent":"0:1011","path":"::fmt::hex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UpperHex","id":"1:9597","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1311"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:22191":{"id":"1:22191","crate_id":1,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"1:22834","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22182","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"5:6696":{"id":"5:6696","crate_id":5,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6697","5:6698","5:6699","5:6700","5:6701","5:6702","5:6703","5:6704","5:6705","5:6706","5:6707","5:6708","5:6709","5:6710","5:6711","5:6712","5:6713"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"a:1:3055-0:1248":{"id":"a:1:3055-0:1248","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"4:5440":{"id":"4:5440","crate_id":4,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"4:7626"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:862":{"id":"0:862","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1061,4],"end":[1063,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10168":{"id":"1:10168","crate_id":1,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:10170","1:10171","1:10172","1:10173","1:10174","1:10175","1:10176"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10159","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:2635":{"id":"1:2635","crate_id":1,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2636","1:2637"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:400":{"id":"0:400","crate_id":0,"name":"advance","span":{"filename":"src/buf/vec_deque.rs","begin":[19,4],"end":[21,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1172":{"id":"0:1172","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1201":{"id":"0:1201","crate_id":0,"name":"put_u8","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:964":{"id":"0:964","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1465,0],"end":[1469,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:965"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:374":{"id":"0:374","crate_id":0,"name":"UninitSlice","span":{"filename":"src/buf/uninit_slice.rs","begin":[22,0],"end":[22,42]},"visibility":"public","docs":"Uninitialized byte slice.\n\nReturned by `BufMut::chunk_mut()`, the referenced byte slice may be\nuninitialized. The wrapper provides safe access without introducing\nundefined behavior.\n\nThe safety invariants of this wrapper are:\n\n 1. Reading from an `UninitSlice` is undefined behavior.\n 2. Writing uninitialized bytes to an `UninitSlice` is undefined behavior.\n\nThe difference between `&mut UninitSlice` and `&mut [MaybeUninit<u8>]` is\nthat it is possible in safe code to write uninitialized bytes to an\n`&mut [MaybeUninit<u8>]`, which this type prohibits.","links":{},"attrs":["#[repr(transparent)]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:377","a:1:8621-0:374","a:1:3026-0:374","a:1:3014-0:374","a:1:8620-0:374","a:1:3055-0:374","a:1:3019-0:374","b:1:2619-0:374","b:1:3736-0:374","b:1:2622-0:374","0:387","0:1268","0:1271","0:1273","0:1276","0:1278","0:1281","0:1283","0:1286","0:1288","0:1291","0:1293","0:1296"]}},"1:2957":{"id":"1:2957","crate_id":1,"name":"try_into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:46091","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:148":{"id":"0:148","crate_id":0,"name":"put_bytes","span":{"filename":"src/buf/buf_mut.rs","begin":[289,4],"end":[293,5]},"visibility":"default","docs":"Put `cnt` bytes `val` into `self`.\n\nLogically equivalent to calling `self.put_u8(val)` `cnt` times, but may work faster.\n\n`self` must have at least `cnt` remaining capacity.\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 6];\n\n{\n    let mut buf = &mut dst[..];\n    buf.put_bytes(b'a', 4);\n\n    assert_eq!(2, buf.remaining_mut());\n}\n\nassert_eq!(b\"aaaa\\0\\0\", &dst);\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u8"}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6872":{"id":"5:6872","crate_id":5,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6873"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:1301":{"id":"0:1301","crate_id":0,"name":null,"span":{"filename":"src/buf/writer.rs","begin":[10,9],"end":[10,14]},"visibility":{"restricted":{"parent":"0:401","path":"::buf::writer"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:1303"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:970":{"id":"5:970","crate_id":5,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:971","5:972","5:973","5:974","5:975","5:976","5:977"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"a:1:8620-0:1298":{"id":"a:1:8620-0:1298","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:62":{"id":"0:62","crate_id":0,"name":"get_i64","span":{"filename":"src/buf/buf_impl.rs","begin":[533,4],"end":[535,5]},"visibility":"default","docs":"Gets a signed 64 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_i64());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3024":{"id":"1:3024","crate_id":1,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:647":{"id":"0:647","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[793,4],"end":[795,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["slice",{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:817":{"id":"0:817","crate_id":0,"name":"clear","span":{"filename":"src/bytes_mut.rs","begin":[418,4],"end":[420,5]},"visibility":"public","docs":"Clears the buffer, removing all data. Existing capacity is preserved.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::from(&b\"hello world\"[..]);\nbuf.clear();\nassert!(buf.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:8621-0:1255":{"id":"a:1:8621-0:1255","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3116":{"id":"1:3116","crate_id":1,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3118"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:1204":{"id":"0:1204","crate_id":0,"name":"put_u16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:55":{"id":"0:55","crate_id":0,"name":"get_i16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[393,4],"end":[395,5]},"visibility":"default","docs":"Gets a signed 16 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x09\\x08 hello\"[..];\nassert_eq!(0x0809, buf.get_i16_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:235":{"id":"0:235","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/chain.rs","begin":[168,4],"end":[172,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"IoSlice","id":"5:11122","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3299":{"id":"1:3299","crate_id":1,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3301","1:3302","1:3303"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:3256":{"id":"1:3256","crate_id":1,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3257"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"5:4710":{"id":"5:4710","crate_id":5,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:4711","5:4712","5:4713","5:4715","5:4716","5:4718","5:4719"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"5:4628","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:617":{"id":"0:617","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[706,4],"end":[708,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:341":{"id":"0:341","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/take.rs","begin":[148,4],"end":[154,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:593":{"id":"0:593","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[637,0],"end":[637,20]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:560":{"id":"0:560","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[526,0],"end":[560,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["get_uint_le","get_i16","get_u16_le","take","chain","copy_to_bytes","has_remaining","get_f32_le","get_uint","get_u128","get_u64","get_f64_le","copy_to_slice","get_f64","get_u32","get_f32","get_u16","get_i8","get_u8","get_i128","get_u128_le","get_i128_le","reader","get_i64_le","get_i64","get_u64_le","get_i32_le","get_i32","chunks_vectored","get_u32_le","get_i16_le","get_int_le","get_int"],"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:561","0:562","0:563","0:564"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12600":{"id":"1:12600","crate_id":1,"name":null,"span":null,"visibility":{"restricted":{"parent":"1:11699","path":"::str"}},"docs":null,"links":{},"attrs":["#[lang = \"str\"]","#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["1:12601","1:12602","1:12603","1:12604","1:12606","1:12609","1:12610","1:12611","1:12612","1:12613","1:12615","1:12617","1:12619","1:12621","1:12622","1:12623","1:12624","1:12625","1:12626","1:12627","1:12628","1:12629","1:12630","1:12631","1:12632","1:12633","1:12636","1:12639","1:12642","1:12646","1:12650","1:12653","1:12656","1:12659","1:12662","1:12665","1:12668","1:12671","1:12674","1:12677","1:12680","1:12683","1:12686","1:12689","1:12691","1:12693","1:12695","1:12696","1:12697","1:12700","1:12703","1:12706","1:12709","1:12712","1:12715","1:12718","1:12720","1:12721","1:12722","1:12723","1:12724","1:12726","1:12727"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:610":{"id":"0:610","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[687,0],"end":[691,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7089","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:7409","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:611"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12612":{"id":"1:12612","crate_id":1,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"5:15827"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:22041":{"id":"1:22041","crate_id":1,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22031","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:12650":{"id":"1:12650","crate_id":1,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::split_whitespace":"5:15818","self::pattern":"1:12239","`DoubleEndedIterator`":"1:7746","prim@char":"5:15813","str::rsplit":"5:15818"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"1:47833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12621":{"id":"1:12621","crate_id":1,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"1:3317","str::slice_mut_unchecked":"5:15818","`str`":"5:15818"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_deprecated(since = \"1.29.0\", reason =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]","#[inline]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:1271":{"id":"0:1271","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IndexMut","id":"1:3321","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Range","id":"1:44465","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1272"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1296":{"id":"0:1296","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IndexMut","id":"1:3321","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeToInclusive","id":"1:44557","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1297"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:604":{"id":"0:604","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[669,0],"end":[673,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:605"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:615":{"id":"0:615","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[700,4],"end":[702,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:147":{"id":"0:147","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[236,4],"end":[262,5]},"visibility":"default","docs":"Transfer bytes into `self` from `src` and advance the cursor by the\nnumber of bytes written.\n\n`self` must have enough remaining capacity to contain all of `src`.\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 6];\n\n{\n    let mut buf = &mut dst[..];\n    buf.put_slice(b\"hello\");\n\n    assert_eq!(1, buf.remaining_mut());\n}\n\nassert_eq!(b\"hello\\0\", &dst);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3736-0:1242":{"id":"b:1:3736-0:1242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3734","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3738"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1260":{"id":"0:1260","crate_id":0,"name":"fmt","span":{"filename":"src/buf/reader.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1252":{"id":"0:1252","crate_id":0,"name":null,"span":{"filename":"src/buf/limit.rs","begin":[8,9],"end":[8,14]},"visibility":{"restricted":{"parent":"0:267","path":"::buf::limit"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:1254"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:936":{"id":"0:936","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1387,0],"end":[1391,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"primitive","inner":"str"},"items":["0:937"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6450":{"id":"5:6450","crate_id":5,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6451","5:6452","5:6453","5:6454","5:6456","5:6458","5:6459"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"5:10525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:12604":{"id":"1:12604","crate_id":1,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:559":{"id":"0:559","crate_id":0,"name":"clone","span":{"filename":"src/bytes.rs","begin":[521,4],"end":[523,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:9315":{"id":"5:9315","crate_id":5,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:9316","5:9317","5:9318","5:9319","5:9320","5:9321","5:9322"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"5:10525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:958":{"id":"0:958","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1450,0],"end":[1457,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:961"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:70":{"id":"0:70","crate_id":0,"name":"get_int","span":{"filename":"src/buf/buf_impl.rs","begin":[693,4],"end":[695,5]},"visibility":"default","docs":"Gets a signed n-byte integer from `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03 hello\"[..];\nassert_eq!(0x010203, buf.get_int(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1195":{"id":"0:1195","crate_id":0,"name":"get_int_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:8621-0:1248":{"id":"a:1:8621-0:1248","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:8621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1197":{"id":"0:1197","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:97":{"id":"0:97","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1062,4],"end":[1069,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6962":{"id":"5:6962","crate_id":5,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6963"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12606":{"id":"1:12606","crate_id":1,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"5:15818"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:421":{"id":"0:421","crate_id":0,"name":"write","span":{"filename":"src/buf/writer.rs","begin":[78,4],"end":[83,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"5:4042","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:858":{"id":"0:858","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1053,0],"end":[1058,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"DerefMut","id":"1:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:859"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:873":{"id":"0:873","crate_id":0,"name":"cmp","span":{"filename":"src/bytes_mut.rs","begin":[1091,4],"end":[1093,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:419":{"id":"0:419","crate_id":0,"name":null,"span":{"filename":"src/buf/writer.rs","begin":[77,0],"end":[88,1]},"visibility":{"restricted":{"parent":"0:401","path":"::buf::writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["write_fmt","write_all_vectored","write_vectored","by_ref","write_all","is_write_vectored"],"trait":{"kind":"resolved_path","inner":{"name":"Write","id":"5:4685","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:421","0:422"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2953-0:1255":{"id":"b:1:2953-0:1255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:2923","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:2956","1:2957"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[37,0],"end":[130,1]},"visibility":{"restricted":{"parent":"0:199","path":"::buf::chain"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["0:224","0:225","0:226","0:227","0:228"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1283":{"id":"0:1283","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"1:3317","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeInclusive","id":"1:44534","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1284","0:1285"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:896":{"id":"0:896","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes_mut.rs","begin":[1161,4],"end":[1161,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"core::slice::Iter","id":"1:10348","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"0:592":{"id":"0:592","crate_id":0,"name":"cmp","span":{"filename":"src/bytes.rs","begin":[632,4],"end":[634,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1287":{"id":"0:1287","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"RangeInclusive","id":"1:44534","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:52":{"id":"0:52","crate_id":0,"name":"get_u16","span":{"filename":"src/buf/buf_impl.rs","begin":[333,4],"end":[335,5]},"visibility":"default","docs":"Gets an unsigned 16 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09 hello\"[..];\nassert_eq!(0x0809, buf.get_u16());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1214":{"id":"0:1214","crate_id":0,"name":"put_i64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12632":{"id":"1:12632","crate_id":1,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"1:48125","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2947-0:1298":{"id":"b:1:2947-0:1298","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:809":{"id":"0:809","crate_id":0,"name":"len","span":{"filename":"src/bytes_mut.rs","begin":[180,4],"end":[182,5]},"visibility":"public","docs":"Returns the number of bytes contained in this `BytesMut`.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet b = BytesMut::from(&b\"hello\"[..]);\nassert_eq!(b.len(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:188":{"id":"0:188","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1055,4],"end":[1060,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:816":{"id":"0:816","crate_id":0,"name":"truncate","span":{"filename":"src/bytes_mut.rs","begin":[399,4],"end":[405,5]},"visibility":"public","docs":"Shortens the buffer, keeping the first `len` bytes and dropping the\nrest.\n\nIf `len` is greater than the buffer's current length, this has no\neffect.\n\nExisting underlying capacity is preserved.\n\nThe [`split_off`] method can emulate `truncate`, but this causes the\nexcess bytes to be returned instead of dropped.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::from(&b\"hello world\"[..]);\nbuf.truncate(5);\nassert_eq!(buf, b\"hello\"[..]);\n```\n\n[`split_off`]: #method.split_off","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:7709":{"id":"1:7709","crate_id":1,"name":"IntoIter","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"generic","inner":"I"},"generics":{"params":[],"where_predicates":[]}}},"0:886":{"id":"0:886","crate_id":0,"name":"write_fmt","span":{"filename":"src/bytes_mut.rs","begin":[1139,4],"end":[1141,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["args",{"kind":"resolved_path","inner":{"name":"fmt::Arguments","id":"1:47029","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12629":{"id":"1:12629","crate_id":1,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"5:15818"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"1:48116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5809":{"id":"5:5809","crate_id":5,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5810"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:1183":{"id":"0:1183","crate_id":0,"name":"get_i16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12609":{"id":"1:12609","crate_id":1,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"1:11710"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[inline(always)]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5442":{"id":"4:5442","crate_id":4,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"4:7626"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1213":{"id":"0:1213","crate_id":0,"name":"put_i64","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2619-0:786":{"id":"b:1:2619-0:786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:12656":{"id":"1:12656","crate_id":1,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"1:12239","prim@char":"5:15813","`DoubleEndedIterator`":"1:7746","str::split":"5:15818"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"1:47851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5425":{"id":"4:5425","crate_id":4,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"4:7626"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:859":{"id":"0:859","crate_id":0,"name":"deref_mut","span":{"filename":"src/bytes_mut.rs","begin":[1055,4],"end":[1057,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:329":{"id":"0:329","crate_id":0,"name":null,"span":{"filename":"src/buf/take.rs","begin":[19,0],"end":[130,1]},"visibility":{"restricted":{"parent":"0:316","path":"::buf::take"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:331","0:332","0:333","0:334","0:335"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1008":{"id":"0:1008","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/debug.rs","begin":[40,4],"end":[42,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:377":{"id":"0:377","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[24,0],"end":[144,1]},"visibility":{"restricted":{"parent":"0:342","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:378","0:380","0:381","0:385","0:386"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3265":{"id":"1:3265","crate_id":1,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3267","1:3268"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"5:5787":{"id":"5:5787","crate_id":5,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5788","5:5789","5:5790","5:5791"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:87":{"id":"0:87","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1017,0],"end":[1019,1]},"visibility":{"restricted":{"parent":"0:7","path":"::buf::buf_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["get_uint_le","get_i16","get_u16_le","take","chain","copy_to_bytes","has_remaining","get_f32_le","get_uint","get_u128","get_u64","get_f64_le","copy_to_slice","get_f64","get_u32","get_f32","get_u16","get_i8","get_u8","get_i128","get_u128_le","get_i128_le","reader","get_i64_le","get_i64","get_u64_le","get_i32_le","get_i32","chunks_vectored","get_u32_le","get_i16_le","get_int_le","get_int"],"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Box","id":"4:315","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:1171","0:1172","0:1173","0:1175","0:1176","0:1177","0:1178","0:1179","0:1180","0:1181","0:1182","0:1183","0:1184","0:1185","0:1186","0:1187","0:1188","0:1189","0:1190","0:1191","0:1192","0:1193","0:1194","0:1195","0:1196"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:189":{"id":"0:189","crate_id":0,"name":"put_bytes","span":{"filename":"src/buf/buf_mut.rs","begin":[1062,4],"end":[1068,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u8"}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3014":{"id":"1:3014","crate_id":1,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:1:2622-0:526":{"id":"b:1:2622-0:526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2616","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2624"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1275":{"id":"0:1275","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"1:44490","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1233":{"id":"0:1233","crate_id":0,"name":"Chain","span":{"filename":"src/buf/chain.rs","begin":[32,0],"end":[35,1]},"visibility":"public","docs":"A `Chain` sequences two buffers.\n\n`Chain` is an adapter that links two underlying buffers and provides a\ncontinuous view across both buffers. It is able to sequence either immutable\nbuffers ([`Buf`] values) or mutable buffers ([`BufMut`] values).\n\nThis struct is generally created by calling [`Buf::chain`]. Please see that\nfunction's documentation for more detail.\n\n# Examples\n\n```\nuse bytes::{Bytes, Buf};\n\nlet mut buf = (&b\"hello \"[..])\n    .chain(&b\"world\"[..]);\n\nlet full: Bytes = buf.copy_to_bytes(11);\nassert_eq!(full[..], b\"hello world\"[..]);\n```\n\n[`Buf::chain`]: trait.Buf.html#method.chain\n[`Buf`]: trait.Buf.html\n[`BufMut`]: trait.BufMut.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:220","a:1:8621-0:1233","a:1:3026-0:1233","a:1:3014-0:1233","a:1:8620-0:1233","a:1:3055-0:1233","b:1:2619-0:1233","b:1:2943-0:1233","b:1:3736-0:1233","b:1:2622-0:1233","b:1:2958-0:1233","b:1:2953-0:1233","b:1:2947-0:1233","0:1238","0:229","0:238","0:244"]}},"0:1282":{"id":"0:1282","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"RangeFull","id":"1:44449","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9591":{"id":"1:9591","crate_id":1,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9592"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"a:1:8620-0:374":{"id":"a:1:8620-0:374","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:846":{"id":"0:846","crate_id":0,"name":"chunk_mut","span":{"filename":"src/bytes_mut.rs","begin":[990,4],"end":[995,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:163":{"id":"0:163","crate_id":0,"name":"put_u128","span":{"filename":"src/buf/buf_mut.rs","begin":[623,4],"end":[625,5]},"visibility":"default","docs":"Writes an unsigned 128 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u128(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:857":{"id":"0:857","crate_id":0,"name":"as_mut","span":{"filename":"src/bytes_mut.rs","begin":[1048,4],"end":[1050,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2619-0:1255":{"id":"b:1:2619-0:1255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:2621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:872":{"id":"0:872","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1090,0],"end":[1094,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"1:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:873"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:901":{"id":"0:901","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1188,0],"end":[1195,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"kind":"resolved_path","inner":{"name":"Extend","id":"1:7711","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:903"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1152":{"id":"0:1152","crate_id":0,"name":"get_u8","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:7702":{"id":"1:7702","crate_id":1,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7703","1:7704","1:7705"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:1191":{"id":"0:1191","crate_id":0,"name":"get_i64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1267":{"id":"0:1267","crate_id":0,"name":"fmt","span":{"filename":"src/buf/take.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:9542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:9531","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3112":{"id":"1:3112","crate_id":1,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3114"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:1218":{"id":"0:1218","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:72":{"id":"0:72","crate_id":0,"name":"get_f32","span":{"filename":"src/buf/buf_impl.rs","begin":[734,4],"end":[736,5]},"visibility":"default","docs":"Gets an IEEE754 single-precision (4 bytes) floating point number from\n`self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x3F\\x99\\x99\\x9A hello\"[..];\nassert_eq!(1.2f32, buf.get_f32());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"f32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:8620-0:1242":{"id":"a:1:8620-0:1242","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:8620","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:972":{"id":"0:972","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1489,0],"end":[1493,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:973"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:621":{"id":"0:621","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[718,4],"end":[720,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:584":{"id":"0:584","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[611,0],"end":[615,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromIterator","id":"1:7698","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:48":{"id":"0:48","crate_id":0,"name":"has_remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[225,4],"end":[227,5]},"visibility":"default","docs":"Returns true if there are any more bytes to consume\n\nThis is equivalent to `self.remaining() != 0`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"a\"[..];\n\nassert!(buf.has_remaining());\n\nbuf.get_u8();\n\nassert!(!buf.has_remaining());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2953-0:1261":{"id":"b:1:2953-0:1261","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:2923","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2956","1:2957"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:810":{"id":"0:810","crate_id":0,"name":"is_empty","span":{"filename":"src/bytes_mut.rs","begin":[195,4],"end":[197,5]},"visibility":"public","docs":"Returns true if the `BytesMut` has a length of 0.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet b = BytesMut::with_capacity(64);\nassert!(b.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3014-0:1248":{"id":"a:1:3014-0:1248","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1206":{"id":"0:1206","crate_id":0,"name":"put_i16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12602":{"id":"1:12602","crate_id":1,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3026-0:1248":{"id":"a:1:3026-0:1248","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:540":{"id":"0:540","crate_id":0,"name":"copy_from_slice","span":{"filename":"src/bytes.rs","begin":[202,4],"end":[204,5]},"visibility":"public","docs":"Creates `Bytes` instance from slice, by copying it.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["data",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:258":{"id":"0:258","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/iter.rs","begin":[85,4],"end":[87,5]},"visibility":"public","docs":"Gets a reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::{Buf, Bytes};\n\nlet buf = Bytes::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\n\nassert_eq!(2, iter.get_ref().remaining());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:74":{"id":"0:74","crate_id":0,"name":"get_f64","span":{"filename":"src/buf/buf_impl.rs","begin":[776,4],"end":[778,5]},"visibility":"default","docs":"Gets an IEEE754 double-precision (8 bytes) floating point number from\n`self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33 hello\"[..];\nassert_eq!(1.2f64, buf.get_f64());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:920":{"id":"0:920","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1336,0],"end":[1336,32]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2943-0:1248":{"id":"b:1:2943-0:1248","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2946"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1154":{"id":"0:1154","crate_id":0,"name":"get_u16","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3014-0:1298":{"id":"a:1:3014-0:1298","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1242":{"id":"0:1242","crate_id":0,"name":"IntoIter","span":{"filename":"src/buf/iter.rs","begin":[26,0],"end":[28,1]},"visibility":"public","docs":"Iterator over the bytes contained by the buffer.\n\nThis struct is created by the [`iter`] method on [`Buf`].\n\n# Examples\n\nBasic usage:\n\n```\nuse bytes::Bytes;\n\nlet buf = Bytes::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\nassert_eq!(iter.next(), Some(b'b'));\nassert_eq!(iter.next(), Some(b'c'));\nassert_eq!(iter.next(), None);\n```\n\n[`iter`]: trait.Buf.html#method.iter\n[`Buf`]: trait.Buf.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:254","a:1:8621-0:1242","a:1:3026-0:1242","a:1:3014-0:1242","a:1:8620-0:1242","a:1:3055-0:1242","b:1:2619-0:1242","b:1:2943-0:1242","b:1:7706-0:1242","b:1:3736-0:1242","b:1:2622-0:1242","b:1:2958-0:1242","b:1:2953-0:1242","b:1:2947-0:1242","0:1245","0:260","0:265"]}},"0:234":{"id":"0:234","crate_id":0,"name":"advance","span":{"filename":"src/buf/chain.rs","begin":[149,4],"end":[165,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:566":{"id":"0:566","crate_id":0,"name":"Target","span":{"filename":"src/bytes.rs","begin":[563,4],"end":[563,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}},"generics":{"params":[],"where_predicates":[]}}},"0:649":{"id":"0:649","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[799,4],"end":[802,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["vec",{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7089","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:952":{"id":"0:952","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1435,0],"end":[1439,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:953"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:165":{"id":"0:165","crate_id":0,"name":"put_i128","span":{"filename":"src/buf/buf_mut.rs","begin":[667,4],"end":[669,5]},"visibility":"default","docs":"Writes a signed 128 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i128(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12668":{"id":"1:12668","crate_id":1,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"5:15813","self::pattern":"1:12239","str::splitn":"5:15818"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"1:47955","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3026-0:1233":{"id":"a:1:3026-0:1233","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1171":{"id":"0:1171","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:950":{"id":"0:950","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1429,0],"end":[1433,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:951"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12686":{"id":"1:12686","crate_id":1,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"prim@char":"5:15813","`DoubleEndedIterator`":"1:7746","str::match_indices":"5:15818","self::pattern":"1:12239"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"1:48001","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3081":{"id":"1:3081","crate_id":1,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3083","1:3084"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"a:1:3055-0:526":{"id":"a:1:3055-0:526","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3055","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:1:3736-0:1255":{"id":"b:1:3736-0:1255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3734","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:3738"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:591":{"id":"0:591","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[631,0],"end":[635,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"1:2701","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:592"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:71":{"id":"0:71","crate_id":0,"name":"get_int_le","span":{"filename":"src/buf/buf_impl.rs","begin":[713,4],"end":[715,5]},"visibility":"default","docs":"Gets a signed n-byte integer from `self` in little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x010203, buf.get_int_le(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:4703":{"id":"5:4703","crate_id":5,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:4704","5:4705","5:4706","5:4707"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:1155":{"id":"0:1155","crate_id":0,"name":"get_u16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:653":{"id":"0:653","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[837,4],"end":[839,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:150":{"id":"0:150","crate_id":0,"name":"put_i8","span":{"filename":"src/buf/buf_mut.rs","begin":[336,4],"end":[339,5]},"visibility":"default","docs":"Writes a signed 8 bit integer to `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i8(0x01);\nassert_eq!(buf, b\"\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:614":{"id":"0:614","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[699,0],"end":[703,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7089","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"items":["0:615"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:8620":{"id":"1:8620","crate_id":1,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:140":{"id":"0:140","crate_id":0,"name":"BufMut","span":{"filename":"src/buf/buf_mut.rs","begin":[29,0],"end":[949,1]},"visibility":"public","docs":"A trait for values that provide sequential write access to bytes.\n\nWrite bytes to a buffer\n\nA buffer stores bytes in memory such that write operations are infallible.\nThe underlying storage may or may not be in contiguous memory. A `BufMut`\nvalue is a cursor into the buffer. Writing to `BufMut` advances the cursor\nposition.\n\nThe simplest `BufMut` is a `Vec<u8>`.\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\n\nbuf.put(&b\"hello world\"[..]);\n\nassert_eq!(buf, b\"hello world\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["0:141","0:142","0:143","0:144","0:145","0:147","0:148","0:149","0:150","0:151","0:152","0:153","0:154","0:155","0:156","0:157","0:158","0:159","0:160","0:161","0:162","0:163","0:164","0:165","0:166","0:167","0:168","0:169","0:170","0:171","0:172","0:173","0:174","0:175","0:176","0:177"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":["0:180","0:182","0:184","0:190","0:238","0:286","0:843"]}},"0:197":{"id":"0:197","crate_id":0,"name":"put_bytes","span":{"filename":"src/buf/buf_mut.rs","begin":[1134,4],"end":[1137,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u8"}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:815":{"id":"0:815","crate_id":0,"name":"split_to","span":{"filename":"src/bytes_mut.rs","begin":[361,4],"end":[375,5]},"visibility":"public","docs":"Splits the buffer into two at the given index.\n\nAfterwards `self` contains elements `[at, len)`, and the returned `BytesMut`\ncontains elements `[0, at)`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut a = BytesMut::from(&b\"hello world\"[..]);\nlet mut b = a.split_to(5);\n\na[0] = b'!';\nb[0] = b'j';\n\nassert_eq!(&a[..], b\"!world\");\nassert_eq!(&b[..], b\"jello\");\n```\n\n# Panics\n\nPanics if `at > len`.","links":{},"attrs":["#[must_use = \"consider BytesMut::advance if you don't need the other half\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:336":{"id":"0:336","crate_id":0,"name":null,"span":{"filename":"src/buf/take.rs","begin":[132,0],"end":[155,1]},"visibility":{"restricted":{"parent":"0:316","path":"::buf::take"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["get_uint_le","get_i16","get_u16_le","take","chain","copy_to_bytes","has_remaining","get_f32_le","get_uint","get_u128","get_u64","get_f64_le","copy_to_slice","get_f64","get_u32","get_f32","get_u16","get_i8","get_u8","get_i128","get_u128_le","get_i128_le","reader","get_i64_le","get_i64","get_u64_le","get_i32_le","get_i32","chunks_vectored","get_u32_le","get_i16_le","get_int_le","get_int"],"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:338","0:339","0:340","0:341"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:224":{"id":"0:224","crate_id":0,"name":"first_ref","span":{"filename":"src/buf/chain.rs","begin":[55,4],"end":[57,5]},"visibility":"public","docs":"Gets a reference to the first underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet buf = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nassert_eq!(buf.first_ref()[..], b\"hello\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2616":{"id":"1:2616","crate_id":1,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2618"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:966":{"id":"0:966","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1471,0],"end":[1475,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:967"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1227":{"id":"0:1227","crate_id":0,"name":"put_i32","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3140":{"id":"1:3140","crate_id":1,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3142","1:3143"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:962":{"id":"0:962","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1459,0],"end":[1463,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:963"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:937":{"id":"0:937","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1388,4],"end":[1390,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:598":{"id":"0:598","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[651,0],"end":[655,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}},"items":["0:599"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:550":{"id":"0:550","crate_id":0,"name":"clear","span":{"filename":"src/bytes.rs","begin":[473,4],"end":[475,5]},"visibility":"public","docs":"Clears the buffer, removing all data.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut buf = Bytes::from(&b\"hello world\"[..]);\nbuf.clear();\nassert!(buf.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:156":{"id":"0:156","crate_id":0,"name":"put_u32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[469,4],"end":[471,5]},"visibility":"default","docs":"Writes an unsigned 32 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u32_le(0x0809A0A1);\nassert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2958-0:1255":{"id":"b:1:2958-0:1255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:2961","1:2962"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:47":{"id":"0:47","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[206,4],"end":[206,38]},"visibility":"default","docs":"Advance the internal cursor of the Buf\n\nThe next call to `chunk()` will return a slice starting `cnt` bytes\nfurther into the underlying buffer.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(buf.chunk(), &b\"hello world\"[..]);\n\nbuf.advance(6);\n\nassert_eq!(buf.chunk(), &b\"world\"[..]);\n```\n\n# Panics\n\nThis function **may** panic if `cnt > self.remaining()`.\n\n# Implementer notes\n\nIt is recommended for implementations of `advance` to panic if `cnt >\nself.remaining()`. If the implementation does not panic, the call must\nbehave as if `cnt == self.remaining()`.\n\nA call with `cnt == 0` should never panic and be a no-op.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:1:2619-0:1248":{"id":"b:1:2619-0:1248","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:61":{"id":"0:61","crate_id":0,"name":"get_u64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[513,4],"end":[515,5]},"visibility":"default","docs":"Gets an unsigned 64 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_u64_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:174":{"id":"0:174","crate_id":0,"name":"put_f64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[869,4],"end":[871,5]},"visibility":"default","docs":"Writes  an IEEE754 double-precision (8 bytes) floating point number to\n`self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f64_le(1.2f64);\nassert_eq!(buf, b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"f64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:589":{"id":"0:589","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[625,0],"end":[629,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:590"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:334":{"id":"0:334","crate_id":0,"name":"limit","span":{"filename":"src/buf/take.rs","begin":[99,4],"end":[101,5]},"visibility":"public","docs":"Returns the maximum number of bytes that can be read.\n\n# Note\n\nIf the inner `Buf` has fewer bytes than indicated by this method then\nthat is the actual number of available bytes.\n\n# Examples\n\n```rust\nuse bytes::Buf;\n\nlet mut buf = b\"hello world\".take(2);\n\nassert_eq!(2, buf.limit());\nassert_eq!(b'h', buf.get_u8());\nassert_eq!(1, buf.limit());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:631":{"id":"0:631","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[748,4],"end":[750,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:626":{"id":"0:626","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[735,0],"end":[739,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:627"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3171":{"id":"1:3171","crate_id":1,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3173"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"a:1:3014-0:1233":{"id":"a:1:3014-0:1233","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1238":{"id":"0:1238","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[31,9],"end":[31,14]},"visibility":{"restricted":{"parent":"0:199","path":"::buf::chain"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}},{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["0:1241"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:808":{"id":"0:808","crate_id":0,"name":"new","span":{"filename":"src/bytes_mut.rs","begin":[165,4],"end":[167,5]},"visibility":"public","docs":"Creates a new `BytesMut` with default capacity.\n\nResulting object has length 0 and unspecified capacity.\nThis function does not allocate.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut bytes = BytesMut::new();\n\nassert_eq!(0, bytes.len());\n\nbytes.reserve(2);\nbytes.put_slice(b\"xy\");\n\nassert_eq!(&b\"xy\"[..], &bytes[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:609":{"id":"0:609","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[682,4],"end":[684,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:149":{"id":"0:149","crate_id":0,"name":"put_u8","span":{"filename":"src/buf/buf_mut.rs","begin":[313,4],"end":[316,5]},"visibility":"default","docs":"Writes an unsigned 8 bit integer to `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u8(0x01);\nassert_eq!(buf, b\"\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1157":{"id":"0:1157","crate_id":0,"name":"get_i16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12613":{"id":"1:12613","crate_id":1,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"1:45964"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10168","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10168","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:338":{"id":"0:338","crate_id":0,"name":"remaining","span":{"filename":"src/buf/take.rs","begin":[133,4],"end":[135,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2943-0:1298":{"id":"b:1:2943-0:1298","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:2946"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2943-0:1233":{"id":"b:1:2943-0:1233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["1:2946"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3512":{"id":"1:3512","crate_id":1,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"0:1210":{"id":"0:1210","crate_id":0,"name":"put_i32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:152":{"id":"0:152","crate_id":0,"name":"put_u16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[381,4],"end":[383,5]},"visibility":"default","docs":"Writes an unsigned 16 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u16_le(0x0809);\nassert_eq!(buf, b\"\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:813":{"id":"0:813","crate_id":0,"name":"split_off","span":{"filename":"src/bytes_mut.rs","begin":[288,4],"end":[301,5]},"visibility":"public","docs":"Splits the bytes into two at the given index.\n\nAfterwards `self` contains elements `[0, at)`, and the returned\n`BytesMut` contains elements `[at, capacity)`.\n\nThis is an `O(1)` operation that just increases the reference count\nand sets a few indices.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut a = BytesMut::from(&b\"hello world\"[..]);\nlet mut b = a.split_off(5);\n\na[0] = b'j';\nb[0] = b'!';\n\nassert_eq!(&a[..], b\"jello\");\nassert_eq!(&b[..], b\"!world\");\n```\n\n# Panics\n\nPanics if `at > capacity`.","links":{},"attrs":["#[must_use = \"consider BytesMut::truncate if you don't need the other half\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:151":{"id":"0:151","crate_id":0,"name":"put_u16","span":{"filename":"src/buf/buf_mut.rs","begin":[359,4],"end":[361,5]},"visibility":"default","docs":"Writes an unsigned 16 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u16(0x0809);\nassert_eq!(buf, b\"\\x08\\x09\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3014-0:374":{"id":"a:1:3014-0:374","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:168":{"id":"0:168","crate_id":0,"name":"put_uint_le","span":{"filename":"src/buf/buf_mut.rs","begin":[733,4],"end":[735,5]},"visibility":"default","docs":"Writes an unsigned n-byte integer to `self` in the little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_uint_le(0x010203, 3);\nassert_eq!(buf, b\"\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u64"}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:597":{"id":"0:597","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[646,4],"end":[648,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:194":{"id":"0:194","crate_id":0,"name":"put","span":{"filename":"src/buf/buf_mut.rs","begin":[1108,4],"end":[1127,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"super::Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1209":{"id":"0:1209","crate_id":0,"name":"put_i32","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:841":{"id":"0:841","crate_id":0,"name":"advance","span":{"filename":"src/bytes_mut.rs","begin":[954,4],"end":[964,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:630":{"id":"0:630","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[747,0],"end":[751,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:631"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:7708":{"id":"1:7708","crate_id":1,"name":"Item","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"qualified_path","inner":{"name":"Item","self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:7894","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[232,0],"end":[243,1]},"visibility":{"restricted":{"parent":"0:199","path":"::buf::chain"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:7702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["0:247","0:248","0:249"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1223":{"id":"0:1223","crate_id":0,"name":"put_i16","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:233":{"id":"0:233","crate_id":0,"name":"chunk","span":{"filename":"src/buf/chain.rs","begin":[141,4],"end":[147,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2619-0:1298":{"id":"b:1:2619-0:1298","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:2621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:8621":{"id":"1:8621","crate_id":1,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"4:5444":{"id":"4:5444","crate_id":4,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"5:15818"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:786":{"id":"0:786","crate_id":0,"name":"BytesMut","span":{"filename":"src/bytes_mut.rs","begin":[60,0],"end":[65,1]},"visibility":"public","docs":"A unique reference to a contiguous slice of memory.\n\n`BytesMut` represents a unique view into a potentially shared memory region.\nGiven the uniqueness guarantee, owners of `BytesMut` handles are able to\nmutate the memory.\n\n`BytesMut` can be thought of as containing a `buf: Arc<Vec<u8>>`, an offset\ninto `buf`, a slice length, and a guarantee that no other `BytesMut` for the\nsame `buf` overlaps with its slice. That guarantee means that a write lock\nis not required.\n\n# Growth\n\n`BytesMut`'s `BufMut` implementation will implicitly grow its buffer as\nnecessary. However, explicitly reserving the required space up-front before\na series of inserts will be more efficient.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(64);\n\nbuf.put_u8(b'h');\nbuf.put_u8(b'e');\nbuf.put(&b\"llo\"[..]);\n\nassert_eq!(&buf[..], b\"hello\");\n\n// Freeze the buffer so that it can be shared\nlet a = buf.freeze();\n\n// This does not allocate, instead `b` points to the same memory.\nlet b = a.clone();\n\nassert_eq!(&a[..], b\"hello\");\nassert_eq!(&b[..], b\"hello\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:806","a:1:8621-0:786","a:1:8620-0:786","a:1:3055-0:786","b:1:2619-0:786","b:1:2943-0:786","b:1:3736-0:786","b:1:2622-0:786","b:1:2958-0:786","b:1:2953-0:786","b:1:2947-0:786","b:4:667-0:786","0:836","0:838","0:843","0:851","0:853","0:856","0:858","0:860","0:863","0:866","0:868","0:870","0:872","0:874","0:875","0:877","0:880","0:882","0:884","0:887","0:889","0:893","0:898","0:901","0:906","0:909","0:920","0:921","0:922","0:924","0:926","0:928","0:930","0:932","0:934","0:936","0:938","0:940","0:942","0:944","0:946","0:948","0:950","0:952","0:954","0:958","0:962","0:964","0:966","0:968","0:970","0:972","0:1009","0:1306","0:1310"]}},"1:2927":{"id":"1:2927","crate_id":1,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2929","1:2930"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:1217":{"id":"0:1217","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:853":{"id":"0:853","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1037,0],"end":[1044,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"1:3232","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:854","0:855"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:237":{"id":"0:237","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/chain.rs","begin":[174,4],"end":[190,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12269":{"id":"1:12269","crate_id":1,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"1:3128":{"id":"1:3128","crate_id":1,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3130"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:866":{"id":"0:866","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1072,0],"end":[1076,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:867"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:944":{"id":"0:944","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1411,0],"end":[1415,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7089","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"items":["0:945"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:579":{"id":"0:579","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[602,0],"end":[609,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:7702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"items":["0:581","0:582","0:583"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:232":{"id":"0:232","crate_id":0,"name":"remaining","span":{"filename":"src/buf/chain.rs","begin":[137,4],"end":[139,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:65":{"id":"0:65","crate_id":0,"name":"get_u128_le","span":{"filename":"src/buf/buf_impl.rs","begin":[593,4],"end":[595,5]},"visibility":"default","docs":"Gets an unsigned 128 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_u128_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:177":{"id":"0:177","crate_id":0,"name":"chain_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[943,4],"end":[948,5]},"visibility":"default","docs":"Creates an adapter which will chain this buffer with another.\n\nThe returned `BufMut` instance will first write to all bytes from\n`self`. Afterwards, it will write to `next`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut a = [0u8; 5];\nlet mut b = [0u8; 6];\n\nlet mut chain = (&mut a[..]).chain_mut(&mut b[..]);\n\nchain.put_slice(b\"hello world\");\n\nassert_eq!(&a[..], b\"hello\");\nassert_eq!(&b[..], b\" world\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["next",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2962":{"id":"1:2962","crate_id":1,"name":"try_from","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:46091","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2958-0:1233":{"id":"b:1:2958-0:1233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["1:2961","1:2962"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:963":{"id":"0:963","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1460,4],"end":[1462,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2947-0:1233":{"id":"b:1:2947-0:1233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["1:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:50":{"id":"0:50","crate_id":0,"name":"get_u8","span":{"filename":"src/buf/buf_impl.rs","begin":[287,4],"end":[292,5]},"visibility":"default","docs":"Gets an unsigned 8 bit integer from `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08 hello\"[..];\nassert_eq!(8, buf.get_u8());\n```\n\n# Panics\n\nThis function panics if there is no more remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:930":{"id":"0:930","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1369,0],"end":[1373,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:931"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:285":{"id":"0:285","crate_id":0,"name":"set_limit","span":{"filename":"src/buf/limit.rs","begin":[54,4],"end":[56,5]},"visibility":"public","docs":"Sets the maximum number of bytes that can be written.\n\n# Note\n\nIf the inner `BufMut` has fewer bytes than `lim` then that is the actual\nnumber of available bytes.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["lim",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1207":{"id":"0:1207","crate_id":0,"name":"put_u32","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:882":{"id":"0:882","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1121,0],"end":[1125,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2616","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:883"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:855":{"id":"0:855","crate_id":0,"name":"deref","span":{"filename":"src/bytes_mut.rs","begin":[1041,4],"end":[1043,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1192":{"id":"0:1192","crate_id":0,"name":"get_uint","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:877":{"id":"0:877","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1105,0],"end":[1113,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"1:9789","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:878"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12617":{"id":"1:12617","crate_id":1,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10168","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10168","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:85":{"id":"0:85","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1013,0],"end":[1015,1]},"visibility":{"restricted":{"parent":"0:7","path":"::buf::buf_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["get_uint_le","get_i16","get_u16_le","take","chain","copy_to_bytes","has_remaining","get_f32_le","get_uint","get_u128","get_u64","get_f64_le","copy_to_slice","get_f64","get_u32","get_f32","get_u16","get_i8","get_u8","get_i128","get_u128_le","get_i128_le","reader","get_i64_le","get_i64","get_u64_le","get_i32_le","get_i32","chunks_vectored","get_u32_le","get_i16_le","get_int_le","get_int"],"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"items":["0:1145","0:1146","0:1147","0:1149","0:1150","0:1151","0:1152","0:1153","0:1154","0:1155","0:1156","0:1157","0:1158","0:1159","0:1160","0:1161","0:1162","0:1163","0:1164","0:1165","0:1166","0:1167","0:1168","0:1169","0:1170"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:823":{"id":"0:823","crate_id":0,"name":"unsplit","span":{"filename":"src/bytes_mut.rs","begin":[724,4],"end":[733,5]},"visibility":"public","docs":"Absorbs a `BytesMut` that was previously split off.\n\nIf the two `BytesMut` objects were previously contiguous, i.e., if\n`other` was created by calling `split_off` on this `BytesMut`, then\nthis is an `O(1)` operation that just decreases a reference\ncount and sets a few indices. Otherwise this method degenerates to\n`self.extend_from_slice(other.as_ref())`.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::with_capacity(64);\nbuf.extend_from_slice(b\"aaabbbcccddd\");\n\nlet split = buf.split_off(6);\nassert_eq!(b\"aaabbb\", &buf[..]);\nassert_eq!(b\"cccddd\", &split[..]);\n\nbuf.unsplit(split);\nassert_eq!(b\"aaabbbcccddd\", &buf[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1175":{"id":"0:1175","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:951":{"id":"0:951","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1430,4],"end":[1432,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12264":{"id":"1:12264","crate_id":1,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:12266","1:12267","1:12268"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"1:12258","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:949":{"id":"0:949","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1424,4],"end":[1426,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12633":{"id":"1:12633","crate_id":1,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"5:15813","self::pattern":"1:12239"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:141":{"id":"0:141","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[59,4],"end":[59,37]},"visibility":"default","docs":"Returns the number of bytes that can be written from the current\nposition until the end of the buffer is reached.\n\nThis value is greater than or equal to the length of the slice returned\nby `chunk_mut()`.\n\nWriting to a `BufMut` may involve allocating more memory on the fly.\nImplementations may fail before reaching the number of bytes indicated\nby this method if they encounter an allocation failure.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 10];\nlet mut buf = &mut dst[..];\n\nlet original_remaining = buf.remaining_mut();\nbuf.put(&b\"hello\"[..]);\n\nassert_eq!(original_remaining - 5, buf.remaining_mut());\n```\n\n# Implementer notes\n\nImplementations of `remaining_mut` should ensure that the return value\ndoes not change unless a call is made to `advance_mut` or any other\nfunction that is documented to change the `BufMut`'s current position.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:242":{"id":"0:242","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/chain.rs","begin":[205,4],"end":[211,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9601":{"id":"1:9601","crate_id":1,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9602"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:1268":{"id":"0:1268","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"1:3317","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Range","id":"1:44465","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1269","0:1270"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12703":{"id":"1:12703","crate_id":1,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"5:15813","self::pattern":"1:12239"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2943-0:786":{"id":"b:1:2943-0:786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2946"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:312":{"id":"0:312","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[74,0],"end":[81,1]},"visibility":{"restricted":{"parent":"0:291","path":"::buf::reader"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["split","read_line","has_data_left","lines","read_until"],"trait":{"kind":"resolved_path","inner":{"name":"BufRead","id":"5:4710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:314","0:315"],"negative":false,"synthetic":false,"blanket_impl":null}},"4:5443":{"id":"4:5443","crate_id":4,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"5:15818"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:849":{"id":"0:849","crate_id":0,"name":"put_slice","span":{"filename":"src/bytes_mut.rs","begin":[1012,4],"end":[1014,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:870":{"id":"0:870","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1084,0],"end":[1088,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:871"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:259":{"id":"0:259","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/iter.rs","begin":[107,4],"end":[109,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BytesMut};\n\nlet buf = BytesMut::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\n\niter.get_mut().advance(1);\n\nassert_eq!(iter.next(), Some(b'c'));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2946":{"id":"1:2946","crate_id":1,"name":"into","span":null,"visibility":"public","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2920"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:851":{"id":"0:851","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1030,0],"end":[1035,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"1:2911","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:852"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1292":{"id":"0:1292","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"RangeTo","id":"1:44511","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1182":{"id":"0:1182","crate_id":0,"name":"get_i16","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1173":{"id":"0:1173","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"IoSlice","id":"5:11122","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}}}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:890":{"id":"0:890","crate_id":0,"name":"Item","span":{"filename":"src/bytes_mut.rs","begin":[1151,4],"end":[1151,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"primitive","inner":"u8"},"generics":{"params":[],"where_predicates":[]}}},"1:12693":{"id":"1:12693","crate_id":1,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\nassert_eq!(\" Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[inline]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:44":{"id":"0:44","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[133,4],"end":[133,29]},"visibility":"default","docs":"Returns a slice starting at the current position and of length between 0\nand `Buf::remaining()`. Note that this *can* return shorter slice (this allows\nnon-continuous internal representation).\n\nThis is a lower level function. Most operations are done with other\nfunctions.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(buf.chunk(), &b\"hello world\"[..]);\n\nbuf.advance(6);\n\nassert_eq!(buf.chunk(), &b\"world\"[..]);\n```\n\n# Implementer notes\n\nThis function should never panic. Once the end of the buffer is reached,\ni.e., `Buf::remaining` returns 0, calls to `chunk()` should return an\nempty slice.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:534":{"id":"0:534","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[109,0],"end":[506,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:535","0:537","0:538","0:539","0:540","0:541","0:546","0:547","0:548","0:549","0:550"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1285":{"id":"0:1285","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"RangeInclusive","id":"1:44534","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5753":{"id":"5:5753","crate_id":5,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5754","5:5755","5:5756","5:5757","5:5758","5:5759","5:5760","5:5761","5:5762","5:5763","5:5764","5:5765","5:5766","5:5767","5:5768","5:5769"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:1258":{"id":"0:1258","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[10,9],"end":[10,14]},"visibility":{"restricted":{"parent":"0:291","path":"::buf::reader"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:1260"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:878":{"id":"0:878","crate_id":0,"name":"hash","span":{"filename":"src/bytes_mut.rs","begin":[1106,4],"end":[1112,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"hash::Hasher","id":"1:9799","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3155":{"id":"1:3155","crate_id":1,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3157","1:3158"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"}}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:576":{"id":"0:576","crate_id":0,"name":"Item","span":{"filename":"src/bytes.rs","begin":[594,4],"end":[594,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"primitive","inner":"u8"},"generics":{"params":[],"where_predicates":[]}}},"4:5172":{"id":"4:5172","crate_id":4,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5174","4:5175"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"0:63":{"id":"0:63","crate_id":0,"name":"get_i64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[553,4],"end":[555,5]},"visibility":"default","docs":"Gets a signed 64 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_i64_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:935":{"id":"0:935","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1382,4],"end":[1384,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2624":{"id":"1:2624","crate_id":1,"name":"borrow_mut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:176":{"id":"0:176","crate_id":0,"name":"writer","span":{"filename":"src/buf/buf_mut.rs","begin":[916,4],"end":[921,5]},"visibility":"default","docs":"Creates an adaptor which implements the `Write` trait for `self`.\n\nThis function returns a new value which implements `Write` by adapting\nthe `Write` trait functions to the `BufMut` trait functions. Given that\n`BufMut` operations are infallible, none of the `Write` functions will\nreturn with `Err`.\n\n# Examples\n\n```\nuse bytes::BufMut;\nuse std::io::Write;\n\nlet mut buf = vec![].writer();\n\nlet num = buf.write(&b\"hello world\"[..]).unwrap();\nassert_eq!(11, num);\n\nlet buf = buf.into_inner();\n\nassert_eq!(*buf, b\"hello world\"[..]);\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:845":{"id":"0:845","crate_id":0,"name":"advance_mut","span":{"filename":"src/bytes_mut.rs","begin":[978,4],"end":[987,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[112,0],"end":[130,1]},"visibility":{"restricted":{"parent":"0:250","path":"::buf::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"provided_trait_methods":["reduce","take","partition","flat_map","all","enumerate","step_by","le","eq_by","cloned","ge","max_by","try_reduce","partition_in_place","cmp","flatten","eq","peekable","min","intersperse","zip","is_sorted","cycle","min_by_key","find","max","is_partitioned","fuse","skip_while","intersperse_with","collect","is_sorted_by","sum","count","min_by","find_map","try_fold","chain","inspect","take_while","for_each","last","gt","is_sorted_by_key","product","rev","position","try_find","lt","try_for_each","by_ref","size_hint","map_while","partial_cmp","filter","advance_by","ne","__iterator_get_unchecked","cmp_by","unzip","any","rposition","fold","try_collect","scan","filter_map","nth","skip","map","partial_cmp_by","copied","max_by_key"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:7894","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:262","0:263","0:264"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1193":{"id":"0:1193","crate_id":0,"name":"get_uint_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3023":{"id":"1:3023","crate_id":1,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"b:1:3736-0:786":{"id":"b:1:3736-0:786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3734","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3738"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2943-0:1261":{"id":"b:1:2943-0:1261","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2946"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3232":{"id":"1:3232","crate_id":1,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3233","1:3234"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:906":{"id":"0:906","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1197,0],"end":[1201,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromIterator","id":"1:7698","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:629":{"id":"0:629","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[742,4],"end":[744,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1007":{"id":"0:1007","crate_id":0,"name":null,"span":{"filename":"src/fmt/debug.rs","begin":[39,0],"end":[43,1]},"visibility":{"restricted":{"parent":"0:984","path":"::fmt::debug"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:9582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1008"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:228":{"id":"0:228","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/chain.rs","begin":[127,4],"end":[129,5]},"visibility":"public","docs":"Consumes this `Chain`, returning the underlying values.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet chain = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nlet (first, last) = chain.into_inner();\nassert_eq!(first[..], b\"hello\"[..]);\nassert_eq!(last[..], b\"world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"T"},{"kind":"generic","inner":"U"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2622-0:1298":{"id":"b:1:2622-0:1298","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2616","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:2624"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:185":{"id":"0:185","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1037,4],"end":[1039,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3108":{"id":"1:3108","crate_id":1,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3109","1:3110"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:871":{"id":"0:871","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1085,4],"end":[1087,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:36219","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:282":{"id":"0:282","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/limit.rs","begin":[27,4],"end":[29,5]},"visibility":"public","docs":"Gets a reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:92":{"id":"0:92","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1033,4],"end":[1035,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1277":{"id":"0:1277","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"1:44490","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:663":{"id":"4:663","crate_id":4,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:664","4:665","4:666"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:575":{"id":"0:575","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[593,0],"end":[600,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:7702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:576","0:577","0:578"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1308":{"id":"0:1308","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[36,0],"end":[36,26]},"visibility":{"restricted":{"parent":"0:1011","path":"::fmt::hex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UpperHex","id":"1:9597","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1309"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:257":{"id":"0:257","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/iter.rs","begin":[65,4],"end":[67,5]},"visibility":"public","docs":"Consumes this `IntoIter`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::{Buf, Bytes};\n\nlet buf = Bytes::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\n\nlet buf = iter.into_inner();\nassert_eq!(2, buf.remaining());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2943-0:526":{"id":"b:1:2943-0:526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2946"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:4685":{"id":"5:4685","crate_id":5,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:4686","5:4687","5:4689","5:4690","5:4691","5:4692","5:4693","5:4702"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:13420":{"id":"1:13420","crate_id":1,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:13421","1:13422","1:13423","1:13424","1:13425","1:13426","1:13427"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:622":{"id":"0:622","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[723,0],"end":[727,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"String","id":"4:7626","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:623"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:567":{"id":"0:567","crate_id":0,"name":"deref","span":{"filename":"src/bytes.rs","begin":[566,4],"end":[568,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3736-0:374":{"id":"b:1:3736-0:374","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3734","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3738"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:889":{"id":"0:889","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1150,0],"end":[1157,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:7702","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:890","0:891","0:892"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1284":{"id":"0:1284","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"1:2621":{"id":"1:2621","crate_id":1,"name":"borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:820":{"id":"0:820","crate_id":0,"name":"reserve","span":{"filename":"src/bytes_mut.rs","begin":[540,4],"end":[551,5]},"visibility":"public","docs":"Reserves capacity for at least `additional` more bytes to be inserted\ninto the given `BytesMut`.\n\nMore than `additional` bytes may be reserved in order to avoid frequent\nreallocations. A call to `reserve` may result in an allocation.\n\nBefore allocating new buffer space, the function will attempt to reclaim\nspace in the existing buffer. If the current handle references a small\nview in the original buffer and all other handles have been dropped,\nand the requested capacity is less than or equal to the existing\nbuffer's capacity, then the current view will be copied to the front of\nthe buffer and the handle will take ownership of the full buffer.\n\n# Examples\n\nIn the following example, a new buffer is allocated.\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::from(&b\"hello\"[..]);\nbuf.reserve(64);\nassert!(buf.capacity() >= 69);\n```\n\nIn the following example, the existing buffer is reclaimed.\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(128);\nbuf.put(&[0; 64][..]);\n\nlet ptr = buf.as_ptr();\nlet other = buf.split();\n\nassert!(buf.is_empty());\nassert_eq!(buf.capacity(), 64);\n\ndrop(other);\nbuf.reserve(128);\n\nassert_eq!(buf.capacity(), 128);\nassert_eq!(buf.as_ptr(), ptr);\n```\n\n# Panics\n\nPanics if the new capacity overflows `usize`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["additional",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2911":{"id":"1:2911","crate_id":1,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2913"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[],"implementors":[]}},"1:2923":{"id":"1:2923","crate_id":1,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2925","1:2926"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:1290":{"id":"0:1290","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"RangeTo","id":"1:44511","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:225":{"id":"0:225","crate_id":0,"name":"first_mut","span":{"filename":"src/buf/chain.rs","begin":[74,4],"end":[76,5]},"visibility":"public","docs":"Gets a mutable reference to the first underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nbuf.first_mut().advance(1);\n\nlet full = buf.copy_to_bytes(9);\nassert_eq!(full, b\"elloworld\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:262":{"id":"0:262","crate_id":0,"name":"Item","span":{"filename":"src/buf/iter.rs","begin":[113,4],"end":[113,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"primitive","inner":"u8"},"generics":{"params":[],"where_predicates":[]}}},"0:1255":{"id":"0:1255","crate_id":0,"name":"Reader","span":{"filename":"src/buf/reader.rs","begin":[11,0],"end":[13,1]},"visibility":"public","docs":"A `Buf` adapter which implements `io::Read` for the inner value.\n\nThis struct is generally created by calling `reader()` on `Buf`. See\ndocumentation of [`reader()`](trait.Buf.html#method.reader) for more\ndetails.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:304","a:1:8621-0:1255","a:1:3026-0:1255","a:1:3014-0:1255","a:1:8620-0:1255","a:1:3055-0:1255","b:1:2619-0:1255","b:1:2943-0:1255","b:1:3736-0:1255","b:1:2622-0:1255","b:1:2958-0:1255","b:1:2953-0:1255","b:1:2947-0:1255","0:1258","0:309","0:312"]}},"b:1:2619-0:1233":{"id":"b:1:2619-0:1233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["1:2621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1165":{"id":"0:1165","crate_id":0,"name":"get_i64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:887":{"id":"0:887","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1144,0],"end":[1148,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:888"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3321":{"id":"1:3321","crate_id":1,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3323"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"1:3317","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:898":{"id":"0:898","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1168,0],"end":[1186,1]},"visibility":{"restricted":{"parent":"0:685","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"kind":"resolved_path","inner":{"name":"Extend","id":"1:7711","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:899"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2849":{"id":"1:2849","crate_id":1,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:2848","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:903":{"id":"0:903","crate_id":0,"name":"extend","span":{"filename":"src/bytes_mut.rs","begin":[1189,4],"end":[1194,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:7702","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2953-0:526":{"id":"b:1:2953-0:526","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:2927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:2923","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2956","1:2957"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:12965":{"id":"1:12965","crate_id":1,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12966","1:12967","1:12968"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"1:12603":{"id":"1:12603","crate_id":1,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:670":{"id":"4:670","crate_id":4,"name":"to_owned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:187":{"id":"0:187","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1048,4],"end":[1052,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2947-0:1242":{"id":"b:1:2947-0:1242","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2949"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:602":{"id":"0:602","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[663,0],"end":[667,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:603"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2943-0:1255":{"id":"b:1:2943-0:1255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null}}},{"name":"U","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:2920","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:2917","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:2946"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6870":{"id":"5:6870","crate_id":5,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6871"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:43":{"id":"0:43","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[102,4],"end":[102,33]},"visibility":"default","docs":"Returns the number of bytes between the current position and the end of\nthe buffer.\n\nThis value is greater than or equal to the length of the slice returned\nby `chunk()`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(buf.remaining(), 11);\n\nbuf.get_u8();\n\nassert_eq!(buf.remaining(), 10);\n```\n\n# Implementer notes\n\nImplementations of `remaining` should ensure that the return value does\nnot change unless a call is made to `advance` or any other function that\nis documented to change the `Buf`'s current position.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1286":{"id":"0:1286","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IndexMut","id":"1:3321","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeInclusive","id":"1:44534","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1287"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:585":{"id":"0:585","crate_id":0,"name":"from_iter","span":{"filename":"src/bytes.rs","begin":[612,4],"end":[614,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["into_iter",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:7702","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12689":{"id":"1:12689","crate_id":1,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[inline]","#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:248":{"id":"0:248","crate_id":0,"name":"IntoIter","span":{"filename":"src/buf/chain.rs","begin":[238,4],"end":[238,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"0:811":{"id":"0:811","crate_id":0,"name":"capacity","span":{"filename":"src/bytes_mut.rs","begin":[210,4],"end":[212,5]},"visibility":"public","docs":"Returns the number of bytes the `BytesMut` can hold without reallocating.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet b = BytesMut::with_capacity(64);\nassert_eq!(b.capacity(), 64);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:306":{"id":"0:306","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/reader.rs","begin":[33,4],"end":[35,5]},"visibility":"public","docs":"Gets a reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::Buf;\n\nlet buf = b\"hello world\".reader();\n\nassert_eq!(b\"hello world\", buf.get_ref());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12674":{"id":"1:12674","crate_id":1,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:45964","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"bound_predicate":{"ty":{"kind":"qualified_path","inner":{"name":"Searcher","self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1145":{"id":"0:1145","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5801":{"id":"5:5801","crate_id":5,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5802"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"5:10525","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementors":[]}},"0:634":{"id":"0:634","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[759,0],"end":[766,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2665","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:637"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:608":{"id":"0:608","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[681,0],"end":[685,1]},"visibility":{"restricted":{"parent":"0:458","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","ge","lt","gt"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2712","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"primitive","inner":"str"},"items":["0:609"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:378":{"id":"0:378","crate_id":0,"name":"from_raw_parts_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[44,4],"end":[48,5]},"visibility":"public","docs":"Create a `&mut UninitSlice` from a pointer and a length.\n\n# Safety\n\nThe caller must ensure that `ptr` references a valid memory region owned\nby the caller representing a byte slice for the duration of `'a`.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\n\nlet bytes = b\"hello world\".to_vec();\nlet ptr = bytes.as_ptr() as *mut _;\nlet len = bytes.len();\n\nlet slice = unsafe { UninitSlice::from_raw_parts_mut(ptr, len) };\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["ptr",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:145":{"id":"0:145","crate_id":0,"name":"put","span":{"filename":"src/buf/buf_mut.rs","begin":[193,4],"end":[215,5]},"visibility":"default","docs":"Transfer bytes into `self` from `src` and advance the cursor by the\nnumber of bytes written.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\n\nbuf.put_u8(b'h');\nbuf.put(&b\"ello\"[..]);\nbuf.put(&b\" world\"[..]);\n\nassert_eq!(buf, b\"hello world\");\n```\n\n# Panics\n\nPanics if `self` does not have enough capacity to contain `src`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"super::Buf","id":"0:42","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3019","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1230":{"id":"0:1230","crate_id":0,"name":"put_u64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:807":{"id":"0:807","crate_id":0,"name":"with_capacity","span":{"filename":"src/bytes_mut.rs","begin":[141,4],"end":[143,5]},"visibility":"public","docs":"Creates a new `BytesMut` with the specified capacity.\n\nThe returned `BytesMut` will be able to hold at least `capacity` bytes\nwithout reallocating.\n\nIt is important to note that this function does not specify the length\nof the returned `BytesMut`, but only the capacity.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut bytes = BytesMut::with_capacity(64);\n\n// `bytes` contains no data, even though there is capacity\nassert_eq!(bytes.len(), 0);\n\nbytes.put(&b\"hello world\"[..]);\n\nassert_eq!(&bytes[..], b\"hello world\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["capacity",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:854":{"id":"0:854","crate_id":0,"name":"Target","span":{"filename":"src/bytes_mut.rs","begin":[1038,4],"end":[1038,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}},"generics":{"params":[],"where_predicates":[]}}},"0:1150":{"id":"0:1150","crate_id":0,"name":"has_remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12623":{"id":"1:12623","crate_id":1,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"5:15818"},"attrs":["#[inline]","#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12683":{"id":"1:12683","crate_id":1,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"`DoubleEndedIterator`":"1:7746","str::rmatch_indices":"5:15818","prim@char":"5:15813","self::pattern":"1:12239"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]","#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"1:47983","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12249","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:332":{"id":"0:332","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/take.rs","begin":[56,4],"end":[58,5]},"visibility":"public","docs":"Gets a reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::Buf;\n\nlet buf = b\"hello world\".take(2);\n\nassert_eq!(11, buf.get_ref().remaining());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:142":{"id":"0:142","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[100,4],"end":[100,49]},"visibility":"default","docs":"Advance the internal cursor of the BufMut\n\nThe next call to `chunk_mut` will return a slice starting `cnt` bytes\nfurther into the underlying buffer.\n\nThis function is unsafe because there is no guarantee that the bytes\nbeing advanced past have been initialized.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = Vec::with_capacity(16);\n\n// Write some data\nbuf.chunk_mut()[0..2].copy_from_slice(b\"he\");\nunsafe { buf.advance_mut(2) };\n\n// write more bytes\nbuf.chunk_mut()[0..3].copy_from_slice(b\"llo\");\n\nunsafe { buf.advance_mut(3); }\n\nassert_eq!(5, buf.len());\nassert_eq!(buf, b\"hello\");\n```\n\n# Panics\n\nThis function **may** panic if `cnt > self.remaining_mut()`.\n\n# Implementer notes\n\nIt is recommended for implementations of `advance_mut` to panic if\n`cnt > self.remaining_mut()`. If the implementation does not panic,\nthe call must behave as if `cnt == self.remaining_mut()`.\n\nA call with `cnt == 0` should never panic and be a no-op.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}},"1:7894":{"id":"1:7894","crate_id":1,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7895","1:7896","1:7897","1:7898","1:7900","1:7903","1:7904","1:7905","1:7906","1:7908","1:7910","1:7911","1:7913","1:7916","1:7923","1:7925","1:7928","1:7929","1:7930","1:7932","1:7934","1:7937","1:7938","1:7939","1:7943","1:7946","1:7947","1:7948","1:7950","1:7951","1:7953","1:7956","1:7966","1:7981","1:7983","1:7987","1:7996","1:7999","1:8001","1:8004","1:8011","1:8018","1:8025","1:8034","1:8044","1:8051","1:8058","1:8059","1:8060","1:8072","1:8079","1:8091","1:8098","1:8099","1:8104","1:8107","1:8110","1:8111","1:8113","1:8115","1:8118","1:8121","1:8124","1:8127","1:8130","1:8133","1:8135","1:8137","1:8139","1:8141","1:8143","1:8144","1:8152"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementors":[]}},"0:1149":{"id":"0:1149","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3014-0:1255":{"id":"a:1:3014-0:1255","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null}}}],"where_predicates":[{"bound_predicate":{"ty":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3014","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:607":{"id":"0:607","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[676,4],"end":[678,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"paths":{"12:2309":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"5:10994":{"crate_id":5,"path":["std","io","error","Custom"],"kind":"struct"},"1:4523":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:44845":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:47436":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:11186":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:76":{"crate_id":1,"path":["core","usize"],"kind":"module"},"17:9133":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"5:9727":{"crate_id":5,"path":["std","sys_common","rwlock","StaticRWLockReadGuard"],"kind":"struct"},"1:9725":{"crate_id":1,"path":["core","hash"],"kind":"module"},"1:9269":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"16:7971":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:13386":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"6:1517":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:10671":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"4:6764":{"crate_id":4,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:3096":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:47244":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"16:6518":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"7:0":{"crate_id":7,"path":["unwind"],"kind":"module"},"16:6691":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"16:5421":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"5:5766":{"crate_id":5,"path":["std","os","unix","fs","MetadataExt","ctime"],"kind":"foreign_type"},"16:7467":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"5:5975":{"crate_id":5,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:44974":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"16:5753":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:13865":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:47205":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"5:1522":{"crate_id":5,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"9:0":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"16:4890":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"6:1567":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:13172":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:50269":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"6:4034":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:9593":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"0:854":{"crate_id":0,"path":["bytes","Target"],"kind":"typedef"},"5:10613":{"crate_id":5,"path":["std","backtrace","RawFrame"],"kind":"enum"},"16:6014":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:7481":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"5:4664":{"crate_id":5,"path":["bytes","Target"],"kind":"typedef"},"18:720":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"5:3345":{"crate_id":5,"path":["std","fs","read_link"],"kind":"function"},"1:47791":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:11259":{"crate_id":1,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"1:47214":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:9849":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"6:6852":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:51833":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"5:10846":{"crate_id":5,"path":["std","fs","Metadata"],"kind":"struct"},"0:1269":{"crate_id":0,"path":["bytes","Output"],"kind":"typedef"},"17:8929":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"6:6106":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:23748":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"17:10656":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:13685":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:13282":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:10584":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"5:15025":{"crate_id":5,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"16:4386":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"12:937":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:14":{"crate_id":1,"path":["core","write"],"kind":"macro"},"17:607":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"5:11430":{"crate_id":5,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"6:5381":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:45964":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"0:526":{"crate_id":0,"path":["bytes","Bytes"],"kind":"struct"},"5:15830":{"crate_id":5,"path":["std","u64"],"kind":"primitive"},"5:11548":{"crate_id":5,"path":["std","path","State"],"kind":"enum"},"4:7441":{"crate_id":4,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:5580":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:3256":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:7711":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"5:6801":{"crate_id":5,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"16:5522":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:13497":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:48141":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"16:2816":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"16:5384":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:9204":{"crate_id":1,"path":["core","sync","atomic","fence"],"kind":"function"},"5:3638":{"crate_id":5,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:12972":{"crate_id":1,"path":["bytes","Future"],"kind":"typedef"},"1:1882":{"crate_id":1,"path":["bytes","Target"],"kind":"typedef"},"16:4762":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:48442":{"crate_id":1,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"17:11970":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:11628":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:10477":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"4:3366":{"crate_id":4,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:9799":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:46365":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:10635":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"4:1640":{"crate_id":4,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:10337":{"crate_id":1,"path":["bytes","Item"],"kind":"typedef"},"4:1986":{"crate_id":4,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:12783":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:45442":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:49398":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:44534":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:13221":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:47833":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"5:15038":{"crate_id":5,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"12:2005":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"5:15150":{"crate_id":5,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"5:3212":{"crate_id":5,"path":["std","fs","read_to_string"],"kind":"function"},"1:7966":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","partition_in_place"],"kind":"foreign_type"},"17:9245":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:46151":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"17:12467":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:2712":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:23150":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"4:1070":{"crate_id":4,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"4:5588":{"crate_id":4,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"5:4470":{"crate_id":5,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:2993":{"crate_id":1,"path":["core","default","Default","default"],"kind":"foreign_type"},"1:50237":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"16:3264":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"5:10919":{"crate_id":5,"path":["std","io","cursor","Cursor"],"kind":"struct"},"16:6166":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:2080":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"5:11393":{"crate_id":5,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"6:4440":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"5:12450":{"crate_id":5,"path":["std","sys","unix","condvar","Condvar"],"kind":"struct"},"17:12671":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:12031":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"5:6097":{"crate_id":5,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:44580":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"17:13506":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:23844":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:46925":{"crate_id":1,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"16:5407":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"16:5927":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"16:7146":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:9839":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"5:1085":{"crate_id":5,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"17:4008":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:46955":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"17:4157":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"18:677":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"4:6284":{"crate_id":4,"path":["alloc","task","Wake"],"kind":"trait"},"1:4982":{"crate_id":1,"path":["bytes","Target"],"kind":"typedef"},"0:566":{"crate_id":0,"path":["bytes","Target"],"kind":"typedef"},"16:3488":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"17:12507":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"0:582":{"crate_id":0,"path":["bytes","IntoIter"],"kind":"typedef"},"5:4691":{"crate_id":5,"path":["std","io","Write","write_all"],"kind":"foreign_type"},"16:6126":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"4:1459":{"crate_id":4,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"6:5227":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:1739":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:47029":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"18:152":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:54407":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"5:7439":{"crate_id":5,"path":["std","path","Path"],"kind":"struct"},"1:45171":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"5:5747":{"crate_id":5,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"5:3357":{"crate_id":5,"path":["std","fs","read_dir"],"kind":"function"},"1:36219":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"6:4122":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"5:4044":{"crate_id":5,"path":["std","io","error","Error"],"kind":"struct"},"5:10734":{"crate_id":5,"path":["std","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:12537":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"5:986":{"crate_id":5,"path":["bytes","Owned"],"kind":"typedef"},"1:0":{"crate_id":1,"path":["core"],"kind":"module"},"17:13733":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:50771":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:11482":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"16:3041":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"5:1335":{"crate_id":5,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:9264":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"5:10598":{"crate_id":5,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"5:10326":{"crate_id":5,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"6:4040":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:46437":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"5:12089":{"crate_id":5,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"5:974":{"crate_id":5,"path":["std","ascii","AsciiExt","to_ascii_lowercase"],"kind":"foreign_type"},"4:2797":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:12795":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"5:1508":{"crate_id":5,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:10611":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:4645":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"5:9280":{"crate_id":5,"path":["bytes","Target"],"kind":"typedef"},"1:6219":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"6:6165":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"4:891":{"crate_id":4,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:12685":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"9:686":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"1:49684":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"5:8901":{"crate_id":5,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:2956":{"crate_id":1,"path":["bytes","Error"],"kind":"typedef"},"5:936":{"crate_id":5,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:3145":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:4":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:4519":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:12179":{"crate_id":1,"path":["core","str","traits","FromStr","Err"],"kind":"foreign_type"},"1:7996":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","fold"],"kind":"foreign_type"},"5:4687":{"crate_id":5,"path":["std","io","Write","write_vectored"],"kind":"foreign_type"},"17:9799":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:11822":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"6:582":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"5:2953":{"crate_id":5,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"16:2866":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:3108":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"17:12262":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:13146":{"crate_id":1,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"9:469":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"5:11315":{"crate_id":5,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:2927":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:12971":{"crate_id":1,"path":["bytes","Output"],"kind":"typedef"},"1:49707":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"17:681":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:45271":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"5:10851":{"crate_id":5,"path":["std","fs","ReadDir"],"kind":"struct"},"5:2987":{"crate_id":5,"path":["bytes","Target"],"kind":"typedef"},"4:5226":{"crate_id":4,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"5:1317":{"crate_id":5,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"5:11321":{"crate_id":5,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"16:4641":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"9:157":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"4:4055":{"crate_id":4,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"16:4350":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"16:6636":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"5:12038":{"crate_id":5,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"17:12247":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:12124":{"crate_id":1,"path":["bytes","Output"],"kind":"typedef"},"17:11499":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"5:2349":{"crate_id":5,"path":["std","env","ArgsOs"],"kind":"struct"},"1:10438":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:48132":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"5:13938":{"crate_id":5,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"1:3091":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"5:2594":{"crate_id":5,"path":["std","error","Report"],"kind":"struct"},"1:48350":{"crate_id":1,"path":["bytes","Searcher"],"kind":"typedef"},"1:2849":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"5:11452":{"crate_id":5,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"6:4154":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"12:761":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:9971":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"0:1248":{"crate_id":0,"path":["bytes","buf","Limit"],"kind":"struct"},"5:1382":{"crate_id":5,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:3124":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:10477":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:7904":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","nth"],"kind":"foreign_type"},"16:4734":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"18:667":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:46160":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"4:6929":{"crate_id":4,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"16:7119":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:4132":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:6002":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"5:1027":{"crate_id":5,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:12118":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:9551":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:11686":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"6:1724":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"5:2347":{"crate_id":5,"path":["std","env","Args"],"kind":"struct"},"1:2635":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"5:5797":{"crate_id":5,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"16:7514":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"5:11996":{"crate_id":5,"path":["std","process","ExitStatus"],"kind":"struct"},"17:11640":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:48561":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:13296":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"4:6951":{"crate_id":4,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"4:1478":{"crate_id":4,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"5:685":{"crate_id":5,"path":["std","thread","local","fast","Key"],"kind":"struct"},"1:4528":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"4:5127":{"crate_id":4,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"6:4022":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"16:6464":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:9789":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"5:11571":{"crate_id":5,"path":["std","path","PrefixComponent"],"kind":"struct"},"5:8740":{"crate_id":5,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"4:3390":{"crate_id":4,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:5173":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"6:6127":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:9599":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:46014":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"12:2032":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"17:9296":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"16:5975":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"5:4991":{"crate_id":5,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"1:51871":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:7981":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","is_partitioned"],"kind":"foreign_type"},"1:8853":{"crate_id":1,"path":["bytes","Target"],"kind":"typedef"},"17:12010":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:45467":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:50740":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"14:0":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"16:3365":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:23125":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"11:0":{"crate_id":11,"path":["adler"],"kind":"module"},"1:7082":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"16:2912":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"6:1685":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"4:1426":{"crate_id":4,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"5:1377":{"crate_id":5,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:9729":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"6:1617":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:45251":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:49515":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"0:577":{"crate_id":0,"path":["bytes","IntoIter"],"kind":"typedef"},"18:636":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:47646":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:48213":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"5:13605":{"crate_id":5,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:11458":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"4:505":{"crate_id":4,"path":["bytes","Target"],"kind":"typedef"},"17:11337":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"5:15818":{"crate_id":5,"path":["std","str"],"kind":"primitive"},"6:4051":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"5:15819":{"crate_id":5,"path":["std","tuple"],"kind":"primitive"},"4:1416":{"crate_id":4,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"4:6441":{"crate_id":4,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"4:4123":{"crate_id":4,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"16:3091":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"4:3500":{"crate_id":4,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:12395":{"crate_id":1,"path":["bytes","Searcher"],"kind":"typedef"},"6:4066":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:48612":{"crate_id":1,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"6:5075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:51886":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"17:9210":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"9:749":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"1:9801":{"crate_id":1,"path":["core","hash","Hasher","write"],"kind":"foreign_type"},"5:4468":{"crate_id":5,"path":["std","io","stdio","Stderr"],"kind":"struct"},"16:7738":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"6:3929":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:11767":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"4:7246":{"crate_id":4,"path":["bytes","Target"],"kind":"typedef"},"1:45160":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"16:4230":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:48116":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:44935":{"crate_id":1,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"17:9162":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:45142":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:10468":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:22830":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"6:6787":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"5:8836":{"crate_id":5,"path":["std","sync","once","Once"],"kind":"struct"},"5:6470":{"crate_id":5,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"4:1302":{"crate_id":4,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"16:7195":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"14:250":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"5:2784":{"crate_id":5,"path":["bytes","Target"],"kind":"typedef"},"1:46509":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"16:5632":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:7999":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","reduce"],"kind":"foreign_type"},"1:3457":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:10926":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:50693":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:3734":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"16:3392":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"17:8902":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"5:15814":{"crate_id":5,"path":["std","unit"],"kind":"primitive"},"5:11588":{"crate_id":5,"path":["std","path","Component"],"kind":"enum"},"5:3104":{"crate_id":5,"path":["bytes","Owned"],"kind":"typedef"},"17:13780":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:12373":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:10001":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:3299":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"17:10975":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"6:3801":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"4:4241":{"crate_id":4,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:2961":{"crate_id":1,"path":["bytes","Error"],"kind":"typedef"},"17:12946":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"6:5304":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"16:5360":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:48557":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:49467":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"6:4220":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:47684":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:23812":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:10801":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"5:8393":{"crate_id":5,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"17:12756":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:44490":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"5:12144":{"crate_id":5,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:7772":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator","len"],"kind":"foreign_type"},"1:21815":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"5:4633":{"crate_id":5,"path":["std","io","Read","read_to_end"],"kind":"foreign_type"},"5:14883":{"crate_id":5,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"16:2733":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:3245":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"6:3972":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:4889":{"crate_id":1,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:50089":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:10657":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"16:7928":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:23226":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"5:798":{"crate_id":5,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"6:4103":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:12307":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"4:1968":{"crate_id":4,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"5:6870":{"crate_id":5,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"5:11134":{"crate_id":5,"path":["std","io","SeekFrom"],"kind":"enum"},"1:48408":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"6:6019":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:10144":{"crate_id":1,"path":["bytes","Output"],"kind":"typedef"},"5:9824":{"crate_id":5,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"16:5273":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"5:7253":{"crate_id":5,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:11030":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"6:6828":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:13318":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"5:15821":{"crate_id":5,"path":["std","f64"],"kind":"primitive"},"0:1298":{"crate_id":0,"path":["bytes","buf","Writer"],"kind":"struct"},"5:12097":{"crate_id":5,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:12917":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:21798":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"12:429":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:7911":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","intersperse_with"],"kind":"foreign_type"},"1:2920":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:49579":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"5:5983":{"crate_id":5,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"18:620":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"5:15172":{"crate_id":5,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"5:4712":{"crate_id":5,"path":["std","io","BufRead","consume"],"kind":"foreign_type"},"5:2470":{"crate_id":5,"path":["std","error","from","StringError"],"kind":"struct"},"5:11382":{"crate_id":5,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"5:6214":{"crate_id":5,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:47803":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"5:14660":{"crate_id":5,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:24216":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:9769":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:3743":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"16:4955":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"5:2286":{"crate_id":5,"path":["std","env","Vars"],"kind":"struct"},"6:6075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:46031":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:49602":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:49621":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:10095":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"6:665":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"5:15813":{"crate_id":5,"path":["std","char"],"kind":"primitive"},"6:597":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:7913":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","map"],"kind":"foreign_type"},"9:1056":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:10348":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"5:14888":{"crate_id":5,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"6:4211":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"5:3331":{"crate_id":5,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:8270":{"crate_id":1,"path":["core","lazy","Lazy"],"kind":"struct"},"17:12521":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:44904":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"16:3195":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"16:6357":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"5:12260":{"crate_id":5,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:299":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:10515":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"6:1591":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:2033":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"1:3476":{"crate_id":1,"path":["core","ops","try_trait","FromResidual","from_residual"],"kind":"foreign_type"},"5:2636":{"crate_id":5,"path":["std","error","Indented"],"kind":"struct"},"4:69":{"crate_id":4,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:13609":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"16:7477":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:45180":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:10543":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"6:1712":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"5:5731":{"crate_id":5,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:4654":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:2701":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"5:2057":{"crate_id":5,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"1:48037":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"12:968":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:1311":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"6:5142":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"5:9492":{"crate_id":5,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:9790":{"crate_id":1,"path":["core","hash","Hash","hash"],"kind":"foreign_type"},"17:11001":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:2616":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:45110":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:54476":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:5155":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:1832":{"crate_id":1,"path":["core","mem"],"kind":"module"},"1:9113":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"5:14546":{"crate_id":5,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"16:6949":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"17:10211":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"5:8471":{"crate_id":5,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"5:5376":{"crate_id":5,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"15:269":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:2484":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:11588":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:47013":{"crate_id":1,"path":["core","fmt","FlagV1"],"kind":"enum"},"16:547":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:13349":{"crate_id":1,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"16:7823":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"5:14870":{"crate_id":5,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"5:13316":{"crate_id":5,"path":["std","sys","unix","mutex","ReentrantMutex"],"kind":"struct"},"6:5896":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"4:7424":{"crate_id":4,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:45100":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:47754":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:45119":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"5:5996":{"crate_id":5,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"18:866":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:47736":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"5:9681":{"crate_id":5,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"5:8457":{"crate_id":5,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"5:2074":{"crate_id":5,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:23620":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:12327":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"4:1487":{"crate_id":4,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:7951":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","collect"],"kind":"foreign_type"},"17:13963":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:8167":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:51670":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:11519":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"0:262":{"crate_id":0,"path":["bytes","Item"],"kind":"typedef"},"5:4629":{"crate_id":5,"path":["std","io","Read","read"],"kind":"foreign_type"},"1:50614":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"5:9553":{"crate_id":5,"path":["std","sys_common","condvar","Condvar"],"kind":"struct"},"17:13453":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"16:3800":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"6:6799":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:48265":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"16:7549":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:10071":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"6:1703":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:11696":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"16:4671":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:23294":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"16:4506":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"12:2025":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"5:4711":{"crate_id":5,"path":["std","io","BufRead","fill_buf"],"kind":"foreign_type"},"17:10179":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:50531":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"4:669":{"crate_id":4,"path":["bytes","Owned"],"kind":"typedef"},"17:13465":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:11604":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:2543":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"5:4646":{"crate_id":5,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:44465":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:12965":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"5:12220":{"crate_id":5,"path":["std","time","Instant"],"kind":"struct"},"16:6238":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:13205":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:3262":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"5:5665":{"crate_id":5,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:2094":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"5:973":{"crate_id":5,"path":["std","ascii","AsciiExt","to_ascii_uppercase"],"kind":"foreign_type"},"17:13799":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:12469":{"crate_id":1,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"6:3890":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:9005":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"4:3032":{"crate_id":4,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:12040":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"6:576":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"4:672":{"crate_id":4,"path":["alloc","borrow","Cow"],"kind":"enum"},"16:5672":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:10643":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:45189":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"4:663":{"crate_id":4,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:4968":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"5:6696":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:2512":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:51709":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:13912":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"6:90":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"17:12610":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:55722":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"4:3921":{"crate_id":4,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:3102":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:13477":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"16:3287":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"16:4790":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"5:11179":{"crate_id":5,"path":["std","io","Split"],"kind":"struct"},"1:4318":{"crate_id":1,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"17:10106":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"1:45487":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"5:12034":{"crate_id":5,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"1:45230":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"6:589":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"16:5488":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"16:2889":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"5:11479":{"crate_id":5,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"5:976":{"crate_id":5,"path":["std","ascii","AsciiExt","make_ascii_uppercase"],"kind":"foreign_type"},"1:46329":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"16:6391":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"13:232":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"5:7114":{"crate_id":5,"path":["std","panic","always_abort"],"kind":"function"},"1:46091":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:49653":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"6:1731":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"16:6999":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:21783":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:7956":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","partition"],"kind":"foreign_type"},"17:13598":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"12:556":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:9719":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"16:5346":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:9582":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"16:6176":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"5:11326":{"crate_id":5,"path":["std","net","Shutdown"],"kind":"enum"},"5:970":{"crate_id":5,"path":["std","ascii","AsciiExt"],"kind":"trait"},"5:3372":{"crate_id":5,"path":["std","io"],"kind":"module"},"5:9058":{"crate_id":5,"path":["bytes","Target"],"kind":"typedef"},"16:7342":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"12:853":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"6:4310":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:3549":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"5:11219":{"crate_id":5,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"1:50374":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"5:10903":{"crate_id":5,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"16:6964":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"17:13041":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:510":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"5:14597":{"crate_id":5,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"16:0":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:3469":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:13933":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:12741":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"16:4614":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"4:1110":{"crate_id":4,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"5:5762":{"crate_id":5,"path":["std","os","unix","fs","MetadataExt","atime"],"kind":"foreign_type"},"5:2288":{"crate_id":5,"path":["std","env","VarsOs"],"kind":"struct"},"4:7517":{"crate_id":4,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:9186":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:13488":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:23876":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"17:9440":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"14:216":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:48549":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"9:927":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:11378":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"5:12240":{"crate_id":5,"path":["std","time","SystemTime"],"kind":"struct"},"16:5231":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"6:509":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"5:11497":{"crate_id":5,"path":["std","path","Prefix"],"kind":"enum"},"17:13637":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"5:9732":{"crate_id":5,"path":["std","sys_common","rwlock","StaticRWLockWriteGuard"],"kind":"struct"},"5:14046":{"crate_id":5,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"6:4239":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"5:10547":{"crate_id":5,"path":["std","thread","Builder"],"kind":"struct"},"1:50293":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"5:12111":{"crate_id":5,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:50137":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:51796":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:47197":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"5:12049":{"crate_id":5,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"1:49914":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"16:6413":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"5:11647":{"crate_id":5,"path":["std","path","Ancestors"],"kind":"struct"},"5:8994":{"crate_id":5,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:3495":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"6:630":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:23178":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:11254":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:3014":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"2:0":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:7251":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"17:10571":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"5:13677":{"crate_id":5,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"18:650":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:12598":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:47901":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:49860":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"16:5561":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"6:4430":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:1950":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"17:11358":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"16:7264":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"1:12950":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"12:354":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"12:2009":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"18:660":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"0:581":{"crate_id":0,"path":["bytes","Item"],"kind":"typedef"},"18:790":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"0:1284":{"crate_id":0,"path":["bytes","Output"],"kind":"typedef"},"1:3032":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"5:4710":{"crate_id":5,"path":["std","io","BufRead"],"kind":"trait"},"6:5938":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:11738":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"5:2878":{"crate_id":5,"path":["bytes","Owned"],"kind":"typedef"},"4:7586":{"crate_id":4,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"16:3118":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"5:11631":{"crate_id":5,"path":["std","path","Components"],"kind":"struct"},"5:3204":{"crate_id":5,"path":["std","fs","File"],"kind":"struct"},"5:15824":{"crate_id":5,"path":["std","i32"],"kind":"primitive"},"16:6718":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:12262":{"crate_id":1,"path":["core","str","pattern","Searcher","next_match"],"kind":"foreign_type"},"17:10516":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:4142":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"6:4286":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:12315":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"16:4704":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"6:5112":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"5:7397":{"crate_id":5,"path":["bytes","Target"],"kind":"typedef"},"17:9886":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"12:1667":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"0:374":{"crate_id":0,"path":["bytes","buf","UninitSlice"],"kind":"struct"},"14:47":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"12:949":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"12:2018":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"1:44613":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"4:1325":{"crate_id":4,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"5:9610":{"crate_id":5,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"5:4685":{"crate_id":5,"path":["std","io","Write"],"kind":"trait"},"1:12264":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"12:747":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:10224":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"16:4995":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"4:7449":{"crate_id":4,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:8143":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","is_sorted"],"kind":"foreign_type"},"5:1371":{"crate_id":5,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"6:5136":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"4:7721":{"crate_id":4,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:51307":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"12:2323":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"16:5456":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"5:8177":{"crate_id":5,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"16:3429":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"1:8174":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"5:13586":{"crate_id":5,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:13772":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"16:6252":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:22041":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"5:5739":{"crate_id":5,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"16:5815":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"6:622":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:12464":{"crate_id":1,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"5:9605":{"crate_id":5,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"9:234":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"5:10877":{"crate_id":5,"path":["std","fs","FileType"],"kind":"struct"},"17:9689":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"16:4823":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:3128":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:9065":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"12:784":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:49726":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"5:2062":{"crate_id":5,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"12:2045":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"6:3979":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"6:5292":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:3023":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"9:776":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"15:0":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:4600":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"16:4448":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"5:14584":{"crate_id":5,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"6:6057":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:47851":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"0:248":{"crate_id":0,"path":["bytes","IntoIter"],"kind":"typedef"},"5:10619":{"crate_id":5,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"5:5945":{"crate_id":5,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"6:6564":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"5:6962":{"crate_id":5,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"4:874":{"crate_id":4,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"17:11434":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"5:9598":{"crate_id":5,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"6:5237":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:13041":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:2613":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"5:10669":{"crate_id":5,"path":["std","ffi","c_str","CString"],"kind":"struct"},"17:10028":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"14:11":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"5:1047":{"crate_id":5,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:12632":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"18:885":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"4:3061":{"crate_id":4,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"5:8731":{"crate_id":5,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"5:14643":{"crate_id":5,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"9:1020":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"6:4339":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:11572":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"5:1386":{"crate_id":5,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"5:15826":{"crate_id":5,"path":["std","i128"],"kind":"primitive"},"5:2079":{"crate_id":5,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:22834":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:45997":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"6:4012":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:8620":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"16:7073":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:51776":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"16:7378":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:2537":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:48807":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"16:3172":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"5:6874":{"crate_id":5,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:46221":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:13331":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"4:5189":{"crate_id":4,"path":["bytes","Output"],"kind":"typedef"},"4:4665":{"crate_id":4,"path":["alloc","rc","Rc"],"kind":"struct"},"17:12568":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"6:541":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:7843":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:49419":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:294":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"0:1279":{"crate_id":0,"path":["bytes","Output"],"kind":"typedef"},"17:9404":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:23908":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"12:1144":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"6:5509":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"5:6708":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"1:47440":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:44851":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:11406":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"4:4783":{"crate_id":4,"path":["bytes","Target"],"kind":"typedef"},"19:0":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:9532":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"5:3206":{"crate_id":5,"path":["std","fs","DirEntry"],"kind":"struct"},"1:7946":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","flatten"],"kind":"foreign_type"},"1:45014":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:11726":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"1:2663":{"crate_id":1,"path":["core","cmp"],"kind":"module"},"5:15307":{"crate_id":5,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"0:6":{"crate_id":0,"path":["bytes","buf"],"kind":"module"},"6:6864":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"6:5949":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"16:3522":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"16:6605":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"9:27":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"1:46257":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"5:2053":{"crate_id":5,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"0:1274":{"crate_id":0,"path":["bytes","Output"],"kind":"typedef"},"1:13076":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:3179":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:48394":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:48001":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"5:977":{"crate_id":5,"path":["std","ascii","AsciiExt","make_ascii_lowercase"],"kind":"foreign_type"},"5:11387":{"crate_id":5,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"4:7433":{"crate_id":4,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"5:10911":{"crate_id":5,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"5:10412":{"crate_id":5,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"6:3911":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:22035":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"5:10692":{"crate_id":5,"path":["std","ffi","c_str","NulError"],"kind":"struct"},"1:46143":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"6:517":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"16:5505":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"5:7284":{"crate_id":5,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:4166":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:11847":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"6:1522":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:48599":{"crate_id":1,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"17:12343":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"8:0":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:10353":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"4:6694":{"crate_id":4,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:3317":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"5:15811":{"crate_id":5,"path":["std","bool"],"kind":"primitive"},"5:4350":{"crate_id":5,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"1:44860":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"17:10377":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"4:0":{"crate_id":4,"path":["alloc"],"kind":"module"},"17:9476":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"16:6682":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"16:5766":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:23109":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:6996":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:13119":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"4:5195":{"crate_id":4,"path":["bytes","Output"],"kind":"typedef"},"1:47819":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:13924":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:11277":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"5:3549":{"crate_id":5,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:70":{"crate_id":1,"path":["core","isize"],"kind":"module"},"4:5176":{"crate_id":4,"path":["alloc","slice","Join"],"kind":"trait"},"1:48107":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:4661":{"crate_id":1,"path":["bytes","Target"],"kind":"typedef"},"9:692":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"6:523":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:11328":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"4:1729":{"crate_id":4,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"4:7487":{"crate_id":4,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"6:4059":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:44449":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:13574":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:13054":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"4:7158":{"crate_id":4,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"5:2956":{"crate_id":5,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"0:895":{"crate_id":0,"path":["bytes","Item"],"kind":"typedef"},"5:4686":{"crate_id":5,"path":["std","io","Write","write"],"kind":"foreign_type"},"0:576":{"crate_id":0,"path":["bytes","Item"],"kind":"typedef"},"1:45199":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"5:8116":{"crate_id":5,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"16:6110":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"7:38":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"0:1261":{"crate_id":0,"path":["bytes","buf","Take"],"kind":"struct"},"1:23716":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"5:14794":{"crate_id":5,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"16:5314":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:11678":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:21770":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:9528":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"16:6087":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:11835":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:12552":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"5:12105":{"crate_id":5,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:13898":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"16:7185":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"5:11156":{"crate_id":5,"path":["std","io","Chain"],"kind":"struct"},"17:12095":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:10912":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"5:10989":{"crate_id":5,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:12195":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"5:8986":{"crate_id":5,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:7895":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","Item"],"kind":"foreign_type"},"5:6798":{"crate_id":5,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"4:6542":{"crate_id":4,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"4:3377":{"crate_id":4,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"17:11199":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:23556":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:13420":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:48236":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"16:7042":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"5:1201":{"crate_id":5,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"6:1558":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:4180":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:8291":{"crate_id":1,"path":["bytes","Target"],"kind":"typedef"},"5:14940":{"crate_id":5,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"6:5200":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:8954":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:13313":{"crate_id":1,"path":["core","task","ready","Ready"],"kind":"struct"},"12:463":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"4:7620":{"crate_id":4,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"17:10448":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"5:1390":{"crate_id":5,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:44557":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:47955":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:13819":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:54515":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"4:5417":{"crate_id":4,"path":["bytes","Owned"],"kind":"typedef"},"6:1535":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"18:820":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"5:15779":{"crate_id":5,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"1:9589":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"5:11281":{"crate_id":5,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"1:51418":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"5:7505":{"crate_id":5,"path":["std","path","Display"],"kind":"struct"},"1:4607":{"crate_id":1,"path":["bytes","Target"],"kind":"typedef"},"17:9759":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"16:6591":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"4:7599":{"crate_id":4,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"17:9332":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"5:4250":{"crate_id":5,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"1:44958":{"crate_id":1,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"6:1695":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"0:0":{"crate_id":0,"path":["bytes"],"kind":"module"},"4:2801":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"6:5316":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:11653":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"5:1304":{"crate_id":5,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:37460":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:14000":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"12:469":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"5:5801":{"crate_id":5,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:50453":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"16:7226":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"5:15563":{"crate_id":5,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"16:6032":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"6:5166":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"5:14857":{"crate_id":5,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"5:2050":{"crate_id":5,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"5:15832":{"crate_id":5,"path":["std","isize"],"kind":"primitive"},"5:10628":{"crate_id":5,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"12:0":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"6:4324":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:4030":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"6:4194":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"5:15834":{"crate_id":5,"path":["std","reference"],"kind":"primitive"},"4:6587":{"crate_id":4,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"4:3512":{"crate_id":4,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"5:11113":{"crate_id":5,"path":["std","io","util","Sink"],"kind":"struct"},"1:49548":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"4:1450":{"crate_id":4,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:10827":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"12:877":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"6:614":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"5:1327":{"crate_id":5,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:3140":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:22193":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:50957":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:13062":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:2665":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"5:4683":{"crate_id":5,"path":["bytes","Target"],"kind":"typedef"},"6:3831":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"16:7024":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"5:15285":{"crate_id":5,"path":["std","alloc","System"],"kind":"struct"},"6:4446":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"13:0":{"crate_id":13,"path":["std_detect"],"kind":"module"},"5:7786":{"crate_id":5,"path":["std","process","Termination"],"kind":"trait"},"1:47883":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"12:1235":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"5:6334":{"crate_id":5,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:10558":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:44401":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:9531":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"17:13582":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:10304":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"5:10751":{"crate_id":5,"path":["std","ffi","c_str","IntoStringError"],"kind":"struct"},"0:786":{"crate_id":0,"path":["bytes","BytesMut"],"kind":"struct"},"6:6839":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"5:15829":{"crate_id":5,"path":["std","u32"],"kind":"primitive"},"1:3086":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"6:5373":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"5:11246":{"crate_id":5,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"1:47664":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"5:10660":{"crate_id":5,"path":["std","error","Chain"],"kind":"struct"},"5:7675":{"crate_id":5,"path":["std","process","Command"],"kind":"struct"},"1:22735":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"6:4264":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:50010":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"5:14280":{"crate_id":5,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"5:14277":{"crate_id":5,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"16:4535":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:31309":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"12:377":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:3175":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"6:4452":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"18:801":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"6:4270":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"5:11173":{"crate_id":5,"path":["std","io","Bytes"],"kind":"struct"},"17:9280":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"5:8771":{"crate_id":5,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"5:4382":{"crate_id":5,"path":["std","io","stdio","Stdin"],"kind":"struct"},"4:5206":{"crate_id":4,"path":["bytes","Owned"],"kind":"typedef"},"1:45090":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:7903":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","advance_by"],"kind":"foreign_type"},"4:5986":{"crate_id":4,"path":["alloc","sync","Arc"],"kind":"struct"},"5:11222":{"crate_id":5,"path":["std","net","ip","IpAddr"],"kind":"enum"},"5:10707":{"crate_id":5,"path":["std","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"6:3896":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"6:3999":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"12:1855":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"9:996":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:51623":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"5:11216":{"crate_id":5,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"5:15210":{"crate_id":5,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:48150":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"5:1540":{"crate_id":5,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:9591":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"16:6072":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:7894":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"4:5397":{"crate_id":4,"path":["bytes","Output"],"kind":"typedef"},"1:3081":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"6:4297":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:46901":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"16:3604":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:9088":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:12073":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:3026":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"17:8849":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"6:5474":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:10128":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"12:1159":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"16:7250":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:3112":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"5:4628":{"crate_id":5,"path":["std","io","Read"],"kind":"trait"},"1:51767":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"12:1180":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:7771":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"4:3054":{"crate_id":4,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:50041":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"16:6021":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"4:4882":{"crate_id":4,"path":["alloc","rc","Weak"],"kind":"struct"},"4:2795":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:10988":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:36240":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"16:7870":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:3259":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"12:396":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"5:15231":{"crate_id":5,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"17:10403":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:55701":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:7665":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"5:9191":{"crate_id":5,"path":["std","lazy","SyncOnceCell"],"kind":"struct"},"17:12221":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"18:704":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:9961":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"6:4348":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"16:3320":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:10159":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:11932":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"17:11304":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:12725":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"14:56":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"5:11166":{"crate_id":5,"path":["std","io","Take"],"kind":"struct"},"1:48357":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:22999":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:3232":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:13842":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:7923":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","filter"],"kind":"foreign_type"},"17:10253":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:10814":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:12408":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"16:4304":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:23588":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:13532":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:10788":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:10864":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"5:11192":{"crate_id":5,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"5:6799":{"crate_id":5,"path":["std","os","linux","process","ChildExt","pidfd"],"kind":"foreign_type"},"12:2013":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:47745":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"4:1392":{"crate_id":4,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:12456":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"6:4360":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"16:5330":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"6:4316":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"5:9694":{"crate_id":5,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:49746":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:46668":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:10938":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:10489":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:9830":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"6:3917":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"16:7894":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"5:11375":{"crate_id":5,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:3477":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:10887":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"5:10863":{"crate_id":5,"path":["std","fs","Permissions"],"kind":"struct"},"17:13520":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"0:1233":{"crate_id":0,"path":["bytes","buf","Chain"],"kind":"struct"},"6:5219":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"5:11252":{"crate_id":5,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"17:11082":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"6:1660":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"5:9054":{"crate_id":5,"path":["bytes","Target"],"kind":"typedef"},"1:47586":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"5:14778":{"crate_id":5,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"4:5401":{"crate_id":4,"path":["bytes","Output"],"kind":"typedef"},"1:23780":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"5:4042":{"crate_id":5,"path":["std","io","error","Result"],"kind":"typedef"},"17:12385":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"16:7158":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"12:2331":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"12:181":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"5:9250":{"crate_id":5,"path":["std","lazy","SyncLazy"],"kind":"struct"},"1:3388":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:13446":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"5:14614":{"crate_id":5,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:7896":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","next"],"kind":"foreign_type"},"1:46083":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:10396":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:54489":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:51787":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:31274":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"16:5433":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:46022":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:8232":{"crate_id":1,"path":["core","lazy","OnceCell"],"kind":"struct"},"1:2670":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"5:7963":{"crate_id":5,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"4:1314":{"crate_id":4,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:47776":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:12442":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"16:6491":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"4:7493":{"crate_id":4,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"6:5352":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"16:5736":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"5:1419":{"crate_id":5,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"5:14800":{"crate_id":5,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"12:2303":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:48553":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"16:2968":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:48733":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"6:6685":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:7916":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","for_each"],"kind":"foreign_type"},"5:4425":{"crate_id":5,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:10331":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"5:15820":{"crate_id":5,"path":["std","f32"],"kind":"primitive"},"1:2923":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"17:542":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"5:8464":{"crate_id":5,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"4:7133":{"crate_id":4,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"5:11186":{"crate_id":5,"path":["std","io","Lines"],"kind":"struct"},"1:21838":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:9835":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:46185":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"6:1671":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"12:976":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:23070":{"crate_id":1,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"16:7236":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:48373":{"crate_id":1,"path":["bytes","Searcher"],"kind":"typedef"},"4:6121":{"crate_id":4,"path":["bytes","Target"],"kind":"typedef"},"16:3218":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"1:9118":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:23163":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"6:5920":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:12431":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:13590":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"5:627":{"crate_id":5,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:37397":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"16:7205":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"4:5212":{"crate_id":4,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"5:5787":{"crate_id":5,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:7709":{"crate_id":1,"path":["bytes","IntoIter"],"kind":"typedef"},"4:4188":{"crate_id":4,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"6:561":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"16:2794":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"1:11980":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"5:5753":{"crate_id":5,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:48282":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"19:117":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"1:48577":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"5:4716":{"crate_id":5,"path":["std","io","BufRead","read_line"],"kind":"foreign_type"},"18:729":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"15:248":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"12:1762":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"4:6006":{"crate_id":4,"path":["alloc","sync","Weak"],"kind":"struct"},"5:15828":{"crate_id":5,"path":["std","u16"],"kind":"primitive"},"5:7647":{"crate_id":5,"path":["std","process","ChildStdout"],"kind":"struct"},"17:12182":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:47809":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"12:1100":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"16:5717":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"16:2945":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:11920":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:49492":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"4:7501":{"crate_id":4,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"16:6807":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:10420":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"5:14571":{"crate_id":5,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"6:5929":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:10081":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"4:4763":{"crate_id":4,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:7910":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","intersperse"],"kind":"foreign_type"},"17:9943":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:48792":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"5:15816":{"crate_id":5,"path":["std","array"],"kind":"primitive"},"5:5967":{"crate_id":5,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:46661":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"5:9737":{"crate_id":5,"path":["std","sys_common","rwlock","MovableRWLock"],"kind":"struct"},"4:6098":{"crate_id":4,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"6:6816":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"5:11249":{"crate_id":5,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"1:3265":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"5:8371":{"crate_id":5,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"6:3844":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:6768":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:5956":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"15:230":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"9:963":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"11:54":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"6:6042":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"5:6710":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:9792":{"crate_id":1,"path":["core","hash","Hash","hash_slice"],"kind":"foreign_type"},"4:5742":{"crate_id":4,"path":["alloc","string","ToString"],"kind":"trait"},"16:7279":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:12582":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:11665":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"5:15827":{"crate_id":5,"path":["std","u8"],"kind":"primitive"},"17:10041":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"18:849":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"5:7544":{"crate_id":5,"path":["bytes","IntoIter"],"kind":"typedef"},"6:4005":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:3962":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:54463":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:4922":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"17:13154":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"6:535":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:11996":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"5:12360":{"crate_id":5,"path":["std","sys","unix","args","Args"],"kind":"struct"},"17:9659":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:13554":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"6:0":{"crate_id":6,"path":["libc"],"kind":"module"},"5:11301":{"crate_id":5,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"18:754":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"16:3939":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"16:5707":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"16:6577":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"4:2805":{"crate_id":4,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:13540":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:9601":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:12982":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"17:0":{"crate_id":17,"path":["object"],"kind":"module"},"1:12239":{"crate_id":1,"path":["core","str","pattern"],"kind":"module"},"5:1361":{"crate_id":5,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"5:8853":{"crate_id":5,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"17:13547":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"5:6706":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"1:23092":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"17:12142":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"6:4280":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:45240":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"5:12740":{"crate_id":5,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"16:2754":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"5:12011":{"crate_id":5,"path":["std","process","ExitStatusError"],"kind":"struct"},"1:50064":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:44873":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:3019":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:46675":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"6:4330":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:21":{"crate_id":1,"path":["core","format_args"],"kind":"macro"},"11:46":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"17:12028":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"6:4256":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"5:6568":{"crate_id":5,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"6:5359":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"5:15795":{"crate_id":5,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:47655":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:7943":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","flat_map"],"kind":"foreign_type"},"6:5365":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"5:11983":{"crate_id":5,"path":["std","process","Output"],"kind":"struct"},"16:7786":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"17:12287":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"6:5257":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:44672":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:309":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"5:11426":{"crate_id":5,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:11962":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"16:7856":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:44981":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"4:5806":{"crate_id":4,"path":["alloc","string","Drain"],"kind":"struct"},"12:1253":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:9603":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"12:1688":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"4:1496":{"crate_id":4,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"5:10656":{"crate_id":5,"path":["std","error","private","Internal"],"kind":"struct"},"5:3726":{"crate_id":5,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"5:722":{"crate_id":5,"path":["std","thread","local","os","Key"],"kind":"struct"},"1:10629":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:12263":{"crate_id":1,"path":["core","str","pattern","Searcher","next_reject"],"kind":"foreign_type"},"1:49891":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:10117":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:7983":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","try_fold"],"kind":"foreign_type"},"1:3483":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:7754":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator","rfold"],"kind":"foreign_type"},"4:2027":{"crate_id":4,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"4:2527":{"crate_id":4,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:9368":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"5:15831":{"crate_id":5,"path":["std","u128"],"kind":"primitive"},"18:694":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"5:6800":{"crate_id":5,"path":["std","os","linux","process","ChildExt","take_pidfd"],"kind":"foreign_type"},"1:3133":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"17:9592":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"1:46910":{"crate_id":1,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"6:3807":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"12:774":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"4:5183":{"crate_id":4,"path":["bytes","Output"],"kind":"typedef"},"1:5015":{"crate_id":1,"path":["core","iter"],"kind":"module"},"17:10317":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"16:6731":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"5:14105":{"crate_id":5,"path":["std","sys","unix","rwlock","RWLock"],"kind":"struct"},"17:10458":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:47710":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"5:14274":{"crate_id":5,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"16:7360":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"16:5029":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"6:1625":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:48819":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"17:10200":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"18:136":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:11779":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:7947":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","fuse"],"kind":"foreign_type"},"17:11809":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"4:7637":{"crate_id":4,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:10236":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:12261":{"crate_id":1,"path":["core","str","pattern","Searcher","next"],"kind":"foreign_type"},"5:15822":{"crate_id":5,"path":["std","i8"],"kind":"primitive"},"16:6620":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"4:800":{"crate_id":4,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"18:644":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"4:3039":{"crate_id":4,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"1:2314":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:13377":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:10343":{"crate_id":1,"path":["bytes","Item"],"kind":"typedef"},"5:12131":{"crate_id":5,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:10344":{"crate_id":1,"path":["bytes","IntoIter"],"kind":"typedef"},"18:782":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"5:11106":{"crate_id":5,"path":["std","io","util","Empty"],"kind":"struct"},"12:2039":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:47637":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"4:7089":{"crate_id":4,"path":["alloc","vec","Vec"],"kind":"struct"},"6:3944":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"6:4368":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"16:2843":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:3150":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:13252":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"5:10337":{"crate_id":5,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:23204":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:13746":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"12:812":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"5:15294":{"crate_id":5,"path":["std","panicking","Hook"],"kind":"enum"},"1:48330":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"6:5104":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:13240":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:5971":{"crate_id":1,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"16:7392":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"5:5732":{"crate_id":5,"path":["std","os","unix","fs","FileExt","read_at"],"kind":"foreign_type"},"1:23279":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"16:6219":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:12771":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"17:10407":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"5:14136":{"crate_id":5,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"1:48251":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:22928":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"5:0":{"crate_id":5,"path":["std"],"kind":"module"},"17:9574":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:45151":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:2848":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:2314":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"5:1348":{"crate_id":5,"path":["std","collections","hash","map","Values"],"kind":"struct"},"5:15784":{"crate_id":5,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:48087":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"18:739":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"18:857":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"6:163":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"6:3820":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"4:3588":{"crate_id":4,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"5:5659":{"crate_id":5,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:47723":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:10588":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:4454":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"5:4635":{"crate_id":5,"path":["std","io","Read","read_exact"],"kind":"foreign_type"},"1:8659":{"crate_id":1,"path":["bytes","Target"],"kind":"typedef"},"0:896":{"crate_id":0,"path":["bytes","IntoIter"],"kind":"typedef"},"16:6780":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"16:5855":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"5:15833":{"crate_id":5,"path":["std","usize"],"kind":"primitive"},"5:7543":{"crate_id":5,"path":["bytes","Item"],"kind":"typedef"},"5:1413":{"crate_id":5,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"16:6101":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:45208":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:46473":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"5:914":{"crate_id":5,"path":["std","thread","Packet"],"kind":"struct"},"4:315":{"crate_id":4,"path":["alloc","boxed","Box"],"kind":"struct"},"17:12712":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"6:6151":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:9597":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"9:41":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"17:10502":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"16:7333":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"6:4354":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"5:5809":{"crate_id":5,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:45059":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:23186":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:7928":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","enumerate"],"kind":"foreign_type"},"16:6208":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"5:2068":{"crate_id":5,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:12234":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"5:10537":{"crate_id":5,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"5:4601":{"crate_id":5,"path":["std","io","Guard"],"kind":"struct"},"0:247":{"crate_id":0,"path":["bytes","Item"],"kind":"typedef"},"1:45039":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"5:5025":{"crate_id":5,"path":["bytes","Iter"],"kind":"typedef"},"1:54437":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:12168":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"17:10160":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"16:6424":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"10:0":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"0:890":{"crate_id":0,"path":["bytes","Item"],"kind":"typedef"},"1:44914":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:51807":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:11026":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"5:15815":{"crate_id":5,"path":["std","pointer"],"kind":"primitive"},"1:13000":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"6:3952":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"6:4399":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"16:5996":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:9600":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"1:7708":{"crate_id":1,"path":["bytes","Item"],"kind":"typedef"},"1:8170":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:13620":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"18:0":{"crate_id":18,"path":["memchr"],"kind":"module"},"5:10652":{"crate_id":5,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:2636":{"crate_id":1,"path":["core","clone","Clone","clone"],"kind":"foreign_type"},"17:12645":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:46682":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:9585":{"crate_id":1,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"1:46943":{"crate_id":1,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"1:50112":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"6:6810":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"5:8904":{"crate_id":5,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"4:1505":{"crate_id":4,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:11616":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:7908":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","zip"],"kind":"foreign_type"},"1:46401":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"6:4407":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:11957":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:13163":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:13402":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:11750":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"6:6172":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:44927":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:3549":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"16:2991":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"5:8782":{"crate_id":5,"path":["bytes","Target"],"kind":"typedef"},"16:6744":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"16:6554":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:12178":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"4:4173":{"crate_id":4,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"5:14630":{"crate_id":5,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"16:4852":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"5:5501":{"crate_id":5,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:13356":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:12208":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:46065":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"5:7783":{"crate_id":5,"path":["std","process","exit"],"kind":"function"},"16:5790":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:45072":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:1236":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"4:2796":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"5:10552":{"crate_id":5,"path":["std","thread","ThreadId"],"kind":"struct"},"1:7932":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","take_while"],"kind":"foreign_type"},"17:13370":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"6:3991":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"16:7420":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"12:2315":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"6:5331":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"5:1044":{"crate_id":5,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"16:7453":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"4:1288":{"crate_id":4,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"16:7216":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:13098":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"5:13440":{"crate_id":5,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"5:7661":{"crate_id":5,"path":["std","process","ChildStderr"],"kind":"struct"},"1:50500":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:4673":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"6:4423":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:5130":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"5:1407":{"crate_id":5,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"6:1900":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"5:8015":{"crate_id":5,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"6:159":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"1:3022":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"5:14907":{"crate_id":5,"path":["std","sys","unix","time","inner","SystemTime"],"kind":"struct"},"1:2003":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"5:14647":{"crate_id":5,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"5:14355":{"crate_id":5,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"6:3884":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"6:4084":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"5:11401":{"crate_id":5,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"4:7418":{"crate_id":4,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:47226":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"6:1653":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:11015":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"5:3347":{"crate_id":5,"path":["std","fs","canonicalize"],"kind":"function"},"17:13788":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"6:1579":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"3:0":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:49963":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"5:4703":{"crate_id":5,"path":["std","io","Seek"],"kind":"trait"},"4:3457":{"crate_id":4,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:44511":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:3184":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"5:794":{"crate_id":5,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:48725":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:45476":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"16:7804":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:48565":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:11691":{"crate_id":1,"path":["bytes","Item"],"kind":"typedef"},"16:7761":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"5:10720":{"crate_id":5,"path":["std","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"4:7409":{"crate_id":4,"path":["alloc","alloc","Global"],"kind":"struct"},"5:12026":{"crate_id":5,"path":["std","process","ExitCode"],"kind":"struct"},"4:5172":{"crate_id":4,"path":["alloc","slice","Concat"],"kind":"trait"},"16:3338":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"6:3905":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:7698":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:48097":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:13272":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"5:7613":{"crate_id":5,"path":["std","process","Child"],"kind":"struct"},"1:7937":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","skip"],"kind":"foreign_type"},"16:5595":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:48569":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:7897":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator","size_hint"],"kind":"foreign_type"},"6:5414":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"18:774":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"18:811":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"4:6022":{"crate_id":4,"path":["alloc","sync","ArcInner"],"kind":"struct"},"5:10999":{"crate_id":5,"path":["std","io","error","ErrorKind"],"kind":"enum"},"12:1651":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:12659":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"5:4569":{"crate_id":5,"path":["std","io","util","Repeat"],"kind":"struct"},"17:9034":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:48541":{"crate_id":1,"path":["core","str","LinesAnyMap"],"kind":"struct"},"5:11122":{"crate_id":5,"path":["std","io","IoSlice"],"kind":"struct"},"1:9712":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"12:160":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"4:3142":{"crate_id":4,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"6:5494":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:10962":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"16:7571":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:13192":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"4:2311":{"crate_id":4,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:4374":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:54450":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:8673":{"crate_id":5,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:49813":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:48419":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"4:803":{"crate_id":4,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"5:4694":{"crate_id":5,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"16:5472":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"5:15835":{"crate_id":5,"path":["std","fn"],"kind":"primitive"},"1:51822":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:9542":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"16:7884":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:3155":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"5:7627":{"crate_id":5,"path":["std","process","ChildStdin"],"kind":"struct"},"16:3241":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"5:10856":{"crate_id":5,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:12155":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"6:6822":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:2207":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"12:112":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:2103":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:51963":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:12051":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"5:14620":{"crate_id":5,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"5:3648":{"crate_id":5,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"5:10387":{"crate_id":5,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:13564":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:48715":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"17:9896":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:48055":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"16:6366":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"16:3714":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"5:2046":{"crate_id":5,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"9:900":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:11710":{"crate_id":1,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:13180":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:46074":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"4:3830":{"crate_id":4,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:3512":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"5:7330":{"crate_id":5,"path":["std","path","PathBuf"],"kind":"struct"},"17:10844":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"16:3018":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:7746":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"18:896":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"5:10895":{"crate_id":5,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:48769":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"5:1052":{"crate_id":5,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"5:13804":{"crate_id":5,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"18:829":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"12:840":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"17:9649":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"17:10140":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"16:7303":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"18:837":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"6:5186":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"9:722":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"1:44373":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"6:3936":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"6:1597":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:12266":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher","next_back"],"kind":"foreign_type"},"5:1531":{"crate_id":5,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"12:930":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:3145":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:3120":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:5850":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"5:13953":{"crate_id":5,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"5:5734":{"crate_id":5,"path":["std","os","unix","fs","FileExt","write_at"],"kind":"foreign_type"},"17:13978":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"5:10687":{"crate_id":5,"path":["std","ffi","c_str","CStr"],"kind":"struct"},"6:5214":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"14:244":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:2914":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"17:13884":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:12699":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:10599":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:13627":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:10149":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"5:3209":{"crate_id":5,"path":["std","fs","read"],"kind":"function"},"17:13810":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:3024":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"6:5468":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:48429":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"17:10052":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:7406":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"17:11147":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:9933":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:13429":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"5:2887":{"crate_id":5,"path":["bytes","Output"],"kind":"typedef"},"6:4232":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:12480":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"4:693":{"crate_id":4,"path":["bytes","Target"],"kind":"typedef"},"1:22182":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"5:15318":{"crate_id":5,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"5:11407":{"crate_id":5,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"5:3998":{"crate_id":5,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:10529":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:8622":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"5:13327":{"crate_id":5,"path":["std","sys","unix","mutex","PthreadMutexAttr"],"kind":"struct"},"5:2453":{"crate_id":5,"path":["std","error","Error"],"kind":"trait"},"17:11159":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"4:7539":{"crate_id":4,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:7661":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"16:5295":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"5:12160":{"crate_id":5,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"5:4347":{"crate_id":5,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"6:6781":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:49765":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"5:11658":{"crate_id":5,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:23652":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"4:7704":{"crate_id":4,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"14:194":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"4:7533":{"crate_id":4,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"4:2075":{"crate_id":4,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:9264":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:51924":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:51164":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"0:140":{"crate_id":0,"path":["bytes","buf","BufMut"],"kind":"trait"},"5:7920":{"crate_id":5,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"1:48573":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"6:1612":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"5:5870":{"crate_id":5,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"1:3171":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:45081":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"5:1396":{"crate_id":5,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"5:12056":{"crate_id":5,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"6:1755":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"18:169":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"5:7730":{"crate_id":5,"path":["std","process","Stdio"],"kind":"struct"},"1:3167":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:12258":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:9809":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"6:4378":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"5:14566":{"crate_id":5,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"1:54502":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"4:7626":{"crate_id":4,"path":["alloc","string","String"],"kind":"struct"},"5:14948":{"crate_id":5,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"16:3772":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:44995":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"5:12738":{"crate_id":5,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"1:10338":{"crate_id":1,"path":["bytes","IntoIter"],"kind":"typedef"},"5:9315":{"crate_id":5,"path":["std","std_float","StdFloat"],"kind":"trait"},"12:866":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"5:10570":{"crate_id":5,"path":["std","thread","Thread"],"kind":"struct"},"17:13348":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:48125":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"17:10266":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"6:4303":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:12269":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"17:11045":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:4989":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"6:6793":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"5:11641":{"crate_id":5,"path":["std","path","Iter"],"kind":"struct"},"1:44889":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:44988":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"12:925":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:7430":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:11794":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"6:5404":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:11231":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:10168":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:7702":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:13262":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:46006":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"17:13258":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:45458":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"16:4477":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:11100":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:46293":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"18:766":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"0:1242":{"crate_id":0,"path":["bytes","buf","IntoIter"],"kind":"struct"},"1:23307":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"4:1090":{"crate_id":4,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:13942":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"5:10525":{"crate_id":5,"path":["std","sealed","Sealed"],"kind":"trait"},"1:4590":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:51748":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:8621":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"5:1918":{"crate_id":5,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:10950":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:3055":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"5:984":{"crate_id":5,"path":["bytes","Owned"],"kind":"typedef"},"1:7181":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:6136":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"6:4245":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"0:1294":{"crate_id":0,"path":["bytes","Output"],"kind":"typedef"},"5:7424":{"crate_id":5,"path":["bytes","Owned"],"kind":"typedef"},"17:11915":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:22091":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"5:13303":{"crate_id":5,"path":["std","sys","unix","mutex","Mutex"],"kind":"struct"},"1:23242":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"5:6942":{"crate_id":5,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:10372":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"6:608":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:46916":{"crate_id":1,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"17:12494":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:8622":{"crate_id":5,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"5:2324":{"crate_id":5,"path":["std","env","SplitPaths"],"kind":"struct"},"6:3985":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:2008":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"5:15812":{"crate_id":5,"path":["std","never"],"kind":"primitive"},"16:5960":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:47983":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"16:2773":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"5:15817":{"crate_id":5,"path":["std","slice"],"kind":"primitive"},"5:8629":{"crate_id":5,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:4201":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:5777":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"12:1200":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:2911":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"13:120":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"5:5379":{"crate_id":5,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"5:15825":{"crate_id":5,"path":["std","i64"],"kind":"primitive"},"4:2095":{"crate_id":4,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:11981":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:11714":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"5:14994":{"crate_id":5,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"5:15823":{"crate_id":5,"path":["std","i16"],"kind":"primitive"},"6:6594":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:4417":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"16:7295":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"5:6872":{"crate_id":5,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"4:5734":{"crate_id":4,"path":["bytes","Target"],"kind":"typedef"},"16:3506":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"5:12200":{"crate_id":5,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"4:1437":{"crate_id":4,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"16:5941":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"0:1255":{"crate_id":0,"path":["bytes","buf","Reader"],"kind":"struct"},"5:5764":{"crate_id":5,"path":["std","os","unix","fs","MetadataExt","mtime"],"kind":"foreign_type"},"17:11118":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"0:891":{"crate_id":0,"path":["bytes","IntoIter"],"kind":"typedef"},"6:1528":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"5:3329":{"crate_id":5,"path":["std","fs","metadata"],"kind":"function"},"9:1075":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"16:6644":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:27027":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:47189":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"14:189":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:45449":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"4:3569":{"crate_id":4,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"5:8363":{"crate_id":5,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"5:3672":{"crate_id":5,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:9215":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"6:603":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"16:6569":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:10623":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:10673":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"5:15044":{"crate_id":5,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"5:9020":{"crate_id":5,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"6:6051":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"5:2253":{"crate_id":5,"path":["std","env"],"kind":"module"},"6:5324":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"5:10635":{"crate_id":5,"path":["std","env","VarError"],"kind":"enum"},"1:48545":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"5:15010":{"crate_id":5,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"12:1118":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"5:4427":{"crate_id":5,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:13986":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"0:42":{"crate_id":0,"path":["bytes","buf","Buf"],"kind":"trait"},"6:4072":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"16:3064":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:3116":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:2917":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"17:10435":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"5:5021":{"crate_id":5,"path":["bytes","Iter"],"kind":"typedef"},"5:12215":{"crate_id":5,"path":["std","sync","once","OnceState"],"kind":"struct"},"4:7463":{"crate_id":4,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"18:712":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"6:1549":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:13760":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:22031":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:51560":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:12249":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"16:7174":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"6:6190":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:51497":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:22191":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"6:5979":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:3474":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:50189":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:3042":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:21817":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"5:10526":{"crate_id":5,"path":["std","thread","local","AccessError"],"kind":"struct"},"5:6802":{"crate_id":5,"path":["std","os","linux","process","CommandExt","create_pidfd"],"kind":"foreign_type"},"5:8977":{"crate_id":5,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"6:6036":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"4:3046":{"crate_id":4,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:3161":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"6:5904":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:8739":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"5:6454":{"crate_id":5,"path":["std","os","unix","process","CommandExt","pre_exec"],"kind":"foreign_type"},"1:23684":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:31132":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"4:971":{"crate_id":4,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:13394":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"5:7915":{"crate_id":5,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"6:567":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"17:10061":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"5:13975":{"crate_id":5,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"6:4388":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:21836":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:3321":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"9:603":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"4:1468":{"crate_id":4,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"0:1289":{"crate_id":0,"path":["bytes","Output"],"kind":"typedef"},"5:4715":{"crate_id":5,"path":["std","io","BufRead","read_until"],"kind":"foreign_type"},"17:12275":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"18:610":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:9595":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:45220":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:10550":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:11173":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"6:6136":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"6:3857":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:11539":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"6:6586":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:47674":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:9900":{"crate_id":1,"path":["core","slice"],"kind":"module"},"1:51901":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"12:892":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"5:4384":{"crate_id":5,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"18:744":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:46135":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"16:6269":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"9:809":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"17:11555":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:13306":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"16:6152":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:47937":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"6:529":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"6:1718":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:11993":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:45261":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:46977":{"crate_id":1,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:23272":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:3020":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"7:85":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:44952":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:7747":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator","next_back"],"kind":"foreign_type"},"1:49444":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"6:1542":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"4:3857":{"crate_id":4,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:47236":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:45029":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"5:11977":{"crate_id":5,"path":["std","process","CommandArgs"],"kind":"struct"},"1:47764":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"5:8272":{"crate_id":5,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"5:6450":{"crate_id":5,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"6:5345":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"5:12176":{"crate_id":5,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"14:231":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:48778":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"4:7649":{"crate_id":4,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:10279":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"4:816":{"crate_id":4,"path":["bytes","Target"],"kind":"typedef"},"5:14561":{"crate_id":5,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"1:50806":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:2992":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"5:12731":{"crate_id":5,"path":["std","sys","unix","fs","File"],"kind":"struct"},"17:11947":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:11140":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:45128":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"5:4344":{"crate_id":5,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:51848":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":11}