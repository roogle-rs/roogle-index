{"root":"0:0:1844","crate_version":"1.5.0","includes_private":false,"index":{"0:485":{"id":"0:485","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[721,0],"end":[725,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:486:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2754-0:1117:1985":{"id":"b:1:2754-0:1117:1985","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2728:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2724:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1117:1985","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2757:135","1:2758:1631"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1082:2458":{"id":"0:1082:2458","crate_id":0,"name":"put_i32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:192":{"id":"0:192","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[37,0],"end":[130,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Chain","id":"0:1089:1982","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["0:196:2607","0:197:2613","0:198:2616","0:199:2621","0:200:2627"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:55:2199":{"id":"0:55:2199","crate_id":0,"name":"get_i128_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[818,4],"end":[820,5]},"visibility":"default","docs":"Gets a signed 128 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\",\n    false => b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x01020304050607080910111213141516, buf.get_i128_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2748-0:1111:1987":{"id":"b:1:2748-0:1111:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1111:1987","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2750:753"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:673:2349":{"id":"0:673:2349","crate_id":0,"name":"advance_mut","span":{"filename":"src/bytes_mut.rs","begin":[1089,4],"end":[1098,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:450:848":{"id":"0:450:848","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes.rs","begin":[616,4],"end":[618,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:7896:163","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1000:2204":{"id":"0:1000:2204","crate_id":0,"name":"get_uint","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:228:2297":{"id":"0:228:2297","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/iter.rs","begin":[83,4],"end":[85,5]},"visibility":"public","docs":"Gets a reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::{Buf, Bytes};\n\nlet buf = Bytes::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\n\nassert_eq!(2, iter.get_ref().remaining());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:448:171":{"id":"0:448:171","crate_id":0,"name":"Item","span":{"filename":"src/bytes.rs","begin":[613,4],"end":[613,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}}},"0:1047:2413":{"id":"0:1047:2413","crate_id":0,"name":"put_u16","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:684":{"id":"0:684","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1157,0],"end":[1162,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsMut","id":"1:2715:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:685:3270"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:356-0:1089:1982":{"id":"0:356-0:1089:1982","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[34,0],"end":[34,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::chain::Chain","name":"Chain","id":"0:1089:1982","glob":false}}},"0:170:2376":{"id":"0:170:2376","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1429,4],"end":[1431,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121:2433":{"id":"0:121:2433","crate_id":0,"name":"put_i16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[455,4],"end":[457,5]},"visibility":"default","docs":"Writes a signed 16 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i16_le(0x0809);\nassert_eq!(buf, b\"\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:292:2003":{"id":"0:292:2003","crate_id":0,"name":"advance","span":{"filename":"src/buf/take.rs","begin":[142,4],"end":[146,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1152":{"id":"0:1152","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:3222:2710","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeToInclusive","id":"1:40129:223","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1153:833"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:146:2525":{"id":"0:146:2525","crate_id":0,"name":"put_int_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1045,4],"end":[1051,5]},"visibility":"default","docs":"Writes low `nbytes` of a signed integer to `self` in native-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_int_ne(0x010203, 3);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\");\n} else {\n    assert_eq!(buf, b\"\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self` or if `nbytes` is greater than 8.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:974:2000":{"id":"0:974:2000","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1140:206":{"id":"0:1140:206","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:727:3227":{"id":"0:727:3227","crate_id":0,"name":"extend","span":{"filename":"src/bytes_mut.rs","begin":[1280,4],"end":[1296,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7896:163","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:478:669":{"id":"0:478:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[698,4],"end":[700,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Vec","id":"4:6969:270","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1097:726":{"id":"0:1097:726","crate_id":0,"name":"fmt","span":{"filename":"src/buf/chain.rs","begin":[31,9],"end":[31,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:9962:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:9943:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:786:669":{"id":"0:786:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1570,4],"end":[1572,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:50:2181":{"id":"0:50:2181","crate_id":0,"name":"get_u128","span":{"filename":"src/buf/buf_impl.rs","begin":[712,4],"end":[714,5]},"visibility":"default","docs":"Gets an unsigned 128 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_u128());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:22:1842":{"id":"0:22:1842","crate_id":0,"name":"Buf","span":{"filename":"src/buf/buf_impl.rs","begin":[76,0],"end":[1194,1]},"visibility":"public","docs":"Read bytes from a buffer.\n\nA buffer stores bytes in memory such that read operations are infallible.\nThe underlying storage may or may not be in contiguous memory. A `Buf` value\nis a cursor into the buffer. Reading from `Buf` advances the cursor\nposition. It can be thought of as an efficient `Iterator` for collections of\nbytes.\n\nThe simplest `Buf` is a `&[u8]`.\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(b'h', buf.get_u8());\nassert_eq!(b'e', buf.get_u8());\nassert_eq!(b'l', buf.get_u8());\n\nlet mut rest = [0; 8];\nbuf.copy_to_slice(&mut rest);\n\nassert_eq!(&rest[..], &b\"lo world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:23:2037","0:24:2000","0:25:2065","0:27:2003","0:28:2069","0:29:2004","0:30:2100","0:31:2103","0:32:2109","0:33:2113","0:34:2120","0:35:2124","0:36:2127","0:37:2130","0:38:2135","0:39:2139","0:40:2144","0:41:2147","0:42:2150","0:43:2153","0:44:2158","0:45:2162","0:46:2167","0:47:2170","0:48:2173","0:49:2176","0:50:2181","0:51:2185","0:52:2190","0:53:2193","0:54:2196","0:55:2199","0:56:2204","0:57:2209","0:58:2214","0:59:2218","0:60:2221","0:61:2224","0:62:2229","0:63:2234","0:64:2239","0:65:2243","0:66:2246","0:67:2250","0:68:2258","0:70:1978","0:71:1975","0:73:1977"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:79","0:288","0:334","0:201","0:83","0:77","0:75","0:666","0:427"]}}},"a:1:32928:3878-0:1117:1985":{"id":"a:1:32928:3878-0:1117:1985","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32928:3878","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32928:3878","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1117:1985","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:125:2449":{"id":"0:125:2449","crate_id":0,"name":"put_u32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[551,4],"end":[553,5]},"visibility":"default","docs":"Writes an unsigned 32 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u32_ne(0x0809A0A1);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");\n} else {\n    assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:733":{"id":"0:733","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1308,0],"end":[1317,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"name":"Extend","id":"1:7905:3274","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:734:3227"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:158":{"id":"0:158","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1378,0],"end":[1380,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_bytes","put_u64","put_f32","put_f32_ne","put","put_u32_le","put_i128_ne","put_i128_le"],"trait":{"name":"BufMut","id":"0:106:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:1041:2331","0:1042:2376","0:1043:2349","0:1044:2391","0:1045:2402","0:1046:2409","0:1047:2413","0:1048:2418","0:1049:2426","0:1050:2430","0:1051:2433","0:1052:2436","0:1053:2440","0:1054:2444","0:1055:2449","0:1056:2452","0:1057:2455","0:1058:2458","0:1059:2462","0:1060:2466","0:1061:2471","0:1062:2474","0:1063:2477","0:1064:2480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:486:669":{"id":"0:486:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[722,4],"end":[724,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:766:1146":{"id":"0:766:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1513,4],"end":[1515,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:753":{"id":"0:753","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1476,0],"end":[1480,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:754:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1054:2444":{"id":"0:1054:2444","crate_id":0,"name":"put_u32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:711:3271":{"id":"0:711:3271","crate_id":0,"name":"borrow_mut","span":{"filename":"src/bytes_mut.rs","begin":[1233,4],"end":[1235,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12850:33218":{"id":"1:12850:33218","crate_id":1,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:12848:33217"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12855:340":{"id":"1:12855:340","crate_id":1,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:12856:2094","`u8`":"5:12123:1653"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:985:2124":{"id":"0:985:2124","crate_id":0,"name":"get_i16","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:637:2068":{"id":"0:637:2068","crate_id":0,"name":"is_empty","span":{"filename":"src/bytes_mut.rs","begin":[196,4],"end":[198,5]},"visibility":"public","docs":"Returns true if the `BytesMut` has a length of 0.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet b = BytesMut::with_capacity(64);\nassert!(b.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5556:32921":{"id":"4:5556:32921","crate_id":4,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:12971:32847"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:981:2103":{"id":"0:981:2103","crate_id":0,"name":"get_i8","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1157":{"id":"0:1157","crate_id":0,"name":null,"span":{"filename":"src/buf/writer.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9987:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9987:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1154:1988","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:1159:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:736":{"id":"0:736","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1319,0],"end":[1323,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"1:7892:143","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:737:756"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:482:669":{"id":"0:482:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[710,4],"end":[712,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:446":{"id":"0:446","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[612,0],"end":[619,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7896:163","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:448:171","0:449:1983","0:450:848"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:293:2258":{"id":"0:293:2258","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/take.rs","begin":[148,4],"end":[154,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:496:1146":{"id":"0:496:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[752,4],"end":[754,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1108":{"id":"0:1108","crate_id":0,"name":null,"span":{"filename":"src/buf/limit.rs","begin":[8,9],"end":[8,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9987:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9987:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1104:1984","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1110:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1127":{"id":"0:1127","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:3222:2710","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Range","id":"1:40041:217","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1128:833"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:790:1146":{"id":"0:790:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1579,4],"end":[1581,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12912:31721":{"id":"1:12912:31721","crate_id":1,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"5:12106:458","self::pattern":"1:12541:3716","str::rsplitn":"1:12915:31723"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"1:44429:4308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1040:2258":{"id":"0:1040:2258","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"crate::Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:977:2003":{"id":"0:977:2003","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12938:33229":{"id":"1:12938:33229","crate_id":1,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12844":{"id":"1:12844","crate_id":1,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["1:12845:883","1:12846:2068","1:12847:33216","1:12848:33217","1:12850:33218","1:12853:2960","1:12854:33219","1:12855:340","1:12856:2094","1:12857:2001","1:12859:2653","1:12861:30330","1:12863:30331","1:12865:33220","1:12866:33221","1:12867:31712","1:12868:2577","1:12869:31715","1:12870:31716","1:12872:7883","1:12873:8012","1:12874:1844","1:12875:28065","1:12876:28104","1:12877:4287","1:12878:33222","1:12879:28125","1:12880:3320","1:12883:31727","1:12886:31728","1:12889:4093","1:12893:4058","1:12897:3138","1:12900:28092","1:12903:31719","1:12906:33223","1:12909:33224","1:12912:31721","1:12915:31723","1:12918:31725","1:12921:31726","1:12924:3378","1:12927:33225","1:12930:33226","1:12933:33227","1:12936:33228","1:12938:33229","1:12940:33230","1:12942:33231","1:12943:33232","1:12944:33233","1:12947:33234","1:12950:31729","1:12953:31730","1:12956:33235","1:12959:33236","1:12962:33237","1:12965:33238","1:12967:32842","1:12968:32843","1:12969:32845","1:12970:32846","1:12971:32847","1:12972:32849","1:12973:32850","1:12974:32851","1:12975:33239","1:12977:11384","1:12978:33240"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:830":{"id":"0:830","crate_id":0,"name":null,"span":{"filename":"src/fmt/debug.rs","begin":[39,0],"end":[43,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9987:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:831:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2754-0:613:1848":{"id":"b:1:2754-0:613:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2728:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2724:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2757:135","1:2758:1631"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:151:2545":{"id":"0:151:2545","crate_id":0,"name":"put_f64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1168,4],"end":[1170,5]},"visibility":"default","docs":"Writes  an IEEE754 double-precision (8 bytes) floating point number to\n`self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f64_le(1.2f64);\nassert_eq!(buf, b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:718:171":{"id":"0:718:171","crate_id":0,"name":"Item","span":{"filename":"src/bytes_mut.rs","begin":[1262,4],"end":[1262,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u8"}}}},"b:1:2744-0:1089:1982":{"id":"b:1:2744-0:1089:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1089:1982","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2747:2873"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1141:832":{"id":"0:1141:832","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeInclusive","id":"1:40107:221","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12950:31729":{"id":"1:12950:31729","crate_id":1,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"5:12106:458","self::pattern":"1:12541:3716"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1013:2004":{"id":"0:1013:2004","crate_id":0,"name":"copy_to_slice","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:132:2474":{"id":"0:132:2474","crate_id":0,"name":"put_i64","span":{"filename":"src/buf/buf_mut.rs","begin":[713,4],"end":[715,5]},"visibility":"default","docs":"Writes a signed 64 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i64(0x0102030405060708);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:165:2349":{"id":"0:165:2349","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1399,4],"end":[1403,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:35:2124":{"id":"0:35:2124","crate_id":0,"name":"get_i16","span":{"filename":"src/buf/buf_impl.rs","begin":[397,4],"end":[399,5]},"visibility":"default","docs":"Gets a signed 16 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09 hello\"[..];\nassert_eq!(0x0809, buf.get_i16());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2748-0:1089:1982":{"id":"b:1:2748-0:1089:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1089:1982","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2750:753"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1114":{"id":"0:1114","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9987:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9987:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1111:1987","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:1116:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:495":{"id":"0:495","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[751,0],"end":[755,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"items":["0:496:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:798:1146":{"id":"0:798:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1603,4],"end":[1605,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12854:33219":{"id":"1:12854:33219","crate_id":1,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:639:750":{"id":"0:639:750","crate_id":0,"name":"freeze","span":{"filename":"src/bytes_mut.rs","begin":[240,4],"end":[260,5]},"visibility":"public","docs":"Converts `self` into an immutable `Bytes`.\n\nThe conversion is zero cost and is used to indicate that the slice\nreferenced by the handle will no longer be mutated. Once the conversion\nis done, the handle can be cloned and shared across threads.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\nuse std::thread;\n\nlet mut b = BytesMut::with_capacity(64);\nb.put(&b\"hello world\"[..]);\nlet b1 = b.freeze();\nlet b2 = b1.clone();\n\nlet th = thread::spawn(move || {\n    assert_eq!(&b1[..], b\"hello world\");\n});\n\nassert_eq!(&b2[..], b\"hello world\");\nth.join().unwrap();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1135:206":{"id":"0:1135:206","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"1:12924:3378":{"id":"1:12924:3378","crate_id":1,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"1:12541:3716","`DoubleEndedIterator`":"1:7934:128","prim@char":"5:12106:458","str::rmatches":"1:12927:33225"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"1:44529:7999","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1163:726":{"id":"0:1163:726","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[35,0],"end":[35,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:9962:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:9943:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:777":{"id":"0:777","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1548,0],"end":[1552,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:778:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12877:4287":{"id":"1:12877:4287","crate_id":1,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"1:44579:3489","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:174":{"id":"0:174","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1457,0],"end":[1524,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_bytes","put_u64","put_f32","put_f32_ne","put","put_u32_le","put_i128_ne","put_i128_le"],"trait":{"name":"BufMut","id":"0:106:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::vec::Vec","id":"4:6969:270","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:175:2331","0:176:2349","0:177:2376","0:178:2261","0:180:2391","0:181:2401"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1087:2477":{"id":"0:1087:2477","crate_id":0,"name":"put_i64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1125:206":{"id":"0:1125:206","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:466:669":{"id":"0:466:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[662,4],"end":[664,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:135:2484":{"id":"0:135:2484","crate_id":0,"name":"put_u128","span":{"filename":"src/buf/buf_mut.rs","begin":[783,4],"end":[785,5]},"visibility":"default","docs":"Writes an unsigned 128 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u128(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:395:1847":{"id":"0:395:1847","crate_id":0,"name":"Bytes","span":{"filename":"src/bytes.rs","begin":[100,0],"end":[106,1]},"visibility":"public","docs":"A cheaply cloneable and sliceable chunk of contiguous memory.\n\n`Bytes` is an efficient container for storing and operating on contiguous\nslices of memory. It is intended for use primarily in networking code, but\ncould have applications elsewhere as well.\n\n`Bytes` values facilitate zero-copy network programming by allowing multiple\n`Bytes` objects to point to the same underlying memory.\n\n`Bytes` does not have a single implementation. It is an interface, whose\nexact behavior is implemented through dynamic dispatch in several underlying\nimplementations of `Bytes`.\n\nAll `Bytes` implementations must fulfill the following requirements:\n- They are cheaply cloneable and thereby shareable between an unlimited amount\n  of components, for example by modifying a reference count.\n- Instances can be sliced to refer to a subset of the original buffer.\n\n```\nuse bytes::Bytes;\n\nlet mut mem = Bytes::from(\"Hello world\");\nlet a = mem.slice(0..5);\n\nassert_eq!(a, \"Hello\");\n\nlet b = mem.split_to(6);\n\nassert_eq!(mem, \"world\");\nassert_eq!(b, \"Hello \");\n```\n\n# Memory layout\n\nThe `Bytes` struct itself is fairly small, limited to 4 `usize` fields used\nto track information about which segment of the underlying memory the\n`Bytes` handle has access to.\n\n`Bytes` keeps both a pointer to the shared state containing the full memory\nslice and a pointer to the start of the region visible by the handle.\n`Bytes` also tracks the length of its view into the memory.\n\n# Sharing\n\n`Bytes` contains a vtable, which allows implementations of `Bytes` to define\nhow sharing/cloning is implemented in detail.\nWhen `Bytes::clone()` is called, `Bytes` will call the vtable function for\ncloning the backing storage in order to share it behind between multiple\n`Bytes` instances.\n\nFor `Bytes` implementations which refer to constant memory (e.g. created\nvia `Bytes::from_static()`) the cloning implementation will be a no-op.\n\nFor `Bytes` implementations which point to a reference counted shared storage\n(e.g. an `Arc<[u8]>`), sharing will be implemented by increasing the\nreference count.\n\nDue to this mechanism, multiple `Bytes` instances may point to the same\nshared memory region.\nEach `Bytes` instance can point to different sections within that\nmemory region, and `Bytes` instances may or may not have overlapping views\ninto the memory.\n\nThe following diagram visualizes a scenario where 2 `Bytes` instances make\nuse of an `Arc`-based backing storage, and provide access to different views:\n\n```text\n\n   Arc ptrs                   ┌─────────┐\n   ________________________ / │ Bytes 2 │\n  /                           └─────────┘\n /          ┌───────────┐     |         |\n|_________/ │  Bytes 1  │     |         |\n|           └───────────┘     |         |\n|           |           | ___/ data     | tail\n|      data |      tail |/              |\nv           v           v               v\n┌─────┬─────┬───────────┬───────────────┬─────┐\n│ Arc │     │           │               │     │\n└─────┴─────┴───────────┴───────────────┴─────┘\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:404","a:1:32928:3878-0:395:1847","a:1:42553:3859-0:395:1847","a:1:42554:3858-0:395:1847","b:1:2444-0:395:1847","b:1:2748-0:395:1847","b:1:2754-0:395:1847","b:1:3560-0:395:1847","b:1:2759-0:395:1847","b:1:2441-0:395:1847","b:1:2744-0:395:1847","b:4:687-0:395:1847","0:511","0:487","0:522","0:473","0:479","0:477","0:1160","0:437","0:432","0:491","0:501","0:499","0:463","0:515","0:458","0:454","0:694","0:801","0:435","0:467","0:1164","0:493","0:451","0:461","0:505","0:460","0:456","0:425","0:485","0:442","0:475","0:497","0:495","0:483","0:733","0:830","0:469","0:422","0:799","0:471","0:446","0:421","0:465","0:427","0:423","0:489","0:509","0:513","0:520","0:481","0:440","0:517"]}}},"0:832":{"id":"0:832","crate_id":0,"name":null,"span":{"filename":"src/fmt/debug.rs","begin":[45,0],"end":[49,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9987:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:833:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:2758:1631":{"id":"1:2758:1631","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"1:42572:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2728:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1037:2218":{"id":"0:1037:2218","crate_id":0,"name":"get_int","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1035:2209":{"id":"0:1035:2209","crate_id":0,"name":"get_uint_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:670:2258":{"id":"0:670:2258","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/bytes_mut.rs","begin":[1077,4],"end":[1079,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"crate::Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:326:753":{"id":"0:326:753","crate_id":0,"name":"from","span":{"filename":"src/buf/uninit_slice.rs","begin":[217,4],"end":[219,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1055:2449":{"id":"0:1055:2449","crate_id":0,"name":"put_u32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12930:33226":{"id":"1:12930:33226","crate_id":1,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"1:12541:3716","`DoubleEndedIterator`":"1:7934:128","prim@char":"5:12106:458","str::rmatch_indices":"1:12933:33227"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"1:44475:7997","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:7904:848":{"id":"1:7904:848","crate_id":1,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1004:2221":{"id":"0:1004:2221","crate_id":0,"name":"get_int_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1160":{"id":"0:1160","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[34,0],"end":[34,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"1:9998:3324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1161:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12975:33239":{"id":"1:12975:33239","crate_id":1,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:4739:33239"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"1:44624:7938","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5538:2576":{"id":"4:5538:2576","crate_id":4,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"4:7544:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:352:2749":{"id":"0:352:2749","crate_id":0,"name":"write","span":{"filename":"src/buf/writer.rs","begin":[78,4],"end":[83,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"5:3010:233","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:285:2653":{"id":"0:285:2653","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/take.rs","begin":[77,4],"end":[79,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\".take(2);\nlet mut dst = vec![];\n\nbuf.get_mut().advance(2);\n\ndst.put(&mut buf);\nassert_eq!(*dst, b\"ll\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:457:1146":{"id":"0:457:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[636,4],"end":[638,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:49:2176":{"id":"0:49:2176","crate_id":0,"name":"get_i64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[692,4],"end":[694,5]},"visibility":"default","docs":"Gets a signed 64 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\",\n    false => b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x0102030405060708, buf.get_i64_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:350":{"id":"0:350","crate_id":0,"name":null,"span":{"filename":"src/buf/writer.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["write_all","write_fmt","by_ref","is_write_vectored","write_all_vectored","write_vectored"],"trait":{"name":"Write","id":"5:3548:2790","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1154:1988","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:352:2749","0:353:2791"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32846:244-0:1154:1988":{"id":"a:1:32846:244-0:1154:1988","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32846:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32846:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1154:1988","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:334":{"id":"0:334","crate_id":0,"name":null,"span":{"filename":"src/buf/vec_deque.rs","begin":[5,0],"end":[22,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","take","chain","get_uint","get_f64_ne","get_u16_le","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_ne","get_u32","copy_to_slice","chunks_vectored","get_u128_ne","get_i128","get_u16_ne","get_u128","get_i128_le","get_i128_ne","get_f32_ne","reader","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","has_remaining","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64"],"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::collections::VecDeque","id":"4:4366:271","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:335:2037","0:336:2000","0:337:2003"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:206:2003":{"id":"0:206:2003","crate_id":0,"name":"advance","span":{"filename":"src/buf/chain.rs","begin":[149,4],"end":[165,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1134":{"id":"0:1134","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:40008:2709","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeFull","id":"1:40025:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1135:206","0:1136:832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:492:1146":{"id":"0:492:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[740,4],"end":[742,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:470:669":{"id":"0:470:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[674,4],"end":[676,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:643:2933":{"id":"0:643:2933","crate_id":0,"name":"split_to","span":{"filename":"src/bytes_mut.rs","begin":[378,4],"end":[392,5]},"visibility":"public","docs":"Splits the buffer into two at the given index.\n\nAfterwards `self` contains elements `[at, len)`, and the returned `BytesMut`\ncontains elements `[0, at)`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut a = BytesMut::from(&b\"hello world\"[..]);\nlet mut b = a.split_to(5);\n\na[0] = b'!';\nb[0] = b'j';\n\nassert_eq!(&a[..], b\"!world\");\nassert_eq!(&b[..], b\"jello\");\n```\n\n# Panics\n\nPanics if `at > len`.","links":{},"attrs":["#[must_use = \"consider BytesMut::advance if you don't need the other half\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["at",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3560-0:1104:1984":{"id":"b:1:3560-0:1104:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3558:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1104:1984","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3562:1644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2441-0:306:1986":{"id":"b:1:2441-0:306:1986","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2443:2792"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:434:604":{"id":"0:434:604","crate_id":0,"name":"deref","span":{"filename":"src/bytes.rs","begin":[576,4],"end":[578,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:27:2003":{"id":"0:27:2003","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[207,4],"end":[207,38]},"visibility":"default","docs":"Advance the internal cursor of the Buf\n\nThe next call to `chunk()` will return a slice starting `cnt` bytes\nfurther into the underlying buffer.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(buf.chunk(), &b\"hello world\"[..]);\n\nbuf.advance(6);\n\nassert_eq!(buf.chunk(), &b\"world\"[..]);\n```\n\n# Panics\n\nThis function **may** panic if `cnt > self.remaining()`.\n\n# Implementer notes\n\nIt is recommended for implementations of `advance` to panic if `cnt >\nself.remaining()`. If the implementation does not panic, the call must\nbehave as if `cnt == self.remaining()`.\n\nA call with `cnt == 0` should never panic and be a no-op.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:65:2243":{"id":"0:65:2243","crate_id":0,"name":"get_f64","span":{"filename":"src/buf/buf_impl.rs","begin":[1039,4],"end":[1041,5]},"visibility":"default","docs":"Gets an IEEE754 double-precision (8 bytes) floating point number from\n`self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33 hello\"[..];\nassert_eq!(1.2f64, buf.get_f64());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1014:2100":{"id":"0:1014:2100","crate_id":0,"name":"get_u8","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:143:2515":{"id":"0:143:2515","crate_id":0,"name":"put_uint_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[971,4],"end":[977,5]},"visibility":"default","docs":"Writes an unsigned n-byte integer to `self` in the native-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_uint_ne(0x010203, 3);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\");\n} else {\n    assert_eq!(buf, b\"\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:318:2094":{"id":"0:318:2094","crate_id":0,"name":"as_mut_ptr","span":{"filename":"src/buf/uninit_slice.rs","begin":[161,4],"end":[163,5]},"visibility":"public","docs":"Return a raw pointer to the slice's buffer.\n\n# Safety\n\nThe caller **must not** read from the referenced memory and **must not**\nwrite **uninitialized** bytes to the slice either.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut data = [0, 1, 2];\nlet mut slice = &mut data[..];\nlet ptr = BufMut::chunk_mut(&mut slice).as_mut_ptr();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:799":{"id":"0:799","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1608,0],"end":[1612,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:800:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:345":{"id":"0:345","crate_id":0,"name":null,"span":{"filename":"src/buf/writer.rs","begin":[19,0],"end":[75,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Writer","id":"0:1154:1988","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:347:2297","0:348:2653","0:349:2627"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1144":{"id":"0:1144","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:40008:2709","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeTo","id":"1:40085:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1145:206","0:1146:832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:264:2297":{"id":"0:264:2297","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/reader.rs","begin":[33,4],"end":[35,5]},"visibility":"public","docs":"Gets a reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::Buf;\n\nlet buf = b\"hello world\".reader();\n\nassert_eq!(b\"hello world\", buf.get_ref());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:316:2578":{"id":"0:316:2578","crate_id":0,"name":"copy_from_slice","span":{"filename":"src/buf/uninit_slice.rs","begin":[134,4],"end":[142,5]},"visibility":"public","docs":"Copies bytes  from `src` into `self`.\n\nThe length of `src` must be the same as `self`.\n\n# Panics\n\nThe function panics if `src` has a different length than `self`.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\n\nlet mut data = [b'f', b'o', b'o'];\nlet slice = unsafe { UninitSlice::from_raw_parts_mut(data.as_mut_ptr(), 3) };\n\nslice.copy_from_slice(b\"bar\");\n\nassert_eq!(b\"bar\", &data[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:287:2668":{"id":"0:287:2668","crate_id":0,"name":"set_limit","span":{"filename":"src/buf/take.rs","begin":[127,4],"end":[129,5]},"visibility":"public","docs":"Sets the maximum number of bytes that can be read.\n\n# Note\n\nIf the inner `Buf` has fewer bytes than `lim` then that is the actual\nnumber of available bytes.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\".take(2);\nlet mut dst = vec![];\n\ndst.put(&mut buf);\nassert_eq!(*dst, b\"he\"[..]);\n\ndst.clear();\n\nbuf.set_limit(3);\ndst.put(&mut buf);\nassert_eq!(*dst, b\"llo\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["lim",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:232:171":{"id":"0:232:171","crate_id":0,"name":"Item","span":{"filename":"src/buf/iter.rs","begin":[111,4],"end":[111,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u8"}}}},"b:1:2444-0:395:1847":{"id":"b:1:2444-0:395:1847","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2446:3271"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"4:689:3706":{"id":"4:689:3706","crate_id":4,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:779":{"id":"0:779","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1554,0],"end":[1558,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::string::String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:780:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1026:2150":{"id":"0:1026:2150","crate_id":0,"name":"get_i32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1032:2173":{"id":"0:1032:2173","crate_id":0,"name":"get_i64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:720:848":{"id":"0:720:848","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes_mut.rs","begin":[1265,4],"end":[1267,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:7896:163","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2441-0:1111:1987":{"id":"b:1:2441-0:1111:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1111:1987","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2443:2792"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1139":{"id":"0:1139","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:40008:2709","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeInclusive","id":"1:40107:221","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1140:206","0:1141:832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:491":{"id":"0:491","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[739,0],"end":[743,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::string::String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:492:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2444-0:1104:1984":{"id":"b:1:2444-0:1104:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1104:1984","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2446:3271"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:638:2582":{"id":"0:638:2582","crate_id":0,"name":"capacity","span":{"filename":"src/bytes_mut.rs","begin":[211,4],"end":[213,5]},"visibility":"public","docs":"Returns the number of bytes the `BytesMut` can hold without reallocating.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet b = BytesMut::with_capacity(64);\nassert_eq!(b.capacity(), 64);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42553:3859-0:1154:1988":{"id":"a:1:42553:3859-0:1154:1988","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42553:3859","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42553:3859","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1154:1988","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:207:2065":{"id":"0:207:2065","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/chain.rs","begin":[168,4],"end":[172,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"5:8227:1991","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:749":{"id":"0:749","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1461,0],"end":[1461,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32846:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:702":{"id":"0:702","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1207,0],"end":[1207,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12846:2068":{"id":"1:12846:2068","crate_id":1,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12953:31730":{"id":"1:12953:31730","crate_id":1,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"5:12106:458","self::pattern":"1:12541:3716"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12561:11478","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12959:33236":{"id":"1:12959:33236","crate_id":1,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"5:12106:458","self::pattern":"1:12541:3716"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2759-0:1111:1987":{"id":"b:1:2759-0:1111:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2728:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1111:1987","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2762:135","1:2763:1629"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:414:2924":{"id":"0:414:2924","crate_id":0,"name":"split_off","span":{"filename":"src/bytes.rs","begin":[362,4],"end":[385,5]},"visibility":"public","docs":"Splits the bytes into two at the given index.\n\nAfterwards `self` contains elements `[0, at)`, and the returned `Bytes`\ncontains elements `[at, len)`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut a = Bytes::from(&b\"hello world\"[..]);\nlet b = a.split_off(5);\n\nassert_eq!(&a[..], b\"hello\");\nassert_eq!(&b[..], b\" world\");\n```\n\n# Panics\n\nPanics if `at > len`.","links":{},"attrs":["#[must_use = \"consider Bytes::truncate if you don't need the other half\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["at",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1161:726":{"id":"0:1161:726","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[34,0],"end":[34,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:9962:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:9943:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:155:2573":{"id":"0:155:2573","crate_id":0,"name":"chain_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1270,4],"end":[1275,5]},"visibility":"default","docs":"Creates an adapter which will chain this buffer with another.\n\nThe returned `BufMut` instance will first write to all bytes from\n`self`. Afterwards, it will write to `next`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut a = [0u8; 5];\nlet mut b = [0u8; 6];\n\nlet mut chain = (&mut a[..]).chain_mut(&mut b[..]);\n\nchain.put_slice(b\"hello world\");\n\nassert_eq!(&a[..], b\"hello\");\nassert_eq!(&b[..], b\" world\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["next",{"generic":"U"}]],"output":{"resolved_path":{"name":"Chain","id":"0:1089:1982","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:797":{"id":"0:797","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1602,0],"end":[1606,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"items":["0:798:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:787":{"id":"0:787","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1575,0],"end":[1582,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:790:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:366-0:106:1843":{"id":"0:366-0:106:1843","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[85,26],"end":[85,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::buf::BufMut","name":"BufMut","id":"0:106:1843","glob":false}}},"0:52:2190":{"id":"0:52:2190","crate_id":0,"name":"get_u128_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[755,4],"end":[757,5]},"visibility":"default","docs":"Gets an unsigned 128 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\",\n    false => b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x01020304050607080910111213141516, buf.get_u128_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:691":{"id":"0:691","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1177,0],"end":[1181,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:693:753"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1167:726":{"id":"0:1167:726","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[37,0],"end":[37,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:9962:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:9943:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12859:2653":{"id":"1:12859:2653","crate_id":1,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"1:42427:198"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:10643:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:10643:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:7900-0:1098:1983":{"id":"b:1:7900-0:1098:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:8043:176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7896:163","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1098:1983","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:7902:171","1:7903:1983","1:7904:848"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:245:2627":{"id":"0:245:2627","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/limit.rs","begin":[20,4],"end":[22,5]},"visibility":"public","docs":"Consumes this `Limit`, returning the underlying value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12876:28104":{"id":"1:12876:28104","crate_id":1,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"1:12875:28065"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"1:44608:8003","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:973:2037":{"id":"0:973:2037","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1056:2452":{"id":"0:1056:2452","crate_id":0,"name":"put_i32","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42553:3859-0:613:1848":{"id":"a:1:42553:3859-0:613:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42553:3859","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1166":{"id":"0:1166","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[37,0],"end":[37,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"1:10000:3325","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1167:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:82:2003":{"id":"0:82:2003","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1353,4],"end":[1355,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32846:244-0:1089:1982":{"id":"a:1:32846:244-0:1089:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32846:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32846:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32846:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1089:1982","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:12853:2960":{"id":"1:12853:2960","crate_id":1,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"1:12096:11479"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1009:2065":{"id":"0:1009:2065","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"5:8227:1991","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:34:2120":{"id":"0:34:2120","crate_id":0,"name":"get_u16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[377,4],"end":[379,5]},"visibility":"default","docs":"Gets an unsigned 16 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x08\\x09 hello\",\n    false => b\"\\x09\\x08 hello\",\n};\nassert_eq!(0x0809, buf.get_u16_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:353:2791":{"id":"0:353:2791","crate_id":0,"name":"flush","span":{"filename":"src/buf/writer.rs","begin":[85,4],"end":[87,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"5:3010:233","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:483":{"id":"0:483","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[715,0],"end":[719,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::vec::Vec","id":"4:6969:270","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:484:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12943:33232":{"id":"1:12943:33232","crate_id":1,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:150:2542":{"id":"0:150:2542","crate_id":0,"name":"put_f64","span":{"filename":"src/buf/buf_mut.rs","begin":[1145,4],"end":[1147,5]},"visibility":"default","docs":"Writes  an IEEE754 double-precision (8 bytes) floating point number to\n`self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f64(1.2f64);\nassert_eq!(buf, b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:421":{"id":"0:421","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[519,0],"end":[519,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32846:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12971:32847":{"id":"1:12971:32847","crate_id":1,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1151:832":{"id":"0:1151:832","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeToInclusive","id":"1:40129:223","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5536":{"id":"4:5536","crate_id":4,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["4:5537:33937","4:5538:2576","4:5541:33938","4:5544:33939","4:5552:33940","4:5553:33941","4:5554:3513","4:5555:32920","4:5556:32921"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:25:2065":{"id":"0:25:2065","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/buf_impl.rs","begin":[164,4],"end":[175,5]},"visibility":"default","docs":"Fills `dst` with potentially multiple slices starting at `self`'s\ncurrent position.\n\nIf the `Buf` is backed by disjoint slices of bytes, `chunk_vectored` enables\nfetching more than one slice at once. `dst` is a slice of `IoSlice`\nreferences, enabling the slice to be directly used with [`writev`]\nwithout any further conversion. The sum of the lengths of all the\nbuffers in `dst` will be less than or equal to `Buf::remaining()`.\n\nThe entries in `dst` will be overwritten, but the data **contained** by\nthe slices **will not** be modified. If `chunk_vectored` does not fill every\nentry in `dst`, then `dst` is guaranteed to contain all remaining slices\nin `self.\n\nThis is a lower level function. Most operations are done with other\nfunctions.\n\n# Implementer notes\n\nThis function should never panic. Once the end of the buffer is reached,\ni.e., `Buf::remaining` returns 0, calls to `chunk_vectored` must return 0\nwithout mutating `dst`.\n\nImplementations should also take care to properly handle being called\nwith `dst` being a zero length slice.\n\n[`writev`]: http://man7.org/linux/man-pages/man2/readv.2.html","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"5:8227:1991","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:154:1981":{"id":"0:154:1981","crate_id":0,"name":"writer","span":{"filename":"src/buf/buf_mut.rs","begin":[1243,4],"end":[1248,5]},"visibility":"default","docs":"Creates an adaptor which implements the `Write` trait for `self`.\n\nThis function returns a new value which implements `Write` by adapting\nthe `Write` trait functions to the `BufMut` trait functions. Given that\n`BufMut` operations are infallible, none of the `Write` functions will\nreturn with `Err`.\n\n# Examples\n\n```\nuse bytes::BufMut;\nuse std::io::Write;\n\nlet mut buf = vec![].writer();\n\nlet num = buf.write(&b\"hello world\"[..]).unwrap();\nassert_eq!(11, num);\n\nlet buf = buf.into_inner();\n\nassert_eq!(*buf, b\"hello world\"[..]);\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Writer","id":"0:1154:1988","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:511":{"id":"0:511","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[796,0],"end":[800,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"primitive":"u8"}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:512:753"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2754-0:1154:1988":{"id":"b:1:2754-0:1154:1988","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2728:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2724:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1154:1988","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2757:135","1:2758:1631"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1128:833":{"id":"0:1128:833","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"Range","id":"1:40041:217","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:636:883":{"id":"0:636:883","crate_id":0,"name":"len","span":{"filename":"src/bytes_mut.rs","begin":[181,4],"end":[183,5]},"visibility":"public","docs":"Returns the number of bytes contained in this `BytesMut`.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet b = BytesMut::from(&b\"hello\"[..]);\nassert_eq!(b.len(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:795":{"id":"0:795","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1596,0],"end":[1600,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"items":["0:796:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:682:256":{"id":"0:682:256","crate_id":0,"name":"Target","span":{"filename":"src/bytes_mut.rs","begin":[1149,4],"end":[1149,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"slice":{"primitive":"u8"}}}}},"1:12969:32845":{"id":"1:12969:32845","crate_id":1,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:111:2261":{"id":"0:111:2261","crate_id":0,"name":"put","span":{"filename":"src/buf/buf_mut.rs","begin":[197,4],"end":[219,5]},"visibility":"default","docs":"Transfer bytes into `self` from `src` and advance the cursor by the\nnumber of bytes written.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\n\nbuf.put_u8(b'h');\nbuf.put(&b\"ello\"[..]);\nbuf.put(&b\" world\"[..]);\n\nassert_eq!(buf, b\"hello world\");\n```\n\n# Panics\n\nPanics if `self` does not have enough capacity to contain `src`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"super::Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:462:669":{"id":"0:462:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[650,4],"end":[652,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:173:2401":{"id":"0:173:2401","crate_id":0,"name":"put_bytes","span":{"filename":"src/buf/buf_mut.rs","begin":[1448,4],"end":[1454,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:327":{"id":"0:327","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[222,0],"end":[226,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"1:31024:2579","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:329:753"],"negative":false,"synthetic":false,"blanket_impl":null}}},"4:5544:33939":{"id":"4:5544:33939","crate_id":4,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"4:7544:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3560-0:1154:1988":{"id":"b:1:3560-0:1154:1988","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3558:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1154:1988","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:3562:1644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:38:2135":{"id":"0:38:2135","crate_id":0,"name":"get_u32","span":{"filename":"src/buf/buf_impl.rs","begin":[460,4],"end":[462,5]},"visibility":"default","docs":"Gets an unsigned 32 bit integer from `self` in the big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_u32());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1065:2331":{"id":"0:1065:2331","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12968:32843":{"id":"1:12968:32843","crate_id":1,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"1:40377:28073","Self::is_ascii":"1:12967:32842"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"1:40377:28073","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:986:2127":{"id":"0:986:2127","crate_id":0,"name":"get_i16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:178:2261":{"id":"0:178:2261","crate_id":0,"name":"put","span":{"filename":"src/buf/buf_mut.rs","begin":[1494,4],"end":[1513,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"super::Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1061:2471":{"id":"0:1061:2471","crate_id":0,"name":"put_u64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2748-0:395:1847":{"id":"b:1:2748-0:395:1847","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2750:753"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:438:790":{"id":"0:438:790","crate_id":0,"name":"hash","span":{"filename":"src/bytes.rs","begin":[589,4],"end":[594,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"H"},"bounds":[{"trait_bound":{"trait":{"name":"hash::Hasher","id":"1:10211:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:694":{"id":"0:694","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1183,0],"end":[1187,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:695:753"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2441-0:1104:1984":{"id":"b:1:2441-0:1104:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1104:1984","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2443:2792"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:147:2529":{"id":"0:147:2529","crate_id":0,"name":"put_f32","span":{"filename":"src/buf/buf_mut.rs","begin":[1072,4],"end":[1074,5]},"visibility":"default","docs":"Writes  an IEEE754 single-precision (4 bytes) floating point number to\n`self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f32(1.2f32);\nassert_eq!(buf, b\"\\x3F\\x99\\x99\\x9A\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:120:2430":{"id":"0:120:2430","crate_id":0,"name":"put_i16","span":{"filename":"src/buf/buf_mut.rs","begin":[433,4],"end":[435,5]},"visibility":"default","docs":"Writes a signed 16 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i16(0x0809);\nassert_eq!(buf, b\"\\x08\\x09\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:998:2173":{"id":"0:998:2173","crate_id":0,"name":"get_i64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2443:2792":{"id":"1:2443:2792","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:169:2331":{"id":"0:169:2331","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1424,4],"end":[1426,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:224":{"id":"0:224","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[28,0],"end":[108,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"IntoIter","id":"0:1098:1983","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:226:1048","0:227:2627","0:228:2297","0:229:2653"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1079:2449":{"id":"0:1079:2449","crate_id":0,"name":"put_u32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32846:244-0:306:1986":{"id":"a:1:32846:244-0:306:1986","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32846:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:783":{"id":"0:783","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1566,0],"end":[1573,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:786:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:715":{"id":"0:715","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1255,0],"end":[1259,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:716:462"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1116:726":{"id":"0:1116:726","crate_id":0,"name":"fmt","span":{"filename":"src/buf/reader.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:9962:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:9943:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:716:462":{"id":"0:716:462","crate_id":0,"name":"clone","span":{"filename":"src/bytes_mut.rs","begin":[1256,4],"end":[1258,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2966:254-0:1111:1987":{"id":"a:1:2966:254-0:1111:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2966:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2966:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1111:1987","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:988:2135":{"id":"0:988:2135","crate_id":0,"name":"get_u32","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:741:756":{"id":"0:741:756","crate_id":0,"name":"from_iter","span":{"filename":"src/bytes_mut.rs","begin":[1326,4],"end":[1328,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["into_iter",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7896:163","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2748-0:1098:1983":{"id":"b:1:2748-0:1098:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1098:1983","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2750:753"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:994:2158":{"id":"0:994:2158","crate_id":0,"name":"get_u64","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1145:206":{"id":"0:1145:206","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"1:12869:31715":{"id":"1:12869:31715","crate_id":1,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"1:12870:31716"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5541:33938":{"id":"4:5541:33938","crate_id":4,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"4:7544:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:508:1146":{"id":"0:508:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[782,4],"end":[784,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:109:2354":{"id":"0:109:2354","crate_id":0,"name":"has_remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[124,4],"end":[126,5]},"visibility":"default","docs":"Returns true if there is space in `self` for more bytes.\n\nThis is equivalent to `self.remaining_mut() != 0`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 5];\nlet mut buf = &mut dst[..];\n\nassert!(buf.has_remaining_mut());\n\nbuf.put(&b\"hello\"[..]);\n\nassert!(!buf.has_remaining_mut());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:696":{"id":"0:696","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1189,0],"end":[1193,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:697:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12886:31728":{"id":"1:12886:31728","crate_id":1,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"5:12106:458","self::pattern":"1:12541:3716"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12561:11478","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:31:2103":{"id":"0:31:2103","crate_id":0,"name":"get_i8","span":{"filename":"src/buf/buf_impl.rs","begin":[311,4],"end":[316,5]},"visibility":"default","docs":"Gets a signed 8 bit integer from `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08 hello\"[..];\nassert_eq!(8, buf.get_i8());\n```\n\n# Panics\n\nThis function panics if there is no more remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:362-0:1111:1987":{"id":"0:362-0:1111:1987","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[41,15],"end":[41,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"self::reader::Reader","name":"Reader","id":"0:1111:1987","glob":false}}},"0:349:2627":{"id":"0:349:2627","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/writer.rs","begin":[72,4],"end":[74,5]},"visibility":"public","docs":"Consumes this `Writer`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::BufMut;\nuse std::io;\n\nlet mut buf = vec![].writer();\nlet mut src = &b\"hello world\"[..];\n\nio::copy(&mut src, &mut buf).unwrap();\n\nlet buf = buf.into_inner();\nassert_eq!(*buf, b\"hello world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"B"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:723:171":{"id":"0:723:171","crate_id":0,"name":"Item","span":{"filename":"src/bytes_mut.rs","begin":[1271,4],"end":[1271,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}}},"0:472:1146":{"id":"0:472:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[680,4],"end":[682,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1083:2462":{"id":"0:1083:2462","crate_id":0,"name":"put_u64","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12861:30330":{"id":"1:12861:30330","crate_id":1,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:10643:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:10643:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:171:2349":{"id":"0:171:2349","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1434,4],"end":[1438,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:230":{"id":"0:230","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[110,0],"end":[128,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["rposition","fold","chain","collect_into","partial_cmp","flatten","peekable","intersperse","gt","partial_cmp_by","cloned","max_by_key","reduce","position","partition","map_windows","skip_while","map","intersperse_with","next_chunk","eq_by","any","cycle","max_by","ge","try_reduce","all","partition_in_place","fuse","min","take_while","skip","for_each","size_hint","last","is_sorted","copied","zip","array_chunks","min_by_key","ne","find","take","is_partitioned","inspect","map_while","count","filter","advance_by","is_sorted_by","sum","min_by","find_map","try_fold","by_ref","le","scan","filter_map","nth","eq","lt","is_sorted_by_key","product","rev","try_find","try_for_each","try_collect","flat_map","collect","enumerate","step_by","cmp","max","__iterator_get_unchecked","cmp_by","unzip"],"trait":{"name":"Iterator","id":"1:8043:176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1098:1983","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:232:171","0:233:1062","0:234:2654"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:81:2000":{"id":"0:81:2000","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1348,4],"end":[1350,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:204:2037":{"id":"0:204:2037","crate_id":0,"name":"remaining","span":{"filename":"src/buf/chain.rs","begin":[137,4],"end":[139,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:336:2000":{"id":"0:336:2000","crate_id":0,"name":"chunk","span":{"filename":"src/buf/vec_deque.rs","begin":[10,4],"end":[17,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:145:2522":{"id":"0:145:2522","crate_id":0,"name":"put_int_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1019,4],"end":[1021,5]},"visibility":"default","docs":"Writes low `nbytes` of a signed integer to `self` in little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_int_le(0x0504010203, 3);\nassert_eq!(buf, b\"\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self` or if `nbytes` is greater than 8.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:445:848":{"id":"0:445:848","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes.rs","begin":[607,4],"end":[609,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:7896:163","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:703":{"id":"0:703","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1209,0],"end":[1214,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:2795:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:704:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:45:2162":{"id":"0:45:2162","crate_id":0,"name":"get_u64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[606,4],"end":[608,5]},"visibility":"default","docs":"Gets an unsigned 64 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_u64_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1110:726":{"id":"0:1110:726","crate_id":0,"name":"fmt","span":{"filename":"src/buf/limit.rs","begin":[8,9],"end":[8,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:9962:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:9943:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:319:2768":{"id":"0:319:2768","crate_id":0,"name":"as_uninit_slice_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[187,4],"end":[189,5]},"visibility":"public","docs":"Return a `&mut [MaybeUninit<u8>]` to this slice's buffer.\n\n# Safety\n\nThe caller **must not** read from the referenced memory and **must not** write\n**uninitialized** bytes to the slice either. This is because `BufMut` implementation\nthat created the `UninitSlice` knows which parts are initialized. Writing uninitalized\nbytes to the slice may cause the `BufMut` to read those bytes and trigger undefined\nbehavior.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut data = [0, 1, 2];\nlet mut slice = &mut data[..];\nunsafe {\n    let uninit_slice = BufMut::chunk_mut(&mut slice).as_uninit_slice_mut();\n};\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"1:31024:2579","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:254:2349":{"id":"0:254:2349","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/limit.rs","begin":[70,4],"end":[74,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2441-0:1117:1985":{"id":"b:1:2441-0:1117:1985","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1117:1985","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2443:2792"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:436:341":{"id":"0:436:341","crate_id":0,"name":"as_ref","span":{"filename":"src/bytes.rs","begin":[583,4],"end":[585,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:437":{"id":"0:437","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[588,0],"end":[595,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"1:10203:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:438:790"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:454":{"id":"0:454","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[629,0],"end":[633,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:455:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1088:2480":{"id":"0:1088:2480","crate_id":0,"name":"put_i64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:739":{"id":"0:739","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1325,0],"end":[1329,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"1:7892:143","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:741:756"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:991:2147":{"id":"0:991:2147","crate_id":0,"name":"get_i32","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:114:2401":{"id":"0:114:2401","crate_id":0,"name":"put_bytes","span":{"filename":"src/buf/buf_mut.rs","begin":[293,4],"end":[297,5]},"visibility":"default","docs":"Put `cnt` bytes `val` into `self`.\n\nLogically equivalent to calling `self.put_u8(val)` `cnt` times, but may work faster.\n\n`self` must have at least `cnt` remaining capacity.\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 6];\n\n{\n    let mut buf = &mut dst[..];\n    buf.put_bytes(b'a', 4);\n\n    assert_eq!(2, buf.remaining_mut());\n}\n\nassert_eq!(b\"aaaa\\0\\0\", &dst);\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1084:2466":{"id":"0:1084:2466","crate_id":0,"name":"put_u64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1043:2349":{"id":"0:1043:2349","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2759-0:1104:1984":{"id":"b:1:2759-0:1104:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2728:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1104:1984","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2762:135","1:2763:1629"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:324":{"id":"0:324","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[216,0],"end":[220,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"slice":{"primitive":"u8"}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:326:753"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12909:33224":{"id":"1:12909:33224","crate_id":1,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"1:12541:3716","str::split":"1:12897:3138","prim@char":"5:12106:458","str::split_terminator":"1:12906:33223"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"1:44393:7996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12561:11478","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1003:2218":{"id":"0:1003:2218","crate_id":0,"name":"get_int","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:198:2616":{"id":"0:198:2616","crate_id":0,"name":"last_ref","span":{"filename":"src/buf/chain.rs","begin":[90,4],"end":[92,5]},"visibility":"public","docs":"Gets a reference to the last underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet buf = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nassert_eq!(buf.last_ref()[..], b\"world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"U"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3560-0:1117:1985":{"id":"b:1:3560-0:1117:1985","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3558:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1117:1985","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3562:1644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1081:2455":{"id":"0:1081:2455","crate_id":0,"name":"put_i32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:451":{"id":"0:451","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[621,0],"end":[625,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"1:7892:143","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:452:756"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:758:1146":{"id":"0:758:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1489,4],"end":[1491,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12879:28125":{"id":"1:12879:28125","crate_id":1,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"1:44617:7882","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:776:669":{"id":"0:776:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1543,4],"end":[1545,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:153:1976":{"id":"0:153:1976","crate_id":0,"name":"limit","span":{"filename":"src/buf/buf_mut.rs","begin":[1212,4],"end":[1217,5]},"visibility":"default","docs":"Creates an adaptor which can write at most `limit` bytes to `self`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet arr = &mut [0u8; 128][..];\nassert_eq!(arr.remaining_mut(), 128);\n\nlet dst = arr.limit(10);\nassert_eq!(dst.remaining_mut(), 10);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["limit",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Limit","id":"0:1104:1984","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1002:2214":{"id":"0:1002:2214","crate_id":0,"name":"get_uint_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:461":{"id":"0:461","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[649,0],"end":[653,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:462:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:136:2488":{"id":"0:136:2488","crate_id":0,"name":"put_u128_le","span":{"filename":"src/buf/buf_mut.rs","begin":[805,4],"end":[807,5]},"visibility":"default","docs":"Writes an unsigned 128 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u128_le(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12940:33230":{"id":"1:12940:33230","crate_id":1,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:801":{"id":"0:801","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1614,0],"end":[1618,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:802:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:134:2480":{"id":"0:134:2480","crate_id":0,"name":"put_i64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[761,4],"end":[763,5]},"visibility":"default","docs":"Writes a signed 64 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i64_ne(0x0102030405060708);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");\n} else {\n    assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:86:2000":{"id":"0:86:2000","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1371,4],"end":[1380,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3560-0:1089:1982":{"id":"b:1:3560-0:1089:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3558:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1089:1982","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:3562:1644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:46:2167":{"id":"0:46:2167","crate_id":0,"name":"get_u64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[629,4],"end":[631,5]},"visibility":"default","docs":"Gets an unsigned 64 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\",\n    false => b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x0102030405060708, buf.get_u64_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:752:669":{"id":"0:752:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1471,4],"end":[1473,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1031:2170":{"id":"0:1031:2170","crate_id":0,"name":"get_i64","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:683:604":{"id":"0:683:604","crate_id":0,"name":"deref","span":{"filename":"src/bytes_mut.rs","begin":[1152,4],"end":[1154,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:523:753":{"id":"0:523:753","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[881,4],"end":[884,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bytes",{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Vec","id":"4:6969:270","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:42:2150":{"id":"0:42:2150","crate_id":0,"name":"get_i32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[543,4],"end":[545,5]},"visibility":"default","docs":"Gets a signed 32 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_i32_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1098:1983":{"id":"0:1098:1983","crate_id":0,"name":"IntoIter","span":{"filename":"src/buf/iter.rs","begin":[24,0],"end":[26,1]},"visibility":"public","docs":"Iterator over the bytes contained by the buffer.\n\n# Examples\n\nBasic usage:\n\n```\nuse bytes::Bytes;\n\nlet buf = Bytes::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\nassert_eq!(iter.next(), Some(b'b'));\nassert_eq!(iter.next(), Some(b'c'));\nassert_eq!(iter.next(), None);\n```\n\n[`iter`]: trait.Buf.html#method.iter\n[`Buf`]: trait.Buf.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:224","a:1:32928:3878-0:1098:1983","a:1:42553:3859-0:1098:1983","a:1:2966:254-0:1098:1983","a:1:42554:3858-0:1098:1983","a:1:32846:244-0:1098:1983","b:1:2444-0:1098:1983","b:1:2748-0:1098:1983","b:1:2754-0:1098:1983","b:1:7900-0:1098:1983","b:1:3560-0:1098:1983","b:1:2759-0:1098:1983","b:1:2441-0:1098:1983","b:1:2744-0:1098:1983","0:1101","0:230","0:235"]}}},"0:1136:832":{"id":"0:1136:832","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeFull","id":"1:40025:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:780:669":{"id":"0:780:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1555,4],"end":[1557,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1021:2130":{"id":"0:1021:2130","crate_id":0,"name":"get_i16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[193,0],"end":[229,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_bytes","put_u64","put_f32","put_f32_ne","put","put_u32_le","put_i128_ne","put_i128_le"],"trait":{"name":"BufMut","id":"0:106:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1089:1982","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["0:213:2331","0:214:2376","0:215:2349"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:675:2261":{"id":"0:675:2261","crate_id":0,"name":"put","span":{"filename":"src/bytes_mut.rs","begin":[1111,4],"end":[1121,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"crate::Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1049:2426":{"id":"0:1049:2426","crate_id":0,"name":"put_u16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2757:135":{"id":"1:2757:135","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:2728:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"1:7903:1983":{"id":"1:7903:1983","crate_id":1,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"I"}}}},"0:234:2654":{"id":"0:234:2654","crate_id":0,"name":"size_hint","span":{"filename":"src/buf/iter.rs","begin":[124,4],"end":[127,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265:2653":{"id":"0:265:2653","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/reader.rs","begin":[40,4],"end":[42,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32928:3878-0:1111:1987":{"id":"a:1:32928:3878-0:1111:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32928:3878","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32928:3878","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1111:1987","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2744-0:1117:1985":{"id":"b:1:2744-0:1117:1985","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1117:1985","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2747:2873"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:2966:254-0:1117:1985":{"id":"a:1:2966:254-0:1117:1985","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2966:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2966:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1117:1985","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42554:3858-0:306:1986":{"id":"a:1:42554:3858-0:306:1986","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42554:3858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1131:832":{"id":"0:1131:832","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeFrom","id":"1:40065:219","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2759-0:1117:1985":{"id":"b:1:2759-0:1117:1985","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2728:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1117:1985","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2762:135","1:2763:1629"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:473":{"id":"0:473","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[685,0],"end":[689,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:474:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:463":{"id":"0:463","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[655,0],"end":[659,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:464:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1025:2147":{"id":"0:1025:2147","crate_id":0,"name":"get_i32","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1063:2477":{"id":"0:1063:2477","crate_id":0,"name":"put_i64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:760:669":{"id":"0:760:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1495,4],"end":[1497,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:759":{"id":"0:759","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1494,0],"end":[1498,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:760:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:116:2409":{"id":"0:116:2409","crate_id":0,"name":"put_i8","span":{"filename":"src/buf/buf_mut.rs","begin":[340,4],"end":[343,5]},"visibility":"default","docs":"Writes a signed 8 bit integer to `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i8(0x01);\nassert_eq!(buf, b\"\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:311:2580":{"id":"0:311:2580","crate_id":0,"name":"uninit","span":{"filename":"src/buf/uninit_slice.rs","begin":[55,4],"end":[57,5]},"visibility":"public","docs":"Creates a `&mut UninitSlice` wrapping a slice of uninitialised memory.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\nuse core::mem::MaybeUninit;\n\nlet mut buffer = [MaybeUninit::uninit(); 64];\nlet slice = UninitSlice::uninit(&mut buffer[..]);\n\nlet mut vec = Vec::with_capacity(1024);\nlet spare: &mut UninitSlice = vec.spare_capacity_mut().into();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"1:31024:2579","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:123:2440":{"id":"0:123:2440","crate_id":0,"name":"put_u32","span":{"filename":"src/buf/buf_mut.rs","begin":[503,4],"end":[505,5]},"visibility":"default","docs":"Writes an unsigned 32 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u32(0x0809A0A1);\nassert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:650:2588":{"id":"0:650:2588","crate_id":0,"name":"extend_from_slice","span":{"filename":"src/bytes_mut.rs","begin":[765,4],"end":[780,5]},"visibility":"public","docs":"Appends given bytes to this `BytesMut`.\n\nIf this `BytesMut` object does not have enough capacity, it is resized\nfirst.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::with_capacity(0);\nbuf.extend_from_slice(b\"aaabbb\");\nbuf.extend_from_slice(b\"cccddd\");\n\nassert_eq!(b\"aaabbbcccddd\", &buf[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["extend",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1121":{"id":"0:1121","crate_id":0,"name":null,"span":{"filename":"src/buf/take.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9987:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9987:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1117:1985","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1123:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:140:2502":{"id":"0:140:2502","crate_id":0,"name":"put_i128_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[901,4],"end":[903,5]},"visibility":"default","docs":"Writes a signed 128 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i128_ne(0x01020304050607080910111213141516);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");\n} else {\n    assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:160":{"id":"0:160","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1382,0],"end":[1384,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_bytes","put_u64","put_f32","put_f32_ne","put","put_u32_le","put_i128_ne","put_i128_le"],"trait":{"name":"BufMut","id":"0:106:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::boxed::Box","id":"4:281:1993","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1065:2331","0:1066:2376","0:1067:2349","0:1068:2391","0:1069:2402","0:1070:2409","0:1071:2413","0:1072:2418","0:1073:2426","0:1074:2430","0:1075:2433","0:1076:2436","0:1077:2440","0:1078:2444","0:1079:2449","0:1080:2452","0:1081:2455","0:1082:2458","0:1083:2462","0:1084:2466","0:1085:2471","0:1086:2474","0:1087:2477","0:1088:2480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:699:1146":{"id":"0:699:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1196,4],"end":[1198,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1165:726":{"id":"0:1165:726","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[36,0],"end":[36,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:9962:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:9943:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:512:753":{"id":"0:512:753","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[797,4],"end":[799,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:516:753":{"id":"0:516:753","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[809,4],"end":[840,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["vec",{"resolved_path":{"name":"Vec","id":"4:6969:270","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:737:756":{"id":"0:737:756","crate_id":0,"name":"from_iter","span":{"filename":"src/bytes_mut.rs","begin":[1320,4],"end":[1322,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["into_iter",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7896:163","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3562:1644":{"id":"1:3562:1644","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"1:40190:7928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:252:2331":{"id":"0:252:2331","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/limit.rs","begin":[60,4],"end":[62,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:468:1146":{"id":"0:468:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[668,4],"end":[670,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12867:31712":{"id":"1:12867:31712","crate_id":1,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"1:12869:31715","str::split_at_mut":"1:12868:2577"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12903:31719":{"id":"1:12903:31719","crate_id":1,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"1:12541:3716","`DoubleEndedIterator`":"1:7934:128","prim@char":"5:12106:458","str::split":"1:12897:3138"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"1:44343:4310","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12561:11478","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12857:2001":{"id":"1:12857:2001","crate_id":1,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"1:42427:198"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:10643:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:10643:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1017:2113":{"id":"0:1017:2113","crate_id":0,"name":"get_u16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1034:2204":{"id":"0:1034:2204","crate_id":0,"name":"get_uint","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:138:2496":{"id":"0:138:2496","crate_id":0,"name":"put_i128","span":{"filename":"src/buf/buf_mut.rs","begin":[853,4],"end":[855,5]},"visibility":"default","docs":"Writes a signed 128 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i128(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2744-0:1154:1988":{"id":"b:1:2744-0:1154:1988","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1154:1988","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2747:2873"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12893:4058":{"id":"1:12893:4058","crate_id":1,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"1:42427:198","prim@char":"5:12106:458","self::pattern":"1:12541:3716"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12561:11478","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:500:1146":{"id":"0:500:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[764,4],"end":[766,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1386,0],"end":[1420,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_bytes","put_u64","put_f32","put_f32_ne","put","put_u32_le","put_i128_ne","put_i128_le"],"trait":{"name":"BufMut","id":"0:106:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"items":["0:163:2331","0:164:2376","0:165:2349","0:166:2391","0:167:2401"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:2747:2873":{"id":"1:2747:2873","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2721:142"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:408:883":{"id":"0:408:883","crate_id":0,"name":"len","span":{"filename":"src/bytes.rs","begin":[192,4],"end":[194,5]},"visibility":"public","docs":"Returns the number of bytes contained in this `Bytes`.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::from(&b\"hello\"[..]);\nassert_eq!(b.len(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2748-0:1154:1988":{"id":"b:1:2748-0:1154:1988","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1154:1988","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2750:753"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:510:60":{"id":"0:510:60","crate_id":0,"name":"default","span":{"filename":"src/bytes.rs","begin":[791,4],"end":[793,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1030:2167":{"id":"0:1030:2167","crate_id":0,"name":"get_u64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:429:2000":{"id":"0:429:2000","crate_id":0,"name":"chunk","span":{"filename":"src/bytes.rs","begin":[543,4],"end":[545,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1058:2458":{"id":"0:1058:2458","crate_id":0,"name":"put_i32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1124":{"id":"0:1124","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:40008:2709","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Range","id":"1:40041:217","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1125:206","0:1126:832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:4:687-0:613:1848":{"id":"b:4:687-0:613:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:683:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["4:689:3706","4:690:27700","4:691:27701"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"4:691:27701":{"id":"4:691:27701","crate_id":4,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:990:2144":{"id":"0:990:2144","crate_id":0,"name":"get_u32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1015:2103":{"id":"0:1015:2103","crate_id":0,"name":"get_i8","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:127:2455":{"id":"0:127:2455","crate_id":0,"name":"put_i32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[595,4],"end":[597,5]},"visibility":"default","docs":"Writes a signed 32 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i32_le(0x0809A0A1);\nassert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12944:33233":{"id":"1:12944:33233","crate_id":1,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"5:12106:458","self::pattern":"1:12541:3716"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"1:12566:11477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1086:2474":{"id":"0:1086:2474","crate_id":0,"name":"put_i64","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:413:2906":{"id":"0:413:2906","crate_id":0,"name":"slice_ref","span":{"filename":"src/bytes.rs","begin":[305,4],"end":[336,5]},"visibility":"public","docs":"Returns a slice of self that is equivalent to the given `subset`.\n\nWhen processing a `Bytes` buffer with other tools, one often gets a\n`&[u8]` which is in fact a slice of the `Bytes`, i.e. a subset of it.\nThis function turns that `&[u8]` into another `Bytes`, as if one had\ncalled `self.slice()` with the offsets that correspond to `subset`.\n\nThis operation is `O(1)`.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet bytes = Bytes::from(&b\"012345678\"[..]);\nlet as_slice = bytes.as_ref();\nlet subset = &as_slice[2..6];\nlet subslice = bytes.slice_ref(&subset);\nassert_eq!(&subslice[..], b\"2345\");\n```\n\n# Panics\n\nRequires that the given `sub` slice is in fact contained within the\n`Bytes` buffer; otherwise this function will panic.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["subset",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1012:2069":{"id":"0:1012:2069","crate_id":0,"name":"has_remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:355-0:106:1843":{"id":"0:355-0:106:1843","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[33,0],"end":[33,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::buf_mut::BufMut","name":"BufMut","id":"0:106:1843","glob":false}}},"0:791":{"id":"0:791","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1584,0],"end":[1588,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"items":["0:792:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:802:669":{"id":"0:802:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1615,4],"end":[1617,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1024:2144":{"id":"0:1024:2144","crate_id":0,"name":"get_u32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:775":{"id":"0:775","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1542,0],"end":[1546,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:776:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1129":{"id":"0:1129","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:40008:2709","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeFrom","id":"1:40065:219","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1130:206","0:1131:832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:509":{"id":"0:509","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[789,0],"end":[794,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:2795:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:510:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:751":{"id":"0:751","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1470,0],"end":[1474,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:752:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1085:2471":{"id":"0:1085:2471","crate_id":0,"name":"put_u64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:980:2100":{"id":"0:980:2100","crate_id":0,"name":"get_u8","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:168":{"id":"0:168","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1422,0],"end":[1455,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_bytes","put_u64","put_f32","put_f32_ne","put","put_u32_le","put_i128_ne","put_i128_le"],"trait":{"name":"BufMut","id":"0:106:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"core::mem::MaybeUninit","id":"1:31024:2579","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"items":["0:169:2331","0:170:2376","0:171:2349","0:172:2391","0:173:2401"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/buf/take.rs","begin":[132,0],"end":[155,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","take","chain","get_uint","get_f64_ne","get_u16_le","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_ne","get_u32","copy_to_slice","chunks_vectored","get_u128_ne","get_i128","get_u16_ne","get_u128","get_i128_le","get_i128_ne","get_f32_ne","reader","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","has_remaining","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64"],"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1117:1985","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:290:2037","0:291:2000","0:292:2003","0:293:2258"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:672:2331":{"id":"0:672:2331","crate_id":0,"name":"remaining_mut","span":{"filename":"src/bytes_mut.rs","begin":[1084,4],"end":[1086,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42553:3859-0:1111:1987":{"id":"a:1:42553:3859-0:1111:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42553:3859","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42553:3859","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1111:1987","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:646:2590":{"id":"0:646:2590","crate_id":0,"name":"resize","span":{"filename":"src/bytes_mut.rs","begin":[461,4],"end":[474,5]},"visibility":"public","docs":"Resizes the buffer so that `len` is equal to `new_len`.\n\nIf `new_len` is greater than `len`, the buffer is extended by the\ndifference with each additional byte set to `value`. If `new_len` is\nless than `len`, the buffer is simply truncated.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::new();\n\nbuf.resize(3, 0x1);\nassert_eq!(&buf[..], &[0x1, 0x1, 0x1]);\n\nbuf.resize(2, 0x2);\nassert_eq!(&buf[..], &[0x1, 0x1]);\n\nbuf.resize(4, 0x3);\nassert_eq!(&buf[..], &[0x1, 0x1, 0x3, 0x3]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["new_len",{"primitive":"usize"}],["value",{"primitive":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12866:33221":{"id":"1:12866:33221","crate_id":1,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"5:12112:1548","crate::ops::IndexMut":"1:3222:2710","str::slice_unchecked":"1:12865:33220"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"1:12873:8012":{"id":"1:12873:8012","crate_id":1,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"5:12106:458"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"1:44301:7993","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:669:2003":{"id":"0:669:2003","crate_id":0,"name":"advance","span":{"filename":"src/bytes_mut.rs","begin":[1065,4],"end":[1075,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:634:2260":{"id":"0:634:2260","crate_id":0,"name":"with_capacity","span":{"filename":"src/bytes_mut.rs","begin":[142,4],"end":[144,5]},"visibility":"public","docs":"Creates a new `BytesMut` with the specified capacity.\n\nThe returned `BytesMut` will be able to hold at least `capacity` bytes\nwithout reallocating.\n\nIt is important to note that this function does not specify the length\nof the returned `BytesMut`, but only the capacity.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut bytes = BytesMut::with_capacity(64);\n\n// `bytes` contains no data, even though there is capacity\nassert_eq!(bytes.len(), 0);\n\nbytes.put(&b\"hello world\"[..]);\n\nassert_eq!(&bytes[..], b\"hello world\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["capacity",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:40:2144":{"id":"0:40:2144","crate_id":0,"name":"get_u32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[503,4],"end":[505,5]},"visibility":"default","docs":"Gets an unsigned 32 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x08\\x09\\xA0\\xA1 hello\",\n    false => b\"\\xA1\\xA0\\x09\\x08 hello\",\n};\nassert_eq!(0x0809A0A1, buf.get_u32_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2441-0:1098:1983":{"id":"b:1:2441-0:1098:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1098:1983","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2443:2792"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:80:2037":{"id":"0:80:2037","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1343,4],"end":[1345,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:499":{"id":"0:499","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[763,0],"end":[767,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"items":["0:500:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1057:2455":{"id":"0:1057:2455","crate_id":0,"name":"put_i32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:200:2627":{"id":"0:200:2627","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/chain.rs","begin":[127,4],"end":[129,5]},"visibility":"public","docs":"Consumes this `Chain`, returning the underlying values.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet chain = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nlet (first, last) = chain.into_inner();\nassert_eq!(first[..], b\"hello\"[..]);\nassert_eq!(last[..], b\"world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"tuple":[{"generic":"T"},{"generic":"U"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2754-0:1111:1987":{"id":"b:1:2754-0:1111:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2728:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2724:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1111:1987","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2757:135","1:2758:1631"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1053:2440":{"id":"0:1053:2440","crate_id":0,"name":"put_u32","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:152:2549":{"id":"0:152:2549","crate_id":0,"name":"put_f64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1195,4],"end":[1197,5]},"visibility":"default","docs":"Writes  an IEEE754 double-precision (8 bytes) floating point number to\n`self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f64_ne(1.2f64);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33\");\n} else {\n    assert_eq!(buf, b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:283:2627":{"id":"0:283:2627","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/take.rs","begin":[39,4],"end":[41,5]},"visibility":"public","docs":"Consumes this `Take`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\".take(2);\nlet mut dst = vec![];\n\ndst.put(&mut buf);\nassert_eq!(*dst, b\"he\"[..]);\n\nlet mut buf = buf.into_inner();\n\ndst.clear();\ndst.put(&mut buf);\nassert_eq!(*dst, b\"llo world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:197:2613":{"id":"0:197:2613","crate_id":0,"name":"first_mut","span":{"filename":"src/buf/chain.rs","begin":[74,4],"end":[76,5]},"visibility":"public","docs":"Gets a mutable reference to the first underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nbuf.first_mut().advance(1);\n\nlet full = buf.copy_to_bytes(9);\nassert_eq!(full, b\"elloworld\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:416:2945":{"id":"0:416:2945","crate_id":0,"name":"truncate","span":{"filename":"src/bytes.rs","begin":[456,4],"end":[469,5]},"visibility":"public","docs":"Shortens the buffer, keeping the first `len` bytes and dropping the\nrest.\n\nIf `len` is greater than the buffer's current length, this has no\neffect.\n\nThe [`split_off`] method can emulate `truncate`, but this causes the\nexcess bytes to be returned instead of dropped.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut buf = Bytes::from(&b\"hello world\"[..]);\nbuf.truncate(5);\nassert_eq!(buf, b\"hello\"[..]);\n```\n\n[`split_off`]: #method.split_off","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:404":{"id":"0:404","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[119,0],"end":[516,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:405:1048","0:407:2859","0:408:883","0:409:2068","0:410:2578","0:411:1515","0:413:2906","0:414:2924","0:415:2933","0:416:2945","0:417:2951"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:705":{"id":"0:705","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1216,0],"end":[1224,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"1:10203:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:706:790"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:47:2170":{"id":"0:47:2170","crate_id":0,"name":"get_i64","span":{"filename":"src/buf/buf_impl.rs","begin":[649,4],"end":[651,5]},"visibility":"default","docs":"Gets a signed 64 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_i64());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:983:2113":{"id":"0:983:2113","crate_id":0,"name":"get_u16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2444-0:1098:1983":{"id":"b:1:2444-0:1098:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1098:1983","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2446:3271"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12845:883":{"id":"1:12845:883","crate_id":1,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"5:12106:458"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12880:3320":{"id":"1:12880:3320","crate_id":1,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"5:12106:458","self::pattern":"1:12541:3716"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:701:469":{"id":"0:701:469","crate_id":0,"name":"cmp","span":{"filename":"src/bytes_mut.rs","begin":[1202,4],"end":[1204,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:674:2376":{"id":"0:674:2376","crate_id":0,"name":"chunk_mut","span":{"filename":"src/bytes_mut.rs","begin":[1101,4],"end":[1106,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:7902:171":{"id":"1:7902:171","crate_id":1,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"Iterator","id":"1:8043:176","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:782:1146":{"id":"0:782:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1561,4],"end":[1563,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12915:31723":{"id":"1:12915:31723","crate_id":1,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"5:12106:458","str::splitn":"1:12912:31721","self::pattern":"1:12541:3716"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"1:44447:4305","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12561:11478","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:410:2578":{"id":"0:410:2578","crate_id":0,"name":"copy_from_slice","span":{"filename":"src/bytes.rs","begin":[212,4],"end":[214,5]},"visibility":"public","docs":"Creates `Bytes` instance from slice, by copying it.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["data",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:498:669":{"id":"0:498:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[758,4],"end":[760,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5555:32920":{"id":"4:5555:32920","crate_id":4,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:12970:32846"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:425":{"id":"0:425","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[529,0],"end":[534,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:426:462"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:62:2229":{"id":"0:62:2229","crate_id":0,"name":"get_f32","span":{"filename":"src/buf/buf_impl.rs","begin":[973,4],"end":[975,5]},"visibility":"default","docs":"Gets an IEEE754 single-precision (4 bytes) floating point number from\n`self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x3F\\x99\\x99\\x9A hello\"[..];\nassert_eq!(1.2f32, buf.get_f32());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1042:2376":{"id":"0:1042:2376","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:286:1976":{"id":"0:286:1976","crate_id":0,"name":"limit","span":{"filename":"src/buf/take.rs","begin":[99,4],"end":[101,5]},"visibility":"public","docs":"Returns the maximum number of bytes that can be read.\n\n# Note\n\nIf the inner `Buf` has fewer bytes than indicated by this method then\nthat is the actual number of available bytes.\n\n# Examples\n\n```rust\nuse bytes::Buf;\n\nlet mut buf = b\"hello world\".take(2);\n\nassert_eq!(2, buf.limit());\nassert_eq!(b'h', buf.get_u8());\nassert_eq!(1, buf.limit());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42553:3859-0:395:1847":{"id":"a:1:42553:3859-0:395:1847","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42553:3859","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:497":{"id":"0:497","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[757,0],"end":[761,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"items":["0:498:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32846:244-0:1098:1983":{"id":"a:1:32846:244-0:1098:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32846:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32846:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1098:1983","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:291:2000":{"id":"0:291:2000","crate_id":0,"name":"chunk","span":{"filename":"src/buf/take.rs","begin":[137,4],"end":[140,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:984:2120":{"id":"0:984:2120","crate_id":0,"name":"get_u16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:521:753":{"id":"0:521:753","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[875,4],"end":[877,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"resolved_path":{"name":"String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1148:833":{"id":"0:1148:833","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeTo","id":"1:40085:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:247:2653":{"id":"0:247:2653","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/limit.rs","begin":[34,4],"end":[36,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2748-0:1117:1985":{"id":"b:1:2748-0:1117:1985","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1117:1985","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2750:753"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:700":{"id":"0:700","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1201,0],"end":[1205,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","min","max"],"trait":{"name":"Ord","id":"1:2540:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:701:469"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:167:2401":{"id":"0:167:2401","crate_id":0,"name":"put_bytes","span":{"filename":"src/buf/buf_mut.rs","begin":[1413,4],"end":[1419,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2748-0:1104:1984":{"id":"b:1:2748-0:1104:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1104:1984","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2750:753"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1162":{"id":"0:1162","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[35,0],"end":[35,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"1:9998:3324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1163:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:417:2951":{"id":"0:417:2951","crate_id":0,"name":"clear","span":{"filename":"src/bytes.rs","begin":[483,4],"end":[485,5]},"visibility":"public","docs":"Clears the buffer, removing all data.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut buf = Bytes::from(&b\"hello world\"[..]);\nbuf.clear();\nassert!(buf.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12927:33225":{"id":"1:12927:33225","crate_id":1,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"1:12541:3716","`DoubleEndedIterator`":"1:7934:128","prim@char":"5:12106:458","str::matches":"1:12924:3378"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"1:44547:8000","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12561:11478","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:24:2000":{"id":"0:24:2000","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[133,4],"end":[133,29]},"visibility":"default","docs":"Returns a slice starting at the current position and of length between 0\nand `Buf::remaining()`. Note that this *can* return shorter slice (this allows\nnon-continuous internal representation).\n\nThis is a lower level function. Most operations are done with other\nfunctions.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(buf.chunk(), &b\"hello world\"[..]);\n\nbuf.advance(6);\n\nassert_eq!(buf.chunk(), &b\"world\"[..]);\n```\n\n# Implementer notes\n\nThis function should never panic. Once the end of the buffer is reached,\ni.e., `Buf::remaining` returns 0, calls to `chunk()` should return an\nempty slice.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:61:2224":{"id":"0:61:2224","crate_id":0,"name":"get_int_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[948,4],"end":[954,5]},"visibility":"default","docs":"Gets a signed n-byte integer from `self` in native-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03 hello\",\n    false => b\"\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x010203, buf.get_int_ne(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1060:2466":{"id":"0:1060:2466","crate_id":0,"name":"put_u64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1071:2413":{"id":"0:1071:2413","crate_id":0,"name":"put_u16","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42554:3858-0:1089:1982":{"id":"a:1:42554:3858-0:1089:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42554:3858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42554:3858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42554:3858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1089:1982","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:422":{"id":"0:422","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[520,0],"end":[520,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2966:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:360-0:306:1986":{"id":"0:360-0:306:1986","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[38,0],"end":[38,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::uninit_slice::UninitSlice","name":"UninitSlice","id":"0:306:1986","glob":false}}},"0:1038:2221":{"id":"0:1038:2221","crate_id":0,"name":"get_int_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2441-0:395:1847":{"id":"b:1:2441-0:395:1847","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2443:2792"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:804:753":{"id":"0:804:753","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1621,4],"end":[1655,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bytes",{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1076:2436":{"id":"0:1076:2436","crate_id":0,"name":"put_i16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2444-0:613:1848":{"id":"b:1:2444-0:613:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2446:3271"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12970:32846":{"id":"1:12970:32846","crate_id":1,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2754-0:395:1847":{"id":"b:1:2754-0:395:1847","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2728:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2724:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2757:135","1:2758:1631"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:12974:32851":{"id":"1:12974:32851","crate_id":1,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"1:910:37263"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:73:1977":{"id":"0:73:1977","crate_id":0,"name":"reader","span":{"filename":"src/buf/buf_impl.rs","begin":[1188,4],"end":[1193,5]},"visibility":"default","docs":"Creates an adaptor which implements the `Read` trait for `self`.\n\nThis function returns a new value which implements `Read` by adapting\nthe `Read` trait functions to the `Buf` trait functions. Given that\n`Buf` operations are infallible, none of the `Read` functions will\nreturn with `Err`.\n\n# Examples\n\n```\nuse bytes::{Bytes, Buf};\nuse std::io::Read;\n\nlet buf = Bytes::from(\"hello world\");\n\nlet mut reader = buf.reader();\nlet mut dst = [0; 1024];\n\nlet num = reader.read(&mut dst).unwrap();\n\nassert_eq!(11, num);\nassert_eq!(&dst[..11], &b\"hello world\"[..]);\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Reader","id":"0:1111:1987","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1130:206":{"id":"0:1130:206","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:306:1986":{"id":"0:306:1986","crate_id":0,"name":"UninitSlice","span":{"filename":"src/buf/uninit_slice.rs","begin":[22,0],"end":[22,42]},"visibility":"public","docs":"Uninitialized byte slice.\n\nReturned by `BufMut::chunk_mut()`, the referenced byte slice may be\nuninitialized. The wrapper provides safe access without introducing\nundefined behavior.\n\nThe safety invariants of this wrapper are:\n\n 1. Reading from an `UninitSlice` is undefined behavior.\n 2. Writing uninitialized bytes to an `UninitSlice` is undefined behavior.\n\nThe difference between `&mut UninitSlice` and `&mut [MaybeUninit<u8>]` is\nthat it is possible in safe code to write uninitialized bytes to an\n`&mut [MaybeUninit<u8>]`, which this type prohibits.","links":{},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:309","a:1:32928:3878-0:306:1986","a:1:42553:3859-0:306:1986","a:1:2966:254-0:306:1986","a:1:42554:3858-0:306:1986","a:1:32846:244-0:306:1986","a:1:32847:2273-0:306:1986","b:1:2444-0:306:1986","b:1:3560-0:306:1986","b:1:2441-0:306:1986","0:324","0:1149","0:1137","0:1152","0:1124","0:1134","0:322","0:1127","0:1142","0:1144","0:327","0:1147","0:1139","0:1132","0:1129"]}}},"0:721":{"id":"0:721","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1270,0],"end":[1277,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7896:163","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:723:171","0:724:1983","0:725:848"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:42554:3858-0:395:1847":{"id":"a:1:42554:3858-0:395:1847","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42554:3858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:427":{"id":"0:427","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[536,0],"end":[570,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","take","chain","get_uint","get_f64_ne","get_u16_le","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_ne","get_u32","copy_to_slice","chunks_vectored","get_u128_ne","get_i128","get_u16_ne","get_u128","get_i128_le","get_i128_ne","get_f32_ne","reader","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","has_remaining","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64"],"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:428:2037","0:429:2000","0:430:2003","0:431:2258"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:68:2258":{"id":"0:68:2258","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/buf_impl.rs","begin":[1103,4],"end":[1111,5]},"visibility":"default","docs":"Consumes `len` bytes inside self and returns new instance of `Bytes`\nwith this data.\n\nThis function may be optimized by the underlying type to avoid actual\ncopies. For example, `Bytes` implementation will do a shallow copy\n(ref-count increment).\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet bytes = (&b\"hello world\"[..]).copy_to_bytes(5);\nassert_eq!(&bytes[..], &b\"hello\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"crate::Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:253:2376":{"id":"0:253:2376","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/limit.rs","begin":[64,4],"end":[68,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1111:1987":{"id":"0:1111:1987","crate_id":0,"name":"Reader","span":{"filename":"src/buf/reader.rs","begin":[11,0],"end":[13,1]},"visibility":"public","docs":"A `Buf` adapter which implements `io::Read` for the inner value.\n\nThis struct is generally created by calling `reader()` on `Buf`. See\ndocumentation of [`reader()`](trait.Buf.html#method.reader) for more\ndetails.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:262","a:1:32928:3878-0:1111:1987","a:1:42553:3859-0:1111:1987","a:1:2966:254-0:1111:1987","a:1:42554:3858-0:1111:1987","a:1:32846:244-0:1111:1987","b:1:2444-0:1111:1987","b:1:2748-0:1111:1987","b:1:2754-0:1111:1987","b:1:3560-0:1111:1987","b:1:2759-0:1111:1987","b:1:2441-0:1111:1987","b:1:2744-0:1111:1987","0:270","0:267","0:1114"]}}},"0:1068:2391":{"id":"0:1068:2391","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:800:669":{"id":"0:800:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1609,4],"end":[1611,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:685:3270":{"id":"0:685:3270","crate_id":0,"name":"as_mut","span":{"filename":"src/bytes_mut.rs","begin":[1159,4],"end":[1161,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:995:2162":{"id":"0:995:2162","crate_id":0,"name":"get_u64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:428:2037":{"id":"0:428:2037","crate_id":0,"name":"remaining","span":{"filename":"src/bytes.rs","begin":[538,4],"end":[540,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:433:256":{"id":"0:433:256","crate_id":0,"name":"Target","span":{"filename":"src/bytes.rs","begin":[573,4],"end":[573,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"slice":{"primitive":"u8"}}}}},"0:680:341":{"id":"0:680:341","crate_id":0,"name":"as_ref","span":{"filename":"src/bytes_mut.rs","begin":[1143,4],"end":[1145,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:87:2003":{"id":"0:87:2003","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1382,4],"end":[1389,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1150:206":{"id":"0:1150:206","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:480:1146":{"id":"0:480:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[704,4],"end":[706,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Vec","id":"4:6969:270","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:108:2349":{"id":"0:108:2349","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[104,4],"end":[104,49]},"visibility":"default","docs":"Advance the internal cursor of the BufMut\n\nThe next call to `chunk_mut` will return a slice starting `cnt` bytes\nfurther into the underlying buffer.\n\nThis function is unsafe because there is no guarantee that the bytes\nbeing advanced past have been initialized.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = Vec::with_capacity(16);\n\n// Write some data\nbuf.chunk_mut()[0..2].copy_from_slice(b\"he\");\nunsafe { buf.advance_mut(2) };\n\n// write more bytes\nbuf.chunk_mut()[0..3].copy_from_slice(b\"llo\");\n\nunsafe { buf.advance_mut(3); }\n\nassert_eq!(5, buf.len());\nassert_eq!(buf, b\"hello\");\n```\n\n# Panics\n\nThis function **may** panic if `cnt > self.remaining_mut()`.\n\n# Implementer notes\n\nIt is recommended for implementations of `advance_mut` to panic if\n`cnt > self.remaining_mut()`. If the implementation does not panic,\nthe call must behave as if `cnt == self.remaining_mut()`.\n\nA call with `cnt == 0` should never panic and be a no-op.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"0:335:2037":{"id":"0:335:2037","crate_id":0,"name":"remaining","span":{"filename":"src/buf/vec_deque.rs","begin":[6,4],"end":[8,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:978:2069":{"id":"0:978:2069","crate_id":0,"name":"has_remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144:2519":{"id":"0:144:2519","crate_id":0,"name":"put_int","span":{"filename":"src/buf/buf_mut.rs","begin":[997,4],"end":[999,5]},"visibility":"default","docs":"Writes low `nbytes` of a signed integer to `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_int(0x0504010203, 3);\nassert_eq!(buf, b\"\\x01\\x02\\x03\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self` or if `nbytes` is greater than 8.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:70:1978":{"id":"0:70:1978","crate_id":0,"name":"take","span":{"filename":"src/buf/buf_impl.rs","begin":[1134,4],"end":[1139,5]},"visibility":"default","docs":"Creates an adaptor which will read at most `limit` bytes from `self`.\n\nThis function returns a new instance of `Buf` which will read at most\n`limit` bytes.\n\n# Examples\n\n```\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\"[..].take(5);\nlet mut dst = vec![];\n\ndst.put(&mut buf);\nassert_eq!(dst, b\"hello\");\n\nlet mut buf = buf.into_inner();\ndst.clear();\ndst.put(&mut buf);\nassert_eq!(dst, b\" world\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["limit",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Take","id":"0:1117:1985","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2744-0:1098:1983":{"id":"b:1:2744-0:1098:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1098:1983","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2747:2873"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:266:2627":{"id":"0:266:2627","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/reader.rs","begin":[60,4],"end":[62,5]},"visibility":"public","docs":"Consumes this `Reader`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::Buf;\nuse std::io;\n\nlet mut buf = b\"hello world\".reader();\nlet mut dst = vec![];\n\nio::copy(&mut buf, &mut dst).unwrap();\n\nlet buf = buf.into_inner();\nassert_eq!(0, buf.remaining());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"B"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:310:1048":{"id":"0:310:1048","crate_id":0,"name":"new","span":{"filename":"src/buf/uninit_slice.rs","begin":[36,4],"end":[38,5]},"visibility":"public","docs":"Creates a `&mut UninitSlice` wrapping a slice of initialised memory.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\n\nlet mut buffer = [0u8; 64];\nlet slice = UninitSlice::new(&mut buffer[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:309":{"id":"0:309","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[24,0],"end":[208,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:310:1048","0:311:2580","0:313:2587","0:315:2747","0:316:2578","0:318:2094","0:319:2768","0:321:883"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:358-0:1104:1984":{"id":"0:358-0:1104:1984","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[36,0],"end":[36,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::limit::Limit","name":"Limit","id":"0:1104:1984","glob":false}}},"0:513":{"id":"0:513","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[802,0],"end":[806,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:514:753"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:772:669":{"id":"0:772:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1531,4],"end":[1533,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1033:2176":{"id":"0:1033:2176","crate_id":0,"name":"get_i64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:175:2331":{"id":"0:175:2331","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1459,4],"end":[1462,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32846:244-0:1104:1984":{"id":"a:1:32846:244-0:1104:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32846:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32846:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1104:1984","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:651:3241":{"id":"0:651:3241","crate_id":0,"name":"unsplit","span":{"filename":"src/bytes_mut.rs","begin":[806,4],"end":[815,5]},"visibility":"public","docs":"Absorbs a `BytesMut` that was previously split off.\n\nIf the two `BytesMut` objects were previously contiguous and not mutated\nin a way that causes re-allocation i.e., if `other` was created by\ncalling `split_off` on this `BytesMut`, then this is an `O(1)` operation\nthat just decreases a reference count and sets a few indices.\nOtherwise this method degenerates to\n`self.extend_from_slice(other.as_ref())`.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::with_capacity(64);\nbuf.extend_from_slice(b\"aaabbbcccddd\");\n\nlet split = buf.split_off(6);\nassert_eq!(b\"aaabbb\", &buf[..]);\nassert_eq!(b\"cccddd\", &split[..]);\n\nbuf.unsplit(split);\nassert_eq!(b\"aaabbbcccddd\", &buf[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:441:2792":{"id":"0:441:2792","crate_id":0,"name":"borrow","span":{"filename":"src/bytes.rs","begin":[598,4],"end":[600,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:719:1983":{"id":"0:719:1983","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes_mut.rs","begin":[1263,4],"end":[1263,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IntoIter","id":"0:1098:1983","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:792:669":{"id":"0:792:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1585,4],"end":[1587,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:678:2401":{"id":"0:678:2401","crate_id":0,"name":"put_bytes","span":{"filename":"src/bytes_mut.rs","begin":[1127,4],"end":[1138,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:712":{"id":"0:712","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1238,0],"end":[1253,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_fmt","write_char"],"trait":{"name":"Write","id":"1:9944:2790","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:713:1753","0:714:3272"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:322":{"id":"0:322","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[210,0],"end":[214,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9987:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:323:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:871-0:613:1848":{"id":"0:871-0:613:1848","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[92,0],"end":[92,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::bytes_mut::BytesMut","name":"BytesMut","id":"0:613:1848","glob":false}}},"1:12848:33217":{"id":"1:12848:33217","crate_id":1,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:762:1146":{"id":"0:762:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1501,4],"end":[1503,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12868:2577":{"id":"1:12868:2577","crate_id":1,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:12867:31712","str::split_at_mut_checked":"1:12870:31716"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12874:1844":{"id":"1:12874:1844","crate_id":1,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"1:44311:1847","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1018:2120":{"id":"0:1018:2120","crate_id":0,"name":"get_u16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12897:3138":{"id":"1:12897:3138","crate_id":1,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"1:12541:3716","`DoubleEndedIterator`":"1:7934:128","prim@char":"5:12106:458","str::split_whitespace":"1:12875:28065","str::rsplit":"1:12903:31719"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"1:44325:3490","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:717":{"id":"0:717","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1261,0],"end":[1268,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7896:163","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:718:171","0:719:1983","0:720:848"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:226:1048":{"id":"0:226:1048","crate_id":0,"name":"new","span":{"filename":"src/buf/iter.rs","begin":[44,4],"end":[46,5]},"visibility":"public","docs":"Creates an iterator over the bytes contained by the buffer.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet buf = Bytes::from_static(b\"abc\");\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\nassert_eq!(iter.next(), Some(b'b'));\nassert_eq!(iter.next(), Some(b'c'));\nassert_eq!(iter.next(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["inner",{"generic":"T"}]],"output":{"resolved_path":{"name":"IntoIter","id":"0:1098:1983","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1019:2124":{"id":"0:1019:2124","crate_id":0,"name":"get_i16","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:315:2747":{"id":"0:315:2747","crate_id":0,"name":"write_byte","span":{"filename":"src/buf/uninit_slice.rs","begin":[107,4],"end":[111,5]},"visibility":"public","docs":"Write a single byte at the specified offset.\n\n# Panics\n\nThe function panics if `index` is out of bounds.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\n\nlet mut data = [b'f', b'o', b'o'];\nlet slice = unsafe { UninitSlice::from_raw_parts_mut(data.as_mut_ptr(), 3) };\n\nslice.write_byte(0, b'b');\n\nassert_eq!(b\"boo\", &data[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}],["byte",{"primitive":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2759-0:395:1847":{"id":"b:1:2759-0:395:1847","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2728:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2762:135","1:2763:1629"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42553:3859-0:1117:1985":{"id":"a:1:42553:3859-0:1117:1985","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42553:3859","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42553:3859","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1117:1985","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:467":{"id":"0:467","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[667,0],"end":[671,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"slice":{"primitive":"u8"}},"items":["0:468:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:522":{"id":"0:522","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[880,0],"end":[885,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::vec::Vec","id":"4:6969:270","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:523:753"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1104:1984":{"id":"0:1104:1984","crate_id":0,"name":"Limit","span":{"filename":"src/buf/limit.rs","begin":[9,0],"end":[12,1]},"visibility":"public","docs":"A `BufMut` adapter which limits the amount of bytes that can be written\nto an underlying buffer.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:243","a:1:32928:3878-0:1104:1984","a:1:42553:3859-0:1104:1984","a:1:2966:254-0:1104:1984","a:1:42554:3858-0:1104:1984","a:1:32846:244-0:1104:1984","b:1:2444-0:1104:1984","b:1:2748-0:1104:1984","b:1:2754-0:1104:1984","b:1:3560-0:1104:1984","b:1:2759-0:1104:1984","b:1:2441-0:1104:1984","b:1:2744-0:1104:1984","0:1108","0:250"]}}},"0:764:669":{"id":"0:764:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1507,4],"end":[1509,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:32:2109":{"id":"0:32:2109","crate_id":0,"name":"get_u16","span":{"filename":"src/buf/buf_impl.rs","begin":[334,4],"end":[336,5]},"visibility":"default","docs":"Gets an unsigned 16 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09 hello\"[..];\nassert_eq!(0x0809, buf.get_u16());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:710":{"id":"0:710","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1232,0],"end":[1236,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2438:104","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:711:3271"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:999:2176":{"id":"0:999:2176","crate_id":0,"name":"get_i64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:709:2792":{"id":"0:709:2792","crate_id":0,"name":"borrow","span":{"filename":"src/bytes_mut.rs","begin":[1227,4],"end":[1229,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1159:726":{"id":"0:1159:726","crate_id":0,"name":"fmt","span":{"filename":"src/buf/writer.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:9962:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:9943:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:765":{"id":"0:765","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1512,0],"end":[1516,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:766:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:235":{"id":"0:235","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[130,0],"end":[130,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"1:7987:2655","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1098:1983","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2966:254-0:1104:1984":{"id":"a:1:2966:254-0:1104:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2966:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2966:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1104:1984","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:357-0:1098:1983":{"id":"0:357-0:1098:1983","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[35,0],"end":[35,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::iter::IntoIter","name":"IntoIter","id":"0:1098:1983","glob":false}}},"0:769":{"id":"0:769","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1524,0],"end":[1528,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"4:6969:270","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:770:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:423":{"id":"0:423","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[522,0],"end":[527,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:3183:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:424:642"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:729":{"id":"0:729","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1299,0],"end":[1306,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"name":"Extend","id":"1:7905:3274","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:731:3227"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12972:32849":{"id":"1:12972:32849","crate_id":1,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"1:910:37263"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5554:3513":{"id":"4:5554:3513","crate_id":4,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"4:7544:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2744-0:395:1847":{"id":"b:1:2744-0:395:1847","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2747:2873"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:106:1843":{"id":"0:106:1843","crate_id":0,"name":"BufMut","span":{"filename":"src/buf/buf_mut.rs","begin":[29,0],"end":[1276,1]},"visibility":"public","docs":"A trait for values that provide sequential write access to bytes.\n\nWrite bytes to a buffer\n\nA buffer stores bytes in memory such that write operations are infallible.\nThe underlying storage may or may not be in contiguous memory. A `BufMut`\nvalue is a cursor into the buffer. Writing to `BufMut` advances the cursor\nposition.\n\nThe simplest `BufMut` is a `Vec<u8>`.\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\n\nbuf.put(&b\"hello world\"[..]);\n\nassert_eq!(buf, b\"hello world\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"is_object_safe":true,"items":["0:107:2331","0:108:2349","0:109:2354","0:110:2376","0:111:2261","0:113:2391","0:114:2401","0:115:2402","0:116:2409","0:117:2413","0:118:2418","0:119:2426","0:120:2430","0:121:2433","0:122:2436","0:123:2440","0:124:2444","0:125:2449","0:126:2452","0:127:2455","0:128:2458","0:129:2462","0:130:2466","0:131:2471","0:132:2474","0:133:2477","0:134:2480","0:135:2484","0:136:2488","0:137:2493","0:138:2496","0:139:2499","0:140:2502","0:141:2506","0:142:2510","0:143:2515","0:144:2519","0:145:2522","0:146:2525","0:147:2529","0:148:2533","0:149:2538","0:150:2542","0:151:2545","0:152:2549","0:153:1976","0:154:1981","0:155:2573"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:210","0:671","0:168","0:174","0:162","0:160","0:250","0:158"]}}},"0:43:2153":{"id":"0:43:2153","crate_id":0,"name":"get_i32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[566,4],"end":[568,5]},"visibility":"default","docs":"Gets a signed 32 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x08\\x09\\xA0\\xA1 hello\",\n    false => b\"\\xA1\\xA0\\x09\\x08 hello\",\n};\nassert_eq!(0x0809A0A1, buf.get_i32_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:726":{"id":"0:726","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1279,0],"end":[1297,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"name":"Extend","id":"1:7905:3274","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:727:3227"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:796:669":{"id":"0:796:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1597,4],"end":[1599,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:432":{"id":"0:432","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[572,0],"end":[579,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:3159:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:433:256","0:434:604"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12921:31726":{"id":"1:12921:31726","crate_id":1,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12561:11478","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:725:848":{"id":"0:725:848","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes_mut.rs","begin":[1274,4],"end":[1276,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:7896:163","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1073:2426":{"id":"0:1073:2426","crate_id":0,"name":"put_u16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12962:33237":{"id":"1:12962:33237","crate_id":1,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"5:12106:458","self::pattern":"1:12541:3716"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12561:11478","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2762:135":{"id":"1:2762:135","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"1:32776:4644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:645:2951":{"id":"0:645:2951","crate_id":0,"name":"clear","span":{"filename":"src/bytes_mut.rs","begin":[435,4],"end":[437,5]},"visibility":"public","docs":"Clears the buffer, removing all data. Existing capacity is preserved.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::from(&b\"hello world\"[..]);\nbuf.clear();\nassert!(buf.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:459:469":{"id":"0:459:469","crate_id":0,"name":"cmp","span":{"filename":"src/bytes.rs","begin":[642,4],"end":[644,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:290:2037":{"id":"0:290:2037","crate_id":0,"name":"remaining","span":{"filename":"src/buf/take.rs","begin":[133,4],"end":[135,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1066:2376":{"id":"0:1066:2376","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:407:2859":{"id":"0:407:2859","crate_id":0,"name":"from_static","span":{"filename":"src/bytes.rs","begin":[162,4],"end":[169,5]},"visibility":"public","docs":"Creates a new `Bytes` from a static slice.\n\nThe returned `Bytes` will point directly to the static slice. There is\nno allocating or copying.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::from_static(b\"hello\");\nassert_eq!(&b[..], b\"hello\");\n```","links":{},"attrs":["#[inline]","#[cfg(not(all(loom, test)))]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bytes",{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2754-0:1089:1982":{"id":"b:1:2754-0:1089:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2728:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2724:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1089:1982","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2757:135","1:2758:1631"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:219:171":{"id":"0:219:171","crate_id":0,"name":"Item","span":{"filename":"src/buf/chain.rs","begin":[236,4],"end":[236,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u8"}}}},"0:51:2185":{"id":"0:51:2185","crate_id":0,"name":"get_u128_le","span":{"filename":"src/buf/buf_impl.rs","begin":[732,4],"end":[734,5]},"visibility":"default","docs":"Gets an unsigned 128 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_u128_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2441-0:1154:1988":{"id":"b:1:2441-0:1154:1988","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1154:1988","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2443:2792"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:435":{"id":"0:435","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[581,0],"end":[586,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"1:2712:78","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:436:341"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:139:2499":{"id":"0:139:2499","crate_id":0,"name":"put_i128_le","span":{"filename":"src/buf/buf_mut.rs","begin":[875,4],"end":[877,5]},"visibility":"default","docs":"Writes a signed 128 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i128_le(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:993:2153":{"id":"0:993:2153","crate_id":0,"name":"get_i32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:37:2130":{"id":"0:37:2130","crate_id":0,"name":"get_i16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[440,4],"end":[442,5]},"visibility":"default","docs":"Gets a signed 16 bit integer from `self` in native-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x08\\x09 hello\",\n    false => b\"\\x09\\x08 hello\",\n};\nassert_eq!(0x0809, buf.get_i16_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1006:2258":{"id":"0:1006:2258","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"crate::Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:668:2000":{"id":"0:668:2000","crate_id":0,"name":"chunk","span":{"filename":"src/bytes_mut.rs","begin":[1060,4],"end":[1062,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1020:2127":{"id":"0:1020:2127","crate_id":0,"name":"get_i16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2754-0:1104:1984":{"id":"b:1:2754-0:1104:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2728:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2724:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1104:1984","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2757:135","1:2758:1631"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1022:2135":{"id":"0:1022:2135","crate_id":0,"name":"get_u32","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:129:2462":{"id":"0:129:2462","crate_id":0,"name":"put_u64","span":{"filename":"src/buf/buf_mut.rs","begin":[643,4],"end":[645,5]},"visibility":"default","docs":"Writes an unsigned 64 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u64(0x0102030405060708);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2444-0:1111:1987":{"id":"b:1:2444-0:1111:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1111:1987","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2446:3271"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32928:3878-0:306:1986":{"id":"a:1:32928:3878-0:306:1986","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32928:3878","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:415:2933":{"id":"0:415:2933","crate_id":0,"name":"split_to","span":{"filename":"src/bytes.rs","begin":[411,4],"end":[433,5]},"visibility":"public","docs":"Splits the bytes into two at the given index.\n\nAfterwards `self` contains elements `[at, len)`, and the returned\n`Bytes` contains elements `[0, at)`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut a = Bytes::from(&b\"hello world\"[..]);\nlet b = a.split_to(5);\n\nassert_eq!(&a[..], b\" world\");\nassert_eq!(&b[..], b\"hello\");\n```\n\n# Panics\n\nPanics if `at > len`.","links":{},"attrs":["#[must_use = \"consider Bytes::advance if you don't need the other half\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["at",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:270":{"id":"0:270","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[74,0],"end":[81,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["has_data_left","read_until","split","lines","read_line","skip_until"],"trait":{"name":"BufRead","id":"5:3576:2684","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1111:1987","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:272:2685","0:273:2686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:487":{"id":"0:487","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[727,0],"end":[731,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:488:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:757":{"id":"0:757","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1488,0],"end":[1492,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"slice":{"primitive":"u8"}},"items":["0:758:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:42553:3859-0:306:1986":{"id":"a:1:42553:3859-0:306:1986","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42553:3859","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42553:3859-0:1104:1984":{"id":"a:1:42553:3859-0:1104:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42553:3859","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42553:3859","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1104:1984","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:635:1048":{"id":"0:635:1048","crate_id":0,"name":"new","span":{"filename":"src/bytes_mut.rs","begin":[166,4],"end":[168,5]},"visibility":"public","docs":"Creates a new `BytesMut` with default capacity.\n\nResulting object has length 0 and unspecified capacity.\nThis function does not allocate.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut bytes = BytesMut::new();\n\nassert_eq!(0, bytes.len());\n\nbytes.reserve(2);\nbytes.put_slice(b\"xy\");\n\nassert_eq!(&b\"xy\"[..], &bytes[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2759-0:613:1848":{"id":"b:1:2759-0:613:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2728:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2762:135","1:2763:1629"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:679":{"id":"0:679","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1141,0],"end":[1146,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"1:2712:78","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:680:341"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:23:2037":{"id":"0:23:2037","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[102,4],"end":[102,33]},"visibility":"default","docs":"Returns the number of bytes between the current position and the end of\nthe buffer.\n\nThis value is greater than or equal to the length of the slice returned\nby `chunk()`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(buf.remaining(), 11);\n\nbuf.get_u8();\n\nassert_eq!(buf.remaining(), 10);\n```\n\n# Implementer notes\n\nImplementations of `remaining` should ensure that the return value does\nnot change unless a call is made to `advance` or any other function that\nis documented to change the `Buf`'s current position.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:1:2966:254-0:306:1986":{"id":"a:1:2966:254-0:306:1986","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2966:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:770:1146":{"id":"0:770:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1525,4],"end":[1527,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Vec","id":"4:6969:270","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12947:33234":{"id":"1:12947:33234","crate_id":1,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"5:12106:458","self::pattern":"1:12541:3716"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1089:1982":{"id":"0:1089:1982","crate_id":0,"name":"Chain","span":{"filename":"src/buf/chain.rs","begin":[32,0],"end":[35,1]},"visibility":"public","docs":"A `Chain` sequences two buffers.\n\n`Chain` is an adapter that links two underlying buffers and provides a\ncontinuous view across both buffers. It is able to sequence either immutable\nbuffers ([`Buf`] values) or mutable buffers ([`BufMut`] values).\n\nThis struct is generally created by calling [`Buf::chain`]. Please see that\nfunction's documentation for more detail.\n\n# Examples\n\n```\nuse bytes::{Bytes, Buf};\n\nlet mut buf = (&b\"hello \"[..])\n    .chain(&b\"world\"[..]);\n\nlet full: Bytes = buf.copy_to_bytes(11);\nassert_eq!(full[..], b\"hello world\"[..]);\n```\n\n[`Buf::chain`]: trait.Buf.html#method.chain\n[`Buf`]: trait.Buf.html\n[`BufMut`]: trait.BufMut.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:192","a:1:32928:3878-0:1089:1982","a:1:42553:3859-0:1089:1982","a:1:2966:254-0:1089:1982","a:1:42554:3858-0:1089:1982","a:1:32846:244-0:1089:1982","b:1:2444-0:1089:1982","b:1:2748-0:1089:1982","b:1:2754-0:1089:1982","b:1:3560-0:1089:1982","b:1:2759-0:1089:1982","b:1:2441-0:1089:1982","b:1:2744-0:1089:1982","0:210","0:201","0:216","0:1094"]}}},"1:12847:33216":{"id":"1:12847:33216","crate_id":1,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:199:2621":{"id":"0:199:2621","crate_id":0,"name":"last_mut","span":{"filename":"src/buf/chain.rs","begin":[109,4],"end":[111,5]},"visibility":"public","docs":"Gets a mutable reference to the last underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = (&b\"hello \"[..])\n    .chain(&b\"world\"[..]);\n\nbuf.last_mut().advance(1);\n\nlet full = buf.copy_to_bytes(10);\nassert_eq!(full, b\"hello orld\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"U"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42553:3859-0:1089:1982":{"id":"a:1:42553:3859-0:1089:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42553:3859","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42553:3859","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42553:3859","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1089:1982","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"4:690:27700":{"id":"4:690:27700","crate_id":4,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:755":{"id":"0:755","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1482,0],"end":[1486,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"slice":{"primitive":"u8"}},"items":["0:756:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:347:2297":{"id":"0:347:2297","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/writer.rs","begin":[33,4],"end":[35,5]},"visibility":"public","docs":"Gets a reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.\n\n# Examples\n\n```rust\nuse bytes::BufMut;\n\nlet buf = Vec::with_capacity(1024).writer();\n\nassert_eq!(1024, buf.get_ref().capacity());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:686":{"id":"0:686","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1164,0],"end":[1169,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"1:3172:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:687:606"],"negative":false,"synthetic":false,"blanket_impl":null}}},"4:5552:33940":{"id":"4:5552:33940","crate_id":4,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"4:7544:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148:2533":{"id":"0:148:2533","crate_id":0,"name":"put_f32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1095,4],"end":[1097,5]},"visibility":"default","docs":"Writes  an IEEE754 single-precision (4 bytes) floating point number to\n`self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f32_le(1.2f32);\nassert_eq!(buf, b\"\\x9A\\x99\\x99\\x3F\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1045:2402":{"id":"0:1045:2402","crate_id":0,"name":"put_u8","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32928:3878-0:1154:1988":{"id":"a:1:32928:3878-0:1154:1988","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32928:3878","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32928:3878","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1154:1988","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:479":{"id":"0:479","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[703,0],"end":[707,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"4:6969:270","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:480:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:704:60":{"id":"0:704:60","crate_id":0,"name":"default","span":{"filename":"src/bytes_mut.rs","begin":[1211,4],"end":[1213,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:475":{"id":"0:475","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[691,0],"end":[695,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:476:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:750":{"id":"0:750","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1462,0],"end":[1462,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2966:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:778:1146":{"id":"0:778:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1549,4],"end":[1551,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:794:1146":{"id":"0:794:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1591,4],"end":[1593,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:66:2246":{"id":"0:66:2246","crate_id":0,"name":"get_f64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1060,4],"end":[1062,5]},"visibility":"default","docs":"Gets an IEEE754 double-precision (8 bytes) floating point number from\n`self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F hello\"[..];\nassert_eq!(1.2f64, buf.get_f64_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12956:33235":{"id":"1:12956:33235","crate_id":1,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"5:12106:458","self::pattern":"1:12541:3716"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12561:11478","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32928:3878-0:1098:1983":{"id":"a:1:32928:3878-0:1098:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32928:3878","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32928:3878","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1098:1983","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:12889:4093":{"id":"1:12889:4093","crate_id":1,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"1:42427:198","prim@char":"5:12106:458","self::pattern":"1:12541:3716"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:365-0:22:1842":{"id":"0:365-0:22:1842","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[85,21],"end":[85,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::buf::Buf","name":"Buf","id":"0:22:1842","glob":false}}},"0:714:3272":{"id":"0:714:3272","crate_id":0,"name":"write_fmt","span":{"filename":"src/bytes_mut.rs","begin":[1250,4],"end":[1252,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["args",{"resolved_path":{"name":"fmt::Arguments","id":"1:43500:3273","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9943:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:181:2401":{"id":"0:181:2401","crate_id":0,"name":"put_bytes","span":{"filename":"src/buf/buf_mut.rs","begin":[1520,4],"end":[1523,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["val",{"primitive":"u8"}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:992:2150":{"id":"0:992:2150","crate_id":0,"name":"get_i32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[65,0],"end":[72,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["read_exact","read_vectored","read_to_string","bytes","chain","read_buf","is_read_vectored","take","by_ref","read_buf_exact","read_to_end"],"trait":{"name":"Read","id":"5:3491:2682","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1111:1987","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:269:2683"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:354-0:22:1842":{"id":"0:354-0:22:1842","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[32,0],"end":[32,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::buf_impl::Buf","name":"Buf","id":"0:22:1842","glob":false}}},"0:323:726":{"id":"0:323:726","crate_id":0,"name":"fmt","span":{"filename":"src/buf/uninit_slice.rs","begin":[211,4],"end":[213,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:9962:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9943:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:30:2100":{"id":"0:30:2100","crate_id":0,"name":"get_u8","span":{"filename":"src/buf/buf_impl.rs","begin":[288,4],"end":[293,5]},"visibility":"default","docs":"Gets an unsigned 8 bit integer from `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08 hello\"[..];\nassert_eq!(8, buf.get_u8());\n```\n\n# Panics\n\nThis function panics if there is no more remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1138:833":{"id":"0:1138:833","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeFull","id":"1:40025:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1153:833":{"id":"0:1153:833","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeToInclusive","id":"1:40129:223","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:456":{"id":"0:456","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[635,0],"end":[639,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:457:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:42554:3858-0:613:1848":{"id":"a:1:42554:3858-0:613:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42554:3858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3560-0:613:1848":{"id":"b:1:3560-0:613:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3558:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3562:1644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:768:669":{"id":"0:768:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1519,4],"end":[1521,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Vec","id":"4:6969:270","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12872:7883":{"id":"1:12872:7883","crate_id":1,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"5:12106:458"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"1:44295:3713","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[19,0],"end":[63,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Reader","id":"0:1111:1987","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["0:264:2297","0:265:2653","0:266:2627"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1062:2474":{"id":"0:1062:2474","crate_id":0,"name":"put_i64","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:337:2003":{"id":"0:337:2003","crate_id":0,"name":"advance","span":{"filename":"src/buf/vec_deque.rs","begin":[19,4],"end":[21,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1036:2214":{"id":"0:1036:2214","crate_id":0,"name":"get_uint_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1117:1985":{"id":"0:1117:1985","crate_id":0,"name":"Take","span":{"filename":"src/buf/take.rs","begin":[10,0],"end":[13,1]},"visibility":"public","docs":"A `Buf` adapter which limits the bytes read from an underlying buffer.\n\nThis struct is generally created by calling `take()` on `Buf`. See\ndocumentation of [`take()`](trait.Buf.html#method.take) for more details.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:281","a:1:32928:3878-0:1117:1985","a:1:42553:3859-0:1117:1985","a:1:2966:254-0:1117:1985","a:1:42554:3858-0:1117:1985","a:1:32846:244-0:1117:1985","b:1:2444-0:1117:1985","b:1:2748-0:1117:1985","b:1:2754-0:1117:1985","b:1:3560-0:1117:1985","b:1:2759-0:1117:1985","b:1:2441-0:1117:1985","b:1:2744-0:1117:1985","0:288","0:1121"]}}},"0:1080:2452":{"id":"0:1080:2452","crate_id":0,"name":"put_i32","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1143:833":{"id":"0:1143:833","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeInclusive","id":"1:40107:221","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42554:3858-0:1117:1985":{"id":"a:1:42554:3858-0:1117:1985","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42554:3858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42554:3858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1117:1985","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:426:462":{"id":"0:426:462","crate_id":0,"name":"clone","span":{"filename":"src/bytes.rs","begin":[531,4],"end":[533,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2754-0:1098:1983":{"id":"b:1:2754-0:1098:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2728:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2724:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1098:1983","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2757:135","1:2758:1631"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:53:2193":{"id":"0:53:2193","crate_id":0,"name":"get_i128","span":{"filename":"src/buf/buf_impl.rs","begin":[775,4],"end":[777,5]},"visibility":"default","docs":"Gets a signed 128 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_i128());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:59:2218":{"id":"0:59:2218","crate_id":0,"name":"get_int","span":{"filename":"src/buf/buf_impl.rs","begin":[905,4],"end":[907,5]},"visibility":"default","docs":"Gets a signed n-byte integer from `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03 hello\"[..];\nassert_eq!(0x010203, buf.get_int(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2446:3271":{"id":"1:2446:3271","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2444-0:1089:1982":{"id":"b:1:2444-0:1089:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1089:1982","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2446:3271"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3560-0:1111:1987":{"id":"b:1:3560-0:1111:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3558:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1111:1987","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:3562:1644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:501":{"id":"0:501","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[769,0],"end":[776,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:504:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:476:1146":{"id":"0:476:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[692,4],"end":[694,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:33:2113":{"id":"0:33:2113","crate_id":0,"name":"get_u16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[354,4],"end":[356,5]},"visibility":"default","docs":"Gets an unsigned 16 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x09\\x08 hello\"[..];\nassert_eq!(0x0809, buf.get_u16_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:117:2413":{"id":"0:117:2413","crate_id":0,"name":"put_u16","span":{"filename":"src/buf/buf_mut.rs","begin":[363,4],"end":[365,5]},"visibility":"default","docs":"Writes an unsigned 16 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u16(0x0809);\nassert_eq!(buf, b\"\\x08\\x09\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42554:3858-0:1111:1987":{"id":"a:1:42554:3858-0:1111:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42554:3858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42554:3858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1111:1987","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:490:669":{"id":"0:490:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[734,4],"end":[736,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12933:33227":{"id":"1:12933:33227","crate_id":1,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"1:12541:3716","`DoubleEndedIterator`":"1:7934:128","prim@char":"5:12106:458","str::match_indices":"1:12930:33226"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"1:44493:7998","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:12561:11478","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:56:2204":{"id":"0:56:2204","crate_id":0,"name":"get_uint","span":{"filename":"src/buf/buf_impl.rs","begin":[838,4],"end":[840,5]},"visibility":"default","docs":"Gets an unsigned n-byte integer from `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03 hello\"[..];\nassert_eq!(0x010203, buf.get_uint(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:41:2147":{"id":"0:41:2147","crate_id":0,"name":"get_i32","span":{"filename":"src/buf/buf_impl.rs","begin":[523,4],"end":[525,5]},"visibility":"default","docs":"Gets a signed 32 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_i32());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:63:2234":{"id":"0:63:2234","crate_id":0,"name":"get_f32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[994,4],"end":[996,5]},"visibility":"default","docs":"Gets an IEEE754 single-precision (4 bytes) floating point number from\n`self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x9A\\x99\\x99\\x3F hello\"[..];\nassert_eq!(1.2f32, buf.get_f32_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1028:2158":{"id":"0:1028:2158","crate_id":0,"name":"get_u64","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:431:2258":{"id":"0:431:2258","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/bytes.rs","begin":[561,4],"end":[569,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"crate::Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42553:3859-0:1098:1983":{"id":"a:1:42553:3859-0:1098:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:42553:3859","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42553:3859","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1098:1983","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:284:2297":{"id":"0:284:2297","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/take.rs","begin":[56,4],"end":[58,5]},"visibility":"public","docs":"Gets a reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::Buf;\n\nlet buf = b\"hello world\".take(2);\n\nassert_eq!(11, buf.get_ref().remaining());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:124:2444":{"id":"0:124:2444","crate_id":0,"name":"put_u32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[525,4],"end":[527,5]},"visibility":"default","docs":"Writes an unsigned 32 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u32_le(0x0809A0A1);\nassert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:411:1515":{"id":"0:411:1515","crate_id":0,"name":"slice","span":{"filename":"src/bytes.rs","begin":[238,4],"end":[278,5]},"visibility":"public","docs":"Returns a slice of self for the provided range.\n\nThis will increment the reference count for the underlying memory and\nreturn a new `Bytes` handle set to the slice.\n\nThis operation is `O(1)`.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet a = Bytes::from(&b\"hello world\"[..]);\nlet b = a.slice(2..5);\n\nassert_eq!(&b[..], b\"llo\");\n```\n\n# Panics\n\nRequires that `begin <= end` and `end <= self.len()`, otherwise slicing\nwill panic.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["range",{"impl_trait":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"1:3315:218","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl RangeBounds<usize>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"1:3315:218","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1126:832":{"id":"0:1126:832","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"Range","id":"1:40041:217","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12878:33222":{"id":"1:12878:33222","crate_id":1,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"1:44589:8001","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1359,0],"end":[1390,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:2712:78","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","take","chain","get_uint","get_f64_ne","get_u16_le","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_ne","get_u32","copy_to_slice","chunks_vectored","get_u128_ne","get_i128","get_u16_ne","get_u128","get_i128_le","get_i128_ne","get_f32_ne","reader","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","has_remaining","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64"],"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::io::Cursor","id":"5:8001:2296","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:85:2037","0:86:2000","0:87:2003"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3560-0:395:1847":{"id":"b:1:3560-0:395:1847","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3558:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3562:1644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1103:726":{"id":"0:1103:726","crate_id":0,"name":"fmt","span":{"filename":"src/buf/iter.rs","begin":[23,9],"end":[23,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:9962:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:9943:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:471":{"id":"0:471","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[679,0],"end":[683,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:472:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32928:3878-0:613:1848":{"id":"a:1:32928:3878-0:613:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32928:3878","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:12900:28092":{"id":"1:12900:28092","crate_id":1,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"5:12106:458","self::pattern":"1:12541:3716"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"1:12357:4322","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12977:11384":{"id":"1:12977:11384","crate_id":1,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:4740:11384"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"1:44633:7841","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12978:33240":{"id":"1:12978:33240","crate_id":1,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:4737:33240"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"1:44642:7937","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:39:2139":{"id":"0:39:2139","crate_id":0,"name":"get_u32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[480,4],"end":[482,5]},"visibility":"default","docs":"Gets an unsigned 32 bit integer from `self` in the little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_u32_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:2426":{"id":"0:119:2426","crate_id":0,"name":"put_u16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[411,4],"end":[413,5]},"visibility":"default","docs":"Writes an unsigned 16 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u16_ne(0x0809);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x08\\x09\");\n} else {\n    assert_eq!(buf, b\"\\x09\\x08\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1029:2162":{"id":"0:1029:2162","crate_id":0,"name":"get_u64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:48:2173":{"id":"0:48:2173","crate_id":0,"name":"get_i64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[669,4],"end":[671,5]},"visibility":"default","docs":"Gets a signed 64 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_i64_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:698":{"id":"0:698","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1195,0],"end":[1199,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:699:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1070:2409":{"id":"0:1070:2409","crate_id":0,"name":"put_i8","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2744-0:1111:1987":{"id":"b:1:2744-0:1111:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1111:1987","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2747:2873"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42554:3858-0:1154:1988":{"id":"a:1:42554:3858-0:1154:1988","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42554:3858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42554:3858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1154:1988","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:975:2065":{"id":"0:975:2065","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"5:8227:1991","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:793":{"id":"0:793","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1590,0],"end":[1594,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"items":["0:794:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12973:32850":{"id":"1:12973:32850","crate_id":1,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"1:910:37263"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"4:5553:33941":{"id":"4:5553:33941","crate_id":4,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"4:281:1993","`String`":"4:7544:250"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"4:281:1993","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1069:2402":{"id":"0:1069:2402","crate_id":0,"name":"put_u8","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:774:1146":{"id":"0:774:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1537,4],"end":[1539,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:201":{"id":"0:201","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[132,0],"end":[191,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","take","chain","get_uint","get_f64_ne","get_u16_le","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_ne","get_u32","copy_to_slice","chunks_vectored","get_u128_ne","get_i128","get_u16_ne","get_u128","get_i128_le","get_i128_ne","get_f32_ne","reader","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","has_remaining","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64"],"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1089:1982","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["0:204:2037","0:205:2000","0:206:2003","0:207:2065","0:209:2258"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:12870:31716":{"id":"1:12870:31716","crate_id":1,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"1:12869:31715"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12918:31725":{"id":"1:12918:31725","crate_id":1,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:979:2004":{"id":"0:979:2004","crate_id":0,"name":"copy_to_slice","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1341,0],"end":[1356,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","take","chain","get_uint","get_f64_ne","get_u16_le","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_ne","get_u32","copy_to_slice","chunks_vectored","get_u128_ne","get_i128","get_u16_ne","get_u128","get_i128_le","get_i128_ne","get_f32_ne","reader","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","has_remaining","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64"],"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"items":["0:80:2037","0:81:2000","0:82:2003"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1016:2109":{"id":"0:1016:2109","crate_id":0,"name":"get_u16","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2966:254-0:1098:1983":{"id":"a:1:2966:254-0:1098:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2966:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2966:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1098:1983","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:504:669":{"id":"0:504:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[773,4],"end":[775,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2759-0:1089:1982":{"id":"b:1:2759-0:1089:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2728:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1089:1982","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2762:135","1:2763:1629"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:113:2391":{"id":"0:113:2391","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[240,4],"end":[266,5]},"visibility":"default","docs":"Transfer bytes into `self` from `src` and advance the cursor by the\nnumber of bytes written.\n\n`self` must have enough remaining capacity to contain all of `src`.\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 6];\n\n{\n    let mut buf = &mut dst[..];\n    buf.put_slice(b\"hello\");\n\n    assert_eq!(1, buf.remaining_mut());\n}\n\nassert_eq!(b\"hello\\0\", &dst);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:831:726":{"id":"0:831:726","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/debug.rs","begin":[40,4],"end":[42,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:9962:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:9943:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:196:2607":{"id":"0:196:2607","crate_id":0,"name":"first_ref","span":{"filename":"src/buf/chain.rs","begin":[55,4],"end":[57,5]},"visibility":"public","docs":"Gets a reference to the first underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet buf = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nassert_eq!(buf.first_ref()[..], b\"hello\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2750:753":{"id":"1:2750:753","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:452:756":{"id":"0:452:756","crate_id":0,"name":"from_iter","span":{"filename":"src/bytes.rs","begin":[622,4],"end":[624,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["into_iter",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7896:163","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"primitive":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:633":{"id":"0:633","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[118,0],"end":[1034,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:634:2260","0:635:1048","0:636:883","0:637:2068","0:638:2582","0:639:750","0:640:3113","0:641:2924","0:642:3138","0:643:2933","0:644:2945","0:645:2951","0:646:2590","0:647:2584","0:648:2585","0:650:2588","0:651:3241","0:663:3228"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:756:669":{"id":"0:756:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1483,4],"end":[1485,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:28:2069":{"id":"0:28:2069","crate_id":0,"name":"has_remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[226,4],"end":[228,5]},"visibility":"default","docs":"Returns true if there are any more bytes to consume\n\nThis is equivalent to `self.remaining() != 0`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"a\"[..];\n\nassert!(buf.has_remaining());\n\nbuf.get_u8();\n\nassert!(!buf.has_remaining());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:996:2167":{"id":"0:996:2167","crate_id":0,"name":"get_u64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:708":{"id":"0:708","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1226,0],"end":[1230,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2435:103","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:709:2792"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:227:2627":{"id":"0:227:2627","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/iter.rs","begin":[63,4],"end":[65,5]},"visibility":"public","docs":"Consumes this `IntoIter`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::{Buf, Bytes};\n\nlet buf = Bytes::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\n\nlet buf = iter.into_inner();\nassert_eq!(2, buf.remaining());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:176:2349":{"id":"0:176:2349","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1465,4],"end":[1477,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1059:2462":{"id":"0:1059:2462","crate_id":0,"name":"put_u64","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:163:2331":{"id":"0:163:2331","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1388,4],"end":[1390,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:321:883":{"id":"0:321:883","crate_id":0,"name":"len","span":{"filename":"src/buf/uninit_slice.rs","begin":[205,4],"end":[207,5]},"visibility":"public","docs":"Returns the number of bytes in the slice.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut data = [0, 1, 2];\nlet mut slice = &mut data[..];\nlet len = BufMut::chunk_mut(&mut slice).len();\n\nassert_eq!(len, 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1132":{"id":"0:1132","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:3222:2710","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeFrom","id":"1:40065:219","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1133:833"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:110:2376":{"id":"0:110:2376","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[175,4],"end":[175,48]},"visibility":"default","docs":"Returns a mutable slice starting at the current BufMut position and of\nlength between 0 and `BufMut::remaining_mut()`. Note that this *can* be shorter than the\nwhole remainder of the buffer (this allows non-continuous implementation).\n\nThis is a lower level function. Most operations are done with other\nfunctions.\n\nThe returned byte slice may represent uninitialized memory.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = Vec::with_capacity(16);\n\nunsafe {\n    // MaybeUninit::as_mut_ptr\n    buf.chunk_mut()[0..].as_mut_ptr().write(b'h');\n    buf.chunk_mut()[1..].as_mut_ptr().write(b'e');\n\n    buf.advance_mut(2);\n\n    buf.chunk_mut()[0..].as_mut_ptr().write(b'l');\n    buf.chunk_mut()[1..].as_mut_ptr().write(b'l');\n    buf.chunk_mut()[2..].as_mut_ptr().write(b'o');\n\n    buf.advance_mut(3);\n}\n\nassert_eq!(5, buf.len());\nassert_eq!(buf, b\"hello\");\n```\n\n# Implementer notes\n\nThis function should never panic. `chunk_mut` should return an empty\nslice **if and only if** `remaining_mut()` returns 0. In other words,\n`chunk_mut()` returning an empty slice implies that `remaining_mut()` will\nreturn 0 and `remaining_mut()` returning 0 implies that `chunk_mut()` will\nreturn an empty slice.\n\nThis function may trigger an out-of-memory abort if it tries to allocate\nmemory and fails to do so.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:1:2748-0:613:1848":{"id":"b:1:2748-0:613:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2750:753"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:233:1062":{"id":"0:233:1062","crate_id":0,"name":"next","span":{"filename":"src/buf/iter.rs","begin":[113,4],"end":[122,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:77":{"id":"0:77","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1337,0],"end":[1339,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","take","chain","get_uint","get_f64_ne","get_u16_le","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_ne","get_u32","copy_to_slice","chunks_vectored","get_u128_ne","get_i128","get_u16_ne","get_u128","get_i128_le","get_i128_ne","get_f32_ne","reader","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","has_remaining","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64"],"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::boxed::Box","id":"4:281:1993","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1007:2037","0:1008:2000","0:1009:2065","0:1011:2003","0:1012:2069","0:1013:2004","0:1014:2100","0:1015:2103","0:1016:2109","0:1017:2113","0:1018:2120","0:1019:2124","0:1020:2127","0:1021:2130","0:1022:2135","0:1023:2139","0:1024:2144","0:1025:2147","0:1026:2150","0:1027:2153","0:1028:2158","0:1029:2162","0:1030:2167","0:1031:2170","0:1032:2173","0:1033:2176","0:1034:2204","0:1035:2209","0:1036:2214","0:1037:2218","0:1038:2221","0:1039:2224","0:1040:2258"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1078:2444":{"id":"0:1078:2444","crate_id":0,"name":"put_u32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1051:2433":{"id":"0:1051:2433","crate_id":0,"name":"put_i16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2759-0:1154:1988":{"id":"b:1:2759-0:1154:1988","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2728:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1154:1988","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2762:135","1:2763:1629"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:6:1841":{"id":"0:6:1841","crate_id":0,"name":"buf","span":{"filename":"src/buf/mod.rs","begin":[1,0],"end":[41,47]},"visibility":"public","docs":"Utilities for working with buffers.\n\nA buffer is any structure that contains a sequence of bytes. The bytes may\nor may not be stored in contiguous memory. This module contains traits used\nto abstract over buffers as well as utilities for working with buffer types.\n\n# `Buf`, `BufMut`\n\nThese are the two foundational traits for abstractly working with buffers.\nThey can be thought as iterators for byte structures. They offer additional\nperformance over `Iterator` by providing an API optimized for byte slices.\n\nSee [`Buf`] and [`BufMut`] for more details.\n\n[rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)\n[`Buf`]: trait.Buf.html\n[`BufMut`]: trait.BufMut.html","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:354-0:22:1842","0:355-0:106:1843","0:356-0:1089:1982","0:357-0:1098:1983","0:358-0:1104:1984","0:359-0:1117:1985","0:360-0:306:1986","0:362-0:1111:1987","0:363-0:1154:1988"],"is_stripped":false}}},"0:363-0:1154:1988":{"id":"0:363-0:1154:1988","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[41,31],"end":[41,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"self::writer::Writer","name":"Writer","id":"0:1154:1988","glob":false}}},"0:1041:2331":{"id":"0:1041:2331","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:405:1048":{"id":"0:405:1048","crate_id":0,"name":"new","span":{"filename":"src/bytes.rs","begin":[134,4],"end":[139,5]},"visibility":"public","docs":"Creates a new empty `Bytes`.\n\nThis will not allocate and the returned `Bytes` handle will be empty.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::new();\nassert_eq!(&b[..], b\"\");\n```","links":{},"attrs":["#[inline]","#[cfg(not(all(loom, test)))]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1007:2037":{"id":"0:1007:2037","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32846:244-0:1111:1987":{"id":"a:1:32846:244-0:1111:1987","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32846:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32846:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Reader","id":"0:1111:1987","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1142":{"id":"0:1142","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:3222:2710","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeInclusive","id":"1:40107:221","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1143:833"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:329:753":{"id":"0:329:753","crate_id":0,"name":"from","span":{"filename":"src/buf/uninit_slice.rs","begin":[223,4],"end":[225,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"1:31024:2579","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:458":{"id":"0:458","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[641,0],"end":[645,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","min","max"],"trait":{"name":"Ord","id":"1:2540:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:459:469"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[231,0],"end":[242,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7896:163","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1089:1982","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["0:219:171","0:220:1983","0:221:848"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:71:1975":{"id":"0:71:1975","crate_id":0,"name":"chain","span":{"filename":"src/buf/buf_impl.rs","begin":[1156,4],"end":[1161,5]},"visibility":"default","docs":"Creates an adaptor which will chain this buffer with another.\n\nThe returned `Buf` instance will first consume all bytes from `self`.\nAfterwards the output is equivalent to the output of next.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut chain = b\"hello \"[..].chain(&b\"world\"[..]);\n\nlet full = chain.copy_to_bytes(11);\nassert_eq!(full.chunk(), b\"hello world\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["next",{"generic":"U"}]],"output":{"resolved_path":{"name":"Chain","id":"0:1089:1982","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1146:832":{"id":"0:1146:832","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeTo","id":"1:40085:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:687:606":{"id":"0:687:606","crate_id":0,"name":"deref_mut","span":{"filename":"src/bytes_mut.rs","begin":[1166,4],"end":[1168,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2759-0:1098:1983":{"id":"b:1:2759-0:1098:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2728:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1098:1983","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2762:135","1:2763:1629"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1123:726":{"id":"0:1123:726","crate_id":0,"name":"fmt","span":{"filename":"src/buf/take.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:9962:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:9943:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32846:244-0:1117:1985":{"id":"a:1:32846:244-0:1117:1985","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:32846:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32846:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1117:1985","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1137":{"id":"0:1137","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:3222:2710","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeFull","id":"1:40025:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1138:833"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:36:2127":{"id":"0:36:2127","crate_id":0,"name":"get_i16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[417,4],"end":[419,5]},"visibility":"default","docs":"Gets a signed 16 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x09\\x08 hello\"[..];\nassert_eq!(0x0809, buf.get_i16_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12936:33228":{"id":"1:12936:33228","crate_id":1,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32847:2273-0:306:1986":{"id":"a:1:32847:2273-0:306:1986","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"1:12875:28065":{"id":"1:12875:28065","crate_id":1,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"1:12876:28104"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"1:44599:8002","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269:2683":{"id":"0:269:2683","crate_id":0,"name":"read","span":{"filename":"src/buf/reader.rs","begin":[66,4],"end":[71,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"5:3010:233","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:697:669":{"id":"0:697:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1190,4],"end":[1192,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:313:2587":{"id":"0:313:2587","crate_id":0,"name":"from_raw_parts_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[82,4],"end":[86,5]},"visibility":"public","docs":"Create a `&mut UninitSlice` from a pointer and a length.\n\n# Safety\n\nThe caller must ensure that `ptr` references a valid memory region owned\nby the caller representing a byte slice for the duration of `'a`.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\n\nlet bytes = b\"hello world\".to_vec();\nlet ptr = bytes.as_ptr() as *mut _;\nlet len = bytes.len();\n\nlet slice = unsafe { UninitSlice::from_raw_parts_mut(ptr, len) };\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ptr",{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}}],["len",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1052:2436":{"id":"0:1052:2436","crate_id":0,"name":"put_i16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:243":{"id":"0:243","crate_id":0,"name":null,"span":{"filename":"src/buf/limit.rs","begin":[18,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Limit","id":"0:1104:1984","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:245:2627","0:246:2297","0:247:2653","0:248:1976","0:249:2668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:75":{"id":"0:75","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1333,0],"end":[1335,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","take","chain","get_uint","get_f64_ne","get_u16_le","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_ne","get_u32","copy_to_slice","chunks_vectored","get_u128_ne","get_i128","get_u16_ne","get_u128","get_i128_le","get_i128_ne","get_f32_ne","reader","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","has_remaining","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64"],"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:973:2037","0:974:2000","0:975:2065","0:977:2003","0:978:2069","0:979:2004","0:980:2100","0:981:2103","0:982:2109","0:983:2113","0:984:2120","0:985:2124","0:986:2127","0:987:2130","0:988:2135","0:989:2139","0:990:2144","0:991:2147","0:992:2150","0:993:2153","0:994:2158","0:995:2162","0:996:2167","0:997:2170","0:998:2173","0:999:2176","0:1000:2204","0:1001:2209","0:1002:2214","0:1003:2218","0:1004:2221","0:1005:2224","0:1006:2258"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:997:2170":{"id":"0:997:2170","crate_id":0,"name":"get_i64","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1147":{"id":"0:1147","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IndexMut","id":"1:3222:2710","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeTo","id":"1:40085:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1148:833"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:180:2391":{"id":"0:180:2391","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1516,4],"end":[1518,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:137:2493":{"id":"0:137:2493","crate_id":0,"name":"put_u128_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[831,4],"end":[833,5]},"visibility":"default","docs":"Writes an unsigned 128 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u128_ne(0x01020304050607080910111213141516);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");\n} else {\n    assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:115:2402":{"id":"0:115:2402","crate_id":0,"name":"put_u8","span":{"filename":"src/buf/buf_mut.rs","begin":[317,4],"end":[320,5]},"visibility":"default","docs":"Writes an unsigned 8 bit integer to `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u8(0x01);\nassert_eq!(buf, b\"\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2441-0:1089:1982":{"id":"b:1:2441-0:1089:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1089:1982","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["1:2443:2792"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:272:2685":{"id":"0:272:2685","crate_id":0,"name":"fill_buf","span":{"filename":"src/buf/reader.rs","begin":[75,4],"end":[77,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"5:3010:233","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:348:2653":{"id":"0:348:2653","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/writer.rs","begin":[52,4],"end":[54,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.\n\n# Examples\n\n```rust\nuse bytes::BufMut;\n\nlet mut buf = vec![].writer();\n\nbuf.get_mut().reserve(1024);\n\nassert_eq!(1024, buf.get_ref().capacity());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:455:669":{"id":"0:455:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[630,4],"end":[632,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1005:2224":{"id":"0:1005:2224","crate_id":0,"name":"get_int_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1149":{"id":"0:1149","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"1:40008:2709","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeToInclusive","id":"1:40129:223","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1150:206","0:1151:832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:67:2250":{"id":"0:67:2250","crate_id":0,"name":"get_f64_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1084,4],"end":[1086,5]},"visibility":"default","docs":"Gets an IEEE754 double-precision (8 bytes) floating point number from\n`self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33 hello\",\n    false => b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F hello\",\n};\nassert_eq!(1.2f64, buf.get_f64_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:695:753":{"id":"0:695:753","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1184,4],"end":[1186,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/buf/limit.rs","begin":[59,0],"end":[75,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"BufMut","id":"0:106:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_bytes","put_u64","put_f32","put_f32_ne","put","put_u32_le","put_i128_ne","put_i128_le"],"trait":{"name":"BufMut","id":"0:106:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1104:1984","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:252:2331","0:253:2376","0:254:2349"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1164":{"id":"0:1164","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[36,0],"end":[36,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"1:10000:3325","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1165:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:177:2376":{"id":"0:177:2376","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1480,4],"end":[1490,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:642:3138":{"id":"0:642:3138","crate_id":0,"name":"split","span":{"filename":"src/bytes_mut.rs","begin":[346,4],"end":[349,5]},"visibility":"public","docs":"Removes the bytes from the current view, returning them in a new\n`BytesMut` handle.\n\nAfterwards, `self` will be empty, but will retain any additional\ncapacity that it had before the operation. This is identical to\n`self.split_to(self.len())`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(1024);\nbuf.put(&b\"hello world\"[..]);\n\nlet other = buf.split();\n\nassert!(buf.is_empty());\nassert_eq!(1013, buf.capacity());\n\nassert_eq!(other, b\"hello world\"[..]);\n```","links":{},"attrs":["#[must_use =\n\"consider BytesMut::advance(len()) if you don't need the other half\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1011:2003":{"id":"0:1011:2003","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:442":{"id":"0:442","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[603,0],"end":[610,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:7896:163","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:443:171","0:444:1983","0:445:848"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:221:848":{"id":"0:221:848","crate_id":0,"name":"into_iter","span":{"filename":"src/buf/chain.rs","begin":[239,4],"end":[241,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:7896:163","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1023:2139":{"id":"0:1023:2139","crate_id":0,"name":"get_u32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:493":{"id":"0:493","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[745,0],"end":[749,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"items":["0:494:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:444:1983":{"id":"0:444:1983","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes.rs","begin":[605,4],"end":[605,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IntoIter","id":"0:1098:1983","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:640:3113":{"id":"0:640:3113","crate_id":0,"name":"zeroed","span":{"filename":"src/bytes_mut.rs","begin":[274,4],"end":[276,5]},"visibility":"public","docs":"Creates a new `BytesMut`, which is initialized with zero.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet zeros = BytesMut::zeroed(42);\n\nassert_eq!(zeros.len(), 42);\nzeros.into_iter().for_each(|x| assert_eq!(x, 0));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:713:1753":{"id":"0:713:1753","crate_id":0,"name":"write_str","span":{"filename":"src/bytes_mut.rs","begin":[1240,4],"end":[1247,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:9943:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12863:30331":{"id":"1:12863:30331","crate_id":1,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:10643:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:10643:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1001:2209":{"id":"0:1001:2209","crate_id":0,"name":"get_uint_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:149:2538":{"id":"0:149:2538","crate_id":0,"name":"put_f32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1122,4],"end":[1124,5]},"visibility":"default","docs":"Writes an IEEE754 single-precision (4 bytes) floating point number to\n`self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f32_ne(1.2f32);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x3F\\x99\\x99\\x9A\");\n} else {\n    assert_eq!(buf, b\"\\x9A\\x99\\x99\\x3F\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1050:2430":{"id":"0:1050:2430","crate_id":0,"name":"put_i16","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42554:3858-0:1104:1984":{"id":"a:1:42554:3858-0:1104:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42554:3858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42554:3858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1104:1984","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:989:2139":{"id":"0:989:2139","crate_id":0,"name":"get_u32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1154:1988":{"id":"0:1154:1988","crate_id":0,"name":"Writer","span":{"filename":"src/buf/writer.rs","begin":[11,0],"end":[13,1]},"visibility":"public","docs":"A `BufMut` adapter which implements `io::Write` for the inner value.\n\nThis struct is generally created by calling `writer()` on `BufMut`. See\ndocumentation of [`writer()`](trait.BufMut.html#method.writer) for more\ndetails.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:345","a:1:32928:3878-0:1154:1988","a:1:42553:3859-0:1154:1988","a:1:2966:254-0:1154:1988","a:1:42554:3858-0:1154:1988","a:1:32846:244-0:1154:1988","b:1:2444-0:1154:1988","b:1:2748-0:1154:1988","b:1:2754-0:1154:1988","b:1:3560-0:1154:1988","b:1:2759-0:1154:1988","b:1:2441-0:1154:1988","b:1:2744-0:1154:1988","0:1157","0:350"]}}},"0:474:669":{"id":"0:474:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[686,4],"end":[688,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:771":{"id":"0:771","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1530,0],"end":[1534,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::vec::Vec","id":"4:6969:270","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:772:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:409:2068":{"id":"0:409:2068","crate_id":0,"name":"is_empty","span":{"filename":"src/bytes.rs","begin":[207,4],"end":[209,5]},"visibility":"public","docs":"Returns true if the `Bytes` has a length of 0.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::new();\nassert!(b.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:724:1983":{"id":"0:724:1983","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes_mut.rs","begin":[1272,4],"end":[1272,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"1:10788:2959","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"0:754:1146":{"id":"0:754:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1477,4],"end":[1479,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:761":{"id":"0:761","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1500,0],"end":[1504,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:762:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:214:2376":{"id":"0:214:2376","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/chain.rs","begin":[204,4],"end":[210,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:141:2506":{"id":"0:141:2506","crate_id":0,"name":"put_uint","span":{"filename":"src/buf/buf_mut.rs","begin":[923,4],"end":[925,5]},"visibility":"default","docs":"Writes an unsigned n-byte integer to `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_uint(0x010203, 3);\nassert_eq!(buf, b\"\\x01\\x02\\x03\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42554:3858-0:1098:1983":{"id":"a:1:42554:3858-0:1098:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42554:3858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42554:3858","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1098:1983","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:734:3227":{"id":"0:734:3227","crate_id":0,"name":"extend","span":{"filename":"src/bytes_mut.rs","begin":[1309,4],"end":[1316,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7896:163","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2763:1629":{"id":"1:2763:1629","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"1:42572:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"1:2728:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:644:2945":{"id":"0:644:2945","crate_id":0,"name":"truncate","span":{"filename":"src/bytes_mut.rs","begin":[416,4],"end":[422,5]},"visibility":"public","docs":"Shortens the buffer, keeping the first `len` bytes and dropping the\nrest.\n\nIf `len` is greater than the buffer's current length, this has no\neffect.\n\nExisting underlying capacity is preserved.\n\nThe [`split_off`] method can emulate `truncate`, but this causes the\nexcess bytes to be returned instead of dropped.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::from(&b\"hello world\"[..]);\nbuf.truncate(5);\nassert_eq!(buf, b\"hello\"[..]);\n```\n\n[`split_off`]: #method.split_off","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12883:31727":{"id":"1:12883:31727","crate_id":1,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"5:12106:458","self::pattern":"1:12541:3716"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12856:2094":{"id":"1:12856:2094","crate_id":1,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"5:12123:1653"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:481":{"id":"0:481","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[709,0],"end":[713,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::vec::Vec","id":"4:6969:270","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:482:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:122:2436":{"id":"0:122:2436","crate_id":0,"name":"put_i16_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[481,4],"end":[483,5]},"visibility":"default","docs":"Writes a signed 16 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i16_ne(0x0809);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x08\\x09\");\n} else {\n    assert_eq!(buf, b\"\\x09\\x08\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:484:1146":{"id":"0:484:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[716,4],"end":[718,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:465":{"id":"0:465","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[661,0],"end":[665,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"slice":{"primitive":"u8"}},"items":["0:466:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:29:2004":{"id":"0:29:2004","crate_id":0,"name":"copy_to_slice","span":{"filename":"src/buf/buf_impl.rs","begin":[251,4],"end":[270,5]},"visibility":"default","docs":"Copies bytes from `self` into `dst`.\n\nThe cursor is advanced by the number of bytes copied. `self` must have\nenough remaining bytes to fill `dst`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\nlet mut dst = [0; 5];\n\nbuf.copy_to_slice(&mut dst);\nassert_eq!(&b\"hello\"[..], &dst);\nassert_eq!(6, buf.remaining());\n```\n\n# Panics\n\nThis function panics if `self.remaining() < dst.len()`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1048:2418":{"id":"0:1048:2418","crate_id":0,"name":"put_u16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1094":{"id":"0:1094","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[31,9],"end":[31,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9987:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9987:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9987:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1089:1982","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":["0:1097:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:987:2130":{"id":"0:987:2130","crate_id":0,"name":"get_i16_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:430:2003":{"id":"0:430:2003","crate_id":0,"name":"advance","span":{"filename":"src/bytes.rs","begin":[548,4],"end":[559,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:520":{"id":"0:520","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[874,0],"end":[878,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:521:753"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:440":{"id":"0:440","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[597,0],"end":[601,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2435:103","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:441:2792"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:142:2510":{"id":"0:142:2510","crate_id":0,"name":"put_uint_le","span":{"filename":"src/buf/buf_mut.rs","begin":[945,4],"end":[947,5]},"visibility":"default","docs":"Writes an unsigned n-byte integer to `self` in the little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_uint_le(0x010203, 3);\nassert_eq!(buf, b\"\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:220:1983":{"id":"0:220:1983","crate_id":0,"name":"IntoIter","span":{"filename":"src/buf/chain.rs","begin":[237,4],"end":[237,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IntoIter","id":"0:1098:1983","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Chain","id":"0:1089:1982","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}}}],"bindings":[]}}}}}}},"b:1:3560-0:306:1986":{"id":"b:1:3560-0:306:1986","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3558:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3562:1644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"4:5537:33937":{"id":"4:5537:33937","crate_id":4,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"4:281:1993","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"4:281:1993","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:128:2458":{"id":"0:128:2458","crate_id":0,"name":"put_i32_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[621,4],"end":[623,5]},"visibility":"default","docs":"Writes a signed 32 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i32_ne(0x0809A0A1);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");\n} else {\n    assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:488:1146":{"id":"0:488:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[728,4],"end":[730,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:763":{"id":"0:763","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1506,0],"end":[1510,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"str"},"items":["0:764:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:460":{"id":"0:460","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[647,0],"end":[647,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2509:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1077:2440":{"id":"0:1077:2440","crate_id":0,"name":"put_u32","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:648:2585":{"id":"0:648:2585","crate_id":0,"name":"reserve","span":{"filename":"src/bytes_mut.rs","begin":[566,4],"end":[577,5]},"visibility":"public","docs":"Reserves capacity for at least `additional` more bytes to be inserted\ninto the given `BytesMut`.\n\nMore than `additional` bytes may be reserved in order to avoid frequent\nreallocations. A call to `reserve` may result in an allocation.\n\nBefore allocating new buffer space, the function will attempt to reclaim\nspace in the existing buffer. If the current handle references a view\ninto a larger original buffer, and all other handles referencing part\nof the same original buffer have been dropped, then the current view\ncan be copied/shifted to the front of the buffer and the handle can take\nownership of the full buffer, provided that the full buffer is large\nenough to fit the requested additional capacity.\n\nThis optimization will only happen if shifting the data from the current\nview to the front of the buffer is not too expensive in terms of the\n(amortized) time required. The precise condition is subject to change;\nas of now, the length of the data being shifted needs to be at least as\nlarge as the distance that it's shifted by. If the current view is empty\nand the original buffer is large enough to fit the requested additional\ncapacity, then reallocations will never happen.\n\n# Examples\n\nIn the following example, a new buffer is allocated.\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::from(&b\"hello\"[..]);\nbuf.reserve(64);\nassert!(buf.capacity() >= 69);\n```\n\nIn the following example, the existing buffer is reclaimed.\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(128);\nbuf.put(&[0; 64][..]);\n\nlet ptr = buf.as_ptr();\nlet other = buf.split();\n\nassert!(buf.is_empty());\nassert_eq!(buf.capacity(), 64);\n\ndrop(other);\nbuf.reserve(128);\n\nassert_eq!(buf.capacity(), 128);\nassert_eq!(buf.as_ptr(), ptr);\n```\n\n# Panics\n\nPanics if the new capacity overflows `usize`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["additional",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:833:726":{"id":"0:833:726","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/debug.rs","begin":[46,4],"end":[48,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"1:9962:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:9943:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:4:687-0:395:1847":{"id":"b:4:687-0:395:1847","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2457:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"4:683:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["4:689:3706","4:690:27700","4:691:27701"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:773":{"id":"0:773","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1536,0],"end":[1540,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::vec::Vec","id":"4:6969:270","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:774:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2744-0:1104:1984":{"id":"b:1:2744-0:1104:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1104:1984","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2747:2873"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32928:3878-0:395:1847":{"id":"a:1:32928:3878-0:395:1847","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32928:3878","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:664":{"id":"0:664","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1036,0],"end":[1051,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"1:3183:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:665:642"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2444-0:306:1986":{"id":"b:1:2444-0:306:1986","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2446:3271"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:449:1983":{"id":"0:449:1983","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes.rs","begin":[614,4],"end":[614,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"1:10788:2959","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"1:12865:33220":{"id":"1:12865:33220","crate_id":1,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"5:12112:1548","str::slice_mut_unchecked":"1:12866:33221","crate::ops::Index":"1:40008:2709"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:164:2376":{"id":"0:164:2376","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1393,4],"end":[1396,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1027:2153":{"id":"0:1027:2153","crate_id":0,"name":"get_i32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:166:2391":{"id":"0:166:2391","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1406,4],"end":[1411,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:118:2418":{"id":"0:118:2418","crate_id":0,"name":"put_u16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[385,4],"end":[387,5]},"visibility":"default","docs":"Writes an unsigned 16 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u16_le(0x0809);\nassert_eq!(buf, b\"\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:494:669":{"id":"0:494:669","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[746,4],"end":[748,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:613:1848":{"id":"0:613:1848","crate_id":0,"name":"BytesMut","span":{"filename":"src/bytes_mut.rs","begin":[61,0],"end":[66,1]},"visibility":"public","docs":"A unique reference to a contiguous slice of memory.\n\n`BytesMut` represents a unique view into a potentially shared memory region.\nGiven the uniqueness guarantee, owners of `BytesMut` handles are able to\nmutate the memory.\n\n`BytesMut` can be thought of as containing a `buf: Arc<Vec<u8>>`, an offset\ninto `buf`, a slice length, and a guarantee that no other `BytesMut` for the\nsame `buf` overlaps with its slice. That guarantee means that a write lock\nis not required.\n\n# Growth\n\n`BytesMut`'s `BufMut` implementation will implicitly grow its buffer as\nnecessary. However, explicitly reserving the required space up-front before\na series of inserts will be more efficient.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(64);\n\nbuf.put_u8(b'h');\nbuf.put_u8(b'e');\nbuf.put(&b\"llo\"[..]);\n\nassert_eq!(&buf[..], b\"hello\");\n\n// Freeze the buffer so that it can be shared\nlet a = buf.freeze();\n\n// This does not allocate, instead `b` points to the same memory.\nlet b = a.clone();\n\nassert_eq!(&a[..], b\"hello\");\nassert_eq!(&b[..], b\"hello\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:633","a:1:32928:3878-0:613:1848","a:1:42553:3859-0:613:1848","a:1:42554:3858-0:613:1848","b:1:2444-0:613:1848","b:1:2748-0:613:1848","b:1:2754-0:613:1848","b:1:3560-0:613:1848","b:1:2759-0:613:1848","b:1:2441-0:613:1848","b:1:2744-0:613:1848","b:4:687-0:613:1848","0:797","0:700","0:736","0:771","0:703","0:681","0:775","0:779","0:688","0:1162","0:759","0:696","0:717","0:750","0:671","0:757","0:694","0:832","0:691","0:773","0:801","0:726","0:749","0:783","0:791","0:761","0:787","0:698","0:705","0:795","0:679","0:684","0:777","0:751","0:755","0:781","0:702","0:769","0:715","0:712","0:739","0:1166","0:664","0:729","0:733","0:799","0:708","0:710","0:793","0:763","0:666","0:686","0:803","0:721","0:767","0:765","0:753"]}}},"1:12965:33238":{"id":"1:12965:33238","crate_id":1,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"1:12502:134","`FromStr`":"1:12501:3715"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42572:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"1:12501:3715","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"1:12501:3715","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:731:3227":{"id":"0:731:3227","crate_id":0,"name":"extend","span":{"filename":"src/bytes_mut.rs","begin":[1300,4],"end":[1305,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:7896:163","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"u8"}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:1844":{"id":"0:0:1844","crate_id":0,"name":"bytes","span":{"filename":"src/lib.rs","begin":[1,0],"end":[117,1]},"visibility":"public","docs":"Provides abstractions for working with bytes.\n\nThe `bytes` crate provides an efficient byte buffer structure\n([`Bytes`](struct.Bytes.html)) and traits for working with buffer\nimplementations ([`Buf`], [`BufMut`]).\n\n[`Buf`]: trait.Buf.html\n[`BufMut`]: trait.BufMut.html\n\n# `Bytes`\n\n`Bytes` is an efficient container for storing and operating on contiguous\nslices of memory. It is intended for use primarily in networking code, but\ncould have applications elsewhere as well.\n\n`Bytes` values facilitate zero-copy network programming by allowing multiple\n`Bytes` objects to point to the same underlying memory. This is managed by\nusing a reference count to track when the memory is no longer needed and can\nbe freed.\n\nA `Bytes` handle can be created directly from an existing byte store (such as `&[u8]`\nor `Vec<u8>`), but usually a `BytesMut` is used first and written to. For\nexample:\n\n```rust\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(1024);\nbuf.put(&b\"hello world\"[..]);\nbuf.put_u16(1234);\n\nlet a = buf.split();\nassert_eq!(a, b\"hello world\\x04\\xD2\"[..]);\n\nbuf.put(&b\"goodbye world\"[..]);\n\nlet b = buf.split();\nassert_eq!(b, b\"goodbye world\"[..]);\n\nassert_eq!(buf.capacity(), 998);\n```\n\nIn the above example, only a single buffer of 1024 is allocated. The handles\n`a` and `b` will share the underlying buffer and maintain indices tracking\nthe view into the buffer represented by the handle.\n\nSee the [struct docs] for more details.\n\n[struct docs]: struct.Bytes.html\n\n# `Buf`, `BufMut`\n\nThese two traits provide read and write access to buffers. The underlying\nstorage may or may not be in contiguous memory. For example, `Bytes` is a\nbuffer that guarantees contiguous memory, but a [rope] stores the bytes in\ndisjoint chunks. `Buf` and `BufMut` maintain cursors tracking the current\nposition in the underlying byte storage. When bytes are read or written, the\ncursor is advanced.\n\n[rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)\n\n## Relation with `Read` and `Write`\n\nAt first glance, it may seem that `Buf` and `BufMut` overlap in\nfunctionality with `std::io::Read` and `std::io::Write`. However, they\nserve different purposes. A buffer is the value that is provided as an\nargument to `Read::read` and `Write::write`. `Read` and `Write` may then\nperform a syscall, which has the potential of failing. Operations on `Buf`\nand `BufMut` are infallible.","links":{},"attrs":["#![warn(missing_docs, missing_debug_implementations, rust_2018_idioms)]","#![doc(test(no_crate_inject,\nattr(deny(warnings, rust_2018_idioms), allow(dead_code, unused_variables))))]","#![no_std]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:6:1841","0:365-0:22:1842","0:366-0:106:1843","0:870-0:395:1847","0:871-0:613:1848"],"is_stripped":false}}},"1:12967:32842":{"id":"1:12967:32842","crate_id":1,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:982:2109":{"id":"0:982:2109","crate_id":0,"name":"get_u16","span":{"filename":"src/buf/buf_impl.rs","begin":[1334,4],"end":[1334,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:12942:33231":{"id":"1:12942:33231","crate_id":1,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:107:2331":{"id":"0:107:2331","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[63,4],"end":[63,37]},"visibility":"default","docs":"Returns the number of bytes that can be written from the current\nposition until the end of the buffer is reached.\n\nThis value is greater than or equal to the length of the slice returned\nby `chunk_mut()`.\n\nWriting to a `BufMut` may involve allocating more memory on the fly.\nImplementations may fail before reaching the number of bytes indicated\nby this method if they encounter an allocation failure.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 10];\nlet mut buf = &mut dst[..];\n\nlet original_remaining = buf.remaining_mut();\nbuf.put(&b\"hello\"[..]);\n\nassert_eq!(original_remaining - 5, buf.remaining_mut());\n```\n\n# Implementer notes\n\nImplementations of `remaining_mut` should ensure that the return value\ndoes not change unless a call is made to `advance_mut` or any other\nfunction that is documented to change the `BufMut`'s current position.\n\n# Note\n\n`remaining_mut` may return value smaller than actual available space.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:671":{"id":"0:671","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1082,0],"end":[1139,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["put_i128","put_u128_ne","put_u16_ne","writer","put_u128","put_f64_le","put_f64","put_f32_le","put_u8","put_u64_le","put_uint_ne","chain_mut","put_uint","put_i16_ne","put_i16_le","put_i16","put_u128_le","put_f64_ne","has_remaining_mut","put_u16_le","limit","put_i8","put_int_ne","put_i32_ne","put_slice","put_i32","put_u32_ne","put_i32_le","put_uint_le","put_u32","put_int","put_int_le","put_i64_ne","put_u16","put_i64","put_u64_ne","put_i64_le","put_bytes","put_u64","put_f32","put_f32_ne","put","put_u32_le","put_i128_ne","put_i128_le"],"trait":{"name":"BufMut","id":"0:106:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:672:2331","0:673:2349","0:674:2376","0:675:2261","0:677:2391","0:678:2401"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1044:2391":{"id":"0:1044:2391","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1067:2349":{"id":"0:1067:2349","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:666":{"id":"0:666","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1053,0],"end":[1080,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["get_i64_ne","get_u16","get_i64","get_i8","get_u8","get_u64_ne","get_u64","get_i64_le","get_f32_le","copy_to_bytes","take","chain","get_uint","get_f64_ne","get_u16_le","get_f32","get_u64_le","get_i32_ne","get_i32_le","get_i32","get_u32_ne","get_uint_ne","get_u32","copy_to_slice","chunks_vectored","get_u128_ne","get_i128","get_u16_ne","get_u128","get_i128_le","get_i128_ne","get_f32_ne","reader","get_int_ne","get_int_le","get_int","get_uint_le","get_u32_le","has_remaining","get_i16_ne","get_i16_le","get_i16","get_u128_le","get_f64_le","get_f64"],"trait":{"name":"Buf","id":"0:22:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:667:2037","0:668:2000","0:669:2003","0:670:2258"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:667:2037":{"id":"0:667:2037","crate_id":0,"name":"remaining","span":{"filename":"src/bytes_mut.rs","begin":[1055,4],"end":[1057,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1074:2430":{"id":"0:1074:2430","crate_id":0,"name":"put_i16","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2441-0:613:1848":{"id":"b:1:2441-0:613:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2435:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2443:2792"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:781":{"id":"0:781","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1560,0],"end":[1564,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::string::String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:782:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:58:2214":{"id":"0:58:2214","crate_id":0,"name":"get_uint_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[881,4],"end":[887,5]},"visibility":"default","docs":"Gets an unsigned n-byte integer from `self` in native-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x01\\x02\\x03 hello\",\n    false => b\"\\x03\\x02\\x01 hello\",\n};\nassert_eq!(0x010203, buf.get_uint_ne(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:64:2239":{"id":"0:64:2239","crate_id":0,"name":"get_f32_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1020,5]},"visibility":"default","docs":"Gets an IEEE754 single-precision (4 bytes) floating point number from\n`self` in native-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf: &[u8] = match cfg!(target_endian = \"big\") {\n    true => b\"\\x3F\\x99\\x99\\x9A hello\",\n    false => b\"\\x9A\\x99\\x99\\x3F hello\",\n};\nassert_eq!(1.2f32, buf.get_f32_ne());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"f32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1039:2224":{"id":"0:1039:2224","crate_id":0,"name":"get_int_ne","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:249:2668":{"id":"0:249:2668","crate_id":0,"name":"set_limit","span":{"filename":"src/buf/limit.rs","begin":[54,4],"end":[56,5]},"visibility":"public","docs":"Sets the maximum number of bytes that can be written.\n\n# Note\n\nIf the inner `BufMut` has fewer bytes than `lim` then that is the actual\nnumber of available bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["lim",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:690:753":{"id":"0:690:753","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1172,4],"end":[1174,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2444-0:1117:1985":{"id":"b:1:2444-0:1117:1985","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Take","id":"0:1117:1985","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:2446:3271"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:870-0:395:1847":{"id":"0:870-0:395:1847","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[91,0],"end":[91,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::bytes::Bytes","name":"Bytes","id":"0:395:1847","glob":false}}},"0:677:2391":{"id":"0:677:2391","crate_id":0,"name":"put_slice","span":{"filename":"src/bytes_mut.rs","begin":[1123,4],"end":[1125,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:246:2297":{"id":"0:246:2297","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/limit.rs","begin":[27,4],"end":[29,5]},"visibility":"public","docs":"Gets a reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:706:790":{"id":"0:706:790","crate_id":0,"name":"hash","span":{"filename":"src/bytes_mut.rs","begin":[1217,4],"end":[1223,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"H"},"bounds":[{"trait_bound":{"trait":{"name":"hash::Hasher","id":"1:10211:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2744-0:613:1848":{"id":"b:1:2744-0:613:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2718:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2747:2873"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:213:2331":{"id":"0:213:2331","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/chain.rs","begin":[198,4],"end":[202,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2444-0:1154:1988":{"id":"b:1:2444-0:1154:1988","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2438:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1154:1988","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":["1:2446:3271"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:133:2477":{"id":"0:133:2477","crate_id":0,"name":"put_i64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[735,4],"end":[737,5]},"visibility":"default","docs":"Writes a signed 64 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i64_le(0x0102030405060708);\nassert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:469":{"id":"0:469","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[673,0],"end":[677,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:470:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:489":{"id":"0:489","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[733,0],"end":[737,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::string::String","id":"4:7544:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:490:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:514:753":{"id":"0:514:753","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[803,4],"end":[805,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:518:753":{"id":"0:518:753","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[844,4],"end":[871,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["slice",{"resolved_path":{"name":"Box","id":"4:281:1993","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1133:833":{"id":"0:1133:833","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[250,0],"end":[257,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["index",{"resolved_path":{"name":"RangeFrom","id":"1:40065:219","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"UninitSlice","id":"0:306:1986","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:2966:254-0:1154:1988":{"id":"a:1:2966:254-0:1154:1988","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2966:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2966:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Writer","id":"0:1154:1988","args":{"angle_bracketed":{"args":[{"type":{"generic":"B"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:767":{"id":"0:767","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1518,0],"end":[1522,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"4:6969:270","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:768:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:209:2258":{"id":"0:209:2258","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/chain.rs","begin":[174,4],"end":[190,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:205:2000":{"id":"0:205:2000","crate_id":0,"name":"chunk","span":{"filename":"src/buf/chain.rs","begin":[141,4],"end":[147,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:131:2471":{"id":"0:131:2471","crate_id":0,"name":"put_u64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[691,4],"end":[693,5]},"visibility":"default","docs":"Writes an unsigned 64 bit integer to `self` in native-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u64_ne(0x0102030405060708);\nif cfg!(target_endian = \"big\") {\n    assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");\n} else {\n    assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n}\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:464:1146":{"id":"0:464:1146","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[656,4],"end":[658,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42425:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"1:31592:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:44:2158":{"id":"0:44:2158","crate_id":0,"name":"get_u64","span":{"filename":"src/buf/buf_impl.rs","begin":[586,4],"end":[588,5]},"visibility":"default","docs":"Gets an unsigned 64 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_u64());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:517":{"id":"0:517","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[843,0],"end":[872,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"4:281:1993","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:518:753"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:172:2391":{"id":"0:172:2391","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1441,4],"end":[1446,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:688":{"id":"0:688","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1171,0],"end":[1175,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:690:753"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:2966:254-0:1089:1982":{"id":"a:1:2966:254-0:1089:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2966:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:2966:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2966:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1089:1982","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:12906:33223":{"id":"1:12906:33223","crate_id":1,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"1:12541:3716","str::split":"1:12897:3138","prim@char":"5:12106:458","`DoubleEndedIterator`":"1:7934:128","str::rsplit_terminator":"1:12909:33224"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"1:44375:7995","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:12546:3710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1008:2000":{"id":"0:1008:2000","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1338,4],"end":[1338,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32928:3878-0:1089:1982":{"id":"a:1:32928:3878-0:1089:1982","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32928:3878","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32928:3878","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32928:3878","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Chain","id":"0:1089:1982","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"U"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:32928:3878-0:1104:1984":{"id":"a:1:32928:3878-0:1104:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:32928:3878","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32928:3878","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Limit","id":"0:1104:1984","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:60:2221":{"id":"0:60:2221","crate_id":0,"name":"get_int_le","span":{"filename":"src/buf/buf_impl.rs","begin":[925,4],"end":[927,5]},"visibility":"default","docs":"Gets a signed n-byte integer from `self` in little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x010203, buf.get_int_le(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1075:2433":{"id":"0:1075:2433","crate_id":0,"name":"put_i16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:477":{"id":"0:477","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[697,0],"end":[701,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2504:208","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"4:6969:270","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:478:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:359-0:1117:1985":{"id":"0:359-0:1117:1985","crate_id":0,"name":null,"span":{"filename":"src/buf/mod.rs","begin":[37,0],"end":[37,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::take::Take","name":"Take","id":"0:1117:1985","glob":false}}},"0:215:2349":{"id":"0:215:2349","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/chain.rs","begin":[212,4],"end":[228,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["cnt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:681":{"id":"0:681","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1148,0],"end":[1155,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:3159:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:682:256","0:683:604"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1101":{"id":"0:1101","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[23,9],"end":[23,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:9987:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9987:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1098:1983","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:1103:726"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:693:753":{"id":"0:693:753","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1178,4],"end":[1180,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1046:2409":{"id":"0:1046:2409","crate_id":0,"name":"put_i8","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:281":{"id":"0:281","crate_id":0,"name":null,"span":{"filename":"src/buf/take.rs","begin":[19,0],"end":[130,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Take","id":"0:1117:1985","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:283:2627","0:284:2297","0:285:2653","0:286:1976","0:287:2668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:126:2452":{"id":"0:126:2452","crate_id":0,"name":"put_i32","span":{"filename":"src/buf/buf_mut.rs","begin":[573,4],"end":[575,5]},"visibility":"default","docs":"Writes a signed 32 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i32(0x0809A0A1);\nassert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:515":{"id":"0:515","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[808,0],"end":[841,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"4:6969:270","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:516:753"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:248:1976":{"id":"0:248:1976","crate_id":0,"name":"limit","span":{"filename":"src/buf/limit.rs","begin":[44,4],"end":[46,5]},"visibility":"public","docs":"Returns the maximum number of bytes that can be written\n\n# Note\n\nIf the inner `BufMut` has fewer bytes than indicated by this method then\nthat is the actual number of available bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:424:642":{"id":"0:424:642","crate_id":0,"name":"drop","span":{"filename":"src/bytes.rs","begin":[524,4],"end":[526,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:505":{"id":"0:505","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[778,0],"end":[785,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"1:2546:209","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Bytes","id":"0:395:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:508:1146"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1064:2480":{"id":"0:1064:2480","crate_id":0,"name":"put_i64_ne","span":{"filename":"src/buf/buf_mut.rs","begin":[1379,4],"end":[1379,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3560-0:1098:1983":{"id":"b:1:3560-0:1098:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32847:2273","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3558:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:1098:1983","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["1:3562:1644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:647:2584":{"id":"0:647:2584","crate_id":0,"name":"set_len","span":{"filename":"src/bytes_mut.rs","begin":[502,4],"end":[505,5]},"visibility":"public","docs":"Sets the length of the buffer.\n\nThis will explicitly set the size of the buffer without actually\nmodifying the data, so it is up to the caller to ensure that the data\nhas been initialized.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut b = BytesMut::from(&b\"hello world\"[..]);\n\nunsafe {\n    b.set_len(5);\n}\n\nassert_eq!(&b[..], b\"hello\");\n\nunsafe {\n    b.set_len(11);\n}\n\nassert_eq!(&b[..], b\"hello world\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["len",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:663:3228":{"id":"0:663:3228","crate_id":0,"name":"spare_capacity_mut","span":{"filename":"src/bytes_mut.rs","begin":[1026,4],"end":[1033,5]},"visibility":"public","docs":"Returns the remaining spare capacity of the buffer as a slice of `MaybeUninit<u8>`.\n\nThe returned slice can be used to fill the buffer with data (e.g. by\nreading from a file) before marking the data as initialized using the\n[`set_len`] method.\n\n[`set_len`]: BytesMut::set_len\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\n// Allocate buffer big enough for 10 bytes.\nlet mut buf = BytesMut::with_capacity(10);\n\n// Fill in the first 3 elements.\nlet uninit = buf.spare_capacity_mut();\nuninit[0].write(0);\nuninit[1].write(1);\nuninit[2].write(2);\n\n// Mark the first 3 bytes of the buffer as being initialized.\nunsafe {\n    buf.set_len(3);\n}\n\nassert_eq!(&buf[..], &[0, 1, 2]);\n```","links":{"BytesMut::set_len":"0:647:2584"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"1:31024:2579","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:54:2196":{"id":"0:54:2196","crate_id":0,"name":"get_i128_le","span":{"filename":"src/buf/buf_impl.rs","begin":[795,4],"end":[797,5]},"visibility":"default","docs":"Gets a signed 128 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_i128_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:85:2037":{"id":"0:85:2037","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1360,4],"end":[1369,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:130:2466":{"id":"0:130:2466","crate_id":0,"name":"put_u64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[665,4],"end":[667,5]},"visibility":"default","docs":"Writes an unsigned 64 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u64_le(0x0102030405060708);\nassert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:803":{"id":"0:803","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1620,0],"end":[1656,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2721:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"alloc::vec::Vec","id":"4:6969:270","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:804:753"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:229:2653":{"id":"0:229:2653","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/iter.rs","begin":[105,4],"end":[107,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BytesMut};\n\nlet buf = BytesMut::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\n\niter.get_mut().advance(1);\n\nassert_eq!(iter.next(), Some(b'c'));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:665:642":{"id":"0:665:642","crate_id":0,"name":"drop","span":{"filename":"src/bytes_mut.rs","begin":[1037,4],"end":[1050,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:273:2686":{"id":"0:273:2686","crate_id":0,"name":"consume","span":{"filename":"src/buf/reader.rs","begin":[78,4],"end":[80,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["amt",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1072:2418":{"id":"0:1072:2418","crate_id":0,"name":"put_u16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1383,4],"end":[1383,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:641:2924":{"id":"0:641:2924","crate_id":0,"name":"split_off","span":{"filename":"src/bytes_mut.rs","begin":[305,4],"end":[318,5]},"visibility":"public","docs":"Splits the bytes into two at the given index.\n\nAfterwards `self` contains elements `[0, at)`, and the returned\n`BytesMut` contains elements `[at, capacity)`.\n\nThis is an `O(1)` operation that just increases the reference count\nand sets a few indices.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut a = BytesMut::from(&b\"hello world\"[..]);\nlet mut b = a.split_off(5);\n\na[0] = b'j';\nb[0] = b'!';\n\nassert_eq!(&a[..], b\"jello\");\nassert_eq!(&b[..], b\"!world\");\n```\n\n# Panics\n\nPanics if `at > capacity`.","links":{},"attrs":["#[must_use = \"consider BytesMut::truncate if you don't need the other half\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["at",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"BytesMut","id":"0:613:1848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:443:171":{"id":"0:443:171","crate_id":0,"name":"Item","span":{"filename":"src/bytes.rs","begin":[604,4],"end":[604,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u8"}}}},"0:57:2209":{"id":"0:57:2209","crate_id":0,"name":"get_uint_le","span":{"filename":"src/buf/buf_impl.rs","begin":[858,4],"end":[860,5]},"visibility":"default","docs":"Gets an unsigned n-byte integer from `self` in little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x010203, buf.get_uint_le(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"17:12474:5758":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"5:10775:34498":{"crate_id":5,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"1:40012:3625":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"5:2436:16881":{"crate_id":5,"path":["std","fs","canonicalize"],"kind":"function"},"16:2504:6818":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"11:2443:3569":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"5:7913:7550":{"crate_id":5,"path":["std","fs","ReadDir"],"kind":"struct"},"5:12106:458":{"crate_id":5,"path":["std","char"],"kind":"primitive"},"6:6837:9855":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:42543:3856":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"6:6228:9749":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:13491:6102":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:13478:6098":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"1:44589:8001":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"6:6764:9833":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"18:719:5599":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:45244:226":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"6:4989:9488":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"1:3315:218":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:16032:6754":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"17:12387:23679":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"11:2352:7396":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"1:43162:3747":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"5:1607:7407":{"crate_id":5,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:15192:6516":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"5:8473:7621":{"crate_id":5,"path":["std","path","Prefix"],"kind":"enum"},"11:2536:8967":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"5:6037:5407":{"crate_id":5,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"6:7657:9955":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"18:538:5567":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"6:6169:9737":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:6499:6856":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"1:9990:118":{"crate_id":1,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"1:44727:8005":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"5:11693:7539":{"crate_id":5,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"6:4922:9447":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"5:0:1540":{"crate_id":5,"path":["std"],"kind":"module"},"6:6718:9814":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"5:5512:112":{"crate_id":5,"path":["std","process","Command"],"kind":"struct"},"5:6228:5406":{"crate_id":5,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"17:15631:6653":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:41078:3662":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"5:9029:7634":{"crate_id":5,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:15507:6619":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:15184:6515":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"4:5389:16806":{"crate_id":4,"path":["alloc","slice","Concat"],"kind":"trait"},"1:44642:7937":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:11604:5841":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"5:9061:34475":{"crate_id":5,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"18:644:5560":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"5:10925:4643":{"crate_id":5,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"1:11113:4306":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:21496:16543":{"crate_id":1,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:44447:4305":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"16:7736:7224":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"6:574:9037":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:15101:6495":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:12410:5948":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:14934:6458":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"16:8294:135":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:10067:5608":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"5:8270:1985":{"crate_id":5,"path":["std","io","Take"],"kind":"struct"},"17:15557:6632":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"5:10090:7492":{"crate_id":5,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"1:3418:30035":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"4:1151:8309":{"crate_id":4,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"15:0:3404":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:1900:3744":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"5:6260:7525":{"crate_id":5,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:15037:6476":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"5:11083:4641":{"crate_id":5,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"1:44848:7885":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:4449:7846":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:46338:8035":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"6:7556:9942":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:11395:5813":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"5:3389:3495":{"crate_id":5,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"5:6315:5407":{"crate_id":5,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"17:9678:23539":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"16:6753:7084":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:11672:2954":{"crate_id":1,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"16:8154:7285":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:1203:5625":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"17:14896:6451":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"5:951:7393":{"crate_id":5,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"4:6606:1983":{"crate_id":4,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:10152:790":{"crate_id":1,"path":["core","hash"],"kind":"module"},"17:14950:6461":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"11:2498:22554":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"16:7090:7131":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:16123:6776":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"1:4195:108":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:12283:7879":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"11:832:7401":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:48646:8135":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"18:548:150":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"4:886:5440":{"crate_id":4,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:45060:10078":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"6:654:17443":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:11126:5789":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"4:7644:3568":{"crate_id":4,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"16:7462:7202":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"16:5049:6890":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:14156:6234":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"5:11334:1842":{"crate_id":5,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"1:22459:16622":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"1:10643:246":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"4:7432:3566":{"crate_id":4,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"18:624:36470":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"6:4388:9225":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"6:4755:9370":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"19:0:1142":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:44147:4312":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:11030:4311":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:3003:11371":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"5:9481:136":{"crate_id":5,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"1:3051:3624":{"crate_id":1,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"16:4053:6869":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:14099:6222":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"11:774:7386":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"5:9054:7638":{"crate_id":5,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"1:4171:7842":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"5:12110:339":{"crate_id":5,"path":["std","array"],"kind":"primitive"},"16:3600:6863":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:32848:252":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"17:15108:6497":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"5:4972:16949":{"crate_id":5,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"5:8400:9814":{"crate_id":5,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"5:9320:4700":{"crate_id":5,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"1:5682:3471":{"crate_id":1,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"1:11099:4309":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"6:6248:9763":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:12103:5914":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"16:4719:6879":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"11:673:2959":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"6:4455:9268":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:21294:27757":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"2:234:233":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"5:8563:16973":{"crate_id":5,"path":["std","path","Component"],"kind":"enum"},"1:3187:138":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:2504:208":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"4:4212:3471":{"crate_id":4,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"15:394:22590":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"6:6898:9898":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:2353:3726":{"crate_id":1,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"5:10482:3506":{"crate_id":5,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"17:10422:5754":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"5:12109:1162":{"crate_id":5,"path":["std","pointer"],"kind":"primitive"},"17:11485:5827":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"11:1142:7399":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"5:2420:16876":{"crate_id":5,"path":["std","fs","symlink_metadata"],"kind":"function"},"17:13504:6103":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:13336:114":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"17:13922:6182":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"14:31:7375":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"5:1885:4700":{"crate_id":5,"path":["std","env","Args"],"kind":"struct"},"1:3014:3600":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"17:11576:5839":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"4:7460:5454":{"crate_id":4,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"15:288:8275":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"5:8370:7602":{"crate_id":5,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"6:4908:9439":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"5:8076:7558":{"crate_id":5,"path":["std","io","error","Custom"],"kind":"struct"},"17:14221:6241":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"5:7599:5622":{"crate_id":5,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:2675:16889":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"5:6877:16996":{"crate_id":5,"path":["std","std_float","StdFloat"],"kind":"trait"},"6:1632:9140":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:46633:8047":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:12921:5939":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"1:1914:9990":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:38709:3619":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:22597:7894":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:13419:6075":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"5:4116:16907":{"crate_id":5,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:0:540":{"crate_id":1,"path":["core"],"kind":"module"},"4:6352:16818":{"crate_id":4,"path":["alloc","task","Wake"],"kind":"trait"},"6:4584:9331":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"11:710:7384":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:9943:23538":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:3190:139":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:43919:4327":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"5:5846:7523":{"crate_id":5,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:4377:3755":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"5:8239:3488":{"crate_id":5,"path":["std","io","SeekFrom"],"kind":"enum"},"5:8974:16993":{"crate_id":5,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:48435:8129":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:11141:5790":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:40204:7929":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:3010:3741":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"5:1574:2959":{"crate_id":5,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:16087:6770":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"16:7360:36457":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"4:1685:5433":{"crate_id":4,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"5:1887:7493":{"crate_id":5,"path":["std","env","ArgsOs"],"kind":"struct"},"1:42704:97":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:7905:3274":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"5:4104:16904":{"crate_id":5,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:8399:11116":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:21321:27766":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"17:9624:23532":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"1:42665:90":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:15612:6648":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:2548:6820":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:11085:4305":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"5:10766:1991":{"crate_id":5,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"17:13832:6170":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"5:10374:4640":{"crate_id":5,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"1:40974:7947":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:31030:3591":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"11:1891:3569":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"6:5015:9500":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:40795:7931":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"5:2032:205":{"crate_id":5,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"17:14822:6440":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"5:3736:16896":{"crate_id":5,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"1:45241:147":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:40129:223":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:12244:5928":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:44624:7938":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"6:5052:9519":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"5:12124:1650":{"crate_id":5,"path":["std","u16"],"kind":"primitive"},"6:6059:9699":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:1802:3588":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"5:5374:127":{"crate_id":5,"path":["std","path","Display"],"kind":"struct"},"17:13584:6108":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"5:8615:2959":{"crate_id":5,"path":["std","path","Iter"],"kind":"struct"},"1:42572:233":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:45318:178":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"5:4246:8302":{"crate_id":5,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"6:4449:9266":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"4:3217:7406":{"crate_id":4,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"17:15671:6664":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"1:21323:27750":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:9891:23535":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"11:800:3569":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"18:681:5590":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"16:6600:23490":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:40988:11419":{"crate_id":1,"path":["core","ffi","c_char"],"kind":"type_alias"},"17:11041:5758":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"6:4516:9296":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"5:11686:7539":{"crate_id":5,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:13695:6149":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"16:7554:6852":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"5:12111:1515":{"crate_id":5,"path":["std","slice"],"kind":"primitive"},"6:4870:9424":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"4:830:5438":{"crate_id":4,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"6:1710:9183":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:45076:9977":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"16:6083:22598":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"5:1446:153":{"crate_id":5,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"16:2618:6823":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"16:5816:6921":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"6:4830:9405":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"16:5088:6891":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:22430:16621":{"crate_id":1,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"5:4981:16950":{"crate_id":5,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"1:46430:8039":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:14878:6446":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:12828:5976":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:42821:88":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"16:7621:23495":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"11:2383:2959":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"17:14385:6273":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"18:614:36469":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"16:2788:6830":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"6:4893:9432":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"16:5866:6929":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"5:7714:7480":{"crate_id":5,"path":["std","thread","local","AccessError"],"kind":"struct"},"4:3251:7407":{"crate_id":4,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"5:5705:7516":{"crate_id":5,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:5067:864":{"crate_id":1,"path":["core","iter"],"kind":"module"},"6:5146:9561":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"4:7491:28103":{"crate_id":4,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"6:4977:9479":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"16:7782:7226":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:41170:3677":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:12418:5950":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"1:43676:4438":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"6:6079:9707":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"11:2369:7410":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"17:14778:6410":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:41622:3643":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"6:4616:9345":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"5:11590:7502":{"crate_id":5,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"17:11226:5800":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:10657:5758":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"16:2321:6804":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"6:6804:9841":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:41100:3663":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:10608:5757":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"6:4724:9361":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"5:1054:7394":{"crate_id":5,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"18:574:5560":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:11817:23653":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"4:692:117":{"crate_id":4,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:12684:5710":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"5:3346:3507":{"crate_id":5,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"4:266:5433":{"crate_id":4,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"1:46384:8037":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"6:507:8995":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:6401:6838":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:46863:8059":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:44249:4316":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:46615:8046":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"17:2169:23611":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:46909:8060":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"5:9198:7531":{"crate_id":5,"path":["std","time","SystemTime"],"kind":"struct"},"1:21340:27763":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:11743:5862":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"5:3012:135":{"crate_id":5,"path":["std","io","error","Error"],"kind":"struct"},"16:6792:7096":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:13896:6179":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:31620:4125":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"5:5461:4633":{"crate_id":5,"path":["std","process","ChildStdin"],"kind":"struct"},"1:22857:11222":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"6:6136:9729":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:13935:6183":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:14266:6250":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:16062:6762":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"17:11767:5864":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:6587:5487":{"crate_id":1,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"5:8307:16895":{"crate_id":5,"path":["std","net","Shutdown"],"kind":"enum"},"1:12546:3710":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:15725:6674":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:11476:5824":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:39922:3631":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"5:9179:159":{"crate_id":5,"path":["std","time","Instant"],"kind":"struct"},"5:12126:1652":{"crate_id":5,"path":["std","u64"],"kind":"primitive"},"11:2542:8229":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:45360:8033":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:15337:6556":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:12029:5906":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"16:6513:7034":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"4:2983:8774":{"crate_id":4,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"16:6721:23491":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:13145:6024":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"4:3343:3567":{"crate_id":4,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"6:7702:9966":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:21995:27764":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"3:0:3396":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"16:2969:22626":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:12153:5918":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:1094:5623":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:11469:5821":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"17:10315:5617":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:12872:5978":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"11:1903:7404":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"16:6560:5377":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"18:671:5589":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"5:4766:16951":{"crate_id":5,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"17:14786:6411":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"6:6263:9774":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"4:2144:5387":{"crate_id":4,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:5777:3471":{"crate_id":1,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"4:1115:8308":{"crate_id":4,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"6:4789:9386":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"11:742:7385":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"16:6261:7014":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"16:2406:6814":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"7:0:1698":{"crate_id":7,"path":["unwind"],"kind":"module"},"5:859:1983":{"crate_id":5,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:12096:11479":{"crate_id":1,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:11294:5806":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"6:4603:9341":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:7859:3658":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:21953:16889":{"crate_id":1,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"16:6171:213":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:9559:23534":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"5:11462:8306":{"crate_id":5,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"5:7802:16840":{"crate_id":5,"path":["std","backtrace","RawFrame"],"kind":"enum"},"4:7286:1983":{"crate_id":4,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"4:6969:270":{"crate_id":4,"path":["alloc","vec","Vec"],"kind":"struct"},"1:23424:197":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"6:527:9012":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:548:9024":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:13167:30565":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:9994:3747":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:38764:3620":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"17:10962:5776":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:4528:3756":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"4:7294:7705":{"crate_id":4,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:44547:8000":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:10957:4323":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"5:7965:126":{"crate_id":5,"path":["std","fs","DirBuilder"],"kind":"struct"},"6:1576:9096":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:38599:3617":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:44579:3489":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"17:11399:5814":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"5:12122:802":{"crate_id":5,"path":["std","i128"],"kind":"primitive"},"17:15842:6009":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"6:4841:9413":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"16:5939:6787":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"5:11456:8305":{"crate_id":5,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"17:9968:23556":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"5:6212:5403":{"crate_id":5,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:44194:3661":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"5:5691:227":{"crate_id":5,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:12220:5638":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"14:215:7380":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"5:5812:7519":{"crate_id":5,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"16:4462:6872":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:4928:5645":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"17:15235:6528":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:26433:273":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:15224:6524":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"6:6819:9845":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:15733:6677":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:22330:3725":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"6:6889:9895":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:10355:136":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"1:5967:3665":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"6:6691:9804":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:42510:3855":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"6:4783:9383":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"16:4613:6877":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:41231:3681":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"16:2526:6819":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:22706:7901":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:10357:5489":{"crate_id":1,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:48718:8141":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:45044:10074":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"4:5808:258":{"crate_id":4,"path":["alloc","string","ToString"],"kind":"trait"},"1:40859:7937":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:42938:96":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"6:533:9015":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"16:4497:6873":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:40894:7940":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"6:4998:9494":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"17:13056:6000":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"5:4032:16899":{"crate_id":5,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"5:922:7388":{"crate_id":5,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"4:7385:1983":{"crate_id":4,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"6:4351:9198":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:34328:3611":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:43018:98":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"5:5634:4637":{"crate_id":5,"path":["std","process","exit"],"kind":"function"},"5:4635:16942":{"crate_id":5,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:3251:5634":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:10211:154":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"17:15680:6668":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:21675:16540":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"11:1728:153":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:22107:16541":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"16:6968:23492":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"5:3460:3471":{"crate_id":5,"path":["std","io","Guard"],"kind":"struct"},"17:14509:6295":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"5:12131:13":{"crate_id":5,"path":["std","fn"],"kind":"primitive"},"17:15493:6613":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:7324:3670":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"1:32847:2273":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:47837:8093":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"5:9985:7965":{"crate_id":5,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"5:7713:16889":{"crate_id":5,"path":["std","sealed","Sealed"],"kind":"trait"},"16:6696:7071":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"5:8990:16992":{"crate_id":5,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"16:5403:5742":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:31222:28098":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"4:6485:3569":{"crate_id":4,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:38654:3618":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"17:12202:23677":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"17:15990:6743":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"1:36723:3616":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"16:4557:6875":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"11:1087:36444":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:11779:5865":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:15212:6523":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"6:4854:9418":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"4:0:314":{"crate_id":4,"path":["alloc"],"kind":"module"},"17:13765:6158":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:2670:6825":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:33721:3604":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:40784:7930":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"9:426:22481":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:12396:5945":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"5:8632:7630":{"crate_id":5,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:47341:8085":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"5:12107:1669":{"crate_id":5,"path":["std","unit"],"kind":"primitive"},"1:41256:3683":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"16:7436:6949":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:22795:28094":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"6:5867:9595":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"11:844:16846":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"18:707:5595":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:5853:3676":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"16:2428:6815":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"6:6012:9673":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"16:7391:23494":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"4:7326:31625":{"crate_id":4,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"5:9169:241":{"crate_id":5,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"16:6425:7030":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:22682:7896":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:45347:3542":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:4303:7844":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"16:5995:6794":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"18:727:5602":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"16:6467:7033":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:12432:5952":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"17:14373:6272":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"4:1315:7400":{"crate_id":4,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:1708:3471":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:10919:4307":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:15311:6550":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"4:903:2959":{"crate_id":4,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"5:12129:1708":{"crate_id":5,"path":["std","usize"],"kind":"primitive"},"5:12104:408":{"crate_id":5,"path":["std","bool"],"kind":"primitive"},"17:11590:5840":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"5:10191:4646":{"crate_id":5,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"17:13869:6174":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:46793:8057":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"6:7610:9945":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"5:909:7401":{"crate_id":5,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"1:2728:264":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"5:557:7481":{"crate_id":5,"path":["std","thread","JoinHandle"],"kind":"struct"},"17:12324:5937":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"5:5194:211":{"crate_id":5,"path":["std","path","PathBuf"],"kind":"struct"},"16:7651:7221":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"5:10522:5423":{"crate_id":5,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"6:7388:9941":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:6818:7097":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:13633:6133":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:22718:28050":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"17:15589:6647":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:46961:8062":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"5:10907:34481":{"crate_id":5,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"5:645:16836":{"crate_id":5,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:45095:129":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"14:160:7375":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:44885:8016":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:12560:5958":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"14:165:22564":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:13436:6083":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:13182:6037":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:34847:3615":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:45064:10079":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:7325:3671":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"16:6944:36453":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:34132:3607":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:4218:3529":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"13:110:36445":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"1:2676:11182":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:12306:7880":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"16:536:6792":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"10:44:7412":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"5:8621:7629":{"crate_id":5,"path":["std","path","Ancestors"],"kind":"struct"},"17:11345:5811":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:32961:113":{"crate_id":1,"path":["core","marker","ConstParamTy"],"kind":"trait"},"5:10265:112":{"crate_id":5,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"5:8546:7624":{"crate_id":5,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:40190:7928":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"5:11890:5432":{"crate_id":5,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"5:5566:4636":{"crate_id":5,"path":["std","process","Stdio"],"kind":"struct"},"18:609:5577":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:47263:8070":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"6:6798:9839":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"4:683:257":{"crate_id":4,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"5:903:3567":{"crate_id":5,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"16:4641:6878":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"6:5928:9623":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"5:7908:4803":{"crate_id":5,"path":["std","fs","Metadata"],"kind":"struct"},"17:11449:5690":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"6:5033:9511":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:32873:251":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:15279:6542":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"4:4366:271":{"crate_id":4,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:12718:23558":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"4:40:3545":{"crate_id":4,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"16:2810:6831":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"14:7:7375":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:46939:8061":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"5:11444:7538":{"crate_id":5,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:3141:3535":{"crate_id":1,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"5:12112:1548":{"crate_id":5,"path":["std","str"],"kind":"primitive"},"16:6204:6983":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"5:10701:9974":{"crate_id":5,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"18:660:5583":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"6:1913:18434":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:11014:5782":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"6:4914:9442":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"16:7613:7220":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:6386:7026":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:21494:16889":{"crate_id":1,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1:7611:3515":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"4:281:1993":{"crate_id":4,"path":["alloc","boxed","Box"],"kind":"struct"},"16:6901:6846":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"5:8961:7633":{"crate_id":5,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:43423:28090":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"17:15329:6554":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"5:2446:16886":{"crate_id":5,"path":["std","fs","read_dir"],"kind":"function"},"1:9625:726":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"5:2666:5391":{"crate_id":5,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"5:9493:5421":{"crate_id":5,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"1:13145:162":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:13707:6151":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"6:4628:9354":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:15432:6606":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:9651:23549":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:2721:142":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:42860:95":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:23610:188":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"6:4428:9258":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"6:1591:9108":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"16:7828:7234":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:4334:7845":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"11:875:7392":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:14057:6201":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:13297:6054":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:2031:5626":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:42156:168":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"6:6222:9748":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"5:8290:3489":{"crate_id":5,"path":["std","io","Lines"],"kind":"struct"},"5:7733:7540":{"crate_id":5,"path":["std","thread","Builder"],"kind":"struct"},"4:1536:7688":{"crate_id":4,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"11:328:8287":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"4:1439:4304":{"crate_id":4,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:34501:3612":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"6:1546:9077":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:47129:8067":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:48666:8137":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"5:1968:11114":{"crate_id":5,"path":["std","error","Indented"],"kind":"struct"},"5:4233:16922":{"crate_id":5,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"6:7371:9932":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"5:8296:7602":{"crate_id":5,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:11001:5780":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"5:11364:5427":{"crate_id":5,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"5:2977:5396":{"crate_id":5,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:595:5622":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"4:5962:72":{"crate_id":4,"path":["alloc","sync","Arc"],"kind":"struct"},"1:45297:8029":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:1795:642":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"17:14235:6244":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:10803:5761":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:13809:6166":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:48771:8144":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"5:482:5386":{"crate_id":5,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"17:13202:6038":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:9813:23553":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:8195:7290":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"16:7474:7203":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:7896:163":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:42743:87":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"16:3888:6867":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:48185:8126":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:21338:27754":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"5:4054:16901":{"crate_id":5,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:7934:128":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:15200:6517":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"5:8260:1982":{"crate_id":5,"path":["std","io","Chain"],"kind":"struct"},"17:13347:6061":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:48703:8140":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:41208:3666":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"5:10884:7549":{"crate_id":5,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"17:11168:23585":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"17:12345:5940":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"11:299:8284":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:44773:8014":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"5:12127:1649":{"crate_id":5,"path":["std","u128"],"kind":"primitive"},"1:21568:7892":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"5:621:7482":{"crate_id":5,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:10788:2959":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:14324:6259":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:11321:5758":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"5:5637:4639":{"crate_id":5,"path":["std","process","Termination"],"kind":"trait"},"1:22316:16628":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"16:5982:6945":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"5:12119:804":{"crate_id":5,"path":["std","i16"],"kind":"primitive"},"11:351:8289":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"6:4824:9402":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"5:11679:35948":{"crate_id":5,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"5:10736:7552":{"crate_id":5,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"16:6226:6998":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"6:1639:9144":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"5:849:4304":{"crate_id":5,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:42425:201":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"17:10941:5771":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:13989:6191":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"16:3830:6866":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"5:3010:233":{"crate_id":5,"path":["std","io","error","Result"],"kind":"type_alias"},"17:16160:6782":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"6:5130:9558":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"16:4585:6876":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:12357:4322":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:3388:261":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"6:4506:9293":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:5829:9568":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"5:928:16846":{"crate_id":5,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:6041:23488":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:2715:77":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"5:6423:183":{"crate_id":5,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:32776:4644":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:40807:28143":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"5:9084:7641":{"crate_id":5,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:12612:11485":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:13365:6069":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:43405:3742":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"6:4610:9343":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:42979:91":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"17:12290:5934":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"12:0:3402":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"4:7306:3569":{"crate_id":4,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"17:13254:6049":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"6:542:9021":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:13395:6073":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"1:1923:3743":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"5:2418:3717":{"crate_id":5,"path":["std","fs","metadata"],"kind":"function"},"11:2124:7132":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"1:47082:8066":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"4:4020:3569":{"crate_id":4,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"16:5673:6841":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"5:6496:7526":{"crate_id":5,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:44393:7996":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"16:6960:7109":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"15:327:10734":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:22741:7903":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"5:8344:7504":{"crate_id":5,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:44269:3714":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:12701:5969":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:6576:3667":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"4:3184:2959":{"crate_id":4,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"6:4364:9207":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"16:6569:6844":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:41671:3653":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"5:11667:7676":{"crate_id":5,"path":["std","alloc","System"],"kind":"struct"},"17:13334:6060":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:12572:5959":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"17:14633:6297":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:3405:3630":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"6:1596:9110":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"5:7925:7552":{"crate_id":5,"path":["std","fs","FileTimes"],"kind":"struct"},"16:2744:6828":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"5:3307:3511":{"crate_id":5,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"6:5992:9657":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:44157:4313":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"6:4878:9428":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:48543:8131":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"5:9118:34496":{"crate_id":5,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"5:4094:16903":{"crate_id":5,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"5:6363:227":{"crate_id":5,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"16:4921:6886":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:47623:8090":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"6:4480:9284":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:44229:4317":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"16:5905:6932":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:41156:7951":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"6:4808:9394":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"6:4434:9259":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:4095:3471":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:44168:4319":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"5:4808:16915":{"crate_id":5,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"5:4108:16905":{"crate_id":5,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:3470:3537":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"5:11136:7531":{"crate_id":5,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"1:44375:7995":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:23800:190":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"16:5712:6907":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:15527:6625":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:10992:4310":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:46593:8045":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"6:4698:9359":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:11065:5785":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"5:10746:137":{"crate_id":5,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"5:10417:5422":{"crate_id":5,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"6:7616:9946":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"5:1590:7404":{"crate_id":5,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"5:10282:8765":{"crate_id":5,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"16:5574:6837":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"17:15868:6698":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"1:9464:92":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:45262:214":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:44128:4301":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:44933:8025":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:14145:6232":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"4:1424:2959":{"crate_id":4,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:1990:186":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:10035:5742":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:10432:36466":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:40867:7841":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"5:3229:8622":{"crate_id":5,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"5:357:7478":{"crate_id":5,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:4986:6888":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:12255:5932":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"6:5111:9549":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"17:12797:5975":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"11:1582:7402":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"5:12130:1258":{"crate_id":5,"path":["std","reference"],"kind":"primitive"},"1:4967:426":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:3159:124":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"5:10109:7653":{"crate_id":5,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"1:45254:234":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:44910:8017":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:13754:6157":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:11958:5902":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"1:46532:8043":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"4:7316:5442":{"crate_id":4,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:8361:3657":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"5:7935:7553":{"crate_id":5,"path":["std","fs","Permissions"],"kind":"struct"},"1:32846:244":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:42782:94":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"5:8912:4643":{"crate_id":5,"path":["std","process","ExitCode"],"kind":"struct"},"17:11755:5863":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:13463:6092":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"11:856:7391":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:2341:643":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"16:5727:6910":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"16:5830:6922":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:12953:5986":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:22824:9996":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:12082:4298":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"5:10756:126":{"crate_id":5,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"11:1007:7132":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:9759:23551":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:12091:5913":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:2540:202":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"17:12659:23536":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"10:0:3400":{"crate_id":10,"path":["adler"],"kind":"module"},"1:39961:3536":{"crate_id":1,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"5:8277:1847":{"crate_id":5,"path":["std","io","Bytes"],"kind":"struct"},"6:4860:9421":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"5:10682:7662":{"crate_id":5,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"17:511:5621":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"5:6136:5400":{"crate_id":5,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"1:46985:8063":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"5:10784:34483":{"crate_id":5,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:32928:3878":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"17:10852:23566":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"5:1939:7494":{"crate_id":5,"path":["std","error","Report"],"kind":"struct"},"1:2110:3539":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"5:918:7385":{"crate_id":5,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"5:1063:7396":{"crate_id":5,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"4:4444:5453":{"crate_id":4,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"5:3305:3510":{"crate_id":5,"path":["std","io","stdio","Stdout"],"kind":"struct"},"5:3232:8623":{"crate_id":5,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"1:41429:3686":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:21284:4125":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"6:6107:9720":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"5:4217:8300":{"crate_id":5,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"5:1862:7492":{"crate_id":5,"path":["std","env","SplitPaths"],"kind":"struct"},"1:42385:7868":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:10455:5495":{"crate_id":1,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"17:14413:6277":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:24031:243":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:13162:6027":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"6:4738:9362":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"5:8920:2959":{"crate_id":5,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:15961:6037":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"1:3019:3605":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:21549:16539":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"18:0:3407":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:10006:3750":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"5:7759:5423":{"crate_id":5,"path":["std","thread","Thread"],"kind":"struct"},"17:10950:5773":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:12459:5778":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"6:5123:9555":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"6:4535:9304":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:10520:36468":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"0:6:1841":{"crate_id":0,"path":["bytes","buf"],"kind":"module"},"6:4461:9271":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:15659:6662":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:3049:22627":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:15855:6023":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"17:14312:6257":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"11:837:7388":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"6:5152:9564":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:15384:6569":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"11:1603:7403":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:16004:6747":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"1:42640:203":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"16:2722:6827":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:42485:2959":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"6:1537:9071":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:4847:9416":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:11052:5759":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"5:723:151":{"crate_id":5,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"16:6583:7046":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"5:9139:9970":{"crate_id":5,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"5:1596:7405":{"crate_id":5,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"1:13219:7890":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:42623:4304":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"11:1883:2959":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"5:2434:16880":{"crate_id":5,"path":["std","fs","read_link"],"kind":"function"},"16:3655:5653":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"6:4968:9473":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"5:12121:806":{"crate_id":5,"path":["std","i64"],"kind":"primitive"},"5:3267:3509":{"crate_id":5,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:44599:8002":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"6:6071:9706":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:22650:7895":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"5:2271:2683":{"crate_id":5,"path":["std","fs","read"],"kind":"function"},"17:15294:6546":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:48677:8138":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"6:5921:9621":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:4573:5480":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:22328:27989":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"17:11269:5778":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:13026:5996":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"17:11800:5867":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:10618:36467":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"5:4806:16913":{"crate_id":5,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"5:8898:4642":{"crate_id":5,"path":["std","process","ExitStatusError"],"kind":"struct"},"1:40025:220":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:41280:3669":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"4:6371:1719":{"crate_id":4,"path":["alloc","vec"],"kind":"module"},"1:10251:4437":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:41138:3674":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"16:2450:6816":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:46318:8034":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"16:7792:23496":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:12999:5990":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"5:4769:16924":{"crate_id":5,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"11:2554:36443":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:13684:6146":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:44475:7997":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"16:4745:6880":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"0:0:1844":{"crate_id":0,"path":["bytes"],"kind":"module"},"17:15177:6514":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:4988:30450":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:22193:16625":{"crate_id":1,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"1:7855:3659":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"5:8928:7632":{"crate_id":5,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:23242:195":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"16:5634:6897":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:12264:5933":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"17:14359:6271":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"4:1301:7394":{"crate_id":4,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"4:7038:5475":{"crate_id":4,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"4:4182:3471":{"crate_id":4,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"1:41644:3516":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:43451:74":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1:41118:3672":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:41270:3684":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:12930:23560":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"10:36:8971":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"4:2973:31629":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"16:0:3405":{"crate_id":16,"path":["gimli"],"kind":"module"},"6:501:8992":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"6:6100:9719":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"5:4225:8301":{"crate_id":5,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"5:5698:5407":{"crate_id":5,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"5:8356:16923":{"crate_id":5,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"16:5588:6840":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"4:1455:1983":{"crate_id":4,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"11:2469:3567":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"17:3460:5636":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"5:8001:2296":{"crate_id":5,"path":["std","io","cursor","Cursor"],"kind":"struct"},"16:3764:6864":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"11:396:5382":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"5:5891:5399":{"crate_id":5,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:1832:1199":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"1:34014:3610":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:22301:16889":{"crate_id":1,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"1:32816:7182":{"crate_id":1,"path":["core","error","tags","Value"],"kind":"struct"},"5:12125:1651":{"crate_id":5,"path":["std","u32"],"kind":"primitive"},"4:6118:3471":{"crate_id":4,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:10837:3490":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"17:14041:6196":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"1:3433:3534":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"5:9043:7635":{"crate_id":5,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"6:4814:9396":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:256:5615":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:12541:3716":{"crate_id":1,"path":["core","str","pattern"],"kind":"module"},"5:6710:240":{"crate_id":5,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"4:7533:5459":{"crate_id":4,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"6:7645:9953":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:12850:5638":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"5:588:16834":{"crate_id":5,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:11536:5836":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"16:3915:6868":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"4:4866:224":{"crate_id":4,"path":["alloc","rc","Rc"],"kind":"struct"},"1:43478:135":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"17:13742:6155":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:3046:3623":{"crate_id":1,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"6:6666:9786":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"5:8523:7980":{"crate_id":5,"path":["std","path","State"],"kind":"enum"},"5:9174:242":{"crate_id":5,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"5:7976:7555":{"crate_id":5,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"16:7006:7119":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"16:3797:6865":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"5:867:7386":{"crate_id":5,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"16:7342:36456":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:44608:8003":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:15903:6728":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"4:4252:2959":{"crate_id":4,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:42615:2959":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"16:8181:6857":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"18:481:5558":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"11:2231:5824":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"1:46492:8041":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:3584:5637":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:2971:3565":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"16:5696:23485":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"5:5481:4634":{"crate_id":5,"path":["std","process","ChildStdout"],"kind":"struct"},"16:7884:23497":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"6:5982:9650":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"11:1923:7407":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"11:787:7387":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"5:3801:7502":{"crate_id":5,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"16:7694:6854":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"5:7993:3500":{"crate_id":5,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"6:495:8519":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"4:790:5435":{"crate_id":4,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"9:52:10737":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"5:914:7384":{"crate_id":5,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:40008:2709":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"11:2151:7396":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:6391:3688":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:40927:7945":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:3183:1852":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:43176:3325":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"17:10510:5755":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"5:8071:7557":{"crate_id":5,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:119:17084":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"17:11523:5834":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"17:12356:5941":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"4:6531:5433":{"crate_id":4,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"18:636:5582":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"5:7824:7549":{"crate_id":5,"path":["std","env","JoinPathsError"],"kind":"struct"},"4:1527:217":{"crate_id":4,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"6:6943:9920":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"6:6159:9735":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"18:736:27687":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"5:6606:7527":{"crate_id":5,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:46652:8048":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:14470:6285":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:12009:5758":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"5:8422:7508":{"crate_id":5,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"4:2975:8772":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:34073:3608":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"16:6268:36458":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:15345:6557":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"6:1650:9152":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"6:563:9032":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"6:489:8990":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"11:1066:22558":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:12140:5917":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:14170:6236":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"5:415:182":{"crate_id":5,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:9791:3766":{"crate_id":1,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"5:2275:3479":{"crate_id":5,"path":["std","fs","read_to_string"],"kind":"function"},"5:10111:7652":{"crate_id":5,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"16:7067:7129":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:7219:3660":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"5:1581:3569":{"crate_id":5,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"1:32837:7924":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:7987:2655":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"6:1501:9055":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:22831:7915":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"5:11381:7532":{"crate_id":5,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"16:6346:7021":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"6:0:888":{"crate_id":6,"path":["libc"],"kind":"module"},"17:14662:6317":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:10716:5759":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"6:7639:9952":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"18:531:5564":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"16:2574:6821":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"6:5885:9608":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:15062:6484":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"5:12117:702":{"crate_id":5,"path":["std","f64"],"kind":"primitive"},"6:7365:9930":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:47417:8087":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"16:6318:7019":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"18:755:5607":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:22779:28124":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"5:8378:7610":{"crate_id":5,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"1:43685:154":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"4:1789:3567":{"crate_id":4,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"5:11387:4648":{"crate_id":5,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"5:6053:227":{"crate_id":5,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"5:10711:7551":{"crate_id":5,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"1:42899:89":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"5:5148:7514":{"crate_id":5,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:7677:217":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"5:8866:4640":{"crate_id":5,"path":["std","process","CommandArgs"],"kind":"struct"},"18:96:8268":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:45040:10073":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"1:40958:28103":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:12445:5953":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"4:3607:4304":{"crate_id":4,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:15321:6553":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:9730:23550":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"5:2492:1990":{"crate_id":5,"path":["std","io"],"kind":"module"},"1:72:858":{"crate_id":1,"path":["core","isize"],"kind":"module"},"6:1570:9094":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"7:78:22473":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:22969:196":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"17:15133:6502":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:11071:4308":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:9918:23555":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"16:3065:5648":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:48497:8130":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"5:4887:16912":{"crate_id":5,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:2197:5630":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"11:1051:7396":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"6:596:9049":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"5:8302:7604":{"crate_id":5,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:10137:5610":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"18:80:8267":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"4:3738:2296":{"crate_id":4,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"6:483:8987":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:11412:5815":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:30990:2975":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"16:4806:6882":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:10000:3325":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:45072:10081":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:15980:6742":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"17:11945:5900":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"6:5891:9611":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:14282:6251":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:12772:118":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"5:1824:7490":{"crate_id":5,"path":["std","env","Vars"],"kind":"struct"},"1:3801:1983":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:47031:8065":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"4:7340:1983":{"crate_id":4,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:12310:5936":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:40837:7935":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"6:1682:9170":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"11:1107:7398":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"16:7708:6855":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"11:434:8293":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"5:12055:7682":{"crate_id":5,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"4:2703:9987":{"crate_id":4,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:10337:5744":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"6:1718:9187":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"16:6189:6981":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:12614:23557":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"11:1917:7406":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"16:2933:22625":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"5:1040:7132":{"crate_id":5,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:42404:7870":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"9:237:7980":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"6:5897:9612":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:14399:6274":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"5:640:7485":{"crate_id":5,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"1:32929:7925":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:23151:194":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"6:4375:9215":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"13:0:3397":{"crate_id":13,"path":["std_detect"],"kind":"module"},"16:7722:6845":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"16:2359:6812":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:15645:6655":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"4:3687:5433":{"crate_id":4,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:9962:141":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"17:11657:5848":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"17:10207:5612":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"4:5993:5458":{"crate_id":4,"path":["alloc","sync","Weak"],"kind":"struct"},"5:4297:7505":{"crate_id":5,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"16:7597:36454":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:11215:5798":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"1:43395:10064":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:45056:10077":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:48657:8136":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"5:939:7391":{"crate_id":5,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:11631:4321":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"6:4496:9288":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"5:8207:3515":{"crate_id":5,"path":["std","io","util","Empty"],"kind":"struct"},"1:46670:8049":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:40778:7841":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"16:5612:6842":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:48373:8128":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"18:690:5592":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"4:3818:3567":{"crate_id":4,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"1:1634:1989":{"crate_id":1,"path":["core","mem"],"kind":"module"},"6:6868:9881":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:10313:1515":{"crate_id":1,"path":["core","slice"],"kind":"module"},"1:43460:3742":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:48043:8125":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:44920:8021":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"5:3491:2682":{"crate_id":5,"path":["std","io","Read"],"kind":"trait"},"1:4:1125":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:9943:233":{"crate_id":1,"path":["core","fmt","Result"],"kind":"type_alias"},"4:7558:3708":{"crate_id":4,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:13273:6050":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:40901:7941":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"16:8134:7284":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:14921:6453":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"5:12113:1634":{"crate_id":5,"path":["std","tuple"],"kind":"primitive"},"1:43155:3748":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:31046:3742":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"16:8072:7276":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:15079:6489":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:6682:9798":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:42501:1983":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:41221:3680":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"16:8097:7279":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"16:5798:6916":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"5:11154:8522":{"crate_id":5,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"11:2569:3566":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"6:4473:9280":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"11:1896:3567":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"16:5419:5743":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:43668:7978":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"16:3032:6858":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"16:2596:6822":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"1:46408:8038":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"4:7277:3544":{"crate_id":4,"path":["alloc","alloc","Global"],"kind":"struct"},"17:15253:6532":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"18:599:36472":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:48741:8142":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:15710:6673":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"5:7948:137":{"crate_id":5,"path":["std","fs","FileType"],"kind":"struct"},"1:43660:4439":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"6:4947:9458":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"1:9998:3324":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"5:8216:3517":{"crate_id":5,"path":["std","io","util","Sink"],"kind":"struct"},"1:12561:11478":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"5:10892:4636":{"crate_id":5,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"1:40107:221":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:48833:8146":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"6:7651:9954":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"1:22:740":{"crate_id":1,"path":["core","format_args"],"kind":"macro"},"1:9992:127":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"16:6456:7032":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:13407:6074":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:14904:6452":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:41179:3678":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:10988:5779":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"5:9091:7642":{"crate_id":5,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"17:15003:6473":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"16:5963:6938":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"11:2423:1983":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"16:2644:6824":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:11701:5855":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"4:3230:34163":{"crate_id":4,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:41128:3673":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"5:637:7483":{"crate_id":5,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"5:9234:7649":{"crate_id":5,"path":["std","sys","pal","common","thread_local","fast_local","Key"],"kind":"struct"},"6:4764:9375":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:44617:7882":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:46763:8056":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:43715:7985":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"5:7450:35751":{"crate_id":5,"path":["std","panicking","Hook"],"kind":"enum"},"1:3393:144":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"5:11173:159":{"crate_id":5,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"4:3581:180":{"crate_id":4,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"16:6156:6976":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"5:6532:5411":{"crate_id":5,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"11:364:5380":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"6:5075:9527":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:3172:3032":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"5:9006:16994":{"crate_id":5,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"6:1507:9058":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:15087:6492":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:45132:11498":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:46514:8042":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:12746:5971":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"5:12072:10756":{"crate_id":5,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"1:9142:3710":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:22845:7916":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:42179:7865":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:15374:6564":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"6:6658:9781":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:2712:78":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:3041:3622":{"crate_id":1,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"5:9256:35014":{"crate_id":5,"path":["std","sys","pal","common","thread_local","fast_local","DtorState"],"kind":"enum"},"5:12123:1653":{"crate_id":5,"path":["std","u8"],"kind":"primitive"},"1:43500:3273":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"5:3576:2684":{"crate_id":5,"path":["std","io","BufRead"],"kind":"trait"},"16:4774:6881":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"18:507:5560":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:9860:23554":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:47387:8086":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:40085:222":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"11:1566:22559":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:11617:5842":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"1:21666:16889":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:2438:104":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"16:2284:22599":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"16:4344:6870":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"16:5017:6889":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"6:5969:9644":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"4:7348:217":{"crate_id":4,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"5:8455:16960":{"crate_id":5,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"5:7053:35659":{"crate_id":5,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:42631:1983":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"9:177:10747":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"4:2154:7691":{"crate_id":4,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"5:11429:7536":{"crate_id":5,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:42326:28072":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"17:11027:5733":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:44068:7987":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:3667:3569":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"17:12301:5935":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:15287:6545":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"17:12127:5916":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"5:1072:7400":{"crate_id":5,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:32830:3756":{"crate_id":1,"path":["core","error","tags","Ref"],"kind":"struct"},"16:5435:6895":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"6:6120:9724":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:11549:5837":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"4:2972:3706":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"6:1496:9053":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:15356:6561":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"6:6700:9805":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"4:3594:2959":{"crate_id":4,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:13441:3543":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"17:10051:5743":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"6:6961:9923":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:11978:5903":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"16:6352:7022":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"5:11527:5429":{"crate_id":5,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"16:5648:6901":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"17:12166:5919":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"6:4595:9336":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"16:6879:7102":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:13976:6190":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"7:31:22466":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"5:7650:5417":{"crate_id":5,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:15013:6474":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:48794:8145":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:48619:8133":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:2351:3725":{"crate_id":1,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"17:16049:6756":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"17:15125:6500":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:11932:5899":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"4:7569:3709":{"crate_id":4,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"16:6485:6839":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:2806:135":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"18:515:5557":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"5:9164:184":{"crate_id":5,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:14194:6239":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:13516:6106":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:11439:5817":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:15027:6475":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:44821:8015":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"18:564:5569":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:41615:7860":{"crate_id":1,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"4:5155:5458":{"crate_id":4,"path":["alloc","rc","Weak"],"kind":"struct"},"5:6492:3645":{"crate_id":5,"path":["std","sync","once","Once"],"kind":"struct"},"4:7544:250":{"crate_id":4,"path":["alloc","string","String"],"kind":"struct"},"5:3344:3506":{"crate_id":5,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:4773:5643":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"4:4411:3471":{"crate_id":4,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"16:6243:7004":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:42213:11448":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"5:2728:3501":{"crate_id":5,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:42476:171":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"11:883:7393":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"16:2696:6826":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"6:1558:9086":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:4582:3757":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:47653:8091":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:14969:6462":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"6:5085:9532":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"1:48581:8132":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:44633:7841":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:22415:16889":{"crate_id":1,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"6:5941:9632":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:12191:5921":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"17:11088:5786":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"4:6845:3573":{"crate_id":4,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:42362:7504":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"6:6927:9914":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:11632:5844":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"1:3082:3614":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"5:893:3569":{"crate_id":5,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"5:8605:7509":{"crate_id":5,"path":["std","path","Components"],"kind":"struct"},"1:47687:8092":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:48692:8139":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"5:5306:210":{"crate_id":5,"path":["std","path","Path"],"kind":"struct"},"16:5661:6906":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"16:7534:6851":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:14087:6220":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:13097:6009":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"4:2474:8769":{"crate_id":4,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:11666:5849":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"17:10813:36462":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"16:7284:3855":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"6:4529:9301":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"6:4401:9235":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:22384:3725":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"4:5651:3573":{"crate_id":4,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"6:1674:9169":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"16:4527:6874":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:48756:8143":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"16:7768:6843":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:11497:5831":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:9790:23552":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:44343:4310":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:4518:5479":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:15117:6498":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:44953:3711":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:0:485":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"4:5345:5433":{"crate_id":4,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"16:7544:7216":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:12115:5915":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:14497:6288":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"16:2864:6833":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:43697:7980":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:41147:3675":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"9:507:7464":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"5:9488:7550":{"crate_id":5,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"17:16109:6772":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"5:2268:7497":{"crate_id":5,"path":["std","fs","DirEntry"],"kind":"struct"},"6:4440:9261":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:16146:6781":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"5:12120:805":{"crate_id":5,"path":["std","i32"],"kind":"primitive"},"6:5974:9645":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"4:2256:9986":{"crate_id":4,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:10880:4322":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"5:8396:7612":{"crate_id":5,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"16:7318:7162":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"9:330:8972":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:2959:3532":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:40065:219":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:34674:3613":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"5:7918:7551":{"crate_id":5,"path":["std","fs","OpenOptions"],"kind":"struct"},"6:569:9035":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:15943:6027":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"1:13194:212":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:22238:16626":{"crate_id":1,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"6:1734:9192":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:2847:7713":{"crate_id":1,"path":["core","error","Request"],"kind":"struct"},"1:44220:4314":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"6:4549:9312":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"5:10973:5424":{"crate_id":5,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"4:7507:7710":{"crate_id":4,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"16:7523:7215":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"5:7096:5415":{"crate_id":5,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:33535:3601":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:3399:3628":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:13663:6142":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"5:4449:7507":{"crate_id":5,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:15244:6531":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"6:5004:9497":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"4:7013:5472":{"crate_id":4,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:44899:11492":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"4:1505:7384":{"crate_id":4,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:10004:3749":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"5:10479:3510":{"crate_id":5,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"14:40:6024":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:7892:143":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"5:5030:16956":{"crate_id":5,"path":["std","panic","always_abort"],"kind":"function"},"6:4776:9382":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"18:699:5593":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"16:7513:7214":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:10775:5760":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:42555:3902":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"6:4932:9453":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:9651:10758":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:43900:7986":{"crate_id":1,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"17:14122:6231":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"5:12128:858":{"crate_id":5,"path":["std","isize"],"kind":"primitive"},"6:1691:9176":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"6:4578:9328":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:44742:8010":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:12510:5955":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"11:700:1983":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"5:6662:8761":{"crate_id":5,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"17:10667:36465":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:14208:6240":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:4060:16902":{"crate_id":5,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:22544:7893":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:44207:4318":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:41109:3664":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:16016:6749":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"17:16134:6778":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"16:7660:7222":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:23333:192":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:41051:3519":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"17:15049:6479":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"15:306:8279":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"4:5393:16807":{"crate_id":4,"path":["alloc","slice","Join"],"kind":"trait"},"1:23895:187":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"5:7610:7679":{"crate_id":5,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:40377:28073":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:4237:11385":{"crate_id":1,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"6:555:9027":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:42493:4304":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"17:15535:6626":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:13285:6053":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:2961:116":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:41021:5481":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:13383:6070":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"16:5322:6893":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"4:6014:8775":{"crate_id":4,"path":["alloc","sync","ArcInner"],"kind":"struct"},"4:1387:100":{"crate_id":4,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:21983:4299":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:12555:5595":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"6:7692:9964":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"4:2979:8773":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:41405:1985":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"16:2907:6835":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:21958:16545":{"crate_id":1,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"6:4884:9429":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"6:4556:9315":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"5:4703:9827":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"16:2339:6806":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"16:4889:6885":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"4:1131:8768":{"crate_id":4,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:11113:5788":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:13856:6171":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:40823:7934":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:7441:3641":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"6:5009:9499":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"5:8351:9968":{"crate_id":5,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"6:5104:9546":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"5:6609:16988":{"crate_id":5,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:14426:6278":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:4183:7843":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:3193:140":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:45048:10075":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"16:6332:6836":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:11727:5860":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"17:16098:6771":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"4:1477:7386":{"crate_id":4,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"5:504:5387":{"crate_id":5,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:40908:11409":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"16:2766:6829":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"1:31116:28123":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"16:7041:7123":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:12548:5957":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"1:22277:16627":{"crate_id":1,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"17:13724:6154":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:11256:5804":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"16:2472:6817":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"6:5955:9643":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"6:7668:9959":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"16:7568:6853":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:15689:6670":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"17:12600:135":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"17:2228:5633":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"4:2236:31626":{"crate_id":4,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:41415:3685":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"17:11563:5838":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"5:3509:3480":{"crate_id":5,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:40151:2884":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"5:1585:3567":{"crate_id":5,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"1:23990:7920":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"17:15160:6506":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"6:123:17085":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:45305:8030":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"11:2304:7132":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"1:40041:217":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:8352:3530":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"5:3432:3516":{"crate_id":5,"path":["std","io","util","Repeat"],"kind":"struct"},"1:12501:3715":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"9:0:3399":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"6:5859:9593":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"5:9104:7646":{"crate_id":5,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"1:23515:191":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"11:430:8292":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:43435:7253":{"crate_id":1,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:42242:10063":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"9:393:22480":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:11507:5832":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:14843:6445":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"16:6687:7070":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:40946:7946":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:12273:5976":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:22733:7902":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"16:3315:6861":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"1:47160:8068":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:43707:7984":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:34191:3609":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:11459:5819":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"5:2652:3499":{"crate_id":5,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"5:8227:1991":{"crate_id":5,"path":["std","io","IoSlice"],"kind":"struct"},"5:10476:3508":{"crate_id":5,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"1:2718:160":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"17:11369:5812":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"17:10102:5609":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"5:1826:7491":{"crate_id":5,"path":["std","env","VarsOs"],"kind":"struct"},"1:45120:8026":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"6:4800:9390":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"16:8115:7281":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"6:4686:9358":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"6:5910:9613":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:14485:5939":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"6:4566:9322":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:11243:5803":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"16:8281:7297":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"5:533:5388":{"crate_id":5,"path":["std","thread","Packet"],"kind":"struct"},"16:2305:22624":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"6:5117:9552":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"1:4454:7847":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:9646:11117":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:15:2749":{"crate_id":1,"path":["core","write"],"kind":"macro"},"11:2403:4304":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"11:2140:7394":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:47499:8088":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"5:11550:7501":{"crate_id":5,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"4:7444:3637":{"crate_id":4,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"4:6868:3574":{"crate_id":4,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"4:1495:7401":{"crate_id":4,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"4:786:102":{"crate_id":4,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"5:3566:3481":{"crate_id":5,"path":["std","io","Seek"],"kind":"trait"},"4:634:7686":{"crate_id":4,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"6:1514:9061":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"5:8884:4641":{"crate_id":5,"path":["std","process","ExitStatus"],"kind":"struct"},"17:10915:5770":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:12230:5923":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"6:4745:9363":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"5:5117:7514":{"crate_id":5,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:40183:3627":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"16:7503:6850":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:43915:10072":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"4:2048:2296":{"crate_id":4,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"5:7971:7498":{"crate_id":5,"path":["std","hash","random","RandomState"],"kind":"struct"},"17:13235:6044":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"6:6047:9694":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:15367:6562":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:21677:7892":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:40941:107":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:11598:4320":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"6:7679:9960":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"16:6415:7029":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"11:1887:1983":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"4:4092:4304":{"crate_id":4,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:14346:6270":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"6:475:8297":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:15546:6631":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"11:1910:7405":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:4445:228":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"17:11675:5850":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:3378:3626":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:10471:36463":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"6:6128:9726":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:41653:3649":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"5:4691:16902":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:48637:8134":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:41031:7948":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"17:12335:5939":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"5:11097:4642":{"crate_id":5,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"16:7492:7211":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"5:11274:7675":{"crate_id":5,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"11:102:8760":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"5:10990:5426":{"crate_id":5,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"16:3232:6803":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"1:31058:28132":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:4806:11402":{"crate_id":1,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:2724:265":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"5:836:2959":{"crate_id":5,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"11:811:3567":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"11:1676:5384":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"5:1602:7406":{"crate_id":5,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:21352:27761":{"crate_id":1,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"5:4377:7506":{"crate_id":5,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:8355:3656":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"5:7808:16863":{"crate_id":5,"path":["std","env","VarError"],"kind":"enum"},"1:2966:254":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"6:4666:9356":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"11:687:4304":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:11155:5792":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"16:7015:7122":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:10440:5391":{"crate_id":1,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"5:7985:7556":{"crate_id":5,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:10293:1847":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:78:1708":{"crate_id":1,"path":["core","usize"],"kind":"module"},"1:8043:176":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"5:2266:136":{"crate_id":5,"path":["std","fs","File"],"kind":"struct"},"1:40875:7938":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"6:588:9045":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:43057:3768":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"6:4955:9463":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"5:9048:114":{"crate_id":5,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"5:12116:700":{"crate_id":5,"path":["std","f32"],"kind":"primitive"},"1:46362:8036":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"16:4949:6887":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:12784:5973":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:41240:3682":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"5:5497:4635":{"crate_id":5,"path":["std","process","ChildStderr"],"kind":"struct"},"1:3558:71":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"17:14989:6470":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"14:0:3403":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:44301:7993":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"16:6545:7044":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"17:13309:6057":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"5:2035:204":{"crate_id":5,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:31592:203":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"4:6878:3575":{"crate_id":4,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"4:7628:3567":{"crate_id":4,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"5:945:7392":{"crate_id":5,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:10172:5611":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:42554:3858":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:31024:2579":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"6:5023:9505":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"5:6963:5414":{"crate_id":5,"path":["std","sys","pal","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"11:490:151":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"5:4535:16924":{"crate_id":5,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"1:7671:3644":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:45335:3638":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"17:12536:5956":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"17:16170:6054":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"5:10724:7667":{"crate_id":5,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"1:22105:16889":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:47183:8069":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:12584:5960":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"5:880:7387":{"crate_id":5,"path":["std","collections","hash","map","Values"],"kind":"struct"},"16:4417:6871":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:47577:8089":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"5:10984:5425":{"crate_id":5,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"14:221:7382":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:11645:5845":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"17:14765:6403":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:16076:6765":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"6:4710:9360":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:40882:11408":{"crate_id":1,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"16:8205:23498":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:4902:9438":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:7389:8310":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:5026:3518":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"1:42553:3859":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:12246:7876":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:22758:28077":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"16:7862:7238":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"5:7738:7542":{"crate_id":5,"path":["std","thread","ThreadId"],"kind":"struct"},"6:6913:9905":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:41058:3661":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"17:12486:5954":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"17:14001:6192":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"18:652:5560":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:13648:6137":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"16:6376:23489":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"5:8283:3490":{"crate_id":5,"path":["std","io","Split"],"kind":"struct"},"1:9987:118":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:46815:8058":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:44756:8013":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:40847:7936":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:42196:7867":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"5:11414:7535":{"crate_id":5,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"6:6934:9917":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"4:7520:7712":{"crate_id":4,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:10925:23568":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"5:12088:34492":{"crate_id":5,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"11:1160:7400":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"6:6813:9844":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"5:12077:16841":{"crate_id":5,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"16:3461:6862":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"1:32959:3531":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:22370:16629":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"4:4381:5453":{"crate_id":4,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"16:4835:6883":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:44311:1847":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:41663:3651":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"16:8239:7182":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:41188:3687":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"4:111:580":{"crate_id":4,"path":["alloc","alloc","dealloc"],"kind":"function"},"1:3222:2710":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"6:6114:9721":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"6:62:17030":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"6:1528:9066":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:32823:7923":{"crate_id":1,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"17:11426:5816":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:32812:7922":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1:6582:9992":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"4:1286:7396":{"crate_id":4,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"17:14439:6279":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:13218:6042":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"16:149:5375":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"4:2183:9983":{"crate_id":4,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:15267:6539":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"4:3155:101":{"crate_id":4,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:41087:1982":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"5:7787:16839":{"crate_id":5,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"5:1975:713":{"crate_id":5,"path":["std","ffi"],"kind":"module"},"6:1703:9180":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"5:8362:7608":{"crate_id":5,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"1:44325:3490":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:9944:2790":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"17:12052:5907":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"5:3798:7501":{"crate_id":5,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:14021:6195":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"5:8942:7517":{"crate_id":5,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:44429:4308":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"6:5140:9559":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"5:11117:9977":{"crate_id":5,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"1:21547:16889":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:12566:11477":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"5:11204:9978":{"crate_id":5,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"11:2562:8969":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"1:46717:8050":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"5:4002:16897":{"crate_id":5,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:15519:6622":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"5:8936:1983":{"crate_id":5,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:12066:4296":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"4:7356:7706":{"crate_id":4,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:12758:5972":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:13083:6008":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"18:491:5559":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:11991:5904":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"4:3753:7690":{"crate_id":4,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"5:4701:9825":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"1:44239:4315":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"5:12118:807":{"crate_id":5,"path":["std","i8"],"kind":"primitive"},"16:6929:7106":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"16:7054:7126":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:15301:6547":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:12180:5920":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:10002:213":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:43169:3324":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:21555:16542":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:261:5616":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:22666:9993":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:13322:6059":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:11714:5858":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:41638:3647":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:44529:7999":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:44295:3713":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"5:4557:16925":{"crate_id":5,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:14181:6237":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:45052:10076":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"5:10706:9976":{"crate_id":5,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"1:33955:3606":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"16:5760:23486":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"4:212:3547":{"crate_id":4,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:2457:111":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"4:5:1719":{"crate_id":4,"path":["alloc","vec"],"kind":"macro"},"17:13676:6144":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"18:582:4125":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"16:6844:7098":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"5:4046:16900":{"crate_id":5,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"4:1024:5433":{"crate_id":4,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:10423:5491":{"crate_id":1,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"6:6711:9810":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"4:3196:34162":{"crate_id":4,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"18:521:27689":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:10569:36461":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"11:2326:7394":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"17:13961:6187":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"6:7343:9929":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"16:8050:7275":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:22464:16620":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"1:12322:7881":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"6:580:9040":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"5:8081:3502":{"crate_id":5,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:13882:5872":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"14:187:11113":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"4:2062:7690":{"crate_id":4,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"13:226:8966":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"16:7582:7217":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"4:7477:7707":{"crate_id":4,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:14757:6400":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"17:15566:6634":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"5:1809:666":{"crate_id":5,"path":["std","env"],"kind":"module"},"6:4676:9357":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:13787:6165":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:3029:3603":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:45068:10080":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"17:10785:36464":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"16:6893:7104":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"5:3226:8404":{"crate_id":5,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"5:11611:7503":{"crate_id":5,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"5:4864:5397":{"crate_id":5,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:2482:469":{"crate_id":1,"path":["core","cmp"],"kind":"module"},"6:4939:1112":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"5:4195:8299":{"crate_id":5,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:14698:6348":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:44283:7992":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"16:6915:6847":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:14887:6450":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"11:2548:8283":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"16:2832:6832":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:14251:6246":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:10559:5756":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:46462:8040":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"5:12105:1044":{"crate_id":5,"path":["std","never"],"kind":"primitive"},"17:10726:36460":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"4:1270:7132":{"crate_id":4,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"16:5363:6894":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"6:4647:9355":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:16180:6059":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"16:6279:7017":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"5:363:7479":{"crate_id":5,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"5:9217:7648":{"crate_id":5,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:10974:5778":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"6:6741:9832":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:10881:23567":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"1:42564:3538":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:10633:16889":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:23705:189":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"4:7377:1983":{"crate_id":4,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:15480:6607":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"18:113:8271":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:30759:11183":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"17:10016:23533":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"5:3265:3508":{"crate_id":5,"path":["std","io","stdio","Stdin"],"kind":"struct"},"5:2688:3491":{"crate_id":5,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:42349:7968":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"16:7102:23493":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"5:2584:3498":{"crate_id":5,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:13347:5403":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"17:11307:5807":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:44119:4303":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"11:0:3401":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"16:6531:7042":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:11194:23586":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"5:8872:206":{"crate_id":5,"path":["std","process","Output"],"kind":"struct"},"4:5005:3471":{"crate_id":4,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:4629:3758":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"16:4862:6884":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"18:590:5570":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"5:5819:7522":{"crate_id":5,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:14296:6253":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"16:2380:6813":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:46563:8044":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"17:12077:5909":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:39343:3621":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:9996:3748":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"16:5743:6912":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:2509:132":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"16:2881:6834":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"5:4705:9829":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:10203:150":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"6:4488:9286":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:44137:4302":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"5:3903:7503":{"crate_id":5,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"5:5447:4632":{"crate_id":5,"path":["std","process","Child"],"kind":"struct"},"5:3996:16898":{"crate_id":5,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"11:1025:7394":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:47007:8064":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:10812:4304":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"16:6742:7083":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:2795:123":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"14:202:3707":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"6:1604:9115":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"6:7604:9944":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"11:123:5378":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:13121:6023":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"4:6688:5433":{"crate_id":4,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"17:10896:5768":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"6:5044:9517":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:435:5620":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"4:4050:5433":{"crate_id":4,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:41629:3645":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"16:5384:23484":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"5:9096:7643":{"crate_id":5,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"1:48295:8127":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"6:5068:9524":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:4523:9299":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:41199:3679":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:12972:5989":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:12596:5961":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:10246:4436":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"4:1486:7387":{"crate_id":4,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"6:1521:9063":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"5:4810:16916":{"crate_id":5,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"16:7128:7646":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"5:7669:5419":{"crate_id":5,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"4:3225:7404":{"crate_id":4,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:12366:23678":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"6:7598:9943":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"5:6676:5412":{"crate_id":5,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:23060:193":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"4:1516:7385":{"crate_id":4,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:10242:5613":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"5:1578:1983":{"crate_id":5,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:2546:209":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"6:7622:9947":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"5:7206:8303":{"crate_id":5,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:401:5618":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"16:6017:23487":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"4:3191:7405":{"crate_id":4,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"18:766:27688":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"9:357:22494":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"6:7633:9951":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:4543:9309":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:12380:5943":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:44705:11491":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"6:6781:9834":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"5:3548:2790":{"crate_id":5,"path":["std","io","Write"],"kind":"trait"},"1:21306:27757":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"6:1664:9163":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"5:3557:11115":{"crate_id":5,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"16:5121:6892":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"9:450:22479":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:9031:3857":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"6:6086:9708":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"16:6361:7023":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:2435:103":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"9:486:22478":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:13448:6086":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:13386:149":{"crate_id":1,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:15747:6680":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"16:7269:36459":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"4:5878:3569":{"crate_id":4,"path":["alloc","string","Drain"],"kind":"struct"},"8:0:3398":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:12898:23559":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:14455:6281":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:0:3406":{"crate_id":17,"path":["object"],"kind":"module"},"1:33349:3602":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:13909:6180":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"1:44493:7998":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:9459:85":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:4602:3759":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:11690:5854":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"17:13948:6185":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"5:11109:34490":{"crate_id":5,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"6:1697:9179":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"16:8167:7288":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}