{"root":"0:0:1585","crate_version":"1.1.0","includes_private":false,"index":{"0:225:2232":{"id":"0:225:2232","crate_id":0,"name":"first_mut","span":{"filename":"src/buf/chain.rs","begin":[74,4],"end":[76,5]},"visibility":"public","docs":"Gets a mutable reference to the first underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nbuf.first_mut().advance(1);\n\nlet full = buf.copy_to_bytes(9);\nassert_eq!(full, b\"elloworld\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1171:1761":{"id":"0:1171:1761","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13254:56862":{"id":"1:13254:56862","crate_id":1,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"1:12826:3278","prim@char":"5:15735:2894","str::rsplitn":"5:15741:2899"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"1:49243:3858","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:80:1702":{"id":"0:80:1702","crate_id":0,"name":"take","span":{"filename":"src/buf/buf_impl.rs","begin":[847,4],"end":[852,5]},"visibility":"default","docs":"Creates an adaptor which will read at most `limit` bytes from `self`.\n\nThis function returns a new instance of `Buf` which will read at most\n`limit` bytes.\n\n# Examples\n\n```\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\"[..].take(5);\nlet mut dst = vec![];\n\ndst.put(&mut buf);\nassert_eq!(dst, b\"hello\");\n\nlet mut buf = buf.into_inner();\ndst.clear();\ndst.put(&mut buf);\nassert_eq!(dst, b\" world\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:184":{"id":"0:184","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1035,0],"end":[1069,1]},"visibility":{"restricted":{"parent":"0:99:1698","path":"::buf::buf_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["put_i32_le","put_i32","put_u32_le","put_f64","put_f64_le","has_remaining_mut","put_u16_le","put_int","put_i8","put_int_le","put_i128_le","put_i128","put_u128_le","put_slice","put_u64","put_i16_le","put_i16","put_f32","writer","put_u16","put_uint","put_bytes","put","put_i64","put_u64_le","put_i64_le","put_u32","put_f32_le","put_uint_le","limit","put_u8","put_u128","chain_mut"],"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140:1584","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:185:2004","0:186:2049","0:187:2022","0:188:2064","0:189:2074"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:820:2204":{"id":"0:820:2204","crate_id":0,"name":"reserve","span":{"filename":"src/bytes_mut.rs","begin":[540,4],"end":[551,5]},"visibility":"public","docs":"Reserves capacity for at least `additional` more bytes to be inserted\ninto the given `BytesMut`.\n\nMore than `additional` bytes may be reserved in order to avoid frequent\nreallocations. A call to `reserve` may result in an allocation.\n\nBefore allocating new buffer space, the function will attempt to reclaim\nspace in the existing buffer. If the current handle references a small\nview in the original buffer and all other handles have been dropped,\nand the requested capacity is less than or equal to the existing\nbuffer's capacity, then the current view will be copied to the front of\nthe buffer and the handle will take ownership of the full buffer.\n\n# Examples\n\nIn the following example, a new buffer is allocated.\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::from(&b\"hello\"[..]);\nbuf.reserve(64);\nassert!(buf.capacity() >= 69);\n```\n\nIn the following example, the existing buffer is reclaimed.\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(128);\nbuf.put(&[0; 64][..]);\n\nlet ptr = buf.as_ptr();\nlet other = buf.split();\n\nassert!(buf.is_empty());\nassert_eq!(buf.capacity(), 64);\n\ndrop(other);\nbuf.reserve(128);\n\nassert_eq!(buf.capacity(), 128);\nassert_eq!(buf.as_ptr(), ptr);\n```\n\n# Panics\n\nPanics if the new capacity overflows `usize`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["additional",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:289:2049":{"id":"0:289:2049","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/limit.rs","begin":[64,4],"end":[68,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:153:2095":{"id":"0:153:2095","crate_id":0,"name":"put_i16","span":{"filename":"src/buf/buf_mut.rs","begin":[403,4],"end":[405,5]},"visibility":"default","docs":"Writes a signed 16 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i16(0x0809);\nassert_eq!(buf, b\"\\x08\\x09\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:623:585":{"id":"0:623:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[724,4],"end":[726,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:854:206":{"id":"0:854:206","crate_id":0,"name":"Target","span":{"filename":"src/bytes_mut.rs","begin":[1038,4],"end":[1038,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}},"generics":{"params":[],"where_predicates":[]}}},"0:933:976":{"id":"0:933:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1376,4],"end":[1378,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1184:1850":{"id":"0:1184:1850","crate_id":0,"name":"get_u32","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1008:640":{"id":"0:1008:640","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/debug.rs","begin":[40,4],"end":[42,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"1:10068:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:10057:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:944":{"id":"0:944","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1411,0],"end":[1415,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7753:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"items":["0:945:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:972":{"id":"0:972","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1489,0],"end":[1493,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:973:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:9128:3449-0:1242:1707":{"id":"a:1:9128:3449-0:1242:1707","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9128:3449","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9128:3449","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:306:1971":{"id":"0:306:1971","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/reader.rs","begin":[33,4],"end":[35,5]},"visibility":"public","docs":"Gets a reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::Buf;\n\nlet buf = b\"hello world\".reader();\n\nassert_eq!(b\"hello world\", buf.get_ref());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13202:1725":{"id":"1:13202:1725","crate_id":1,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"1:47181:162"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10726:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10726:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:96:1724":{"id":"0:96:1724","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1051,4],"end":[1060,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:605:976":{"id":"0:605:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[670,4],"end":[672,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:935:585":{"id":"0:935:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1382,4],"end":[1384,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2877:170":{"id":"1:2877:170","crate_id":1,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2879:976","1:2880:804","1:2881:770","1:2882:693","1:2883:676"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13269:56866":{"id":"1:13269:56866","crate_id":1,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"1:12826:3278","prim@char":"5:15735:2894","`DoubleEndedIterator`":"1:8323:116","str::matches":"5:15741:2899"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"1:49361:4575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12851:4390","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13193:56851":{"id":"1:13193:56851","crate_id":1,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:238":{"id":"0:238","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[193,0],"end":[230,1]},"visibility":{"restricted":{"parent":"0:199:1699","path":"::buf::chain"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140:1584","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140:1584","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["put_i32_le","put_i32","put_u32_le","put_f64","put_f64_le","has_remaining_mut","put_u16_le","put_int","put_i8","put_int_le","put_i128_le","put_i128","put_u128_le","put_slice","put_u64","put_i16_le","put_i16","put_f32","writer","put_u16","put_uint","put_bytes","put","put_i64","put_u64_le","put_i64_le","put_u32","put_f32_le","put_uint_le","limit","put_u8","put_u128","chain_mut"],"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140:1584","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233:1706","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["0:241:2004","0:242:2049","0:243:2022"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:592:398":{"id":"0:592:398","crate_id":0,"name":"cmp","span":{"filename":"src/bytes.rs","begin":[632,4],"end":[634,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:378:2206":{"id":"0:378:2206","crate_id":0,"name":"from_raw_parts_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[44,4],"end":[48,5]},"visibility":"public","docs":"Create a `&mut UninitSlice` from a pointer and a length.\n\n# Safety\n\nThe caller must ensure that `ptr` references a valid memory region owned\nby the caller representing a byte slice for the duration of `'a`.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\n\nlet bytes = b\"hello world\".to_vec();\nlet ptr = bytes.as_ptr() as *mut _;\nlet len = bytes.len();\n\nlet slice = unsafe { UninitSlice::from_raw_parts_mut(ptr, len) };\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["ptr",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:576:2248":{"id":"0:576:2248","crate_id":0,"name":"Item","span":{"filename":"src/bytes.rs","begin":[594,4],"end":[594,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"primitive","inner":"u8"},"generics":{"params":[],"where_predicates":[]}}},"1:3157:111":{"id":"1:3157:111","crate_id":1,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3158:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13231:3643":{"id":"1:13231:3643","crate_id":1,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"prim@char":"5:15735:2894","`None`":"1:47181:162","self::pattern":"1:12826:3278"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:235:1790":{"id":"0:235:1790","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/chain.rs","begin":[168,4],"end":[172,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"IoSlice","id":"5:10945:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4684:3076":{"id":"1:4684:3076","crate_id":1,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4685:2248","1:4686:54791","1:4687:2275"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:927:585":{"id":"0:927:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1358,4],"end":[1360,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1167:1900":{"id":"0:1167:1900","crate_id":0,"name":"get_uint_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:51:1829":{"id":"0:51:1829","crate_id":0,"name":"get_i8","span":{"filename":"src/buf/buf_impl.rs","begin":[310,4],"end":[315,5]},"visibility":"default","docs":"Gets a signed 8 bit integer from `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08 hello\"[..];\nassert_eq!(8, buf.get_i8());\n```\n\n# Panics\n\nThis function panics if there is no more remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:304":{"id":"0:304","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[19,0],"end":[63,1]},"visibility":{"restricted":{"parent":"0:291:1701","path":"::buf::reader"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255:1711","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:306:1971","0:307:2274","0:308:2246"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:95:1761":{"id":"0:95:1761","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1040,4],"end":[1049,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:816:2549":{"id":"0:816:2549","crate_id":0,"name":"truncate","span":{"filename":"src/bytes_mut.rs","begin":[399,4],"end":[405,5]},"visibility":"public","docs":"Shortens the buffer, keeping the first `len` bytes and dropping the\nrest.\n\nIf `len` is greater than the buffer's current length, this has no\neffect.\n\nExisting underlying capacity is preserved.\n\nThe [`split_off`] method can emulate `truncate`, but this causes the\nexcess bytes to be returned instead of dropped.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::from(&b\"hello world\"[..]);\nbuf.truncate(5);\nassert_eq!(buf, b\"hello\"[..]);\n```\n\n[`split_off`]: #method.split_off","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13304:56879":{"id":"1:13304:56879","crate_id":1,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"5:15735:2894","self::pattern":"1:12826:3278"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12851:4390","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:49:1728":{"id":"0:49:1728","crate_id":0,"name":"copy_to_slice","span":{"filename":"src/buf/buf_impl.rs","begin":[250,4],"end":[269,5]},"visibility":"default","docs":"Copies bytes from `self` into `dst`.\n\nThe cursor is advanced by the number of bytes copied. `self` must have\nenough remaining bytes to fill `dst`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\nlet mut dst = [0; 5];\n\nbuf.copy_to_slice(&mut dst);\nassert_eq!(&b\"hello\"[..], &dst);\nassert_eq!(6, buf.remaining());\n```\n\n# Panics\n\nThis function panics if `self.remaining() < dst.len()`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:91:1724":{"id":"0:91:1724","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1028,4],"end":[1030,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:932":{"id":"0:932","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1375,0],"end":[1379,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:933:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[132,0],"end":[132,49]},"visibility":{"restricted":{"parent":"0:250:757","path":"::buf::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"kind":"resolved_path","inner":{"name":"ExactSizeIterator","id":"1:8348:2276","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:3108-0:1248:1708":{"id":"b:1:3108-0:1248:1708","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3111:2477"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5627:4872":{"id":"5:5627:4872","crate_id":5,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5628:59296","5:5629:59298","5:5630:59297","5:5631:59299"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3286:3170":{"id":"1:3286:3170","crate_id":1,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3288:871"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:1:3179:196-0:1242:1707":{"id":"a:1:3179:196-0:1242:1707","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:2836:120":{"id":"1:2836:120","crate_id":1,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:836":{"id":"0:836","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[925,0],"end":[940,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Drop","id":"1:3422:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:837:559"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1201:2075":{"id":"0:1201:2075","crate_id":0,"name":"put_u8","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:197:2074":{"id":"0:197:2074","crate_id":0,"name":"put_bytes","span":{"filename":"src/buf/buf_mut.rs","begin":[1134,4],"end":[1137,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u8"}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13191:1793":{"id":"1:13191:1793","crate_id":1,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10129:3320":{"id":"1:10129:3320","crate_id":1,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10130:640"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:8279:147":{"id":"1:8279:147","crate_id":1,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8280:2248","1:8281:1707","1:8282:746"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13286:56874":{"id":"1:13286:56874","crate_id":1,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"5:15735:2894","self::pattern":"1:12826:3278"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"1:12856:4387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:911:664":{"id":"0:911:664","crate_id":0,"name":"from_iter","span":{"filename":"src/bytes_mut.rs","begin":[1204,4],"end":[1206,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["into_iter",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:8279:147","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3187:203":{"id":"1:3187:203","crate_id":1,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3126:123":{"id":"1:3126:123","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Infallible","id":"1:38494:4237","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"5:5697:4877":{"id":"5:5697:4877","crate_id":5,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5698:60397"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"5:10442:4336","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:165:2137":{"id":"0:165:2137","crate_id":0,"name":"put_i128","span":{"filename":"src/buf/buf_mut.rs","begin":[667,4],"end":[669,5]},"visibility":"default","docs":"Writes a signed 128 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i128(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3108-0:1242:1707":{"id":"b:1:3108-0:1242:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3111:2477"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:160:2120":{"id":"0:160:2120","crate_id":0,"name":"put_u64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[557,4],"end":[559,5]},"visibility":"default","docs":"Writes an unsigned 64 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u64_le(0x0102030405060708);\nassert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:893":{"id":"0:893","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1159,0],"end":[1166,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:8279:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"items":["0:895:2248","0:896:1707","0:897:746"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5561:4889":{"id":"5:5561:4889","crate_id":5,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5562:5805","5:5563:2564"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"5:10442:4336","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:1:3108-0:1298:1712":{"id":"b:1:3108-0:1298:1712","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298:1712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:3111:2477"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1183:1845":{"id":"0:1183:1845","crate_id":0,"name":"get_i16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:9129:3448-0:1233:1706":{"id":"a:1:9129:3448-0:1233:1706","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9129:3448","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9129:3448","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9129:3448","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233:1706","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:808:898":{"id":"0:808:898","crate_id":0,"name":"new","span":{"filename":"src/bytes_mut.rs","begin":[165,4],"end":[167,5]},"visibility":"public","docs":"Creates a new `BytesMut` with default capacity.\n\nResulting object has length 0 and unspecified capacity.\nThis function does not allocate.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut bytes = BytesMut::new();\n\nassert_eq!(0, bytes.len());\n\nbytes.reserve(2);\nbytes.put_slice(b\"xy\");\n\nassert_eq!(&b\"xy\"[..], &bytes[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3220:3079-0:1242:1707":{"id":"a:1:3220:3079-0:1242:1707","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3220:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3220:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"4:6085:57542":{"id":"4:6085:57542","crate_id":4,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"4:8341:201"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:638":{"id":"0:638","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[768,0],"end":[775,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:641:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2782-0:1233:1706":{"id":"b:1:2782-0:1233:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2776:94","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233:1706","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["1:2784:2397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:583:746":{"id":"0:583:746","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes.rs","begin":[606,4],"end":[608,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"1:8279:147","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:841:1727":{"id":"0:841:1727","crate_id":0,"name":"advance","span":{"filename":"src/bytes_mut.rs","begin":[954,4],"end":[964,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3179:196-0:1261:1709":{"id":"a:1:3179:196-0:1261:1709","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:1:3118-0:526:1588":{"id":"b:1:3118-0:526:1588","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:3088:213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3121:123","1:3122:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:643:59":{"id":"0:643:59","crate_id":0,"name":"default","span":{"filename":"src/bytes.rs","begin":[781,4],"end":[783,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1286":{"id":"0:1286","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342:1703","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IndexMut","id":"1:3487:2332","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeInclusive","id":"1:45631:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1287:732"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:154:2098":{"id":"0:154:2098","crate_id":0,"name":"put_i16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[425,4],"end":[427,5]},"visibility":"default","docs":"Writes a signed 16 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i16_le(0x0809);\nassert_eq!(buf, b\"\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:336":{"id":"0:336","crate_id":0,"name":null,"span":{"filename":"src/buf/take.rs","begin":[132,0],"end":[155,1]},"visibility":{"restricted":{"parent":"0:316:1702","path":"::buf::take"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["copy_to_slice","get_f64","get_u32","get_f32","get_u16","get_i8","get_u8","get_i128","get_u128_le","get_i128_le","reader","get_i64_le","get_i64","get_u64_le","get_i32_le","get_i32","chunks_vectored","get_u32_le","get_i16_le","get_i16","get_u16_le","get_uint_le","get_int","get_int_le","take","chain","copy_to_bytes","has_remaining","get_f32_le","get_uint","get_u128","get_u64","get_f64_le"],"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:338:1761","0:339:1724","0:340:1727","0:341:1931"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1181:1839":{"id":"0:1181:1839","crate_id":0,"name":"get_u16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1208:2106":{"id":"0:1208:2106","crate_id":0,"name":"put_u32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[37,0],"end":[130,1]},"visibility":{"restricted":{"parent":"0:199:1699","path":"::buf::chain"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233:1706","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["0:224:2226","0:225:2232","0:226:2235","0:227:2240","0:228:2246"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:397":{"id":"0:397","crate_id":0,"name":null,"span":{"filename":"src/buf/vec_deque.rs","begin":[5,0],"end":[22,1]},"visibility":{"restricted":{"parent":"0:390:1704","path":"::buf::vec_deque"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["copy_to_slice","get_f64","get_u32","get_f32","get_u16","get_i8","get_u8","get_i128","get_u128_le","get_i128_le","reader","get_i64_le","get_i64","get_u64_le","get_i32_le","get_i32","chunks_vectored","get_u32_le","get_i16_le","get_i16","get_u16_le","get_uint_le","get_int","get_int_le","take","chain","copy_to_bytes","has_remaining","get_f32_le","get_uint","get_u128","get_u64","get_f64_le"],"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VecDeque","id":"4:4612:220","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"items":["0:398:1761","0:399:1724","0:400:1727"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:264:2275":{"id":"0:264:2275","crate_id":0,"name":"size_hint","span":{"filename":"src/buf/iter.rs","begin":[126,4],"end":[129,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3082:145":{"id":"1:3082:145","crate_id":1,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3084:2477"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3411:2623":{"id":"1:3411:2623","crate_id":1,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3412:526"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"1:3398:112","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:887":{"id":"0:887","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1144,0],"end":[1148,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2801:101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:888:392"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1156:1842":{"id":"0:1156:1842","crate_id":0,"name":"get_i16","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3112-0:1255:1711":{"id":"b:1:3112-0:1255:1711","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255:1711","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:3114:661"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:9129:3448-0:1298:1712":{"id":"a:1:9129:3448-0:1298:1712","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9129:3448","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9129:3448","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298:1712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:386:771":{"id":"0:386:771","crate_id":0,"name":"len","span":{"filename":"src/buf/uninit_slice.rs","begin":[141,4],"end":[143,5]},"visibility":"public","docs":"Returns the number of bytes in the slice.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut data = [0, 1, 2];\nlet mut slice = &mut data[..];\nlet len = BufMut::chunk_mut(&mut slice).len();\n\nassert_eq!(len, 3);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:589":{"id":"0:589","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[625,0],"end":[629,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:590:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13245:56859":{"id":"1:13245:56859","crate_id":1,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"1:12826:3278","str::split":"5:15741:2899","prim@char":"5:15735:2894","`DoubleEndedIterator`":"1:8323:116"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"1:49157:3860","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12851:4390","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:881:2397":{"id":"0:881:2397","crate_id":0,"name":"borrow","span":{"filename":"src/bytes_mut.rs","begin":[1116,4],"end":[1118,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:227:2240":{"id":"0:227:2240","crate_id":0,"name":"last_mut","span":{"filename":"src/buf/chain.rs","begin":[109,4],"end":[111,5]},"visibility":"public","docs":"Gets a mutable reference to the last underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = (&b\"hello \"[..])\n    .chain(&b\"world\"[..]);\n\nbuf.last_mut().advance(1);\n\nlet full = buf.copy_to_bytes(10);\nassert_eq!(full, b\"hello orld\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"U"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3333:3179":{"id":"1:3333:3179","crate_id":1,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3335:336"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:247:2248":{"id":"0:247:2248","crate_id":0,"name":"Item","span":{"filename":"src/buf/chain.rs","begin":[237,4],"end":[237,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"primitive","inner":"u8"},"generics":{"params":[],"where_predicates":[]}}},"0:862:661":{"id":"0:862:661","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1061,4],"end":[1063,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1146:1724":{"id":"0:1146:1724","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10125:175":{"id":"1:10125:175","crate_id":1,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10126:640"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:168:2148":{"id":"0:168:2148","crate_id":0,"name":"put_uint_le","span":{"filename":"src/buf/buf_mut.rs","begin":[733,4],"end":[735,5]},"visibility":"default","docs":"Writes an unsigned n-byte integer to `self` in the little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_uint_le(0x010203, 3);\nassert_eq!(buf, b\"\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u64"}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:331:2246":{"id":"0:331:2246","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/take.rs","begin":[39,4],"end":[41,5]},"visibility":"public","docs":"Consumes this `Take`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\".take(2);\nlet mut dst = vec![];\n\ndst.put(&mut buf);\nassert_eq!(*dst, b\"he\"[..]);\n\nlet mut buf = buf.into_inner();\n\ndst.clear();\ndst.put(&mut buf);\nassert_eq!(*dst, b\"llo world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:952":{"id":"0:952","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1435,0],"end":[1439,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:953:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1186:1857":{"id":"0:1186:1857","crate_id":0,"name":"get_i32","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3681:3081":{"id":"1:3681:3081","crate_id":1,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:809:771":{"id":"0:809:771","crate_id":0,"name":"len","span":{"filename":"src/bytes_mut.rs","begin":[180,4],"end":[182,5]},"visibility":"public","docs":"Returns the number of bytes contained in this `BytesMut`.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet b = BytesMut::from(&b\"hello\"[..]);\nassert_eq!(b.len(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:170:2155":{"id":"0:170:2155","crate_id":0,"name":"put_int_le","span":{"filename":"src/buf/buf_mut.rs","begin":[777,4],"end":[779,5]},"visibility":"default","docs":"Writes low `nbytes` of a signed integer to `self` in little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_int_le(0x0504010203, 3);\nassert_eq!(buf, b\"\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self` or if `nbytes` is greater than 8.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i64"}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2782-0:786:1589":{"id":"b:1:2782-0:786:1589","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2776:94","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2784:2397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:259:2274":{"id":"0:259:2274","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/iter.rs","begin":[107,4],"end":[109,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BytesMut};\n\nlet buf = BytesMut::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\n\niter.get_mut().advance(1);\n\nassert_eq!(iter.next(), Some(b'c'));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:847:1934":{"id":"0:847:1934","crate_id":0,"name":"put","span":{"filename":"src/bytes_mut.rs","begin":[1000,4],"end":[1010,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"crate::Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1172:1724":{"id":"0:1172:1724","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1231:2123":{"id":"0:1231:2123","crate_id":0,"name":"put_i64","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:898":{"id":"0:898","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1168,0],"end":[1186,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"kind":"resolved_path","inner":{"name":"Extend","id":"1:8288:2834","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:899:2805"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3906:68":{"id":"1:3906:68","crate_id":1,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3907:1398"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"0:1247:640":{"id":"0:1247:640","crate_id":0,"name":"fmt","span":{"filename":"src/buf/iter.rs","begin":[25,9],"end":[25,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:10068:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:10057:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1293":{"id":"0:1293","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342:1703","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"1:3483:2331","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeToInclusive","id":"1:45654:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1294:167","0:1295:731"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:637:585":{"id":"0:637:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[763,4],"end":[765,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3118-0:1242:1707":{"id":"b:1:3118-0:1242:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:3088:213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3121:123","1:3122:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:387":{"id":"0:387","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[146,0],"end":[150,1]},"visibility":{"restricted":{"parent":"0:342:1703","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10108:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:388:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3268:3166":{"id":"1:3268:3166","crate_id":1,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3270:167","1:3271:1081"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:613:976":{"id":"0:613:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[694,4],"end":[696,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7753:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13310:56880":{"id":"1:13310:56880","crate_id":1,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:548:2537":{"id":"0:548:2537","crate_id":0,"name":"split_to","span":{"filename":"src/bytes.rs","begin":[401,4],"end":[423,5]},"visibility":"public","docs":"Splits the bytes into two at the given index.\n\nAfterwards `self` contains elements `[at, len)`, and the returned\n`Bytes` contains elements `[0, at)`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut a = Bytes::from(&b\"hello world\"[..]);\nlet b = a.split_to(5);\n\nassert_eq!(&a[..], b\" world\");\nassert_eq!(&b[..], b\"hello\");\n```\n\n# Panics\n\nPanics if `at > len`.","links":{},"attrs":["#[must_use = \"consider Bytes::advance if you don't need the other half\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2785-0:1261:1709":{"id":"b:1:2785-0:1261:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2779:2625","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2787:2832"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5683:4876":{"id":"5:5683:4876","crate_id":5,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5684:59388","5:5685:59389","5:5686:59390","5:5687:59391"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1308":{"id":"0:1308","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[36,0],"end":[36,26]},"visibility":{"restricted":{"parent":"0:1011:2844","path":"::fmt::hex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UpperHex","id":"1:10123:2870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1309:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3483:2331":{"id":"1:3483:2331","crate_id":1,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3485:167","1:3486:731"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:1191:1875":{"id":"0:1191:1875","crate_id":0,"name":"get_i64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6345:4841":{"id":"5:6345:4841","crate_id":5,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6346:5109","5:6347:5110","5:6348:7696","5:6349:60561","5:6351:60565","5:6353:60562","5:6354:60563","5:6356:60564"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"5:10442:4336","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:558":{"id":"0:558","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[519,0],"end":[524,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2801:101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:559:392"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:233:1724":{"id":"0:233:1724","crate_id":0,"name":"chunk","span":{"filename":"src/buf/chain.rs","begin":[141,4],"end":[147,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1149:1727":{"id":"0:1149:1727","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:606":{"id":"0:606","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[675,0],"end":[679,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"primitive","inner":"str"},"items":["0:607:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3079:74":{"id":"1:3079:74","crate_id":1,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3081:2831"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:901":{"id":"0:901","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1188,0],"end":[1195,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one"],"trait":{"kind":"resolved_path","inner":{"name":"Extend","id":"1:8288:2834","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:903:2805"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12851:4390":{"id":"1:12851:4390","crate_id":1,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:12853:3605","1:12854:55922","1:12855:55923"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"1:12845:4389","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:414":{"id":"0:414","crate_id":0,"name":null,"span":{"filename":"src/buf/writer.rs","begin":[19,0],"end":[75,1]},"visibility":{"restricted":{"parent":"0:401:1705","path":"::buf::writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140:1584","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298:1712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:416:1971","0:417:2274","0:418:2246"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:3908-0:1261:1709":{"id":"b:1:3908-0:1261:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3906:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3910:1398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:92:1727":{"id":"0:92:1727","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1033,4],"end":[1035,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1280:731":{"id":"0:1280:731","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"RangeFull","id":"1:45546:182","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13298:56877":{"id":"1:13298:56877","crate_id":1,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"1:12826:3278","prim@char":"5:15735:2894"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12851:4390","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:891:1707":{"id":"0:891:1707","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes_mut.rs","begin":[1152,4],"end":[1152,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"0:875":{"id":"0:875","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1098,0],"end":[1103,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"1:3157:111","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:876:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:3112-0:1261:1709":{"id":"b:1:3112-0:1261:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3114:661"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1168:1903":{"id":"0:1168:1903","crate_id":0,"name":"get_int","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1307:640":{"id":"0:1307:640","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[35,0],"end":[35,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"1:10068:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:10057:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:9129:3448-0:1261:1709":{"id":"a:1:9129:3448-0:1261:1709","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9129:3448","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9129:3448","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:10726:199":{"id":"1:10726:199","crate_id":1,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:10728:167","1:10729:1725","1:10730:2274","1:10731:56094","1:10732:56095","1:10733:731","1:10734:732"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10717:4336","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3487:2332":{"id":"1:3487:2332","crate_id":1,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3489:732"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"1:3483:2331","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:888:392":{"id":"0:888:392","crate_id":0,"name":"clone","span":{"filename":"src/bytes_mut.rs","begin":[1145,4],"end":[1147,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1273":{"id":"0:1273","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342:1703","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"1:3483:2331","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"1:45587:181","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1274:167","0:1275:731"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:634":{"id":"0:634","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[759,0],"end":[766,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:637:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:191:2004":{"id":"0:191:2004","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1073,4],"end":[1076,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:940":{"id":"0:940","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1399,0],"end":[1403,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7753:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:8079:3091","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:941:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13282:56871":{"id":"1:13282:56871","crate_id":1,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2776:94":{"id":"1:2776:94","crate_id":1,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2778:2397"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:559:392":{"id":"0:559:392","crate_id":0,"name":"clone","span":{"filename":"src/bytes.rs","begin":[521,4],"end":[523,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:842:1931":{"id":"0:842:1931","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/bytes_mut.rs","begin":[966,4],"end":[968,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"crate::Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1166:1895":{"id":"0:1166:1895","crate_id":0,"name":"get_uint","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13311:56881":{"id":"1:13311:56881","crate_id":1,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1159:1854":{"id":"0:1159:1854","crate_id":0,"name":"get_u32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:597:976":{"id":"0:597:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[646,4],"end":[648,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2782-0:1255:1711":{"id":"b:1:2782-0:1255:1711","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2776:94","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255:1711","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:2784:2397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:283:2274":{"id":"0:283:2274","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/limit.rs","begin":[34,4],"end":[36,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8348:2276":{"id":"1:8348:2276","crate_id":1,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8349:771","1:8350:1793"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8474:153","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:1:9128:3449-0:1298:1712":{"id":"a:1:9128:3449-0:1298:1712","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9128:3449","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9128:3449","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298:1712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:1:3908-0:786:1589":{"id":"b:1:3908-0:786:1589","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3906:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3910:1398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:3179:196-0:1255:1711":{"id":"a:1:3179:196-0:1255:1711","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255:1711","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1288":{"id":"0:1288","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342:1703","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"1:3483:2331","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"1:45608:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1289:167","0:1290:731"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:8323:116":{"id":"1:8323:116","crate_id":1,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8324:3605","1:8325:3606","1:8326:3607","1:8327:3608","1:8331:3609","1:8334:3610"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8474:153","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:421:2361":{"id":"0:421:2361","crate_id":0,"name":"write","span":{"filename":"src/buf/writer.rs","begin":[78,4],"end":[83,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"5:3953:191","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:612":{"id":"0:612","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[693,0],"end":[697,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7753:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:8079:3091","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:613:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3316:3175":{"id":"1:3316:3175","crate_id":1,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3318:167","1:3319:340"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:928":{"id":"0:928","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1363,0],"end":[1367,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}},"items":["0:929:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:537:2462":{"id":"0:537:2462","crate_id":0,"name":"from_static","span":{"filename":"src/bytes.rs","begin":[152,4],"end":[159,5]},"visibility":"public","docs":"Creates a new `Bytes` from a static slice.\n\nThe returned `Bytes` will point directly to the static slice. There is\nno allocating or copying.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::from_static(b\"hello\");\nassert_eq!(&b[..], b\"hello\");\n```","links":{},"attrs":["#[inline]","#[cfg(not(all(loom, test)))]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["bytes",{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2785-0:526:1588":{"id":"b:1:2785-0:526:1588","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2779:2625","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2787:2832"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:13263:56865":{"id":"1:13263:56865","crate_id":1,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12851:4390","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:149:2075":{"id":"0:149:2075","crate_id":0,"name":"put_u8","span":{"filename":"src/buf/buf_mut.rs","begin":[313,4],"end":[316,5]},"visibility":"default","docs":"Writes an unsigned 8 bit integer to `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u8(0x01);\nassert_eq!(buf, b\"\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:9128:3449-0:1255:1711":{"id":"a:1:9128:3449-0:1255:1711","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9128:3449","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9128:3449","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255:1711","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3306:3173":{"id":"1:3306:3173","crate_id":1,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3308:167","1:3309:335"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:241:2004":{"id":"0:241:2004","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/chain.rs","begin":[198,4],"end":[203,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:228:2246":{"id":"0:228:2246","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/chain.rs","begin":[127,4],"end":[129,5]},"visibility":"public","docs":"Consumes this `Chain`, returning the underlying values.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet chain = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nlet (first, last) = chain.into_inner();\nassert_eq!(first[..], b\"hello\"[..]);\nassert_eq!(last[..], b\"world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"T"},{"kind":"generic","inner":"U"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8749:3077":{"id":"1:8749:3077","crate_id":1,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8474:153","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:148:2074":{"id":"0:148:2074","crate_id":0,"name":"put_bytes","span":{"filename":"src/buf/buf_mut.rs","begin":[289,4],"end":[293,5]},"visibility":"default","docs":"Put `cnt` bytes `val` into `self`.\n\nLogically equivalent to calling `self.put_u8(val)` `cnt` times, but may work faster.\n\n`self` must have at least `cnt` remaining capacity.\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 6];\n\n{\n    let mut buf = &mut dst[..];\n    buf.put_bytes(b'a', 4);\n\n    assert_eq!(2, buf.remaining_mut());\n}\n\nassert_eq!(b\"aaaa\\0\\0\", &dst);\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u8"}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:189:2074":{"id":"0:189:2074","crate_id":0,"name":"put_bytes","span":{"filename":"src/buf/buf_mut.rs","begin":[1062,4],"end":[1068,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u8"}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1154:1835":{"id":"0:1154:1835","crate_id":0,"name":"get_u16","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:858":{"id":"0:858","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1053,0],"end":[1058,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"DerefMut","id":"1:3411:2623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:859:526"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1195:1906":{"id":"0:1195:1906","crate_id":0,"name":"get_int_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3220:3079-0:1233:1706":{"id":"a:1:3220:3079-0:1233:1706","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3220:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3220:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3220:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233:1706","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:243:2022":{"id":"0:243:2022","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/chain.rs","begin":[213,4],"end":[229,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:10332:142":{"id":"1:10332:142","crate_id":1,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10333:632","1:10334:2361","1:10335:55179","1:10336:55180","1:10337:55181","1:10338:55182","1:10339:55183","1:10340:55184","1:10341:55185","1:10342:55186","1:10343:55187","1:10344:55188","1:10345:55189","1:10346:55190","1:10347:55191","1:10348:1498"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3321:3177":{"id":"1:3321:3177","crate_id":1,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3323:167","1:3324:1204"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:332:1971":{"id":"0:332:1971","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/take.rs","begin":[56,4],"end":[58,5]},"visibility":"public","docs":"Gets a reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::Buf;\n\nlet buf = b\"hello world\".take(2);\n\nassert_eq!(11, buf.get_ref().remaining());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:71:1906":{"id":"0:71:1906","crate_id":0,"name":"get_int_le","span":{"filename":"src/buf/buf_impl.rs","begin":[713,4],"end":[715,5]},"visibility":"default","docs":"Gets a signed n-byte integer from `self` in little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x010203, buf.get_int_le(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:22639:4335":{"id":"1:22639:4335","crate_id":1,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22629:4336","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13221:18285":{"id":"1:13221:18285","crate_id":1,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"1:49431:4579","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1179:1829":{"id":"0:1179:1829","crate_id":0,"name":"get_i8","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8285:2248":{"id":"1:8285:2248","crate_id":1,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8474:153","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"b:1:3123-0:1298:1712":{"id":"b:1:3123-0:1298:1712","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298:1712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:3126:123","1:3127:1384"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:13316:56884":{"id":"1:13316:56884","crate_id":1,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"5:15735:2894"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"1:49456:4582","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:541:1280":{"id":"0:541:1280","crate_id":0,"name":"slice","span":{"filename":"src/bytes.rs","begin":[228,4],"end":[268,5]},"visibility":"public","docs":"Returns a slice of self for the provided range.\n\nThis will increment the reference count for the underlying memory and\nreturn a new `Bytes` handle set to the slice.\n\nThis operation is `O(1)`.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet a = Bytes::from(&b\"hello world\"[..]);\nlet b = a.slice(2..5);\n\nassert_eq!(&b[..], b\"llo\");\n```\n\n# Panics\n\nRequires that `begin <= end` and `end <= self.len()`, otherwise slicing\nwill panic.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["range",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"1:3554:2396","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"impl RangeBounds<usize>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"1:3554:2396","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:930":{"id":"0:930","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1369,0],"end":[1373,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:931:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1221:2086":{"id":"0:1221:2086","crate_id":0,"name":"put_u16","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:418:2246":{"id":"0:418:2246","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/writer.rs","begin":[72,4],"end":[74,5]},"visibility":"public","docs":"Consumes this `Writer`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::BufMut;\nuse std::io;\n\nlet mut buf = vec![].writer();\nlet mut src = &b\"hello world\"[..];\n\nio::copy(&mut src, &mut buf).unwrap();\n\nlet buf = buf.into_inner();\nassert_eq!(*buf, b\"hello world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"B"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6067:2197":{"id":"4:6067:2197","crate_id":4,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"4:8341:201"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1267:640":{"id":"0:1267:640","crate_id":0,"name":"fmt","span":{"filename":"src/buf/take.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:10068:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:10057:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3179:196":{"id":"1:3179:196","crate_id":1,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:811:2201":{"id":"0:811:2201","crate_id":0,"name":"capacity","span":{"filename":"src/bytes_mut.rs","begin":[210,4],"end":[212,5]},"visibility":"public","docs":"Returns the number of bytes the `BytesMut` can hold without reallocating.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet b = BytesMut::with_capacity(64);\nassert_eq!(b.capacity(), 64);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2831:169":{"id":"1:2831:169","crate_id":1,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2833:585","1:2834:885"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:1163:1869":{"id":"0:1163:1869","crate_id":0,"name":"get_u64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:4539:2304":{"id":"5:4539:2304","crate_id":5,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:4540:2305","5:4541:3833","5:4543:3834","5:4544:3835","5:4545:3028","5:4546:3836","5:4547:3837","5:4549:3838","5:4550:3632","5:4551:1585","5:4552:1699","5:4554:1702"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:6393:208":{"id":"4:6393:208","crate_id":4,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6394:58864"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:619:585":{"id":"0:619:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[712,4],"end":[714,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3327:3178":{"id":"1:3327:3178","crate_id":1,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3329:167","1:3330:1207"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:641:976":{"id":"0:641:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[772,4],"end":[774,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1245":{"id":"0:1245","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[25,9],"end":[25,14]},"visibility":{"restricted":{"parent":"0:250:757","path":"::buf::iter"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"1:10108:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10108:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:1247:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1310":{"id":"0:1310","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[37,0],"end":[37,29]},"visibility":{"restricted":{"parent":"0:1011:2844","path":"::fmt::hex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UpperHex","id":"1:10123:2870","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1311:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13301:56878":{"id":"1:13301:56878","crate_id":1,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"5:15735:2894","self::pattern":"1:12826:3278"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2782-0:1248:1708":{"id":"b:1:2782-0:1248:1708","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2776:94","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2784:2397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1227:2109":{"id":"0:1227:2109","crate_id":0,"name":"put_i32","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:196:2064":{"id":"0:196:2064","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1130,4],"end":[1132,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3465:3083":{"id":"1:3465:3083","crate_id":1,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3467:222","1:3468:192","1:3469:55958"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3184:1946":{"id":"1:3184:1946","crate_id":1,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:651:661":{"id":"0:651:661","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[806,4],"end":[833,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["slice",{"kind":"resolved_path","inner":{"name":"Box","id":"4:421:1717","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13315:4901":{"id":"1:13315:4901","crate_id":1,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"5:15735:2894"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"1:49447:4581","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3220:3079-0:1248:1708":{"id":"a:1:3220:3079-0:1248:1708","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3220:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3220:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:845:2022":{"id":"0:845:2022","crate_id":0,"name":"advance_mut","span":{"filename":"src/bytes_mut.rs","begin":[978,4],"end":[987,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:12856:4387":{"id":"1:12856:4387","crate_id":1,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12851:4390","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1224:2098":{"id":"0:1224:2098","crate_id":0,"name":"put_i16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6593:4875":{"id":"5:6593:4875","crate_id":5,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6594:59825","5:6595:9165","5:6596:9166","5:6597:9168","5:6598:9167","5:6599:9169","5:6600:9170","5:6601:9172","5:6602:6593","5:6603:9175","5:6604:9176","5:6605:9177","5:6606:9178","5:6607:9179","5:6608:9180","5:6609:9173","5:6610:9174"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1305:640":{"id":"0:1305:640","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[34,0],"end":[34,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"1:10068:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:10057:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:6:1582":{"id":"0:6:1582","crate_id":0,"name":"buf","span":{"filename":"src/buf/mod.rs","begin":[1,0],"end":[41,47]},"visibility":"public","docs":"Utilities for working with buffers.\n\nA buffer is any structure that contains a sequence of bytes. The bytes may\nor may not be stored in contiguous memory. This module contains traits used\nto abstract over buffers as well as utilities for working with buffer types.\n\n# `Buf`, `BufMut`\n\nThese are the two foundational traits for abstractly working with buffers.\nThey can be thought as iterators for byte structures. They offer additional\nperformance over `Iterator` by providing an API optimized for byte slices.\n\nSee [`Buf`] and [`BufMut`] for more details.\n\n[rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)\n[`Buf`]: trait.Buf.html\n[`BufMut`]: trait.BufMut.html","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:42:1583","0:140:1584","0:1233:1706","0:1242:1707","0:1248:1708","0:1261:1709","0:374:1710","0:1255:1711","0:1298:1712"]}},"0:388:640":{"id":"0:388:640","crate_id":0,"name":"fmt","span":{"filename":"src/buf/uninit_slice.rs","begin":[147,4],"end":[149,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:10068:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:10057:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1160:1857":{"id":"0:1160:1857","crate_id":0,"name":"get_i32","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1161:1860":{"id":"0:1161:1860","crate_id":0,"name":"get_i32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1153:1829":{"id":"0:1153:1829","crate_id":0,"name":"get_i8","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1145:1761":{"id":"0:1145:1761","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1170:1931":{"id":"0:1170:1931","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"crate::Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:931:585":{"id":"0:931:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1370,4],"end":[1372,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3179:196-0:1248:1708":{"id":"a:1:3179:196-0:1248:1708","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:616":{"id":"0:616","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[705,0],"end":[709,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7753:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"items":["0:617:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:10123:2870":{"id":"1:10123:2870","crate_id":1,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10124:640"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:1:3108-0:786:1589":{"id":"b:1:3108-0:786:1589","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3111:2477"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:3112-0:1233:1706":{"id":"b:1:3112-0:1233:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233:1706","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["1:3114:661"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:610":{"id":"0:610","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[687,0],"end":[691,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7753:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:8079:3091","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:611:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:156:2106":{"id":"0:156:2106","crate_id":0,"name":"put_u32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[469,4],"end":[471,5]},"visibility":"default","docs":"Writes an unsigned 32 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u32_le(0x0809A0A1);\nassert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3398:112":{"id":"1:3398:112","crate_id":1,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3399:206","1:3400:524"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:166:2140":{"id":"0:166:2140","crate_id":0,"name":"put_i128_le","span":{"filename":"src/buf/buf_mut.rs","begin":[689,4],"end":[691,5]},"visibility":"default","docs":"Writes a signed 128 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i128_le(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:607:585":{"id":"0:607:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[676,4],"end":[678,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13208:56095":{"id":"1:13208:56095","crate_id":1,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10726:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10726:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:54:1842":{"id":"0:54:1842","crate_id":0,"name":"get_i16","span":{"filename":"src/buf/buf_impl.rs","begin":[373,4],"end":[375,5]},"visibility":"default","docs":"Gets a signed 16 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09 hello\"[..];\nassert_eq!(0x0809, buf.get_i16());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:772:207":{"id":"4:772:207","crate_id":4,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:773:3266","4:774:54561","4:775:54562"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:1:3123-0:1248:1708":{"id":"b:1:3123-0:1248:1708","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3126:123","1:3127:1384"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:242:2049":{"id":"0:242:2049","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/chain.rs","begin":[205,4],"end":[211,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:642":{"id":"0:642","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[779,0],"end":[784,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"1:3157:111","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:643:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:950":{"id":"0:950","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1429,0],"end":[1433,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:951:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:886:2833":{"id":"0:886:2833","crate_id":0,"name":"write_fmt","span":{"filename":"src/bytes_mut.rs","begin":[1139,4],"end":[1141,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["args",{"kind":"resolved_path","inner":{"name":"fmt::Arguments","id":"1:48315:73","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:10057:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3112-0:1248:1708":{"id":"b:1:3112-0:1248:1708","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3114:661"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6771:4850":{"id":"5:6771:4850","crate_id":5,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6772:60530"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:958":{"id":"0:958","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1450,0],"end":[1457,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:961:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:853":{"id":"0:853","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1037,0],"end":[1044,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"1:3398:112","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:854:206","0:855:524"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1291":{"id":"0:1291","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342:1703","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IndexMut","id":"1:3487:2332","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"1:45608:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1292:732"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6861:4846":{"id":"5:6861:4846","crate_id":5,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6862:59819"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3554:2396":{"id":"1:3554:2396","crate_id":1,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3556:2490","1:3557:2494","1:3558:3916"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:594":{"id":"0:594","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[639,0],"end":[643,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:595:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13235:3610":{"id":"1:13235:3610","crate_id":1,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"self::pattern":"1:12826:3278","prim@char":"5:15735:2894","`None`":"1:47181:162"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12851:4390","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:254":{"id":"0:254","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[30,0],"end":[110,1]},"visibility":{"restricted":{"parent":"0:250:757","path":"::buf::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:257:2246","0:258:1971","0:259:2274"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:547:2528":{"id":"0:547:2528","crate_id":0,"name":"split_off","span":{"filename":"src/bytes.rs","begin":[352,4],"end":[375,5]},"visibility":"public","docs":"Splits the bytes into two at the given index.\n\nAfterwards `self` contains elements `[0, at)`, and the returned `Bytes`\ncontains elements `[at, len)`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut a = Bytes::from(&b\"hello world\"[..]);\nlet b = a.split_off(5);\n\nassert_eq!(&a[..], b\"hello\");\nassert_eq!(&b[..], b\" world\");\n```\n\n# Panics\n\nPanics if `at > len`.","links":{},"attrs":["#[must_use = \"consider Bytes::truncate if you don't need the other half\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:263:900":{"id":"0:263:900","crate_id":0,"name":"next","span":{"filename":"src/buf/iter.rs","begin":[115,4],"end":[124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:936":{"id":"0:936","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1387,0],"end":[1391,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"primitive","inner":"str"},"items":["0:937:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:968":{"id":"0:968","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1477,0],"end":[1481,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:969:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:569:289":{"id":"0:569:289","crate_id":0,"name":"as_ref","span":{"filename":"src/bytes.rs","begin":[573,4],"end":[575,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:628":{"id":"0:628","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[741,0],"end":[745,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:629:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:9129:3448-0:1248:1708":{"id":"a:1:9129:3448-0:1248:1708","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9129:3448","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9129:3448","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:1:3908-0:1255:1711":{"id":"b:1:3908-0:1255:1711","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3906:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255:1711","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:3910:1398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:840:1724":{"id":"0:840:1724","crate_id":0,"name":"chunk","span":{"filename":"src/bytes_mut.rs","begin":[949,4],"end":[951,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:163:2130":{"id":"0:163:2130","crate_id":0,"name":"put_u128","span":{"filename":"src/buf/buf_mut.rs","begin":[623,4],"end":[625,5]},"visibility":"default","docs":"Writes an unsigned 128 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u128(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1193:1900":{"id":"0:1193:1900","crate_id":0,"name":"get_uint_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:193:2049":{"id":"0:193:2049","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1094,4],"end":[1104,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:284:1700":{"id":"0:284:1700","crate_id":0,"name":"limit","span":{"filename":"src/buf/limit.rs","begin":[44,4],"end":[46,5]},"visibility":"public","docs":"Returns the maximum number of bytes that can be written\n\n# Note\n\nIf the inner `BufMut` has fewer bytes than indicated by this method then\nthat is the actual number of available bytes.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3299:3176":{"id":"1:3299:3176","crate_id":1,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3300:167","1:3301:931"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:839:1761":{"id":"0:839:1761","crate_id":0,"name":"remaining","span":{"filename":"src/bytes_mut.rs","begin":[944,4],"end":[946,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13195:56852":{"id":"1:13195:56852","crate_id":1,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"5:15741:2899"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:934":{"id":"0:934","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1381,0],"end":[1385,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"primitive","inner":"str"},"items":["0:935:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:885:1498":{"id":"0:885:1498","crate_id":0,"name":"write_str","span":{"filename":"src/bytes_mut.rs","begin":[1129,4],"end":[1136,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:10057:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1204:2091":{"id":"0:1204:2091","crate_id":0,"name":"put_u16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:598":{"id":"0:598","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[651,0],"end":[655,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}},"items":["0:599:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:10121:2869":{"id":"1:10121:2869","crate_id":1,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10122:640"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:566:206":{"id":"0:566:206","crate_id":0,"name":"Target","span":{"filename":"src/bytes.rs","begin":[563,4],"end":[563,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}},"generics":{"params":[],"where_predicates":[]}}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[510,0],"end":[510,29]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13242:17945":{"id":"1:13242:17945","crate_id":1,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"1:12826:3278","prim@char":"5:15735:2894"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"1:12618:3873","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:7686:4236":{"id":"5:7686:4236","crate_id":5,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:7687:60644"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:62:1872":{"id":"0:62:1872","crate_id":0,"name":"get_i64","span":{"filename":"src/buf/buf_impl.rs","begin":[533,4],"end":[535,5]},"visibility":"default","docs":"Gets a signed 64 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_i64());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:4:776-0:526:1588":{"id":"b:4:776-0:526:1588","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2801:101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"4:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["4:778:3266","4:779:54561","4:780:54562"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5705:4879":{"id":"5:5705:4879","crate_id":5,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5706:6551"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:892:746":{"id":"0:892:746","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes_mut.rs","begin":[1154,4],"end":[1156,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"1:8279:147","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:167:2144":{"id":"0:167:2144","crate_id":0,"name":"put_uint","span":{"filename":"src/buf/buf_mut.rs","begin":[711,4],"end":[713,5]},"visibility":"default","docs":"Writes an unsigned n-byte integer to `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_uint(0x010203, 3);\nassert_eq!(buf, b\"\\x01\\x02\\x03\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u64"}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:333:2274":{"id":"0:333:2274","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/take.rs","begin":[77,4],"end":[79,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\".take(2);\nlet mut dst = vec![];\n\nbuf.get_mut().advance(2);\n\ndst.put(&mut buf);\nassert_eq!(*dst, b\"ll\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3425:126":{"id":"1:3425:126","crate_id":1,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3427:360"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3428:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:22788:32280":{"id":"1:22788:32280","crate_id":1,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:22789:7923","1:22790:55075","1:22791:55076"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22781:4336","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1177:1728":{"id":"0:1177:1728","crate_id":0,"name":"copy_to_slice","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3108-0:1261:1709":{"id":"b:1:3108-0:1261:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3111:2477"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:2565:123":{"id":"5:2565:123","crate_id":5,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:2566:7992","5:2568:2954","5:2569:60484","5:2570:60485"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10108:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"1:10115:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3085:131":{"id":"1:3085:131","crate_id":1,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3087:661"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:631:585":{"id":"0:631:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[748,4],"end":[750,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:237:1931":{"id":"0:237:1931","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/chain.rs","begin":[174,4],"end":[190,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3123-0:1261:1709":{"id":"b:1:3123-0:1261:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3126:123","1:3127:1384"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1265":{"id":"0:1265","crate_id":0,"name":null,"span":{"filename":"src/buf/take.rs","begin":[9,9],"end":[9,14]},"visibility":{"restricted":{"parent":"0:316:1702","path":"::buf::take"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"1:10108:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10108:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:1267:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:561:1761":{"id":"0:561:1761","crate_id":0,"name":"remaining","span":{"filename":"src/bytes.rs","begin":[528,4],"end":[530,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3908-0:1233:1706":{"id":"b:1:3908-0:1233:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3906:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233:1706","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["1:3910:1398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:953:976":{"id":"0:953:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1436,4],"end":[1438,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:171:2159":{"id":"0:171:2159","crate_id":0,"name":"put_f32","span":{"filename":"src/buf/buf_mut.rs","begin":[800,4],"end":[802,5]},"visibility":"default","docs":"Writes  an IEEE754 single-precision (4 bytes) floating point number to\n`self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f32(1.2f32);\nassert_eq!(buf, b\"\\x3F\\x99\\x99\\x9A\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"f32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:169:2152":{"id":"0:169:2152","crate_id":0,"name":"put_int","span":{"filename":"src/buf/buf_mut.rs","begin":[755,4],"end":[757,5]},"visibility":"default","docs":"Writes low `nbytes` of a signed integer to `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_int(0x0504010203, 3);\nassert_eq!(buf, b\"\\x01\\x02\\x03\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self` or if `nbytes` is greater than 8.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i64"}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:577:1707":{"id":"0:577:1707","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes.rs","begin":[595,4],"end":[595,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"0:258:1971":{"id":"0:258:1971","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/iter.rs","begin":[85,4],"end":[87,5]},"visibility":"public","docs":"Gets a reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.\n\n# Examples\n\n```rust\nuse bytes::{Buf, Bytes};\n\nlet buf = Bytes::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\n\nassert_eq!(2, iter.get_ref().remaining());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:4899:4856":{"id":"5:4899:4856","crate_id":5,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:4900:2563","5:4901:60386"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1188:1865":{"id":"0:1188:1865","crate_id":0,"name":"get_u64","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:644":{"id":"0:644","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[786,0],"end":[790,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:645:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1197:2004":{"id":"0:1197:2004","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:865:661":{"id":"0:865:661","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1067,4],"end":[1069,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3123-0:1255:1711":{"id":"b:1:3123-0:1255:1711","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255:1711","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:3126:123","1:3127:1384"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3910:1398":{"id":"1:3910:1398","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"1:45717:4426","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13280:56870":{"id":"1:13280:56870","crate_id":1,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3112-0:526:1588":{"id":"b:1:3112-0:526:1588","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3114:661"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:2784:2397":{"id":"1:2784:2397","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8286:1707":{"id":"1:8286:1707","crate_id":1,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"generic","inner":"I"},"generics":{"params":[],"where_predicates":[]}}},"0:648":{"id":"0:648","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[798,0],"end":[803,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7753:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:8079:3091","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:649:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:57:1854":{"id":"0:57:1854","crate_id":0,"name":"get_u32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[433,4],"end":[435,5]},"visibility":"default","docs":"Gets an unsigned 32 bit integer from `self` in the little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_u32_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13257:56863":{"id":"1:13257:56863","crate_id":1,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"1:12826:3278","prim@char":"5:15735:2894","str::splitn":"5:15741:2899"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"1:49261:3855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12851:4390","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:381:2199":{"id":"0:381:2199","crate_id":0,"name":"copy_from_slice","span":{"filename":"src/buf/uninit_slice.rs","begin":[96,4],"end":[104,5]},"visibility":"public","docs":"Copies bytes  from `src` into `self`.\n\nThe length of `src` must be the same as `self`.\n\n# Panics\n\nThe function panics if `src` has a different length than `self`.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\n\nlet mut data = [b'f', b'o', b'o'];\nlet slice = unsafe { UninitSlice::from_raw_parts_mut(data.as_mut_ptr(), 3) };\n\nslice.copy_from_slice(b\"bar\");\n\nassert_eq!(b\"bar\", &data[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3189:103":{"id":"1:3189:103","crate_id":1,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2801:101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:0:1585":{"id":"0:0:1585","crate_id":0,"name":"bytes","span":{"filename":"src/lib.rs","begin":[1,0],"end":[116,1]},"visibility":"public","docs":"Provides abstractions for working with bytes.\n\nThe `bytes` crate provides an efficient byte buffer structure\n([`Bytes`](struct.Bytes.html)) and traits for working with buffer\nimplementations ([`Buf`], [`BufMut`]).\n\n[`Buf`]: trait.Buf.html\n[`BufMut`]: trait.BufMut.html\n\n# `Bytes`\n\n`Bytes` is an efficient container for storing and operating on contiguous\nslices of memory. It is intended for use primarily in networking code, but\ncould have applications elsewhere as well.\n\n`Bytes` values facilitate zero-copy network programming by allowing multiple\n`Bytes` objects to point to the same underlying memory. This is managed by\nusing a reference count to track when the memory is no longer needed and can\nbe freed.\n\nA `Bytes` handle can be created directly from an existing byte store (such as `&[u8]`\nor `Vec<u8>`), but usually a `BytesMut` is used first and written to. For\nexample:\n\n```rust\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(1024);\nbuf.put(&b\"hello world\"[..]);\nbuf.put_u16(1234);\n\nlet a = buf.split();\nassert_eq!(a, b\"hello world\\x04\\xD2\"[..]);\n\nbuf.put(&b\"goodbye world\"[..]);\n\nlet b = buf.split();\nassert_eq!(b, b\"goodbye world\"[..]);\n\nassert_eq!(buf.capacity(), 998);\n```\n\nIn the above example, only a single buffer of 1024 is allocated. The handles\n`a` and `b` will share the underlying buffer and maintain indices tracking\nthe view into the buffer represented by the handle.\n\nSee the [struct docs] for more details.\n\n[struct docs]: struct.Bytes.html\n\n# `Buf`, `BufMut`\n\nThese two traits provide read and write access to buffers. The underlying\nstorage may or may not be in contiguous memory. For example, `Bytes` is a\nbuffer that guarantees contiguous memory, but a [rope] stores the bytes in\ndisjoint chunks. `Buf` and `BufMut` maintain cursors tracking the current\nposition in the underlying byte storage. When bytes are read or written, the\ncursor is advanced.\n\n[rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)\n\n## Relation with `Read` and `Write`\n\nAt first glance, it may seem that `Buf` and `BufMut` overlap in\nfunctionality with `std::io::Read` and `std::io::Write`. However, they\nserve different purposes. A buffer is the value that is provided as an\nargument to `Read::read` and `Write::write`. `Read` and `Write` may then\nperform a syscall, which has the potential of failing. Operations on `Buf`\nand `BufMut` are infallible.","links":{},"attrs":["#![warn(missing_docs, missing_debug_implementations, rust_2018_idioms)]","#![doc(test(no_crate_inject,\nattr(deny(warnings, rust_2018_idioms), allow(dead_code, unused_variables))))]","#![no_std]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:6:1582","0:42:1583","0:140:1584","0:526:1588","0:786:1589"]}},"0:143:2027":{"id":"0:143:2027","crate_id":0,"name":"has_remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[120,4],"end":[122,5]},"visibility":"default","docs":"Returns true if there is space in `self` for more bytes.\n\nThis is equivalent to `self.remaining_mut() != 0`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 5];\nlet mut buf = &mut dst[..];\n\nassert!(buf.has_remaining_mut());\n\nbuf.put(&b\"hello\"[..]);\n\nassert!(!buf.has_remaining_mut());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:581:2248":{"id":"0:581:2248","crate_id":0,"name":"Item","span":{"filename":"src/bytes.rs","begin":[603,4],"end":[603,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"generics":{"params":[],"where_predicates":[]}}},"1:3337:3180":{"id":"1:3337:3180","crate_id":1,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3339:338"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:10322:138":{"id":"1:10322:138","crate_id":1,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10323:695","1:10325:3996"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1216:2049":{"id":"0:1216:2049","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:604":{"id":"0:604","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[669,0],"end":[673,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:605:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:810:1793":{"id":"0:810:1793","crate_id":0,"name":"is_empty","span":{"filename":"src/bytes_mut.rs","begin":[195,4],"end":[197,5]},"visibility":"public","docs":"Returns true if the `BytesMut` has a length of 0.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet b = BytesMut::with_capacity(64);\nassert!(b.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2782-0:1261:1709":{"id":"b:1:2782-0:1261:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2776:94","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2784:2397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:3123-0:526:1588":{"id":"b:1:3123-0:526:1588","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3126:123","1:3127:1384"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6367:4844":{"id":"5:6367:4844","crate_id":5,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6368:2586","5:6369:9241","5:6370:59797","5:6371:59798","5:6372:59799","5:6373:2566"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"5:10442:4336","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:889":{"id":"0:889","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1150,0],"end":[1157,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:8279:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:890:2248","0:891:1707","0:892:746"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:70:1903":{"id":"0:70:1903","crate_id":0,"name":"get_int","span":{"filename":"src/buf/buf_impl.rs","begin":[693,4],"end":[695,5]},"visibility":"default","docs":"Gets a signed n-byte integer from `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03 hello\"[..];\nassert_eq!(0x010203, buf.get_int(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:647:661":{"id":"0:647:661","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[793,4],"end":[795,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["slice",{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:590:976":{"id":"0:590:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[626,4],"end":[628,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:895:2248":{"id":"0:895:2248","crate_id":0,"name":"Item","span":{"filename":"src/bytes_mut.rs","begin":[1160,4],"end":[1160,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"generics":{"params":[],"where_predicates":[]}}},"0:398:1761":{"id":"0:398:1761","crate_id":0,"name":"remaining","span":{"filename":"src/buf/vec_deque.rs","begin":[6,4],"end":[8,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2779:2625":{"id":"1:2779:2625","crate_id":1,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2781:2832"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2776:94","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:338:1761":{"id":"0:338:1761","crate_id":0,"name":"remaining","span":{"filename":"src/buf/take.rs","begin":[133,4],"end":[135,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:951:585":{"id":"0:951:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1430,4],"end":[1432,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:48:1794":{"id":"0:48:1794","crate_id":0,"name":"has_remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[225,4],"end":[227,5]},"visibility":"default","docs":"Returns true if there are any more bytes to consume\n\nThis is equivalent to `self.remaining() != 0`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"a\"[..];\n\nassert!(buf.has_remaining());\n\nbuf.get_u8();\n\nassert!(!buf.has_remaining());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2785-0:1298:1712":{"id":"b:1:2785-0:1298:1712","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2779:2625","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298:1712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:2787:2832"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2782-0:526:1588":{"id":"b:1:2782-0:526:1588","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2776:94","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2784:2397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:574:2397":{"id":"0:574:2397","crate_id":0,"name":"borrow","span":{"filename":"src/bytes.rs","begin":[588,4],"end":[590,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:625:976":{"id":"0:625:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[730,4],"end":[732,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:309":{"id":"0:309","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[65,0],"end":[72,1]},"visibility":{"restricted":{"parent":"0:291:1701","path":"::buf::reader"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","read_buf","is_read_vectored","read_to_string","bytes","read_buf_exact","read_to_end","read_exact","read_vectored","take","chain"],"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"5:4539:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255:1711","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:311:2305"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13228:56858":{"id":"1:13228:56858","crate_id":1,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"1:12826:3278","prim@char":"5:15735:2894"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12851:4390","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:562:1724":{"id":"0:562:1724","crate_id":0,"name":"chunk","span":{"filename":"src/bytes.rs","begin":[533,4],"end":[535,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:286":{"id":"0:286","crate_id":0,"name":null,"span":{"filename":"src/buf/limit.rs","begin":[59,0],"end":[75,1]},"visibility":{"restricted":{"parent":"0:267:1700","path":"::buf::limit"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140:1584","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["put_i32_le","put_i32","put_u32_le","put_f64","put_f64_le","has_remaining_mut","put_u16_le","put_int","put_i8","put_int_le","put_i128_le","put_i128","put_u128_le","put_slice","put_u64","put_i16_le","put_i16","put_f32","writer","put_u16","put_uint","put_bytes","put","put_i64","put_u64_le","put_i64_le","put_u32","put_f32_le","put_uint_le","limit","put_u8","put_u128","chain_mut"],"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140:1584","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:288:2004","0:289:2049","0:290:2022"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1260:640":{"id":"0:1260:640","crate_id":0,"name":"fmt","span":{"filename":"src/buf/reader.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:10068:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:10057:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6767:4847":{"id":"5:6767:4847","crate_id":5,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6768:59347"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:814:2726":{"id":"0:814:2726","crate_id":0,"name":"split","span":{"filename":"src/bytes_mut.rs","begin":[329,4],"end":[332,5]},"visibility":"public","docs":"Removes the bytes from the current view, returning them in a new\n`BytesMut` handle.\n\nAfterwards, `self` will be empty, but will retain any additional\ncapacity that it had before the operation. This is identical to\n`self.split_to(self.len())`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(1024);\nbuf.put(&b\"hello world\"[..]);\n\nlet other = buf.split();\n\nassert!(buf.is_empty());\nassert_eq!(1013, buf.capacity());\n\nassert_eq!(other, b\"hello world\"[..]);\n```","links":{},"attrs":["#[must_use =\n\"consider BytesMut::advance(len()) if you don't need the other half\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6065":{"id":"4:6065","crate_id":4,"name":null,"span":null,"visibility":{"restricted":{"parent":"4:5885:1311","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["4:6066:57539","4:6067:2197","4:6070:57540","4:6073:57541","4:6085:57542","4:6086:57543","4:6087:3055","4:6088:57544","4:6089:57545"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3092:212":{"id":"1:3092:212","crate_id":1,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3094:123","1:3095:1384"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1207:2102":{"id":"0:1207:2102","crate_id":0,"name":"put_u32","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:22833:4334":{"id":"1:22833:4334","crate_id":1,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"1:23482:4329","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22824:4336","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13216:1585":{"id":"1:13216:1585","crate_id":1,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"1:49125:1588","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:83:1701":{"id":"0:83:1701","crate_id":0,"name":"reader","span":{"filename":"src/buf/buf_impl.rs","begin":[900,4],"end":[905,5]},"visibility":"default","docs":"Creates an adaptor which implements the `Read` trait for `self`.\n\nThis function returns a new value which implements `Read` by adapting\nthe `Read` trait functions to the `Buf` trait functions. Given that\n`Buf` operations are infallible, none of the `Read` functions will\nreturn with `Err`.\n\n# Examples\n\n```\nuse bytes::{Bytes, Buf};\nuse std::io::Read;\n\nlet buf = Bytes::from(\"hello world\");\n\nlet mut reader = buf.reader();\nlet mut dst = [0; 1024];\n\nlet num = reader.read(&mut dst).unwrap();\n\nassert_eq!(11, num);\nassert_eq!(&dst[..11], &b\"hello world\"[..]);\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255:1711","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:535:898":{"id":"0:535:898","crate_id":0,"name":"new","span":{"filename":"src/bytes.rs","begin":[124,4],"end":[129,5]},"visibility":"public","docs":"Creates a new empty `Bytes`.\n\nThis will not allocate and the returned `Bytes` handle will be empty.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::new();\nassert_eq!(&b[..], b\"\");\n```","links":{},"attrs":["#[inline]","#[cfg(not(all(loom, test)))]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:843":{"id":"0:843","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[971,0],"end":[1028,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["put_i32_le","put_i32","put_u32_le","put_f64","put_f64_le","has_remaining_mut","put_u16_le","put_int","put_i8","put_int_le","put_i128_le","put_i128","put_u128_le","put_slice","put_u64","put_i16_le","put_i16","put_f32","writer","put_u16","put_uint","put_bytes","put","put_i64","put_u64_le","put_i64_le","put_u32","put_f32_le","put_uint_le","limit","put_u8","put_u128","chain_mut"],"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140:1584","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:844:2004","0:845:2022","0:846:2049","0:847:1934","0:849:2064","0:850:2074"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1254:640":{"id":"0:1254:640","crate_id":0,"name":"fmt","span":{"filename":"src/buf/limit.rs","begin":[8,9],"end":[8,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:10068:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:10057:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:399:1724":{"id":"0:399:1724","crate_id":0,"name":"chunk","span":{"filename":"src/buf/vec_deque.rs","begin":[10,4],"end":[17,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:97:1727":{"id":"0:97:1727","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1062,4],"end":[1069,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:806":{"id":"0:806","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[117,0],"end":[923,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:807:1933","0:808:898","0:809:771","0:810:1793","0:811:2201","0:812:658","0:813:2528","0:814:2726","0:815:2537","0:816:2549","0:817:2555","0:818:2209","0:819:2203","0:820:2204","0:822:2207","0:823:2817"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:846:2049":{"id":"0:846:2049","crate_id":0,"name":"chunk_mut","span":{"filename":"src/bytes_mut.rs","begin":[990,4],"end":[995,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3431:128":{"id":"1:3431:128","crate_id":1,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3433:167","1:3434:362"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13307:4514":{"id":"1:13307:4514","crate_id":1,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"1:12765:3277","`FromStr`":"1:12765:3277"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47308:191","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"1:12765:3277","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"1:12765:3277","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6066:57539":{"id":"4:6066:57539","crate_id":4,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"4:421:1717","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:8079:3091","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"4:421:1717","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:8079:3091","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:937:976":{"id":"0:937:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1388,4],"end":[1390,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3220:3079-0:786:1589":{"id":"a:1:3220:3079-0:786:1589","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3220:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:145:1934":{"id":"0:145:1934","crate_id":0,"name":"put","span":{"filename":"src/buf/buf_mut.rs","begin":[193,4],"end":[215,5]},"visibility":"default","docs":"Transfer bytes into `self` from `src` and advance the cursor by the\nnumber of bytes written.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\n\nbuf.put_u8(b'h');\nbuf.put(&b\"ello\"[..]);\nbuf.put(&b\" world\"[..]);\n\nassert_eq!(buf, b\"hello world\");\n```\n\n# Panics\n\nPanics if `self` does not have enough capacity to contain `src`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"super::Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:949:976":{"id":"0:949:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1424,4],"end":[1426,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:897:746":{"id":"0:897:746","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes_mut.rs","begin":[1163,4],"end":[1165,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"1:8279:147","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13215:4415":{"id":"1:13215:4415","crate_id":1,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"5:15735:2894"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"1:49115:4563","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3191:205-0:1255:1711":{"id":"a:1:3191:205-0:1255:1711","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255:1711","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1009":{"id":"0:1009","crate_id":0,"name":null,"span":{"filename":"src/fmt/debug.rs","begin":[45,0],"end":[49,1]},"visibility":{"restricted":{"parent":"0:984:502","path":"::fmt::debug"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10108:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1010:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1162:1865":{"id":"0:1162:1865","crate_id":0,"name":"get_u64","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1284:167":{"id":"0:1284:167","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"0:1296":{"id":"0:1296","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342:1703","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IndexMut","id":"1:3487:2332","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeToInclusive","id":"1:45654:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1297:732"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13219:3841":{"id":"1:13219:3841","crate_id":1,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"1:49393:3035","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:340:1727":{"id":"0:340:1727","crate_id":0,"name":"advance","span":{"filename":"src/buf/take.rs","begin":[142,4],"end":[146,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:142:2022":{"id":"0:142:2022","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[100,4],"end":[100,49]},"visibility":"default","docs":"Advance the internal cursor of the BufMut\n\nThe next call to `chunk_mut` will return a slice starting `cnt` bytes\nfurther into the underlying buffer.\n\nThis function is unsafe because there is no guarantee that the bytes\nbeing advanced past have been initialized.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = Vec::with_capacity(16);\n\n// Write some data\nbuf.chunk_mut()[0..2].copy_from_slice(b\"he\");\nunsafe { buf.advance_mut(2) };\n\n// write more bytes\nbuf.chunk_mut()[0..3].copy_from_slice(b\"llo\");\n\nunsafe { buf.advance_mut(3); }\n\nassert_eq!(5, buf.len());\nassert_eq!(buf, b\"hello\");\n```\n\n# Panics\n\nThis function **may** panic if `cnt > self.remaining_mut()`.\n\n# Implementer notes\n\nIt is recommended for implementations of `advance_mut` to panic if\n`cnt > self.remaining_mut()`. If the implementation does not panic,\nthe call must behave as if `cnt == self.remaining_mut()`.\n\nA call with `cnt == 0` should never panic and be a no-op.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}},"a:1:3191:205-0:374:1710":{"id":"a:1:3191:205-0:374:1710","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1185:1854":{"id":"0:1185:1854","crate_id":0,"name":"get_u32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13225:56857":{"id":"1:13225:56857","crate_id":1,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"5:15735:2894","self::pattern":"1:12826:3278"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3294:3171":{"id":"1:3294:3171","crate_id":1,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3296:1082"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13220:56856":{"id":"1:13220:56856","crate_id":1,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"1:49403:4576","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:622":{"id":"0:622","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[723,0],"end":[727,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:623:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:9128:3449-0:1233:1706":{"id":"a:1:9128:3449-0:1233:1706","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9128:3449","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9128:3449","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9128:3449","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233:1706","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:7803:3204":{"id":"1:7803:3204","crate_id":1,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7804:55569","1:7805:55570","1:7806:55567","1:7807:55565","1:7808:55571","1:7809:55568","1:7810:55566"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2801:101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:45:1790":{"id":"0:45:1790","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/buf_impl.rs","begin":[163,4],"end":[174,5]},"visibility":"default","docs":"Fills `dst` with potentially multiple slices starting at `self`'s\ncurrent position.\n\nIf the `Buf` is backed by disjoint slices of bytes, `chunk_vectored` enables\nfetching more than one slice at once. `dst` is a slice of `IoSlice`\nreferences, enabling the slice to be directly used with [`writev`]\nwithout any further conversion. The sum of the lengths of all the\nbuffers in `dst` will be less than or equal to `Buf::remaining()`.\n\nThe entries in `dst` will be overwritten, but the data **contained** by\nthe slices **will not** be modified. If `chunk_vectored` does not fill every\nentry in `dst`, then `dst` is guaranteed to contain all remaining slices\nin `self.\n\nThis is a lower level function. Most operations are done with other\nfunctions.\n\n# Implementer notes\n\nThis function should never panic. Once the end of the buffer is reached,\ni.e., `Buf::remaining` returns 0, calls to `chunk_vectored` must return 0\nwithout mutating `dst`.\n\nImplementations should also take care to properly handle being called\nwith `dst` being a zero length slice.\n\n[`writev`]: http://man7.org/linux/man-pages/man2/readv.2.html","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"IoSlice","id":"5:10945:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3014:4285":{"id":"1:3014:4285","crate_id":1,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:3013:4336","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3121:123":{"id":"1:3121:123","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"0:1229:2116":{"id":"0:1229:2116","crate_id":0,"name":"put_u64","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:172:2163":{"id":"0:172:2163","crate_id":0,"name":"put_f32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[823,4],"end":[825,5]},"visibility":"default","docs":"Writes  an IEEE754 single-precision (4 bytes) floating point number to\n`self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f32_le(1.2f32);\nassert_eq!(buf, b\"\\x9A\\x99\\x99\\x3F\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"f32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:899:2805":{"id":"0:899:2805","crate_id":0,"name":"extend","span":{"filename":"src/bytes_mut.rs","begin":[1169,4],"end":[1185,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:8279:147","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3118-0:1261:1709":{"id":"b:1:3118-0:1261:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:3088:213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3121:123","1:3122:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:288:2004":{"id":"0:288:2004","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/limit.rs","begin":[60,4],"end":[62,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6088:57544":{"id":"4:6088:57544","crate_id":4,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"5:15741:2899"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13309:4724":{"id":"1:13309:4724","crate_id":1,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:400:1727":{"id":"0:400:1727","crate_id":0,"name":"advance","span":{"filename":"src/buf/vec_deque.rs","begin":[19,4],"end":[21,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:941:976":{"id":"0:941:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1400,4],"end":[1402,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7753:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1298:1712":{"id":"0:1298:1712","crate_id":0,"name":"Writer","span":{"filename":"src/buf/writer.rs","begin":[11,0],"end":[13,1]},"visibility":"public","docs":"A `BufMut` adapter which implements `io::Write` for the inner value.\n\nThis struct is generally created by calling `writer()` on `BufMut`. See\ndocumentation of [`writer()`](trait.BufMut.html#method.writer) for more\ndetails.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:414","a:1:3220:3079-0:1298:1712","a:1:3191:205-0:1298:1712","a:1:3179:196-0:1298:1712","a:1:9129:3448-0:1298:1712","a:1:9128:3449-0:1298:1712","b:1:3108-0:1298:1712","b:1:3123-0:1298:1712","b:1:3908-0:1298:1712","b:1:3118-0:1298:1712","b:1:2782-0:1298:1712","b:1:3112-0:1298:1712","b:1:2785-0:1298:1712","0:1301","0:419"]}},"0:954":{"id":"0:954","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1441,0],"end":[1448,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:957:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1071,0],"end":[1138,1]},"visibility":{"restricted":{"parent":"0:99:1698","path":"::buf::buf_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["put_i32_le","put_i32","put_u32_le","put_f64","put_f64_le","has_remaining_mut","put_u16_le","put_int","put_i8","put_int_le","put_i128_le","put_i128","put_u128_le","put_slice","put_u64","put_i16_le","put_i16","put_f32","writer","put_u16","put_uint","put_bytes","put","put_i64","put_u64_le","put_i64_le","put_u32","put_f32_le","put_uint_le","limit","put_u8","put_u128","chain_mut"],"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140:1584","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7753:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"items":["0:191:2004","0:192:2022","0:193:2049","0:194:1934","0:196:2064","0:197:2074"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:568":{"id":"0:568","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[571,0],"end":[576,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"1:3076:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:569:289"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:878:695":{"id":"0:878:695","crate_id":0,"name":"hash","span":{"filename":"src/bytes_mut.rs","begin":[1106,4],"end":[1112,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"hash::Hasher","id":"1:10332:142","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2785-0:374:1710":{"id":"b:1:2785-0:374:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2779:2625","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2787:2832"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:8288:2834":{"id":"1:8288:2834","crate_id":1,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8290:2805","1:8292:3611","1:8293:3612"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1169:1906":{"id":"0:1169:1906","crate_id":0,"name":"get_int_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:823:2817":{"id":"0:823:2817","crate_id":0,"name":"unsplit","span":{"filename":"src/bytes_mut.rs","begin":[724,4],"end":[733,5]},"visibility":"public","docs":"Absorbs a `BytesMut` that was previously split off.\n\nIf the two `BytesMut` objects were previously contiguous, i.e., if\n`other` was created by calling `split_off` on this `BytesMut`, then\nthis is an `O(1)` operation that just decreases a reference\ncount and sets a few indices. Otherwise this method degenerates to\n`self.extend_from_slice(other.as_ref())`.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::with_capacity(64);\nbuf.extend_from_slice(b\"aaabbbcccddd\");\n\nlet split = buf.split_off(6);\nassert_eq!(b\"aaabbb\", &buf[..]);\nassert_eq!(b\"cccddd\", &split[..]);\n\nbuf.unsplit(split);\nassert_eq!(b\"aaabbbcccddd\", &buf[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2787:2832":{"id":"1:2787:2832","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:339:1724":{"id":"0:339:1724","crate_id":0,"name":"chunk","span":{"filename":"src/buf/take.rs","begin":[137,4],"end":[140,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1303:640":{"id":"0:1303:640","crate_id":0,"name":"fmt","span":{"filename":"src/buf/writer.rs","begin":[10,9],"end":[10,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:10068:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:10057:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:646":{"id":"0:646","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[792,0],"end":[796,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:647:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:819:2203":{"id":"0:819:2203","crate_id":0,"name":"set_len","span":{"filename":"src/bytes_mut.rs","begin":[485,4],"end":[488,5]},"visibility":"public","docs":"Sets the length of the buffer.\n\nThis will explicitly set the size of the buffer without actually\nmodifying the data, so it is up to the caller to ensure that the data\nhas been initialized.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut b = BytesMut::from(&b\"hello world\"[..]);\n\nunsafe {\n    b.set_len(5);\n}\n\nassert_eq!(&b[..], b\"hello\");\n\nunsafe {\n    b.set_len(11);\n}\n\nassert_eq!(&b[..], b\"hello world\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:8242:3218":{"id":"1:8242:3218","crate_id":1,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8244:3657"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3188:202":{"id":"1:3188:202","crate_id":1,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3088:213":{"id":"1:3088:213","crate_id":1,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3090:123","1:3091:1385"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1190:1872":{"id":"0:1190:1872","crate_id":0,"name":"get_i64","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:807:1933":{"id":"0:807:1933","crate_id":0,"name":"with_capacity","span":{"filename":"src/bytes_mut.rs","begin":[141,4],"end":[143,5]},"visibility":"public","docs":"Creates a new `BytesMut` with the specified capacity.\n\nThe returned `BytesMut` will be able to hold at least `capacity` bytes\nwithout reallocating.\n\nIt is important to note that this function does not specify the length\nof the returned `BytesMut`, but only the capacity.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut bytes = BytesMut::with_capacity(64);\n\n// `bytes` contains no data, even though there is capacity\nassert_eq!(bytes.len(), 0);\n\nbytes.put(&b\"hello world\"[..]);\n\nassert_eq!(&bytes[..], b\"hello world\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["capacity",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13539:134":{"id":"1:13539:134","crate_id":1,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:13540:167","1:13541:992"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:281:2246":{"id":"0:281:2246","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/limit.rs","begin":[20,4],"end":[22,5]},"visibility":"public","docs":"Consumes this `Limit`, returning the underlying value.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13938:137":{"id":"1:13938:137","crate_id":1,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:13939:262","1:13940:501","1:13941:265","1:13942:1058"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1178:1826":{"id":"0:1178:1826","crate_id":0,"name":"get_u8","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:282:1971":{"id":"0:282:1971","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/limit.rs","begin":[27,4],"end":[29,5]},"visibility":"public","docs":"Gets a reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3428:127":{"id":"1:3428:127","crate_id":1,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3430:361"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"1:3431:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:652":{"id":"0:652","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[836,0],"end":[840,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:653:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13222:3916":{"id":"1:13222:3916","crate_id":1,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"5:15735:2894","self::pattern":"1:12826:3278"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:59:1860":{"id":"0:59:1860","crate_id":0,"name":"get_i32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[473,4],"end":[475,5]},"visibility":"default","docs":"Gets a signed 32 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_i32_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:9128:3449-0:374:1710":{"id":"a:1:9128:3449-0:374:1710","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9128:3449","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:226:2235":{"id":"0:226:2235","crate_id":0,"name":"last_ref","span":{"filename":"src/buf/chain.rs","begin":[90,4],"end":[92,5]},"visibility":"public","docs":"Gets a reference to the last underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet buf = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nassert_eq!(buf.last_ref()[..], b\"world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"U"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1199:2022":{"id":"0:1199:2022","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:13251:56861":{"id":"1:13251:56861","crate_id":1,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"1:12826:3278","str::split_terminator":"5:15741:2899","prim@char":"5:15735:2894","str::split":"5:15741:2899"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"1:49207:4568","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12851:4390","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1205:2095":{"id":"0:1205:2095","crate_id":0,"name":"put_i16","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3179:196-0:374:1710":{"id":"a:1:3179:196-0:374:1710","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:602":{"id":"0:602","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[663,0],"end":[667,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:603:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1213:2123":{"id":"0:1213:2123","crate_id":0,"name":"put_i64","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8287:746":{"id":"1:8287:746","crate_id":1,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:614":{"id":"0:614","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[699,0],"end":[703,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7753:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"items":["0:615:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1210:2112":{"id":"0:1210:2112","crate_id":0,"name":"put_i32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2785-0:1233:1706":{"id":"b:1:2785-0:1233:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2779:2625","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233:1706","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["1:2787:2832"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:248:1707":{"id":"0:248:1707","crate_id":0,"name":"IntoIter","span":{"filename":"src/buf/chain.rs","begin":[238,4],"end":[238,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233:1706","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"0:72:1911":{"id":"0:72:1911","crate_id":0,"name":"get_f32","span":{"filename":"src/buf/buf_impl.rs","begin":[734,4],"end":[736,5]},"visibility":"default","docs":"Gets an IEEE754 single-precision (4 bytes) floating point number from\n`self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x3F\\x99\\x99\\x9A hello\"[..];\nassert_eq!(1.2f32, buf.get_f32());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"f32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:173:2167":{"id":"0:173:2167","crate_id":0,"name":"put_f64","span":{"filename":"src/buf/buf_mut.rs","begin":[846,4],"end":[848,5]},"visibility":"default","docs":"Writes  an IEEE754 double-precision (8 bytes) floating point number to\n`self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f64(1.2f64);\nassert_eq!(buf, b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"f64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1211:2116":{"id":"0:1211:2116","crate_id":0,"name":"put_u64","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:194:1934":{"id":"0:194:1934","crate_id":0,"name":"put","span":{"filename":"src/buf/buf_mut.rs","begin":[1108,4],"end":[1127,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"super::Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1232:2126":{"id":"0:1232:2126","crate_id":0,"name":"put_i64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1218:2064":{"id":"0:1218:2064","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:812:658":{"id":"0:812:658","crate_id":0,"name":"freeze","span":{"filename":"src/bytes_mut.rs","begin":[239,4],"end":[259,5]},"visibility":"public","docs":"Converts `self` into an immutable `Bytes`.\n\nThe conversion is zero cost and is used to indicate that the slice\nreferenced by the handle will no longer be mutated. Once the conversion\nis done, the handle can be cloned and shared across threads.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\nuse std::thread;\n\nlet mut b = BytesMut::with_capacity(64);\nb.put(&b\"hello world\"[..]);\nlet b1 = b.freeze();\nlet b2 = b1.clone();\n\nlet th = thread::spawn(move || {\n    assert_eq!(&b1[..], b\"hello world\");\n});\n\nassert_eq!(&b2[..], b\"hello world\");\nth.join().unwrap();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:786:1589":{"id":"0:786:1589","crate_id":0,"name":"BytesMut","span":{"filename":"src/bytes_mut.rs","begin":[60,0],"end":[65,1]},"visibility":"public","docs":"A unique reference to a contiguous slice of memory.\n\n`BytesMut` represents a unique view into a potentially shared memory region.\nGiven the uniqueness guarantee, owners of `BytesMut` handles are able to\nmutate the memory.\n\n`BytesMut` can be thought of as containing a `buf: Arc<Vec<u8>>`, an offset\ninto `buf`, a slice length, and a guarantee that no other `BytesMut` for the\nsame `buf` overlaps with its slice. That guarantee means that a write lock\nis not required.\n\n# Growth\n\n`BytesMut`'s `BufMut` implementation will implicitly grow its buffer as\nnecessary. However, explicitly reserving the required space up-front before\na series of inserts will be more efficient.\n\n# Examples\n\n```\nuse bytes::{BytesMut, BufMut};\n\nlet mut buf = BytesMut::with_capacity(64);\n\nbuf.put_u8(b'h');\nbuf.put_u8(b'e');\nbuf.put(&b\"llo\"[..]);\n\nassert_eq!(&buf[..], b\"hello\");\n\n// Freeze the buffer so that it can be shared\nlet a = buf.freeze();\n\n// This does not allocate, instead `b` points to the same memory.\nlet b = a.clone();\n\nassert_eq!(&a[..], b\"hello\");\nassert_eq!(&b[..], b\"hello\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:806","a:1:3220:3079-0:786:1589","a:1:9129:3448-0:786:1589","a:1:9128:3449-0:786:1589","b:1:3108-0:786:1589","b:1:3123-0:786:1589","b:1:3908-0:786:1589","b:1:3118-0:786:1589","b:1:2782-0:786:1589","b:1:3112-0:786:1589","b:1:2785-0:786:1589","b:4:776-0:786:1589","0:836","0:838","0:843","0:851","0:853","0:856","0:858","0:860","0:863","0:866","0:868","0:870","0:872","0:874","0:875","0:877","0:880","0:882","0:884","0:887","0:889","0:893","0:898","0:901","0:906","0:909","0:920","0:921","0:922","0:924","0:926","0:928","0:930","0:932","0:934","0:936","0:938","0:940","0:942","0:944","0:946","0:948","0:950","0:952","0:954","0:958","0:962","0:964","0:966","0:968","0:970","0:972","0:1009","0:1306","0:1310"]}},"0:876:59":{"id":"0:876:59","crate_id":0,"name":"default","span":{"filename":"src/bytes_mut.rs","begin":[1100,4],"end":[1102,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10119:3318":{"id":"1:10119:3318","crate_id":1,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10120:640"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:42:1583":{"id":"0:42:1583","crate_id":0,"name":"Buf","span":{"filename":"src/buf/buf_impl.rs","begin":[76,0],"end":[906,1]},"visibility":"public","docs":"Read bytes from a buffer.\n\nA buffer stores bytes in memory such that read operations are infallible.\nThe underlying storage may or may not be in contiguous memory. A `Buf` value\nis a cursor into the buffer. Reading from `Buf` advances the cursor\nposition. It can be thought of as an efficient `Iterator` for collections of\nbytes.\n\nThe simplest `Buf` is a `&[u8]`.\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(b'h', buf.get_u8());\nassert_eq!(b'e', buf.get_u8());\nassert_eq!(b'l', buf.get_u8());\n\nlet mut rest = [0; 8];\nbuf.copy_to_slice(&mut rest);\n\nassert_eq!(&rest[..], &b\"lo world\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:43:1761","0:44:1724","0:45:1790","0:47:1727","0:48:1794","0:49:1728","0:50:1826","0:51:1829","0:52:1835","0:53:1839","0:54:1842","0:55:1845","0:56:1850","0:57:1854","0:58:1857","0:59:1860","0:60:1865","0:61:1869","0:62:1872","0:63:1875","0:64:1880","0:65:1884","0:66:1887","0:67:1890","0:68:1895","0:69:1900","0:70:1903","0:71:1906","0:72:1911","0:73:1916","0:74:1920","0:75:1923","0:76:1931","0:80:1702","0:81:1699","0:83:1701"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:85","0:87","0:89","0:93","0:229","0:336","0:397","0:560","0:838"]}},"b:1:8283-0:1242:1707":{"id":"b:1:8283-0:1242:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8474:153","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:8279:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:8285:2248","1:8286:1707","1:8287:746"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:1290:731":{"id":"0:1290:731","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"RangeTo","id":"1:45608:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:578:746":{"id":"0:578:746","crate_id":0,"name":"into_iter","span":{"filename":"src/bytes.rs","begin":[597,4],"end":[599,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"1:8279:147","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:539:1793":{"id":"0:539:1793","crate_id":0,"name":"is_empty","span":{"filename":"src/bytes.rs","begin":[197,4],"end":[199,5]},"visibility":"public","docs":"Returns true if the `Bytes` has a length of 0.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::new();\nassert!(b.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13212:56855":{"id":"1:13212:56855","crate_id":1,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"5:15741:2899"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:69:1900":{"id":"0:69:1900","crate_id":0,"name":"get_uint_le","span":{"filename":"src/buf/buf_impl.rs","begin":[673,4],"end":[675,5]},"visibility":"default","docs":"Gets an unsigned n-byte integer from `self` in little-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x010203, buf.get_uint_le(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1202:2082":{"id":"0:1202:2082","crate_id":0,"name":"put_i8","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:909":{"id":"0:909","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1203,0],"end":[1207,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromIterator","id":"1:8275:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:911:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:3108-0:1233:1706":{"id":"b:1:3108-0:1233:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233:1706","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["1:3111:2477"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:13218:18294":{"id":"1:13218:18294","crate_id":1,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"5:15741:2899"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"1:49422:4578","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:66:1887":{"id":"0:66:1887","crate_id":0,"name":"get_i128","span":{"filename":"src/buf/buf_impl.rs","begin":[613,4],"end":[615,5]},"visibility":"default","docs":"Gets a signed 128 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_i128());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3908-0:374:1710":{"id":"b:1:3908-0:374:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3906:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3910:1398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1287:732":{"id":"0:1287:732","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"RangeInclusive","id":"1:45631:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3123-0:786:1589":{"id":"b:1:3123-0:786:1589","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3126:123","1:3127:1384"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/buf/iter.rs","begin":[112,0],"end":[130,1]},"visibility":{"restricted":{"parent":"0:250:757","path":"::buf::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["try_find","try_for_each","try_collect","scan","filter_map","nth","partial_cmp","__iterator_get_unchecked","cmp_by","unzip","rposition","fold","ne","collect_into","flat_map","take","enumerate","step_by","size_hint","zip","cmp","partial_cmp_by","copied","le","max_by_key","reduce","map","partition","flatten","peekable","intersperse","count","min","eq_by","cloned","max_by","try_reduce","partition_in_place","fuse","skip_while","intersperse_with","any","is_sorted","cycle","min_by_key","find","is_partitioned","gt","inspect","take_while","for_each","chain","last","collect","is_sorted_by","sum","all","min_by","skip","find_map","try_fold","by_ref","max","map_while","filter","position","advance_by","lt","ge","is_sorted_by_key","product","eq","rev"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8474:153","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:262:2248","0:263:900","0:264:2275"],"negative":false,"synthetic":false,"blanket_impl":null}},"4:778:3266":{"id":"4:778:3266","crate_id":4,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"generic","inner":"T"},"generics":{"params":[],"where_predicates":[]}}},"0:565":{"id":"0:565","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[562,0],"end":[569,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"1:3398:112","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:566:206","0:567:524"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:3179:196-0:1233:1706":{"id":"a:1:3179:196-0:1233:1706","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233:1706","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3718:3082":{"id":"1:3718:3082","crate_id":1,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:540:2199":{"id":"0:540:2199","crate_id":0,"name":"copy_from_slice","span":{"filename":"src/bytes.rs","begin":[202,4],"end":[204,5]},"visibility":"public","docs":"Creates `Bytes` instance from slice, by copying it.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["data",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1297:732":{"id":"0:1297:732","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"RangeToInclusive","id":"1:45654:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:813:2528":{"id":"0:813:2528","crate_id":0,"name":"split_off","span":{"filename":"src/bytes_mut.rs","begin":[288,4],"end":[301,5]},"visibility":"public","docs":"Splits the bytes into two at the given index.\n\nAfterwards `self` contains elements `[0, at)`, and the returned\n`BytesMut` contains elements `[at, capacity)`.\n\nThis is an `O(1)` operation that just increases the reference count\nand sets a few indices.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut a = BytesMut::from(&b\"hello world\"[..]);\nlet mut b = a.split_off(5);\n\na[0] = b'j';\nb[0] = b'!';\n\nassert_eq!(&a[..], b\"jello\");\nassert_eq!(&b[..], b\"!world\");\n```\n\n# Panics\n\nPanics if `at > capacity`.","links":{},"attrs":["#[must_use = \"consider BytesMut::truncate if you don't need the other half\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8238:3219":{"id":"1:8238:3219","crate_id":1,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8240:3656"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:73:1916":{"id":"0:73:1916","crate_id":0,"name":"get_f32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[755,4],"end":[757,5]},"visibility":"default","docs":"Gets an IEEE754 single-precision (4 bytes) floating point number from\n`self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x9A\\x99\\x99\\x3F hello\"[..];\nassert_eq!(1.2f32, buf.get_f32_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"f32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:869:585":{"id":"0:869:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1079,4],"end":[1081,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1176:1794":{"id":"0:1176:1794","crate_id":0,"name":"has_remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3118-0:1233:1706":{"id":"b:1:3118-0:1233:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:3088:213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233:1706","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["1:3121:123","1:3122:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:13554:146":{"id":"1:13554:146","crate_id":1,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:13555:167","1:13556:146","1:13557:745"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13289:56875":{"id":"1:13289:56875","crate_id":1,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"1:12826:3278","prim@char":"5:15735:2894"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:579":{"id":"0:579","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[602,0],"end":[609,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:8279:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"items":["0:581:2248","0:582:1707","0:583:746"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:938":{"id":"0:938","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1393,0],"end":[1397,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7753:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:8079:3091","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:939:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:546:2510":{"id":"0:546:2510","crate_id":0,"name":"slice_ref","span":{"filename":"src/bytes.rs","begin":[295,4],"end":[326,5]},"visibility":"public","docs":"Returns a slice of self that is equivalent to the given `subset`.\n\nWhen processing a `Bytes` buffer with other tools, one often gets a\n`&[u8]` which is in fact a slice of the `Bytes`, i.e. a subset of it.\nThis function turns that `&[u8]` into another `Bytes`, as if one had\ncalled `self.slice()` with the offsets that correspond to `subset`.\n\nThis operation is `O(1)`.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet bytes = Bytes::from(&b\"012345678\"[..]);\nlet as_slice = bytes.as_ref();\nlet subset = &as_slice[2..6];\nlet subslice = bytes.slice_ref(&subset);\nassert_eq!(&subslice[..], b\"2345\");\n```\n\n# Panics\n\nRequires that the given `sub` slice is in fact contained within the\n`Bytes` buffer; otherwise this function will panic.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["subset",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:872":{"id":"0:872","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1090,0],"end":[1094,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"1:2867:163","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:873:398"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:175:1700":{"id":"0:175:1700","crate_id":0,"name":"limit","span":{"filename":"src/buf/buf_mut.rs","begin":[886,4],"end":[891,5]},"visibility":"default","docs":"Creates an adaptor which can write at most `limit` bytes to `self`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet arr = &mut [0u8; 128][..];\nassert_eq!(arr.remaining_mut(), 128);\n\nlet dst = arr.limit(10);\nassert_eq!(dst.remaining_mut(), 10);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:570":{"id":"0:570","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[578,0],"end":[585,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"1:10322:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:571:695"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:8474:153":{"id":"1:8474:153","crate_id":1,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8475:2248","1:8476:900","1:8477:2275","1:8478:478","1:8480:3613","1:8483:3614","1:8484:3615","1:8485:3616","1:8486:1699","1:8488:3220","1:8490:3617","1:8491:3618","1:8493:819","1:8496:3619","1:8503:3620","1:8505:3621","1:8508:3622","1:8509:3623","1:8510:3624","1:8512:3625","1:8514:3626","1:8517:1279","1:8518:1702","1:8519:3627","1:8523:3628","1:8526:3629","1:8527:3630","1:8528:3631","1:8530:3632","1:8531:3095","1:8533:3633","1:8536:3634","1:8538:3635","1:8548:3636","1:8563:3637","1:8565:3638","1:8569:3639","1:8578:3640","1:8581:3641","1:8583:3642","1:8586:261","1:8593:278","1:8600:3643","1:8607:3644","1:8616:3645","1:8626:993","1:8633:3646","1:8640:2797","1:8641:1819","1:8642:3647","1:8654:3648","1:8661:3649","1:8673:3650","1:8680:3651","1:8681:3652","1:8686:3653","1:8689:3654","1:8692:3655","1:8693:3656","1:8695:3657","1:8697:398","1:8700:3658","1:8703:976","1:8706:3659","1:8709:585","1:8712:3660","1:8715:885","1:8717:804","1:8719:770","1:8721:693","1:8723:676","1:8725:3661","1:8726:3662","1:8734:3663"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13200:288":{"id":"1:13200:288","crate_id":1,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"5:15752:2908","str::as_mut_ptr":"5:15741:2899"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:279":{"id":"0:279","crate_id":0,"name":null,"span":{"filename":"src/buf/limit.rs","begin":[18,0],"end":[57,1]},"visibility":{"restricted":{"parent":"0:267:1700","path":"::buf::limit"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:281:2246","0:282:1971","0:283:2274","0:284:1700","0:285:2290"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13210:4915":{"id":"1:13210:4915","crate_id":1,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"1:3483:2331","str::slice_mut_unchecked":"5:15741:2899","`str`":"5:15741:2899"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:417:2274":{"id":"0:417:2274","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/writer.rs","begin":[52,4],"end":[54,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.\n\n# Examples\n\n```rust\nuse bytes::BufMut;\n\nlet mut buf = vec![].writer();\n\nbuf.get_mut().reserve(1024);\n\nassert_eq!(1024, buf.get_ref().capacity());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1212:2120":{"id":"0:1212:2120","crate_id":0,"name":"put_u64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:334:1700":{"id":"0:334:1700","crate_id":0,"name":"limit","span":{"filename":"src/buf/take.rs","begin":[99,4],"end":[101,5]},"visibility":"public","docs":"Returns the maximum number of bytes that can be read.\n\n# Note\n\nIf the inner `Buf` has fewer bytes than indicated by this method then\nthat is the actual number of available bytes.\n\n# Examples\n\n```rust\nuse bytes::Buf;\n\nlet mut buf = b\"hello world\".take(2);\n\nassert_eq!(2, buf.limit());\nassert_eq!(b'h', buf.get_u8());\nassert_eq!(1, buf.limit());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13192:56850":{"id":"1:13192:56850","crate_id":1,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:653:661":{"id":"0:653:661","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[837,4],"end":[839,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:162:2126":{"id":"0:162:2126","crate_id":0,"name":"put_i64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[601,4],"end":[603,5]},"visibility":"default","docs":"Writes a signed 64 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i64_le(0x0102030405060708);\nassert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1228:2112":{"id":"0:1228:2112","crate_id":0,"name":"put_i32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:556":{"id":"0:556","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[512,0],"end":[517,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Drop","id":"1:3422:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:557:559"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:63:1875":{"id":"0:63:1875","crate_id":0,"name":"get_i64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[553,4],"end":[555,5]},"visibility":"default","docs":"Gets a signed 64 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_i64_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:863":{"id":"0:863","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1066,0],"end":[1070,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:865:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:4596:2394":{"id":"5:4596:2394","crate_id":5,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:4597:2361","5:4598:3912","5:4600:3913","5:4601:2395","5:4602:3914","5:4603:3915","5:4604:2833","5:4613:3632"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:56:1850":{"id":"0:56:1850","crate_id":0,"name":"get_u32","span":{"filename":"src/buf/buf_impl.rs","begin":[413,4],"end":[415,5]},"visibility":"default","docs":"Gets an unsigned 32 bit integer from `self` in the big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_u32());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2867:163":{"id":"1:2867:163","crate_id":1,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2868:398","1:2869:2797","1:2870:1819","1:2871:3604"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2836:120","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3274:3165":{"id":"1:3274:3165","crate_id":1,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3275:167","1:3276:891"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:4621:2306":{"id":"5:4621:2306","crate_id":5,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:4622:2307","5:4623:2308","5:4624:3839","5:4626:3032","5:4627:3840","5:4629:2726","5:4630:3841"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"5:4539:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:416:1971":{"id":"0:416:1971","crate_id":0,"name":"get_ref","span":{"filename":"src/buf/writer.rs","begin":[33,4],"end":[35,5]},"visibility":"public","docs":"Gets a reference to the underlying `BufMut`.\n\nIt is inadvisable to directly write to the underlying `BufMut`.\n\n# Examples\n\n```rust\nuse bytes::BufMut;\n\nlet buf = Vec::with_capacity(1024).writer();\n\nassert_eq!(1024, buf.get_ref().capacity());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:140:1584":{"id":"0:140:1584","crate_id":0,"name":"BufMut","span":{"filename":"src/buf/buf_mut.rs","begin":[29,0],"end":[949,1]},"visibility":"public","docs":"A trait for values that provide sequential write access to bytes.\n\nWrite bytes to a buffer\n\nA buffer stores bytes in memory such that write operations are infallible.\nThe underlying storage may or may not be in contiguous memory. A `BufMut`\nvalue is a cursor into the buffer. Writing to `BufMut` advances the cursor\nposition.\n\nThe simplest `BufMut` is a `Vec<u8>`.\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\n\nbuf.put(&b\"hello world\"[..]);\n\nassert_eq!(buf, b\"hello world\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["0:141:2004","0:142:2022","0:143:2027","0:144:2049","0:145:1934","0:147:2064","0:148:2074","0:149:2075","0:150:2082","0:151:2086","0:152:2091","0:153:2095","0:154:2098","0:155:2102","0:156:2106","0:157:2109","0:158:2112","0:159:2116","0:160:2120","0:161:2123","0:162:2126","0:163:2130","0:164:2134","0:165:2137","0:166:2140","0:167:2144","0:168:2148","0:169:2152","0:170:2155","0:171:2159","0:172:2163","0:173:2167","0:174:2170","0:175:1700","0:176:1705","0:177:2194"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:180","0:182","0:184","0:190","0:238","0:286","0:843"]}},"0:650":{"id":"0:650","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[805,0],"end":[834,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Box","id":"4:421:1717","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:8079:3091","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:651:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1233:1706":{"id":"0:1233:1706","crate_id":0,"name":"Chain","span":{"filename":"src/buf/chain.rs","begin":[32,0],"end":[35,1]},"visibility":"public","docs":"A `Chain` sequences two buffers.\n\n`Chain` is an adapter that links two underlying buffers and provides a\ncontinuous view across both buffers. It is able to sequence either immutable\nbuffers ([`Buf`] values) or mutable buffers ([`BufMut`] values).\n\nThis struct is generally created by calling [`Buf::chain`]. Please see that\nfunction's documentation for more detail.\n\n# Examples\n\n```\nuse bytes::{Bytes, Buf};\n\nlet mut buf = (&b\"hello \"[..])\n    .chain(&b\"world\"[..]);\n\nlet full: Bytes = buf.copy_to_bytes(11);\nassert_eq!(full[..], b\"hello world\"[..]);\n```\n\n[`Buf::chain`]: trait.Buf.html#method.chain\n[`Buf`]: trait.Buf.html\n[`BufMut`]: trait.BufMut.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:220","a:1:3220:3079-0:1233:1706","a:1:3191:205-0:1233:1706","a:1:3179:196-0:1233:1706","a:1:9129:3448-0:1233:1706","a:1:9128:3449-0:1233:1706","b:1:3108-0:1233:1706","b:1:3123-0:1233:1706","b:1:3908-0:1233:1706","b:1:3118-0:1233:1706","b:1:2782-0:1233:1706","b:1:3112-0:1233:1706","b:1:2785-0:1233:1706","0:1238","0:229","0:238","0:244"]}},"0:1223:2095":{"id":"0:1223:2095","crate_id":0,"name":"put_i16","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1219:2075":{"id":"0:1219:2075","crate_id":0,"name":"put_u8","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:963:585":{"id":"0:963:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1460,4],"end":[1462,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:942":{"id":"0:942","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1405,0],"end":[1409,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7753:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"items":["0:943:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:3191:205-0:1233:1706":{"id":"a:1:3191:205-0:1233:1706","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233:1706","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3341:3181":{"id":"1:3341:3181","crate_id":1,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3343:341"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1279:167":{"id":"0:1279:167","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"0:1282:732":{"id":"0:1282:732","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"RangeFull","id":"1:45546:182","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:89":{"id":"0:89","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1021,0],"end":[1036,1]},"visibility":{"restricted":{"parent":"0:7:1697","path":"::buf::buf_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["copy_to_slice","get_f64","get_u32","get_f32","get_u16","get_i8","get_u8","get_i128","get_u128_le","get_i128_le","reader","get_i64_le","get_i64","get_u64_le","get_i32_le","get_i32","chunks_vectored","get_u32_le","get_i16_le","get_i16","get_u16_le","get_uint_le","get_int","get_int_le","take","chain","copy_to_bytes","has_remaining","get_f32_le","get_uint","get_u128","get_u64","get_f64_le"],"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:90:1761","0:91:1724","0:92:1727"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:593":{"id":"0:593","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[637,0],"end":[637,20]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2836:120","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2782-0:1242:1707":{"id":"b:1:2782-0:1242:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2776:94","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2784:2397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1248:1708":{"id":"0:1248:1708","crate_id":0,"name":"Limit","span":{"filename":"src/buf/limit.rs","begin":[9,0],"end":[12,1]},"visibility":"public","docs":"A `BufMut` adapter which limits the amount of bytes that can be written\nto an underlying buffer.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:279","a:1:3220:3079-0:1248:1708","a:1:3191:205-0:1248:1708","a:1:3179:196-0:1248:1708","a:1:9129:3448-0:1248:1708","a:1:9128:3449-0:1248:1708","b:1:3108-0:1248:1708","b:1:3123-0:1248:1708","b:1:3908-0:1248:1708","b:1:3118-0:1248:1708","b:1:2782-0:1248:1708","b:1:3112-0:1248:1708","b:1:2785-0:1248:1708","0:1252","0:286"]}},"5:1075:4899":{"id":"5:1075:4899","crate_id":5,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:1076:3266","5:1077:4724","5:1078:57544","5:1079:57545","5:1080:56880","5:1081:56881","5:1082:56882"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:1:3108-0:526:1588":{"id":"b:1:3108-0:526:1588","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3111:2477"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:234:1727":{"id":"0:234:1727","crate_id":0,"name":"advance","span":{"filename":"src/buf/chain.rs","begin":[149,4],"end":[165,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:867:661":{"id":"0:867:661","crate_id":0,"name":"from","span":{"filename":"src/bytes_mut.rs","begin":[1073,4],"end":[1075,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["src",{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:608":{"id":"0:608","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[681,0],"end":[685,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"primitive","inner":"str"},"items":["0:609:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1276":{"id":"0:1276","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342:1703","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IndexMut","id":"1:3487:2332","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"1:45587:181","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1277:732"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:852:289":{"id":"0:852:289","crate_id":0,"name":"as_ref","span":{"filename":"src/bytes_mut.rs","begin":[1032,4],"end":[1034,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6086:57543":{"id":"4:6086:57543","crate_id":4,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"4:421:1717","`String`":"4:8341:201"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"4:421:1717","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"4:8079:3091","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:182":{"id":"0:182","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1031,0],"end":[1033,1]},"visibility":{"restricted":{"parent":"0:99:1698","path":"::buf::buf_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140:1584","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["put_i32_le","put_i32","put_u32_le","put_f64","put_f64_le","has_remaining_mut","put_u16_le","put_int","put_i8","put_int_le","put_i128_le","put_i128","put_u128_le","put_slice","put_u64","put_i16_le","put_i16","put_f32","writer","put_u16","put_uint","put_bytes","put","put_i64","put_u64_le","put_i64_le","put_u32","put_f32_le","put_uint_le","limit","put_u8","put_u128","chain_mut"],"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140:1584","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Box","id":"4:421:1717","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:1215:2004","0:1216:2049","0:1217:2022","0:1218:2064","0:1219:2075","0:1220:2082","0:1221:2086","0:1222:2091","0:1223:2095","0:1224:2098","0:1225:2102","0:1226:2106","0:1227:2109","0:1228:2112","0:1229:2116","0:1230:2120","0:1231:2123","0:1232:2126"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:44:1724":{"id":"0:44:1724","crate_id":0,"name":"chunk","span":{"filename":"src/buf/buf_impl.rs","begin":[133,4],"end":[133,29]},"visibility":"default","docs":"Returns a slice starting at the current position and of length between 0\nand `Buf::remaining()`. Note that this *can* return shorter slice (this allows\nnon-continuous internal representation).\n\nThis is a lower level function. Most operations are done with other\nfunctions.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(buf.chunk(), &b\"hello world\"[..]);\n\nbuf.advance(6);\n\nassert_eq!(buf.chunk(), &b\"world\"[..]);\n```\n\n# Implementer notes\n\nThis function should never panic. Once the end of the buffer is reached,\ni.e., `Buf::remaining` returns 0, calls to `chunk()` should return an\nempty slice.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:13266:2919":{"id":"1:13266:2919","crate_id":1,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"`DoubleEndedIterator`":"1:8323:116","prim@char":"5:15735:2894","str::matches":"5:15741:2899","self::pattern":"1:12826:3278"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"1:49343:4574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13313:56883":{"id":"1:13313:56883","crate_id":1,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"5:15735:2894"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"1:49438:4580","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:192:2022":{"id":"0:192:2022","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1079,4],"end":[1091,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:557:559":{"id":"0:557:559","crate_id":0,"name":"drop","span":{"filename":"src/bytes.rs","begin":[514,4],"end":[516,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:74:1920":{"id":"0:74:1920","crate_id":0,"name":"get_f64","span":{"filename":"src/buf/buf_impl.rs","begin":[776,4],"end":[778,5]},"visibility":"default","docs":"Gets an IEEE754 double-precision (8 bytes) floating point number from\n`self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33 hello\"[..];\nassert_eq!(1.2f64, buf.get_f64());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:43:1761":{"id":"0:43:1761","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[102,4],"end":[102,33]},"visibility":"default","docs":"Returns the number of bytes between the current position and the end of\nthe buffer.\n\nThis value is greater than or equal to the length of the slice returned\nby `chunk()`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(buf.remaining(), 11);\n\nbuf.get_u8();\n\nassert_eq!(buf.remaining(), 10);\n```\n\n# Implementer notes\n\nImplementations of `remaining` should ensure that the return value does\nnot change unless a call is made to `advance` or any other function that\nis documented to change the `Buf`'s current position.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:882":{"id":"0:882","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1121,0],"end":[1125,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2779:2625","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:883:2832"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:582:1707":{"id":"0:582:1707","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes.rs","begin":[604,4],"end":[604,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"core::slice::Iter","id":"1:10906:2563","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"0:1281":{"id":"0:1281","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342:1703","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IndexMut","id":"1:3487:2332","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFull","id":"1:45546:182","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1282:732"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:50:1826":{"id":"0:50:1826","crate_id":0,"name":"get_u8","span":{"filename":"src/buf/buf_impl.rs","begin":[287,4],"end":[292,5]},"visibility":"default","docs":"Gets an unsigned 8 bit integer from `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08 hello\"[..];\nassert_eq!(8, buf.get_u8());\n```\n\n# Panics\n\nThis function panics if there is no more remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:965:976":{"id":"0:965:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1466,4],"end":[1468,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:970":{"id":"0:970","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1483,0],"end":[1487,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:971:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"4:6087:3055":{"id":"4:6087:3055","crate_id":4,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"4:8341:201"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2782-0:1298:1712":{"id":"b:1:2782-0:1298:1712","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2776:94","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298:1712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:2784:2397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1271":{"id":"0:1271","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342:1703","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IndexMut","id":"1:3487:2332","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Range","id":"1:45562:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1272:732"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:973:585":{"id":"0:973:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1490,4],"end":[1492,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:186:2049":{"id":"0:186:2049","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1042,4],"end":[1045,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2785-0:786:1589":{"id":"b:1:2785-0:786:1589","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2779:2625","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2787:2832"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:967:585":{"id":"0:967:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1472,4],"end":[1474,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1173:1790":{"id":"0:1173:1790","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"IoSlice","id":"5:10945:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}}}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:538:771":{"id":"0:538:771","crate_id":0,"name":"len","span":{"filename":"src/bytes.rs","begin":[182,4],"end":[184,5]},"visibility":"public","docs":"Returns the number of bytes contained in this `Bytes`.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet b = Bytes::from(&b\"hello\"[..]);\nassert_eq!(b.len(), 5);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3191:205-0:1298:1712":{"id":"a:1:3191:205-0:1298:1712","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298:1712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:588:585":{"id":"0:588:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[620,4],"end":[622,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10108:106":{"id":"1:10108:106","crate_id":1,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10109:640"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:85":{"id":"0:85","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1013,0],"end":[1015,1]},"visibility":{"restricted":{"parent":"0:7:1697","path":"::buf::buf_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["copy_to_slice","get_f64","get_u32","get_f32","get_u16","get_i8","get_u8","get_i128","get_u128_le","get_i128_le","reader","get_i64_le","get_i64","get_u64_le","get_i32_le","get_i32","chunks_vectored","get_u32_le","get_i16_le","get_i16","get_u16_le","get_uint_le","get_int","get_int_le","take","chain","copy_to_bytes","has_remaining","get_f32_le","get_uint","get_u128","get_u64","get_f64_le"],"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"items":["0:1145:1761","0:1146:1724","0:1147:1790","0:1149:1727","0:1150:1794","0:1151:1728","0:1152:1826","0:1153:1829","0:1154:1835","0:1155:1839","0:1156:1842","0:1157:1845","0:1158:1850","0:1159:1854","0:1160:1857","0:1161:1860","0:1162:1865","0:1163:1869","0:1164:1872","0:1165:1875","0:1166:1895","0:1167:1900","0:1168:1903","0:1169:1906","0:1170:1931"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:591":{"id":"0:591","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[631,0],"end":[635,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"1:2867:163","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:592:398"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1151:1728":{"id":"0:1151:1728","crate_id":0,"name":"copy_to_slice","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:152:2091":{"id":"0:152:2091","crate_id":0,"name":"put_u16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[381,4],"end":[383,5]},"visibility":"default","docs":"Writes an unsigned 16 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u16_le(0x0809);\nassert_eq!(buf, b\"\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:177:2194":{"id":"0:177:2194","crate_id":0,"name":"chain_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[943,4],"end":[948,5]},"visibility":"default","docs":"Creates an adapter which will chain this buffer with another.\n\nThe returned `BufMut` instance will first write to all bytes from\n`self`. Afterwards, it will write to `next`.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut a = [0u8; 5];\nlet mut b = [0u8; 6];\n\nlet mut chain = (&mut a[..]).chain_mut(&mut b[..]);\n\nchain.put_slice(b\"hello world\");\n\nassert_eq!(&a[..], b\"hello\");\nassert_eq!(&b[..], b\" world\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["next",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233:1706","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140:1584","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3623:3184":{"id":"1:3623:3184","crate_id":1,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"1:3554:2396","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:632":{"id":"0:632","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[753,0],"end":[757,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:633:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:4614:3030":{"id":"5:4614:3030","crate_id":5,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:4615:58922","5:4616:40049","5:4617:58923","5:4618:58924"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:1:3112-0:1298:1712":{"id":"b:1:3112-0:1298:1712","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298:1712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:3114:661"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1150:1794":{"id":"0:1150:1794","crate_id":0,"name":"has_remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:9129:3448-0:526:1588":{"id":"a:1:9129:3448-0:526:1588","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9129:3448","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3262:3163":{"id":"1:3262:3163","crate_id":1,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3264:167","1:3265:539"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3350:3183":{"id":"1:3350:3183","crate_id":1,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3352:1208"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:929:976":{"id":"0:929:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1364,4],"end":[1366,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1252":{"id":"0:1252","crate_id":0,"name":null,"span":{"filename":"src/buf/limit.rs","begin":[8,9],"end":[8,14]},"visibility":{"restricted":{"parent":"0:267:1700","path":"::buf::limit"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"1:10108:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10108:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:1254:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:8275:132":{"id":"1:8275:132","crate_id":1,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8277:664"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1164:1872":{"id":"0:1164:1872","crate_id":0,"name":"get_i64","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3191:205-0:1261:1709":{"id":"a:1:3191:205-0:1261:1709","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3345:3182":{"id":"1:3345:3182","crate_id":1,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3347:1205"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:12273:3848":{"id":"1:12273:3848","crate_id":1,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12274:2248","1:12275:2557"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:554":{"id":"0:554","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[509,0],"end":[509,29]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3247:3162":{"id":"1:3247:3162","crate_id":1,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3249:167","1:3250:250"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:12845:4389":{"id":"1:12845:4389","crate_id":1,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:12847:4408","1:12848:900","1:12849:54742","1:12850:54743"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1241:640":{"id":"0:1241:640","crate_id":0,"name":"fmt","span":{"filename":"src/buf/chain.rs","begin":[31,9],"end":[31,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:10068:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:10057:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1275:731":{"id":"0:1275:731","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"1:45587:181","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:58:1857":{"id":"0:58:1857","crate_id":0,"name":"get_i32","span":{"filename":"src/buf/buf_impl.rs","begin":[453,4],"end":[455,5]},"visibility":"default","docs":"Gets a signed 32 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];\nassert_eq!(0x0809A0A1, buf.get_i32());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:157:2109":{"id":"0:157:2109","crate_id":0,"name":"put_i32","span":{"filename":"src/buf/buf_mut.rs","begin":[491,4],"end":[493,5]},"visibility":"default","docs":"Writes a signed 32 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i32(0x0809A0A1);\nassert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:922":{"id":"0:922","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1345,0],"end":[1349,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:923:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:47:1727":{"id":"0:47:1727","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[206,4],"end":[206,38]},"visibility":"default","docs":"Advance the internal cursor of the Buf\n\nThe next call to `chunk()` will return a slice starting `cnt` bytes\nfurther into the underlying buffer.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"hello world\"[..];\n\nassert_eq!(buf.chunk(), &b\"hello world\"[..]);\n\nbuf.advance(6);\n\nassert_eq!(buf.chunk(), &b\"world\"[..]);\n```\n\n# Panics\n\nThis function **may** panic if `cnt > self.remaining()`.\n\n# Implementer notes\n\nIt is recommended for implementations of `advance` to panic if `cnt >\nself.remaining()`. If the implementation does not panic, the call must\nbehave as if `cnt == self.remaining()`.\n\nA call with `cnt == 0` should never panic and be a no-op.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:13260:56864":{"id":"1:13260:56864","crate_id":1,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3646:3186":{"id":"1:3646:3186","crate_id":1,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3648:53978"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:896:1707":{"id":"0:896:1707","crate_id":0,"name":"IntoIter","span":{"filename":"src/bytes_mut.rs","begin":[1161,4],"end":[1161,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"core::slice::Iter","id":"1:10906:2563","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"1:13285:56873":{"id":"1:13285:56873","crate_id":1,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1200:2064":{"id":"0:1200:2064","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:187:2022":{"id":"0:187:2022","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1048,4],"end":[1052,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:1206:2098":{"id":"0:1206:2098","crate_id":0,"name":"put_i16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:14010:3090":{"id":"1:14010:3090","crate_id":1,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:14011:54936","1:14012:54937","1:14013:54938","1:14014:54939","1:14015:54940","1:14016:54941","1:14017:3632"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:1:9129:3448-0:1242:1707":{"id":"a:1:9129:3448-0:1242:1707","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9129:3448","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9129:3448","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1158:1850":{"id":"0:1158:1850","crate_id":0,"name":"get_u32","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5821:4728":{"id":"4:5821:4728","crate_id":4,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5823:167","4:5824:2621"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:1:3112-0:1242:1707":{"id":"b:1:3112-0:1242:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3114:661"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:3220:3079-0:1298:1712":{"id":"a:1:3220:3079-0:1298:1712","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3220:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3220:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298:1712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1214:2126":{"id":"0:1214:2126","crate_id":0,"name":"put_i64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1220:2082":{"id":"0:1220:2082","crate_id":0,"name":"put_i8","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3257:3164":{"id":"1:3257:3164","crate_id":1,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3259:167","1:3260:870"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:563:1727":{"id":"0:563:1727","crate_id":0,"name":"advance","span":{"filename":"src/bytes.rs","begin":[538,4],"end":[549,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3184:1946-0:374:1710":{"id":"a:1:3184:1946-0:374:1710","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:844:2004":{"id":"0:844:2004","crate_id":0,"name":"remaining_mut","span":{"filename":"src/bytes_mut.rs","begin":[973,4],"end":[975,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3111:2477":{"id":"1:3111:2477","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:3085:131"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:873:398":{"id":"0:873:398","crate_id":0,"name":"cmp","span":{"filename":"src/bytes_mut.rs","begin":[1091,4],"end":[1093,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6089:57545":{"id":"4:6089:57545","crate_id":4,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"5:15741:2899"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:55:1845":{"id":"0:55:1845","crate_id":0,"name":"get_i16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[393,4],"end":[395,5]},"visibility":"default","docs":"Gets a signed 16 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x09\\x08 hello\"[..];\nassert_eq!(0x0809, buf.get_i16_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:600":{"id":"0:600","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[657,0],"end":[661,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}},"items":["0:601:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:9128:3449-0:1248:1708":{"id":"a:1:9128:3449-0:1248:1708","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9128:3449","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9128:3449","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:374:1710":{"id":"0:374:1710","crate_id":0,"name":"UninitSlice","span":{"filename":"src/buf/uninit_slice.rs","begin":[22,0],"end":[22,42]},"visibility":"public","docs":"Uninitialized byte slice.\n\nReturned by `BufMut::chunk_mut()`, the referenced byte slice may be\nuninitialized. The wrapper provides safe access without introducing\nundefined behavior.\n\nThe safety invariants of this wrapper are:\n\n 1. Reading from an `UninitSlice` is undefined behavior.\n 2. Writing uninitialized bytes to an `UninitSlice` is undefined behavior.\n\nThe difference between `&mut UninitSlice` and `&mut [MaybeUninit<u8>]` is\nthat it is possible in safe code to write uninitialized bytes to an\n`&mut [MaybeUninit<u8>]`, which this type prohibits.","links":{},"attrs":["#[repr(transparent)]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:377","a:1:3220:3079-0:374:1710","a:1:3191:205-0:374:1710","a:1:3179:196-0:374:1710","a:1:9129:3448-0:374:1710","a:1:9128:3449-0:374:1710","a:1:3184:1946-0:374:1710","b:1:3908-0:374:1710","b:1:2782-0:374:1710","b:1:2785-0:374:1710","0:387","0:1268","0:1271","0:1273","0:1276","0:1278","0:1281","0:1283","0:1286","0:1288","0:1291","0:1293","0:1296"]}},"0:564:1931":{"id":"0:564:1931","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/bytes.rs","begin":[551,4],"end":[559,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"crate::Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13217:18256":{"id":"1:13217:18256","crate_id":1,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"5:15741:2899"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"1:49413:4577","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:925:976":{"id":"0:925:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1352,4],"end":[1354,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:174:2170":{"id":"0:174:2170","crate_id":0,"name":"put_f64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[869,4],"end":[871,5]},"visibility":"default","docs":"Writes  an IEEE754 double-precision (8 bytes) floating point number to\n`self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_f64_le(1.2f64);\nassert_eq!(buf, b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"f64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6698:4841":{"id":"5:6698:4841","crate_id":5,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6699:7697"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"5:10442:4336","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3127:1384":{"id":"1:3127:1384","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47308:191","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1194:1903":{"id":"0:1194:1903","crate_id":0,"name":"get_int","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:611:585":{"id":"0:611:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[688,4],"end":[690,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7753:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:9129:3448-0:786:1589":{"id":"a:1:9129:3448-0:786:1589","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9129:3448","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:1:3123-0:1233:1706":{"id":"b:1:3123-0:1233:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233:1706","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["1:3126:123","1:3127:1384"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:380:2359":{"id":"0:380:2359","crate_id":0,"name":"write_byte","span":{"filename":"src/buf/uninit_slice.rs","begin":[69,4],"end":[73,5]},"visibility":"public","docs":"Write a single byte at the specified offset.\n\n# Panics\n\nThe function panics if `index` is out of bounds.\n\n# Examples\n\n```\nuse bytes::buf::UninitSlice;\n\nlet mut data = [b'f', b'o', b'o'];\nlet slice = unsafe { UninitSlice::from_raw_parts_mut(data.as_mut_ptr(), 3) };\n\nslice.write_byte(0, b'b');\n\nassert_eq!(b\"boo\", &data[..]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}],["byte",{"kind":"primitive","inner":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:947:585":{"id":"0:947:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1418,4],"end":[1420,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:617:976":{"id":"0:617:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[706,4],"end":[708,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:923:585":{"id":"0:923:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1346,4],"end":[1348,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:229":{"id":"0:229","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[132,0],"end":[191,1]},"visibility":{"restricted":{"parent":"0:199:1699","path":"::buf::chain"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["copy_to_slice","get_f64","get_u32","get_f32","get_u16","get_i8","get_u8","get_i128","get_u128_le","get_i128_le","reader","get_i64_le","get_i64","get_u64_le","get_i32_le","get_i32","chunks_vectored","get_u32_le","get_i16_le","get_i16","get_u16_le","get_uint_le","get_int","get_int_le","take","chain","copy_to_bytes","has_remaining","get_f32_le","get_uint","get_u128","get_u64","get_f64_le"],"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233:1706","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["0:232:1761","0:233:1724","0:234:1727","0:235:1790","0:237:1931"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1242:1707":{"id":"0:1242:1707","crate_id":0,"name":"IntoIter","span":{"filename":"src/buf/iter.rs","begin":[26,0],"end":[28,1]},"visibility":"public","docs":"Iterator over the bytes contained by the buffer.\n\nThis struct is created by the [`iter`] method on [`Buf`].\n\n# Examples\n\nBasic usage:\n\n```\nuse bytes::Bytes;\n\nlet buf = Bytes::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\nassert_eq!(iter.next(), Some(b'b'));\nassert_eq!(iter.next(), Some(b'c'));\nassert_eq!(iter.next(), None);\n```\n\n[`iter`]: trait.Buf.html#method.iter\n[`Buf`]: trait.Buf.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:254","a:1:3220:3079-0:1242:1707","a:1:3191:205-0:1242:1707","a:1:3179:196-0:1242:1707","a:1:9129:3448-0:1242:1707","a:1:9128:3449-0:1242:1707","b:1:3108-0:1242:1707","b:1:8283-0:1242:1707","b:1:3123-0:1242:1707","b:1:3908-0:1242:1707","b:1:3118-0:1242:1707","b:1:2782-0:1242:1707","b:1:3112-0:1242:1707","b:1:2785-0:1242:1707","0:1245","0:260","0:265"]}},"b:1:3908-0:1248:1708":{"id":"b:1:3908-0:1248:1708","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3906:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3910:1398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1198:2049":{"id":"0:1198:2049","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:224:2226":{"id":"0:224:2226","crate_id":0,"name":"first_ref","span":{"filename":"src/buf/chain.rs","begin":[55,4],"end":[57,5]},"visibility":"public","docs":"Gets a reference to the first underlying `Buf`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet buf = (&b\"hello\"[..])\n    .chain(&b\"world\"[..]);\n\nassert_eq!(buf.first_ref()[..], b\"hello\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13204:2274":{"id":"1:13204:2274","crate_id":1,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"1:47181:162"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10726:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10726:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13292:38463":{"id":"1:13292:38463","crate_id":1,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"5:15735:2894","self::pattern":"1:12826:3278"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:817:2555":{"id":"0:817:2555","crate_id":0,"name":"clear","span":{"filename":"src/bytes_mut.rs","begin":[418,4],"end":[420,5]},"visibility":"public","docs":"Clears the buffer, removing all data. Existing capacity is preserved.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::from(&b\"hello world\"[..]);\nbuf.clear();\nassert!(buf.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13198:2564":{"id":"1:13198:2564","crate_id":1,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"1:12297:4692"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:860":{"id":"0:860","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1060,0],"end":[1064,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:862:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:315:2308":{"id":"0:315:2308","crate_id":0,"name":"consume","span":{"filename":"src/buf/reader.rs","begin":[78,4],"end":[80,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["amt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2785-0:1248:1708":{"id":"b:1:2785-0:1248:1708","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2779:2625","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2787:2832"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:618":{"id":"0:618","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[711,0],"end":[715,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:619:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:144:2049":{"id":"0:144:2049","crate_id":0,"name":"chunk_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[171,4],"end":[171,48]},"visibility":"default","docs":"Returns a mutable slice starting at the current BufMut position and of\nlength between 0 and `BufMut::remaining_mut()`. Note that this *can* be shorter than the\nwhole remainder of the buffer (this allows non-continuous implementation).\n\nThis is a lower level function. Most operations are done with other\nfunctions.\n\nThe returned byte slice may represent uninitialized memory.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = Vec::with_capacity(16);\n\nunsafe {\n    // MaybeUninit::as_mut_ptr\n    buf.chunk_mut()[0..].as_mut_ptr().write(b'h');\n    buf.chunk_mut()[1..].as_mut_ptr().write(b'e');\n\n    buf.advance_mut(2);\n\n    buf.chunk_mut()[0..].as_mut_ptr().write(b'l');\n    buf.chunk_mut()[1..].as_mut_ptr().write(b'l');\n    buf.chunk_mut()[2..].as_mut_ptr().write(b'o');\n\n    buf.advance_mut(3);\n}\n\nassert_eq!(5, buf.len());\nassert_eq!(buf, b\"hello\");\n```\n\n# Implementer notes\n\nThis function should never panic. `chunk_mut` should return an empty\nslice **if and only if** `remaining_mut()` returns 0. In other words,\n`chunk_mut()` returning an empty slice implies that `remaining_mut()` will\nreturn 0 and `remaining_mut()` returning 0 implies that `chunk_mut()` will\nreturn an empty slice.\n\nThis function may trigger an out-of-memory abort if it tries to allocate\nmemory and fails to do so.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:12765:3277":{"id":"1:12765:3277","crate_id":1,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12766:122","1:12767:55650"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1187:1860":{"id":"0:1187:1860","crate_id":0,"name":"get_i32_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13201:1820":{"id":"1:13201:1820","crate_id":1,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"5:15752:2908"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:906":{"id":"0:906","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1197,0],"end":[1201,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromIterator","id":"1:8275:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:907:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1238":{"id":"0:1238","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[31,9],"end":[31,14]},"visibility":{"restricted":{"parent":"0:199:1699","path":"::buf::chain"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"1:10108:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"1:10108:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10108:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233:1706","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["0:1241:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:9222:4840":{"id":"5:9222:4840","crate_id":5,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:9223:60648","5:9224:60649","5:9225:60650","5:9226:60651","5:9227:4611","5:9228:32612","5:9229:60647"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"5:10442:4336","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:8756:3217":{"id":"1:8756:3217","crate_id":1,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"1:7803:3204","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13211:56854":{"id":"1:13211:56854","crate_id":1,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"crate::ops::IndexMut":"1:3487:2332","str::slice_unchecked":"5:15741:2899","`str`":"5:15741:2899"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:550:2555":{"id":"0:550:2555","crate_id":0,"name":"clear","span":{"filename":"src/bytes.rs","begin":[473,4],"end":[475,5]},"visibility":"public","docs":"Clears the buffer, removing all data.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut buf = Bytes::from(&b\"hello world\"[..]);\nbuf.clear();\nassert!(buf.is_empty());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3220:3079-0:1261:1709":{"id":"a:1:3220:3079-0:1261:1709","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3220:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3220:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:880":{"id":"0:880","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1115,0],"end":[1119,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2776:94","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:881:2397"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2782-0:374:1710":{"id":"b:1:2782-0:374:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2776:94","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:2784:2397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:948":{"id":"0:948","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1423,0],"end":[1427,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:949:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:377":{"id":"0:377","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[24,0],"end":[144,1]},"visibility":{"restricted":{"parent":"0:342:1703","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:378:2206","0:380:2359","0:381:2199","0:385:1820","0:386:771"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:155:2102":{"id":"0:155:2102","crate_id":0,"name":"put_u32","span":{"filename":"src/buf/buf_mut.rs","begin":[447,4],"end":[449,5]},"visibility":"default","docs":"Writes an unsigned 32 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u32(0x0809A0A1);\nassert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1304":{"id":"0:1304","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[34,0],"end":[34,26]},"visibility":{"restricted":{"parent":"0:1011:2844","path":"::fmt::hex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"LowerHex","id":"1:10121:2869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1305:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13190:771":{"id":"1:13190:771","crate_id":1,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"5:15735:2894"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2785-0:1255:1711":{"id":"b:1:2785-0:1255:1711","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2779:2625","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255:1711","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:2787:2832"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:10115:115":{"id":"1:10115:115","crate_id":1,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10116:640"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:837:559":{"id":"0:837:559","crate_id":0,"name":"drop","span":{"filename":"src/bytes_mut.rs","begin":[926,4],"end":[939,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6695:4887":{"id":"5:6695:4887","crate_id":5,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6696:59166","5:6697:59722"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"5:10442:4336","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:1:9129:3448-0:374:1710":{"id":"a:1:9129:3448-0:374:1710","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9129:3448","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:1:3108-0:1255:1711":{"id":"b:1:3108-0:1255:1711","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255:1711","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:3111:2477"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1272:732":{"id":"0:1272:732","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"Range","id":"1:45562:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:176:1705":{"id":"0:176:1705","crate_id":0,"name":"writer","span":{"filename":"src/buf/buf_mut.rs","begin":[916,4],"end":[921,5]},"visibility":"default","docs":"Creates an adaptor which implements the `Write` trait for `self`.\n\nThis function returns a new value which implements `Write` by adapting\nthe `Write` trait functions to the `BufMut` trait functions. Given that\n`BufMut` operations are infallible, none of the `Write` functions will\nreturn with `Err`.\n\n# Examples\n\n```\nuse bytes::BufMut;\nuse std::io::Write;\n\nlet mut buf = vec![].writer();\n\nlet num = buf.write(&b\"hello world\"[..]).unwrap();\nassert_eq!(11, num);\n\nlet buf = buf.into_inner();\n\nassert_eq!(*buf, b\"hello world\"[..]);\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298:1712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:257:2246":{"id":"0:257:2246","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/iter.rs","begin":[65,4],"end":[67,5]},"visibility":"public","docs":"Consumes this `IntoIter`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::{Buf, Bytes};\n\nlet buf = Bytes::from(&b\"abc\"[..]);\nlet mut iter = buf.into_iter();\n\nassert_eq!(iter.next(), Some(b'a'));\n\nlet buf = iter.into_inner();\nassert_eq!(2, buf.remaining());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3114:661":{"id":"1:3114:661","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13213:2198":{"id":"1:13213:2198","crate_id":1,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"5:15741:2899"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:957:585":{"id":"0:957:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1445,4],"end":[1447,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:64:1880":{"id":"0:64:1880","crate_id":0,"name":"get_u128","span":{"filename":"src/buf/buf_impl.rs","begin":[573,4],"end":[575,5]},"visibility":"default","docs":"Gets an unsigned 128 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_u128());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:161:2123":{"id":"0:161:2123","crate_id":0,"name":"put_i64","span":{"filename":"src/buf/buf_mut.rs","begin":[579,4],"end":[581,5]},"visibility":"default","docs":"Writes a signed 64 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i64(0x0102030405060708);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1215:2004":{"id":"0:1215:2004","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:943:585":{"id":"0:943:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1406,4],"end":[1408,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:9128:3449-0:526:1588":{"id":"a:1:9128:3449-0:526:1588","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9128:3449","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:857:2831":{"id":"0:857:2831","crate_id":0,"name":"as_mut","span":{"filename":"src/bytes_mut.rs","begin":[1048,4],"end":[1050,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1225:2102":{"id":"0:1225:2102","crate_id":0,"name":"put_u32","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9129:3448":{"id":"1:9129:3448","crate_id":1,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:164:2134":{"id":"0:164:2134","crate_id":0,"name":"put_u128_le","span":{"filename":"src/buf/buf_mut.rs","begin":[645,4],"end":[647,5]},"visibility":"default","docs":"Writes an unsigned 128 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u128_le(0x01020304050607080910111213141516);\nassert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:855:524":{"id":"0:855:524","crate_id":0,"name":"deref","span":{"filename":"src/bytes_mut.rs","begin":[1041,4],"end":[1043,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:65:1884":{"id":"0:65:1884","crate_id":0,"name":"get_u128_le","span":{"filename":"src/buf/buf_impl.rs","begin":[593,4],"end":[595,5]},"visibility":"default","docs":"Gets an unsigned 128 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_u128_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:9128:3449-0:1261:1709":{"id":"a:1:9128:3449-0:1261:1709","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9128:3449","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9128:3449","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:314:2307":{"id":"0:314:2307","crate_id":0,"name":"fill_buf","span":{"filename":"src/buf/reader.rs","begin":[75,4],"end":[77,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"5:3953:191","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3122:1385":{"id":"1:3122:1385","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47308:191","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:818:2209":{"id":"0:818:2209","crate_id":0,"name":"resize","span":{"filename":"src/bytes_mut.rs","begin":[444,4],"end":[457,5]},"visibility":"public","docs":"Resizes the buffer so that `len` is equal to `new_len`.\n\nIf `new_len` is greater than `len`, the buffer is extended by the\ndifference with each additional byte set to `value`. If `new_len` is\nless than `len`, the buffer is simply truncated.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::new();\n\nbuf.resize(3, 0x1);\nassert_eq!(&buf[..], &[0x1, 0x1, 0x1]);\n\nbuf.resize(2, 0x2);\nassert_eq!(&buf[..], &[0x1, 0x1]);\n\nbuf.resize(4, 0x3);\nassert_eq!(&buf[..], &[0x1, 0x1, 0x3, 0x3]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["new_len",{"kind":"primitive","inner":"usize"}],["value",{"kind":"primitive","inner":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6465:4902":{"id":"5:6465:4902","crate_id":5,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6466:60452","5:6467:60453"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:385:1820":{"id":"0:385:1820","crate_id":0,"name":"as_mut_ptr","span":{"filename":"src/buf/uninit_slice.rs","begin":[123,4],"end":[125,5]},"visibility":"public","docs":"Return a raw pointer to the slice's buffer.\n\n# Safety\n\nThe caller **must not** read from the referenced memory and **must not**\nwrite **uninitialized** bytes to the slice either.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut data = [0, 1, 2];\nlet mut slice = &mut data[..];\nlet ptr = BufMut::chunk_mut(&mut slice).as_mut_ptr();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3076:75":{"id":"1:3076:75","crate_id":1,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3078:289"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:60:1865":{"id":"0:60:1865","crate_id":0,"name":"get_u64","span":{"filename":"src/buf/buf_impl.rs","begin":[493,4],"end":[495,5]},"visibility":"default","docs":"Gets an unsigned 64 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_u64());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1182:1842":{"id":"0:1182:1842","crate_id":0,"name":"get_i16","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:926":{"id":"0:926","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1357,0],"end":[1361,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}},"items":["0:927:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:311:2305":{"id":"0:311:2305","crate_id":0,"name":"read","span":{"filename":"src/buf/reader.rs","begin":[66,4],"end":[71,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"5:3953:191","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3118-0:786:1589":{"id":"b:1:3118-0:786:1589","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:3088:213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3121:123","1:3122:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1278":{"id":"0:1278","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342:1703","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"1:3483:2331","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFull","id":"1:45546:182","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1279:167","0:1280:731"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:849:2064":{"id":"0:849:2064","crate_id":0,"name":"put_slice","span":{"filename":"src/bytes_mut.rs","begin":[1012,4],"end":[1014,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6070:57540":{"id":"4:6070:57540","crate_id":4,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"4:8341:201"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1175:1727":{"id":"0:1175:1727","crate_id":0,"name":"advance","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1309:640":{"id":"0:1309:640","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[36,0],"end":[36,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"1:10068:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:10057:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:939:585":{"id":"0:939:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1394,4],"end":[1396,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7753:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1283":{"id":"0:1283","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342:1703","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"1:3483:2331","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeInclusive","id":"1:45631:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1284:167","0:1285:731"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:870":{"id":"0:870","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1084,0],"end":[1088,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:871:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:9128:3449-0:786:1589":{"id":"a:1:9128:3449-0:786:1589","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"1:9128:3449","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:866":{"id":"0:866","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1072,0],"end":[1076,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:867:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1007":{"id":"0:1007","crate_id":0,"name":null,"span":{"filename":"src/fmt/debug.rs","begin":[39,0],"end":[43,1]},"visibility":{"restricted":{"parent":"0:984:502","path":"::fmt::debug"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10108:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1008:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:850:2074":{"id":"0:850:2074","crate_id":0,"name":"put_bytes","span":{"filename":"src/bytes_mut.rs","begin":[1016,4],"end":[1027,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"u8"}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:920":{"id":"0:920","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1336,0],"end":[1336,32]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1152:1826":{"id":"0:1152:1826","crate_id":0,"name":"get_u8","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u8"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3112-0:786:1589":{"id":"b:1:3112-0:786:1589","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3114:661"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:188:2064":{"id":"0:188:2064","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[1055,4],"end":[1060,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:87":{"id":"0:87","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1017,0],"end":[1019,1]},"visibility":{"restricted":{"parent":"0:7:1697","path":"::buf::buf_impl"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["copy_to_slice","get_f64","get_u32","get_f32","get_u16","get_i8","get_u8","get_i128","get_u128_le","get_i128_le","reader","get_i64_le","get_i64","get_u64_le","get_i32_le","get_i32","chunks_vectored","get_u32_le","get_i16_le","get_i16","get_u16_le","get_uint_le","get_int","get_int_le","take","chain","copy_to_bytes","has_remaining","get_f32_le","get_uint","get_u128","get_u64","get_f64_le"],"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Box","id":"4:421:1717","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:1171:1761","0:1172:1724","0:1173:1790","0:1175:1727","0:1176:1794","0:1177:1728","0:1178:1826","0:1179:1829","0:1180:1835","0:1181:1839","0:1182:1842","0:1183:1845","0:1184:1850","0:1185:1854","0:1186:1857","0:1187:1860","0:1188:1865","0:1189:1869","0:1190:1872","0:1191:1875","0:1192:1895","0:1193:1900","0:1194:1903","0:1195:1906","0:1196:1931"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13206:56094":{"id":"1:13206:56094","crate_id":1,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10726:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10726:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:961:976":{"id":"0:961:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1454,4],"end":[1456,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1269:167":{"id":"0:1269:167","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"0:971:585":{"id":"0:971:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes_mut.rs","begin":[1484,4],"end":[1486,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:838":{"id":"0:838","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[942,0],"end":[969,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["copy_to_slice","get_f64","get_u32","get_f32","get_u16","get_i8","get_u8","get_i128","get_u128_le","get_i128_le","reader","get_i64_le","get_i64","get_u64_le","get_i32_le","get_i32","chunks_vectored","get_u32_le","get_i16_le","get_i16","get_u16_le","get_uint_le","get_int","get_int_le","take","chain","copy_to_bytes","has_remaining","get_f32_le","get_uint","get_u128","get_u64","get_f64_le"],"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:839:1761","0:840:1724","0:841:1727","0:842:1931"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:3220:3079-0:1255:1711":{"id":"a:1:3220:3079-0:1255:1711","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3220:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3220:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255:1711","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"4:779:54561":{"id":"4:779:54561","crate_id":4,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1295:731":{"id":"0:1295:731","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"RangeToInclusive","id":"1:45654:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:81:1699":{"id":"0:81:1699","crate_id":0,"name":"chain","span":{"filename":"src/buf/buf_impl.rs","begin":[869,4],"end":[874,5]},"visibility":"default","docs":"Creates an adaptor which will chain this buffer with another.\n\nThe returned `Buf` instance will first consume all bytes from `self`.\nAfterwards the output is equivalent to the output of next.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut chain = b\"hello \"[..].chain(&b\"world\"[..]);\n\nlet full = chain.copy_to_bytes(11);\nassert_eq!(full.chunk(), b\"hello world\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["next",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233:1706","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1157:1845":{"id":"0:1157:1845","crate_id":0,"name":"get_i16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:312":{"id":"0:312","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[74,0],"end":[81,1]},"visibility":{"restricted":{"parent":"0:291:1701","path":"::buf::reader"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["read_until","read_line","has_data_left","lines","split"],"trait":{"kind":"resolved_path","inner":{"name":"BufRead","id":"5:4621:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255:1711","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:314:2307","0:315:2308"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:596":{"id":"0:596","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[645,0],"end":[649,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:597:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:871:976":{"id":"0:871:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1085,4],"end":[1087,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13214:4600":{"id":"1:13214:4600","crate_id":1,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"5:15735:2894"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"1:49109:3275","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:945:976":{"id":"0:945:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1412,4],"end":[1414,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:573":{"id":"0:573","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[587,0],"end":[591,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2776:94","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:574:2397"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:4:776-0:786:1589":{"id":"b:4:776-0:786:1589","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2801:101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"4:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["4:778:3266","4:779:54561","4:780:54562"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1165:1875":{"id":"0:1165:1875","crate_id":0,"name":"get_i64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1268":{"id":"0:1268","crate_id":0,"name":null,"span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":{"restricted":{"parent":"0:342:1703","path":"::buf::uninit_slice"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"1:3483:2331","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Range","id":"1:45562:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1269:167","0:1270:731"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13199:56853":{"id":"1:13199:56853","crate_id":1,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:53:1839":{"id":"0:53:1839","crate_id":0,"name":"get_u16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[353,4],"end":[355,5]},"visibility":"default","docs":"Gets an unsigned 16 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x09\\x08 hello\"[..];\nassert_eq!(0x0809, buf.get_u16_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3311:3174":{"id":"1:3311:3174","crate_id":1,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3313:167","1:3314:337"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:903:2805":{"id":"0:903:2805","crate_id":0,"name":"extend","span":{"filename":"src/bytes_mut.rs","begin":[1189,4],"end":[1194,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:8279:147","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1230:2120":{"id":"0:1230:2120","crate_id":0,"name":"put_u64_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6769:4849":{"id":"5:6769:4849","crate_id":5,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6770:59772"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:1:3118-0:1248:1708":{"id":"b:1:3118-0:1248:1708","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:3088:213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3121:123","1:3122:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:13284:56872":{"id":"1:13284:56872","crate_id":1,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13189":{"id":"1:13189","crate_id":1,"name":null,"span":null,"visibility":{"restricted":{"parent":"1:12286:1311","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["1:13190:771","1:13191:1793","1:13192:56850","1:13193:56851","1:13195:56852","1:13198:2564","1:13199:56853","1:13200:288","1:13201:1820","1:13202:1725","1:13204:2274","1:13206:56094","1:13208:56095","1:13210:4915","1:13211:56854","1:13212:56855","1:13213:2198","1:13214:4600","1:13215:4415","1:13216:1585","1:13217:18256","1:13218:18294","1:13219:3841","1:13220:56856","1:13221:18285","1:13222:3916","1:13225:56857","1:13228:56858","1:13231:3643","1:13235:3610","1:13239:2726","1:13242:17945","1:13245:56859","1:13248:56860","1:13251:56861","1:13254:56862","1:13257:56863","1:13260:56864","1:13263:56865","1:13266:2919","1:13269:56866","1:13272:56867","1:13275:56868","1:13278:56869","1:13280:56870","1:13282:56871","1:13284:56872","1:13285:56873","1:13286:56874","1:13289:56875","1:13292:38463","1:13295:56876","1:13298:56877","1:13301:56878","1:13304:56879","1:13307:4514","1:13309:4724","1:13310:56880","1:13311:56881","1:13312:56882","1:13313:56883","1:13315:4901","1:13316:56884"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:822:2207":{"id":"0:822:2207","crate_id":0,"name":"extend_from_slice","span":{"filename":"src/bytes_mut.rs","begin":[684,4],"end":[699,5]},"visibility":"public","docs":"Appends given bytes to this `BytesMut`.\n\nIf this `BytesMut` object does not have enough capacity, it is resized\nfirst.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut buf = BytesMut::with_capacity(0);\nbuf.extend_from_slice(b\"aaabbb\");\nbuf.extend_from_slice(b\"cccddd\");\n\nassert_eq!(b\"aaabbbcccddd\", &buf[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["extend",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:151:2086":{"id":"0:151:2086","crate_id":0,"name":"put_u16","span":{"filename":"src/buf/buf_mut.rs","begin":[359,4],"end":[361,5]},"visibility":"default","docs":"Writes an unsigned 16 bit integer to `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u16(0x0809);\nassert_eq!(buf, b\"\\x08\\x09\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1294:167":{"id":"0:1294:167","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"0:585:664":{"id":"0:585:664","crate_id":0,"name":"from_iter","span":{"filename":"src/bytes.rs","begin":[612,4],"end":[614,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["into_iter",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:8279:147","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:584":{"id":"0:584","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[611,0],"end":[615,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromIterator","id":"1:8275:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:585:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:285:2290":{"id":"0:285:2290","crate_id":0,"name":"set_limit","span":{"filename":"src/buf/limit.rs","begin":[54,4],"end":[56,5]},"visibility":"public","docs":"Sets the maximum number of bytes that can be written.\n\n# Note\n\nIf the inner `BufMut` has fewer bytes than `lim` then that is the actual\nnumber of available bytes.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["lim",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3220:3079-0:374:1710":{"id":"a:1:3220:3079-0:374:1710","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3220:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1226:2106":{"id":"0:1226:2106","crate_id":0,"name":"put_u32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:859:526":{"id":"0:859:526","crate_id":0,"name":"deref_mut","span":{"filename":"src/bytes_mut.rs","begin":[1055,4],"end":[1057,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:962":{"id":"0:962","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1459,0],"end":[1463,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:963:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:419":{"id":"0:419","crate_id":0,"name":null,"span":{"filename":"src/buf/writer.rs","begin":[77,0],"end":[88,1]},"visibility":{"restricted":{"parent":"0:401:1705","path":"::buf::writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140:1584","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["write_vectored","by_ref","write_all","is_write_vectored","write_fmt","write_all_vectored"],"trait":{"kind":"resolved_path","inner":{"name":"Write","id":"5:4596:2394","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298:1712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:421:2361","0:422:2395"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:868":{"id":"0:868","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1078,0],"end":[1082,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:869:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"4:780:54562":{"id":"4:780:54562","crate_id":4,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5643:4874":{"id":"5:5643:4874","crate_id":5,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5644:6551","5:5645:7702"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:8752:3216":{"id":"1:8752:3216","crate_id":1,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8474:153","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1277:732":{"id":"0:1277:732","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"1:45587:181","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:626":{"id":"0:626","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[735,0],"end":[739,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:627:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:526:1588":{"id":"0:526:1588","crate_id":0,"name":"Bytes","span":{"filename":"src/bytes.rs","begin":[94,0],"end":[100,1]},"visibility":"public","docs":"A cheaply cloneable and sliceable chunk of contiguous memory.\n\n`Bytes` is an efficient container for storing and operating on contiguous\nslices of memory. It is intended for use primarily in networking code, but\ncould have applications elsewhere as well.\n\n`Bytes` values facilitate zero-copy network programming by allowing multiple\n`Bytes` objects to point to the same underlying memory.\n\n`Bytes` does not have a single implementation. It is an interface, whose\nexact behavior is implemented through dynamic dispatch in several underlying\nimplementations of `Bytes`.\n\nAll `Bytes` implementations must fulfill the following requirements:\n- They are cheaply cloneable and thereby shareable between an unlimited amount\n  of components, for example by modifying a reference count.\n- Instances can be sliced to refer to a subset of the the original buffer.\n\n```\nuse bytes::Bytes;\n\nlet mut mem = Bytes::from(\"Hello world\");\nlet a = mem.slice(0..5);\n\nassert_eq!(a, \"Hello\");\n\nlet b = mem.split_to(6);\n\nassert_eq!(mem, \"world\");\nassert_eq!(b, \"Hello \");\n```\n\n# Memory layout\n\nThe `Bytes` struct itself is fairly small, limited to 4 `usize` fields used\nto track information about which segment of the underlying memory the\n`Bytes` handle has access to.\n\n`Bytes` keeps both a pointer to the shared state containing the full memory\nslice and a pointer to the start of the region visible by the handle.\n`Bytes` also tracks the length of its view into the memory.\n\n# Sharing\n\n`Bytes` contains a vtable, which allows implementations of `Bytes` to define\nhow sharing/cloneing is implemented in detail.\nWhen `Bytes::clone()` is called, `Bytes` will call the vtable function for\ncloning the backing storage in order to share it behind between multiple\n`Bytes` instances.\n\nFor `Bytes` implementations which refer to constant memory (e.g. created\nvia `Bytes::from_static()`) the cloning implementation will be a no-op.\n\nFor `Bytes` implementations which point to a reference counted shared storage\n(e.g. an `Arc<[u8]>`), sharing will be implemented by increasing the\nthe reference count.\n\nDue to this mechanism, multiple `Bytes` instances may point to the same\nshared memory region.\nEach `Bytes` instance can point to different sections within that\nmemory region, and `Bytes` instances may or may not have overlapping views\ninto the memory.\n\nThe following diagram visualizes a scenario where 2 `Bytes` instances make\nuse of an `Arc`-based backing storage, and provide access to different views:\n\n```text\n\n   Arc ptrs                   +---------+\n   ________________________ / | Bytes 2 |\n  /                           +---------+\n /          +-----------+     |         |\n|_________/ |  Bytes 1  |     |         |\n|           +-----------+     |         |\n|           |           | ___/ data     | tail\n|      data |      tail |/              |\nv           v           v               v\n+-----+---------------------------------+-----+\n| Arc |     |           |               |     |\n+-----+---------------------------------+-----+\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:534","a:1:3220:3079-0:526:1588","a:1:9129:3448-0:526:1588","a:1:9128:3449-0:526:1588","b:1:3108-0:526:1588","b:1:3123-0:526:1588","b:1:3908-0:526:1588","b:1:3118-0:526:1588","b:1:2782-0:526:1588","b:1:3112-0:526:1588","b:1:2785-0:526:1588","b:4:776-0:526:1588","0:554","0:555","0:556","0:558","0:560","0:565","0:568","0:570","0:573","0:575","0:579","0:584","0:587","0:589","0:591","0:593","0:594","0:596","0:598","0:600","0:602","0:604","0:606","0:608","0:610","0:612","0:614","0:616","0:618","0:620","0:622","0:624","0:626","0:628","0:630","0:632","0:634","0:638","0:642","0:644","0:646","0:648","0:650","0:652","0:866","0:970","0:972","0:1007","0:1304","0:1308"]}},"0:141:2004":{"id":"0:141:2004","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[59,4],"end":[59,37]},"visibility":"default","docs":"Returns the number of bytes that can be written from the current\nposition until the end of the buffer is reached.\n\nThis value is greater than or equal to the length of the slice returned\nby `chunk_mut()`.\n\nWriting to a `BufMut` may involve allocating more memory on the fly.\nImplementations may fail before reaching the number of bytes indicated\nby this method if they encounter an allocation failure.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 10];\nlet mut buf = &mut dst[..];\n\nlet original_remaining = buf.remaining_mut();\nbuf.put(&b\"hello\"[..]);\n\nassert_eq!(original_remaining - 5, buf.remaining_mut());\n```\n\n# Implementer notes\n\nImplementations of `remaining_mut` should ensure that the return value\ndoes not change unless a call is made to `advance_mut` or any other\nfunction that is documented to change the `BufMut`'s current position.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:93":{"id":"0:93","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_impl.rs","begin":[1039,0],"end":[1070,1]},"visibility":{"restricted":{"parent":"0:7:1697","path":"::buf::buf_impl"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"1:3076:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["copy_to_slice","get_f64","get_u32","get_f32","get_u16","get_i8","get_u8","get_i128","get_u128_le","get_i128_le","reader","get_i64_le","get_i64","get_u64_le","get_i32_le","get_i32","chunks_vectored","get_u32_le","get_i16_le","get_i16","get_u16_le","get_uint_le","get_int","get_int_le","take","chain","copy_to_bytes","has_remaining","get_f32_le","get_uint","get_u128","get_u64","get_f64_le"],"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"std::io::Cursor","id":"5:10741:1970","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:95:1761","0:96:1724","0:97:1727"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:3118-0:1298:1712":{"id":"b:1:3118-0:1298:1712","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:3088:213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298:1712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:3121:123","1:3122:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1301":{"id":"0:1301","crate_id":0,"name":null,"span":{"filename":"src/buf/writer.rs","begin":[10,9],"end":[10,14]},"visibility":{"restricted":{"parent":"0:401:1705","path":"::buf::writer"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"1:10108:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10108:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298:1712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:1303:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:3191:205-0:1242:1707":{"id":"a:1:3191:205-0:1242:1707","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:249:746":{"id":"0:249:746","crate_id":0,"name":"into_iter","span":{"filename":"src/buf/chain.rs","begin":[240,4],"end":[242,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"1:8279:147","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13248:56860":{"id":"1:13248:56860","crate_id":1,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"1:12826:3278","`DoubleEndedIterator`":"1:8323:116","str::rsplit_terminator":"5:15741:2899","str::split":"5:15741:2899","prim@char":"5:15735:2894"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"1:49189:4567","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:68:1895":{"id":"0:68:1895","crate_id":0,"name":"get_uint","span":{"filename":"src/buf/buf_impl.rs","begin":[653,4],"end":[655,5]},"visibility":"default","docs":"Gets an unsigned n-byte integer from `self` in big-endian byte order.\n\nThe current position is advanced by `nbytes`.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x01\\x02\\x03 hello\"[..];\nassert_eq!(0x010203, buf.get_uint(3));\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:851":{"id":"0:851","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1030,0],"end":[1035,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"1:3076:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:852:289"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1261:1709":{"id":"0:1261:1709","crate_id":0,"name":"Take","span":{"filename":"src/buf/take.rs","begin":[10,0],"end":[13,1]},"visibility":"public","docs":"A `Buf` adapter which limits the bytes read from an underlying buffer.\n\nThis struct is generally created by calling `take()` on `Buf`. See\ndocumentation of [`take()`](trait.Buf.html#method.take) for more details.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:329","a:1:3220:3079-0:1261:1709","a:1:3191:205-0:1261:1709","a:1:3179:196-0:1261:1709","a:1:9129:3448-0:1261:1709","a:1:9128:3449-0:1261:1709","b:1:3108-0:1261:1709","b:1:3123-0:1261:1709","b:1:3908-0:1261:1709","b:1:3118-0:1261:1709","b:1:2782-0:1261:1709","b:1:3112-0:1261:1709","b:1:2785-0:1261:1709","0:1265","0:336"]}},"0:615:585":{"id":"0:615:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[700,4],"end":[702,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:595:585":{"id":"0:595:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[640,4],"end":[642,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3123-0:1242:1707":{"id":"b:1:3123-0:1242:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"1:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3126:123","1:3127:1384"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1180:1835":{"id":"0:1180:1835","crate_id":0,"name":"get_u16","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:883:2832":{"id":"0:883:2832","crate_id":0,"name":"borrow_mut","span":{"filename":"src/bytes_mut.rs","begin":[1122,4],"end":[1124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:290:2022":{"id":"0:290:2022","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/limit.rs","begin":[70,4],"end":[74,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"4:6073:57541":{"id":"4:6073:57541","crate_id":4,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"4:8341:201"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:232:1761":{"id":"0:232:1761","crate_id":0,"name":"remaining","span":{"filename":"src/buf/chain.rs","begin":[137,4],"end":[139,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9128:3449":{"id":"1:9128:3449","crate_id":1,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:946":{"id":"0:946","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1417,0],"end":[1421,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:947:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:262:2248":{"id":"0:262:2248","crate_id":0,"name":"Item","span":{"filename":"src/buf/iter.rs","begin":[113,4],"end":[113,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"primitive","inner":"u8"},"generics":{"params":[],"where_predicates":[]}}},"0:341:1931":{"id":"0:341:1931","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/take.rs","begin":[148,4],"end":[154,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:856":{"id":"0:856","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1046,0],"end":[1051,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"AsMut","id":"1:3079:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:857:2831"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:150:2082":{"id":"0:150:2082","crate_id":0,"name":"put_i8","span":{"filename":"src/buf/buf_mut.rs","begin":[336,4],"end":[339,5]},"visibility":"default","docs":"Writes a signed 8 bit integer to `self`.\n\nThe current position is advanced by 1.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i8(0x01);\nassert_eq!(buf, b\"\\x01\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3908-0:1242:1707":{"id":"b:1:3908-0:1242:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3906:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:3910:1398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:620":{"id":"0:620","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[717,0],"end":[721,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:621:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:308:2246":{"id":"0:308:2246","crate_id":0,"name":"into_inner","span":{"filename":"src/buf/reader.rs","begin":[60,4],"end":[62,5]},"visibility":"public","docs":"Consumes this `Reader`, returning the underlying value.\n\n# Examples\n\n```rust\nuse bytes::Buf;\nuse std::io;\n\nlet mut buf = b\"hello world\".reader();\nlet mut dst = vec![];\n\nio::copy(&mut buf, &mut dst).unwrap();\n\nlet buf = buf.into_inner();\nassert_eq!(0, buf.remaining());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"B"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1274:167":{"id":"0:1274:167","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"1:10117:3317":{"id":"1:10117:3317","crate_id":1,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10118:640"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:52:1835":{"id":"0:52:1835","crate_id":0,"name":"get_u16","span":{"filename":"src/buf/buf_impl.rs","begin":[333,4],"end":[335,5]},"visibility":"default","docs":"Gets an unsigned 16 bit integer from `self` in big-endian byte order.\n\nThe current position is advanced by 2.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x09 hello\"[..];\nassert_eq!(0x0809, buf.get_u16());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:571:695":{"id":"0:571:695","crate_id":0,"name":"hash","span":{"filename":"src/bytes.rs","begin":[579,4],"end":[584,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"hash::Hasher","id":"1:10332:142","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5635:4873":{"id":"5:5635:4873","crate_id":5,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5636:6551","5:5637:59754","5:5638:59755"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1217:2022":{"id":"0:1217:2022","crate_id":0,"name":"advance_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cnt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3191:205-0:1248:1708":{"id":"a:1:3191:205-0:1248:1708","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Limit","id":"0:1248:1708","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3282:3172":{"id":"1:3282:3172","crate_id":1,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3284:1327"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:645:661":{"id":"0:645:661","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[787,4],"end":[789,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["slice",{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:599:585":{"id":"0:599:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[652,4],"end":[654,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:966":{"id":"0:966","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1471,0],"end":[1475,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:967:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:422:2395":{"id":"0:422:2395","crate_id":0,"name":"flush","span":{"filename":"src/buf/writer.rs","begin":[85,4],"end":[87,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"5:3953:191","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13275:56868":{"id":"1:13275:56868","crate_id":1,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"1:12826:3278","`DoubleEndedIterator`":"1:8323:116","str::match_indices":"5:15741:2899","prim@char":"5:15735:2894"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"1:49307:4572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12851:4390","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13278:56869":{"id":"1:13278:56869","crate_id":1,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:649:661":{"id":"0:649:661","crate_id":0,"name":"from","span":{"filename":"src/bytes.rs","begin":[799,4],"end":[802,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["vec",{"kind":"resolved_path","inner":{"name":"Vec","id":"4:7753:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:874":{"id":"0:874","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1096,0],"end":[1096,23]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2836:120","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:627:585":{"id":"0:627:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[736,4],"end":[738,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:560":{"id":"0:560","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[526,0],"end":[560,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["copy_to_slice","get_f64","get_u32","get_f32","get_u16","get_i8","get_u8","get_i128","get_u128_le","get_i128_le","reader","get_i64_le","get_i64","get_u64_le","get_i32_le","get_i32","chunks_vectored","get_u32_le","get_i16_le","get_i16","get_u16_le","get_uint_le","get_int","get_int_le","take","chain","copy_to_bytes","has_remaining","get_f32_le","get_uint","get_u128","get_u64","get_f64_le"],"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:561:1761","0:562:1724","0:563:1727","0:564:1931"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:3908-0:1298:1712":{"id":"b:1:3908-0:1298:1712","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3906:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298:1712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:3910:1398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:159:2116":{"id":"0:159:2116","crate_id":0,"name":"put_u64","span":{"filename":"src/buf/buf_mut.rs","begin":[535,4],"end":[537,5]},"visibility":"default","docs":"Writes an unsigned 64 bit integer to `self` in the big-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_u64(0x0102030405060708);\nassert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3220:3079":{"id":"1:3220:3079","crate_id":1,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:185:2004":{"id":"0:185:2004","crate_id":0,"name":"remaining_mut","span":{"filename":"src/buf/buf_mut.rs","begin":[1037,4],"end":[1039,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13239:2726":{"id":"1:13239:2726","crate_id":1,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"prim@char":"5:15735:2894","self::pattern":"1:12826:3278","str::split_whitespace":"5:15741:2899","str::rsplit":"5:15741:2899","`DoubleEndedIterator`":"1:8323:116"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"1:49139:3034","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:601:976":{"id":"0:601:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[658,4],"end":[660,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:90:1761":{"id":"0:90:1761","crate_id":0,"name":"remaining","span":{"filename":"src/buf/buf_impl.rs","begin":[1023,4],"end":[1025,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5693:4871":{"id":"5:5693:4871","crate_id":5,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5694:58913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13312:56882":{"id":"1:13312:56882","crate_id":1,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10127:3319":{"id":"1:10127:3319","crate_id":1,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10128:640"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:1:3908-0:526:1588":{"id":"b:1:3908-0:526:1588","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"1:3906:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["1:3910:1398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1192:1895":{"id":"0:1192:1895","crate_id":0,"name":"get_uint","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["nbytes",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:158:2112":{"id":"0:158:2112","crate_id":0,"name":"put_i32_le","span":{"filename":"src/buf/buf_mut.rs","begin":[513,4],"end":[515,5]},"visibility":"default","docs":"Writes a signed 32 bit integer to `self` in little-endian byte order.\n\nThe current position is advanced by 4.\n\n# Examples\n\n```\nuse bytes::BufMut;\n\nlet mut buf = vec![];\nbuf.put_i32_le(0x0809A0A1);\nassert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");\n```\n\n# Panics\n\nThis function panics if there is not enough remaining capacity in\n`self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3635:209":{"id":"1:3635:209","crate_id":1,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3636:167","1:3637:3186","1:3638:666","1:3639:353"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"1:3640:133","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"1:3635:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:5555:4891":{"id":"5:5555:4891","crate_id":5,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5556:2670","5:5557:2600"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"5:10442:4336","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:147:2064":{"id":"0:147:2064","crate_id":0,"name":"put_slice","span":{"filename":"src/buf/buf_mut.rs","begin":[236,4],"end":[262,5]},"visibility":"default","docs":"Transfer bytes into `self` from `src` and advance the cursor by the\nnumber of bytes written.\n\n`self` must have enough remaining capacity to contain all of `src`.\n\n```\nuse bytes::BufMut;\n\nlet mut dst = [0; 6];\n\n{\n    let mut buf = &mut dst[..];\n    buf.put_slice(b\"hello\");\n\n    assert_eq!(1, buf.remaining_mut());\n}\n\nassert_eq!(b\"hello\\0\", &dst);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["src",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3290:3169":{"id":"1:3290:3169","crate_id":1,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3292:540"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:630":{"id":"0:630","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[747,0],"end":[751,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:631:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1010:640":{"id":"0:1010:640","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/debug.rs","begin":[46,4],"end":[48,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"1:10068:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:10057:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1292:732":{"id":"0:1292:732","crate_id":0,"name":"index_mut","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"RangeTo","id":"1:45608:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1203:2086":{"id":"0:1203:2086","crate_id":0,"name":"put_u16","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:534":{"id":"0:534","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[109,0],"end":[506,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:535:898","0:537:2462","0:538:771","0:539:1793","0:540:2199","0:541:1280","0:546:2510","0:547:2528","0:548:2537","0:549:2549","0:550:2555"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:12836:3274":{"id":"1:12836:3274","crate_id":1,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12838:4389","1:12839:56245","1:12840:56246","1:12841:56247","1:12842:56249","1:12843:56248","1:12844:56250"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:75:1923":{"id":"0:75:1923","crate_id":0,"name":"get_f64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[797,4],"end":[799,5]},"visibility":"default","docs":"Gets an IEEE754 double-precision (8 bytes) floating point number from\n`self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F hello\"[..];\nassert_eq!(1.2f64, buf.get_f64_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:603:585":{"id":"0:603:585","crate_id":0,"name":"eq","span":{"filename":"src/bytes.rs","begin":[664,4],"end":[666,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:549:2549":{"id":"0:549:2549","crate_id":0,"name":"truncate","span":{"filename":"src/bytes.rs","begin":[446,4],"end":[459,5]},"visibility":"public","docs":"Shortens the buffer, keeping the first `len` bytes and dropping the\nrest.\n\nIf `len` is greater than the buffer's current length, this has no\neffect.\n\nThe [`split_off`] method can emulate `truncate`, but this causes the\nexcess bytes to be returned instead of dropped.\n\n# Examples\n\n```\nuse bytes::Bytes;\n\nlet mut buf = Bytes::from(&b\"hello world\"[..]);\nbuf.truncate(5);\nassert_eq!(buf, b\"hello\"[..]);\n```\n\n[`split_off`]: #method.split_off","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5649:4875":{"id":"5:5649:4875","crate_id":5,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5650:8822","5:5651:58913","5:5652:6551","5:5653:60405","5:5654:5109","5:5655:5110","5:5656:60406","5:5657:1275","5:5658:60407","5:5659:60408","5:5660:60409","5:5661:60410","5:5662:60411","5:5663:60412","5:5664:60413","5:5665:60414"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1311:640":{"id":"0:1311:640","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/hex.rs","begin":[37,0],"end":[37,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"1:10068:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:10057:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:76:1931":{"id":"0:76:1931","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/buf_impl.rs","begin":[816,4],"end":[824,5]},"visibility":"default","docs":"Consumes `len` bytes inside self and returns new instance of `Bytes`\nwith this data.\n\nThis function may be optimized by the underlying type to avoid actual\ncopies. For example, `Bytes` implementation will do a shallow copy\n(ref-count increment).\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet bytes = (&b\"hello world\"[..]).copy_to_bytes(5);\nassert_eq!(&bytes[..], &b\"hello\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"crate::Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/buf/buf_mut.rs","begin":[1027,0],"end":[1029,1]},"visibility":{"restricted":{"parent":"0:99:1698","path":"::buf::buf_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140:1584","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["put_i32_le","put_i32","put_u32_le","put_f64","put_f64_le","has_remaining_mut","put_u16_le","put_int","put_i8","put_int_le","put_i128_le","put_i128","put_u128_le","put_slice","put_u64","put_i16_le","put_i16","put_f32","writer","put_u16","put_uint","put_bytes","put","put_i64","put_u64_le","put_i64_le","put_u32","put_f32_le","put_uint_le","limit","put_u8","put_u128","chain_mut"],"trait":{"kind":"resolved_path","inner":{"name":"BufMut","id":"0:140:1584","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"items":["0:1197:2004","0:1198:2049","0:1199:2022","0:1200:2064","0:1201:2075","0:1202:2082","0:1203:2086","0:1204:2091","0:1205:2095","0:1206:2098","0:1207:2102","0:1208:2106","0:1209:2109","0:1210:2112","0:1211:2116","0:1212:2120","0:1213:2123","0:1214:2126"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1222:2091":{"id":"0:1222:2091","crate_id":0,"name":"put_u16_le","span":{"filename":"src/buf/buf_mut.rs","begin":[1032,4],"end":[1032,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:877":{"id":"0:877","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1105,0],"end":[1113,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"1:10322:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:878:695"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:3179:196-0:1298:1712":{"id":"a:1:3179:196-0:1298:1712","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"1:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Writer","id":"0:1298:1712","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1255:1711":{"id":"0:1255:1711","crate_id":0,"name":"Reader","span":{"filename":"src/buf/reader.rs","begin":[11,0],"end":[13,1]},"visibility":"public","docs":"A `Buf` adapter which implements `io::Read` for the inner value.\n\nThis struct is generally created by calling `reader()` on `Buf`. See\ndocumentation of [`reader()`](trait.Buf.html#method.reader) for more\ndetails.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:304","a:1:3220:3079-0:1255:1711","a:1:3191:205-0:1255:1711","a:1:3179:196-0:1255:1711","a:1:9129:3448-0:1255:1711","a:1:9128:3449-0:1255:1711","b:1:3108-0:1255:1711","b:1:3123-0:1255:1711","b:1:3908-0:1255:1711","b:1:3118-0:1255:1711","b:1:2782-0:1255:1711","b:1:3112-0:1255:1711","b:1:2785-0:1255:1711","0:1258","0:309","0:312"]}},"0:1270:731":{"id":"0:1270:731","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"Range","id":"1:45562:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10367:3991":{"id":"1:10367:3991","crate_id":1,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10368:142","1:10369:17744","1:10370:56209"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3278:3168":{"id":"1:3278:3168","crate_id":1,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3280:251"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:921":{"id":"0:921","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1337,0],"end":[1337,32]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"1:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:964":{"id":"0:964","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1465,0],"end":[1469,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:965:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1155:1839":{"id":"0:1155:1839","crate_id":0,"name":"get_u16_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:67:1890":{"id":"0:67:1890","crate_id":0,"name":"get_i128_le","span":{"filename":"src/buf/buf_impl.rs","begin":[633,4],"end":[635,5]},"visibility":"default","docs":"Gets a signed 128 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 16.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x01020304050607080910111213141516, buf.get_i128_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:3220:3079-0:526:1588":{"id":"a:1:3220:3079-0:526:1588","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"1:3220:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:1:2785-0:1242:1707":{"id":"b:1:2785-0:1242:1707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"1:2779:2625","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:1242:1707","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["1:2787:2832"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:609:976":{"id":"0:609:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[682,4],"end":[684,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:307:2274":{"id":"0:307:2274","crate_id":0,"name":"get_mut","span":{"filename":"src/buf/reader.rs","begin":[40,4],"end":[42,5]},"visibility":"public","docs":"Gets a mutable reference to the underlying `Buf`.\n\nIt is inadvisable to directly read from the underlying `Buf`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"B"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:575":{"id":"0:575","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[593,0],"end":[600,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:8279:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:576:2248","0:577:1707","0:578:746"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1147:1790":{"id":"0:1147:1790","crate_id":0,"name":"chunks_vectored","span":{"filename":"src/buf/buf_impl.rs","begin":[1014,4],"end":[1014,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"IoSlice","id":"5:10945:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}}}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:907:664":{"id":"0:907:664","crate_id":0,"name":"from_iter","span":{"filename":"src/bytes_mut.rs","begin":[1198,4],"end":[1200,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["into_iter",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:8279:147","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:23482:4329":{"id":"1:23482:4329","crate_id":1,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:23483:4333"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:23478:4336","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3189:103","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"4:5817:4730":{"id":"4:5817:4730","crate_id":4,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5819:167","4:5820:415"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3184:1946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:1258":{"id":"0:1258","crate_id":0,"name":null,"span":{"filename":"src/buf/reader.rs","begin":[10,9],"end":[10,14]},"visibility":{"restricted":{"parent":"0:291:1701","path":"::buf::reader"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"1:10108:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10108:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255:1711","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["0:1260:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:335:2290":{"id":"0:335:2290","crate_id":0,"name":"set_limit","span":{"filename":"src/buf/take.rs","begin":[127,4],"end":[129,5]},"visibility":"public","docs":"Sets the maximum number of bytes that can be read.\n\n# Note\n\nIf the inner `Buf` has fewer bytes than `lim` then that is the actual\nnumber of available bytes.\n\n# Examples\n\n```rust\nuse bytes::{Buf, BufMut};\n\nlet mut buf = b\"hello world\".take(2);\nlet mut dst = vec![];\n\ndst.put(&mut buf);\nassert_eq!(*dst, b\"he\"[..]);\n\ndst.clear();\n\nbuf.set_limit(3);\ndst.put(&mut buf);\nassert_eq!(*dst, b\"llo\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["lim",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3252:3167":{"id":"1:3252:3167","crate_id":1,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3254:167","1:3255:1326"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:2801:101":{"id":"1:2801:101","crate_id":1,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2802:392","1:2803:394"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1189:1869":{"id":"0:1189:1869","crate_id":0,"name":"get_u64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:587":{"id":"0:587","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[619,0],"end":[623,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:588:585"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3422:1593":{"id":"1:3422:1593","crate_id":1,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3423:559"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:924":{"id":"0:924","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1351,0],"end":[1355,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:925:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:884":{"id":"0:884","crate_id":0,"name":null,"span":{"filename":"src/bytes_mut.rs","begin":[1127,0],"end":[1142,1]},"visibility":{"restricted":{"parent":"0:685:1586","path":"::bytes_mut"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_fmt","write_char"],"trait":{"kind":"resolved_path","inner":{"name":"Write","id":"1:10058:2394","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:885:1498","0:886:2833"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1285:731":{"id":"0:1285:731","crate_id":0,"name":"index","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"resolved_path","inner":{"name":"RangeInclusive","id":"1:45631:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/buf/chain.rs","begin":[232,0],"end":[243,1]},"visibility":{"restricted":{"parent":"0:199:1699","path":"::buf::chain"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"0:42:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"1:8279:147","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Chain","id":"0:1233:1706","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"items":["0:247:2248","0:248:1707","0:249:746"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:969:976":{"id":"0:969:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes_mut.rs","begin":[1478,4],"end":[1480,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:621:976":{"id":"0:621:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[718,4],"end":[720,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:890:2248":{"id":"0:890:2248","crate_id":0,"name":"Item","span":{"filename":"src/bytes_mut.rs","begin":[1151,4],"end":[1151,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"primitive","inner":"u8"},"generics":{"params":[],"where_predicates":[]}}},"0:567:524":{"id":"0:567:524","crate_id":0,"name":"deref","span":{"filename":"src/bytes.rs","begin":[566,4],"end":[568,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:815:2537":{"id":"0:815:2537","crate_id":0,"name":"split_to","span":{"filename":"src/bytes_mut.rs","begin":[361,4],"end":[375,5]},"visibility":"public","docs":"Splits the buffer into two at the given index.\n\nAfterwards `self` contains elements `[at, len)`, and the returned `BytesMut`\ncontains elements `[0, at)`.\n\nThis is an `O(1)` operation that just increases the reference count and\nsets a few indices.\n\n# Examples\n\n```\nuse bytes::BytesMut;\n\nlet mut a = BytesMut::from(&b\"hello world\"[..]);\nlet mut b = a.split_to(5);\n\na[0] = b'!';\nb[0] = b'j';\n\nassert_eq!(&a[..], b\"!world\");\nassert_eq!(&b[..], b\"jello\");\n```\n\n# Panics\n\nPanics if `at > len`.","links":{},"attrs":["#[must_use = \"consider BytesMut::advance if you don't need the other half\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13272:56867":{"id":"1:13272:56867","crate_id":1,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"prim@char":"5:15735:2894","self::pattern":"1:12826:3278","`DoubleEndedIterator`":"1:8323:116","str::rmatch_indices":"5:15741:2899"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"1:49289:4571","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10058:2394":{"id":"1:10058:2394","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10059:1498","1:10060:4211","1:10062:2833"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1196:1931":{"id":"0:1196:1931","crate_id":0,"name":"copy_to_bytes","span":{"filename":"src/buf/buf_impl.rs","begin":[1018,4],"end":[1018,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"crate::Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:329":{"id":"0:329","crate_id":0,"name":null,"span":{"filename":"src/buf/take.rs","begin":[19,0],"end":[130,1]},"visibility":{"restricted":{"parent":"0:316:1702","path":"::buf::take"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Take","id":"0:1261:1709","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:331:2246","0:332:1971","0:333:2274","0:334:1700","0:335:2290"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1289:167":{"id":"0:1289:167","crate_id":0,"name":"Output","span":{"filename":"src/buf/uninit_slice.rs","begin":[176,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"UninitSlice","id":"0:374:1710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"b:1:3118-0:1255:1711":{"id":"b:1:3118-0:1255:1711","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"1:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"1:3088:213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255:1711","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":["1:3121:123","1:3122:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3191:205":{"id":"1:3191:205","crate_id":1,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:624":{"id":"0:624","crate_id":0,"name":null,"span":{"filename":"src/bytes.rs","begin":[729,0],"end":[733,1]},"visibility":{"restricted":{"parent":"0:458:1585","path":"::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"String","id":"4:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:625:976"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:9129:3448-0:1255:1711":{"id":"a:1:9129:3448-0:1255:1711","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9129:3448","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"1:9129:3448","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Reader","id":"0:1255:1711","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:633:976":{"id":"0:633:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[754,4],"end":[756,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3640:133":{"id":"1:3640:133","crate_id":1,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3642:667"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"1:3635:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1209:2109":{"id":"0:1209:2109","crate_id":0,"name":"put_i32","span":{"filename":"src/buf/buf_mut.rs","begin":[1028,4],"end":[1028,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1306":{"id":"0:1306","crate_id":0,"name":null,"span":{"filename":"src/fmt/hex.rs","begin":[35,0],"end":[35,29]},"visibility":{"restricted":{"parent":"0:1011:2844","path":"::fmt::hex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"LowerHex","id":"1:10121:2869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BytesMut","id":"0:786:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1307:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13295:56876":{"id":"1:13295:56876","crate_id":1,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"1:12826:3278","prim@char":"5:15735:2894"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:12836:3274","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:12851:4390","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:61:1869":{"id":"0:61:1869","crate_id":0,"name":"get_u64_le","span":{"filename":"src/buf/buf_impl.rs","begin":[513,4],"end":[515,5]},"visibility":"default","docs":"Gets an unsigned 64 bit integer from `self` in little-endian byte order.\n\nThe current position is advanced by 8.\n\n# Examples\n\n```\nuse bytes::Buf;\n\nlet mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];\nassert_eq!(0x0102030405060708, buf.get_u64_le());\n```\n\n# Panics\n\nThis function panics if there is not enough remaining data in `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:629:976":{"id":"0:629:976","crate_id":0,"name":"partial_cmp","span":{"filename":"src/bytes.rs","begin":[742,4],"end":[744,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:526:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47181:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"cmp::Ordering","id":"1:37313:164","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"paths":{"17:10279:5759":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"5:3113:2305":{"crate_id":5,"path":["std","fs","read"],"kind":"function"},"5:8534:5115":{"crate_id":5,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:10814:5820":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:52080:4357":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"0:1233:1706":{"crate_id":0,"path":["bytes","buf","Chain"],"kind":"struct"},"4:6239:3127":{"crate_id":4,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:11572:6590":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"4:7239:6241":{"crate_id":4,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"16:4350:7238":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:9943:60688":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:49403:4576":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"5:11405:4946":{"crate_id":5,"path":["std","path","PrefixComponent"],"kind":"struct"},"6:4347:8841":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:12028:6681":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:12456:6769":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:48211:67":{"crate_id":1,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"1:10372:3992":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:4935:4539":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"5:15747:2903":{"crate_id":5,"path":["std","i8"],"kind":"primitive"},"16:7236:5560":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"12:2018:3121":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"17:12431:6765":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"5:15760:2916":{"crate_id":5,"path":["std","fn"],"kind":"primitive"},"1:22833:4334":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:53272:7864":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"5:10243:6354":{"crate_id":5,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:51446:4342":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"17:294:6349":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"16:4762:7250":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"6:3978:8705":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:3188:202":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:71:751":{"crate_id":1,"path":["core","isize"],"kind":"module"},"1:49361:4575":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:49307:4572":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:48202:129":{"crate_id":1,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"17:10140:5761":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:55809:221":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:23826:7739":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:49431:4579":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:3014:4285":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:22835:4333":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:13192:6989":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"4:4683:6245":{"crate_id":4,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:48968:3863":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"4:3823:6241":{"crate_id":4,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:32203:54636":{"crate_id":1,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"1:3906:68":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"18:644:5859":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:510:6351":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"5:10442:4336":{"crate_id":5,"path":["std","sealed","Sealed"],"kind":"trait"},"6:605:8468":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"12:2303:8397":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:4013:8723":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:13865:7179":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"6:1622:8544":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:22411:56084":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"5:11923:2563":{"crate_id":5,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:4033:8731":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:50911:4372":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:11159:6538":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:24374:3849":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:23647:4622":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:46704:3214":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:5057:4546":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"18:801:5847":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:4576:3020":{"crate_id":1,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"5:3235:5048":{"crate_id":5,"path":["std","fs","symlink_metadata"],"kind":"function"},"5:11235:5089":{"crate_id":5,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"16:7971:123":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:10115:115":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:2108:559":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:3247:3162":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"5:11221:5157":{"crate_id":5,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"4:8236:3196":{"crate_id":4,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:46478:3243":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:52979:4358":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"16:5314:6434":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"16:3195:5663":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"4:7797:6253":{"crate_id":4,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:47938:3318":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:4157:5824":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:8242:3218":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:3681:3081":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"16:6391:5539":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"18:849:5851":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:7982:3057":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"12:812:4802":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:6520:56239":{"crate_id":1,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:3088:213":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:49700:4401":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:13465:7055":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:45976:7762":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"6:1658:8574":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"16:6176:5533":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:51035:7796":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"6:4183:8791":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:49017:3869":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"6:4395:8864":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:6326:3234":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"4:8253:98":{"crate_id":4,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"5:5693:4871":{"crate_id":5,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:10332:142":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:55874:221":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:12385:6755":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:9727:620":{"crate_id":1,"path":["core","sync","atomic","fence"],"kind":"function"},"16:6644:5546":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"16:5815:5399":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"6:157:40009":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"17:10584:5823":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:22692:4333":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:9790:4548":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:13386:7033":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:11147:6537":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"16:6464:5500":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:4164:8790":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:49663:4400":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:49875:4589":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"5:8369:4996":{"crate_id":5,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:1311:5835":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"5:15205:7707":{"crate_id":5,"path":["std","alloc","System"],"kind":"struct"},"5:8020:5035":{"crate_id":5,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"1:49519:4388":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"5:15741:2899":{"crate_id":5,"path":["std","str"],"kind":"primitive"},"5:15756:2912":{"crate_id":5,"path":["std","u128"],"kind":"primitive"},"6:4120:8776":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:3951:8693":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"4:1080:6241":{"crate_id":4,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"6:537:8425":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"5:8177:5035":{"crate_id":5,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"4:4290:3854":{"crate_id":4,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"6:4127:8778":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:6072:5470":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"5:900:5013":{"crate_id":5,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"5:11965:4999":{"crate_id":5,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"12:1253:4815":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:9795:4549":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:47352:2563":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:47239:1707":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"17:13933:7199":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:37313:164":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"6:4300:8817":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"6:5386:9059":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"5:8727:7613":{"crate_id":5,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"6:1665:8578":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:55822:221":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:15070:4866":{"crate_id":5,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"17:13306:7012":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"6:4401:8865":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"16:6087:5485":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:45998:4492":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:10052:6455":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"18:650:5856":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"5:1132:4894":{"crate_id":5,"path":["std","backtrace","Backtrace"],"kind":"struct"},"6:6858:9283":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:2831:169":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"4:3320:4755":{"crate_id":4,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"16:5766:5397":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"16:5561:5385":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:9933:6447":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:9332:5786":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"5:7525:4225":{"crate_id":5,"path":["std","process","ChildStdin"],"kind":"struct"},"17:12247:6717":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:3157:111":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"17:9404:6345":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:24306:4628":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"4:8094:4792":{"crate_id":4,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:23942:4648":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"5:10979:1706":{"crate_id":5,"path":["std","io","Chain"],"kind":"struct"},"12:2323:8399":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"11:54:5292":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"1:46113:4713":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"5:1524:4978":{"crate_id":5,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"7:85:44850":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:13924:7195":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"5:11331:4935":{"crate_id":5,"path":["std","path","Prefix"],"kind":"enum"},"5:10725:5065":{"crate_id":5,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"6:6614:9277":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"6:1744:8620":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"4:5772:6241":{"crate_id":4,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"16:7378:5492":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"5:1497:4802":{"crate_id":5,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:46139:4496":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"6:6091:9192":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"6:6644:9280":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:23383:3850":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"17:13180:6984":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:3483:2331":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"6:4066:8747":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:2801:101":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"2:300:191":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:599:8465":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"17:9065:46874":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:11186:6539":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"5:13898:6236":{"crate_id":5,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"1:3290:3169":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"5:11994:5001":{"crate_id":5,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:10864:6517":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:4281:8809":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"6:1572:8511":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:12537:6780":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"9:27:5221":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"12:925:4800":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"4:4199:3123":{"crate_id":4,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"16:6110:5525":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"5:2166:3121":{"crate_id":5,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"1:46298:3223":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:13637:7101":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:10160:6459":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:10253:5749":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:52473:4383":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:55796:221":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:1619:4813":{"crate_id":5,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:47181:162":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"16:4890:7254":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"5:10945:1715":{"crate_id":5,"path":["std","io","IoSlice"],"kind":"struct"},"5:14548:7622":{"crate_id":5,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"17:11616:6599":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:13062:6943":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"5:11045:4863":{"crate_id":5,"path":["std","net","ip","IpAddr"],"kind":"enum"},"1:55716:4470":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"17:9574:5735":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:51373:4356":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"4:983:4791":{"crate_id":4,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:49918:4666":{"crate_id":1,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"1:13554:146":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"5:8626:5125":{"crate_id":5,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:13788:7158":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"18:774:6325":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"17:10435:6465":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"12:2032:4755":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:77:1458":{"crate_id":1,"path":["core","usize"],"kind":"module"},"5:9610:5082":{"crate_id":5,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"6:519:8417":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:37337:3669":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"4:8271:4765":{"crate_id":4,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:10489:5796":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:11519:6583":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:49115:4563":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"6:4439:8883":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"9:686:5171":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"1:9130:3447":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:47780:89":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"16:6999:5550":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:45677:2488":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"5:11002:3034":{"crate_id":5,"path":["std","io","Split"],"kind":"struct"},"1:24442:4631":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:3431:128":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:46327:3232":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"5:5705:4879":{"crate_id":5,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:48530:7785":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"6:5945:9131":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:12567:4570":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"16:5855:5400":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:12836:3274":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"5:6605:9177":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"5:3955:123":{"crate_id":5,"path":["std","io","error","Error"],"kind":"struct"},"4:5821:4728":{"crate_id":4,"path":["alloc","slice","Join"],"kind":"trait"},"1:50930:7795":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:46029:4715":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"4:8303:4766":{"crate_id":4,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:10224:6463":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"4:3380:4760":{"crate_id":4,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"5:9516:8306":{"crate_id":5,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"16:7360:180":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"5:10699:125":{"crate_id":5,"path":["std","fs","FileType"],"kind":"struct"},"4:3866:1970":{"crate_id":4,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"14:56:6568":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"6:5379:9058":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:12373:6753":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:11539:6584":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:45745:4466":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"5:13752:4230":{"crate_id":5,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:47945:3317":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"5:6345:4841":{"crate_id":5,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"16:7884:5495":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:681:6354":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"5:14680:6237":{"crate_id":5,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"16:6357:5538":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"5:4383:3048":{"crate_id":5,"path":["std","io","stdio","Stderr"],"kind":"struct"},"5:8948:5122":{"crate_id":5,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"5:1149:7596":{"crate_id":5,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:47282:3446":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:4786:4537":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"5:15733:2892":{"crate_id":5,"path":["std","bool"],"kind":"primitive"},"4:6457:3123":{"crate_id":4,"path":["alloc","string","Drain"],"kind":"struct"},"1:2779:2625":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"5:11883:59164":{"crate_id":5,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"6:88:39943":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"1:46307:3230":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"14:250:7521":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"18:704:6325":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"5:11264:9164":{"crate_id":5,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"16:3392:5673":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"12:354:7979":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:46437:3241":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"4:2314:4807":{"crate_id":4,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:11378:5787":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"5:5868:5156":{"crate_id":5,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"5:15750:2906":{"crate_id":5,"path":["std","i64"],"kind":"primitive"},"5:4267:5072":{"crate_id":5,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:11015:6531":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"9:157:5189":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"4:421:1717":{"crate_id":4,"path":["alloc","boxed","Box"],"kind":"struct"},"4:1184:7989":{"crate_id":4,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"4:1658:4802":{"crate_id":4,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:9476:6347":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:12142:6702":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"17:10117:5830":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:13429:7041":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"17:13547:7078":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:3207:4317":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:2320:2624":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"4:7753:219":{"crate_id":4,"path":["alloc","vec","Vec"],"kind":"struct"},"6:6200:9256":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"18:636:6325":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"6:511:7986":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"13:232:8396":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:12208:6712":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:10558:6472":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"5:14335:9308":{"crate_id":5,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"16:6682:5501":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:10516:5797":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:49557:4394":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"5:10536:4920":{"crate_id":5,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"9:469:9998":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"12:1855:141":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:5528:757":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:47308:191":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"16:3041:5661":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"6:0:776":{"crate_id":6,"path":["libc"],"kind":"module"},"1:48978:3870":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:10028:6453":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"6:4431:8878":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"5:10989:1709":{"crate_id":5,"path":["std","io","Take"],"kind":"struct"},"17:13810:7163":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:47952:2869":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"4:3732:156":{"crate_id":4,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"6:5522:9098":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:46060:4710":{"crate_id":1,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"17:12010:6680":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"16:7894:5523":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"1:3333:3179":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:48500:142":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"5:1075:4899":{"crate_id":5,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:53233:7863":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:9759:6444":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:46289:3222":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:49243:3858":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"4:5871:6251":{"crate_id":4,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"17:13453:7049":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:23576:4619":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"16:4852:7253":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"4:2761:4810":{"crate_id":4,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"4:1591:3854":{"crate_id":4,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"5:1472:3123":{"crate_id":5,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"5:7559:4227":{"crate_id":5,"path":["std","process","ChildStderr"],"kind":"struct"},"1:9129:3448":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:7856:5566":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:10211:6462":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"16:3018:5660":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"6:1533:8492":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"18:739:6332":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:2115:3153":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:52806:4355":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"5:11147:7673":{"crate_id":5,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"1:10111:106":{"crate_id":1,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"17:10179:6460":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:8238:3219":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"5:11492:4951":{"crate_id":5,"path":["std","path","StripPrefixError"],"kind":"struct"},"4:7822:6258":{"crate_id":4,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"12:2331:3120":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"5:1501:4975":{"crate_id":5,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"5:11072:4865":{"crate_id":5,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"1:50031:7792":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:51200:4373":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"16:5975:5528":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"5:12211:7606":{"crate_id":5,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:46659:3206":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"5:15758:2914":{"crate_id":5,"path":["std","usize"],"kind":"primitive"},"16:2773:5682":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:10656:6482":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:12408:6764":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"6:5371:9057":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:11148:3861":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:11358:5788":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:11962:6670":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"5:15229:5333":{"crate_id":5,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:11981:6675":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"16:4734:7249":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"4:3954:6241":{"crate_id":4,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"19:117:8348":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"2:0:413":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:46276:1706":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:10071:5834":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"4:3756:3854":{"crate_id":4,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"5:4621:2306":{"crate_id":5,"path":["std","io","BufRead"],"kind":"trait"},"17:8902:46870":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:11653:6605":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"5:12054:5127":{"crate_id":5,"path":["std","sync","once","OnceState"],"kind":"struct"},"5:3539:6210":{"crate_id":5,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"6:4494:8903":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"5:7511:4224":{"crate_id":5,"path":["std","process","Child"],"kind":"struct"},"1:52115:4339":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:4653:99":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"5:14034:3052":{"crate_id":5,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"4:8170:1707":{"crate_id":4,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"6:531:8423":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:23955:4647":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"5:7337:171":{"crate_id":5,"path":["std","path","Path"],"kind":"struct"},"6:632:8483":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:46675:3210":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"5:10329:6233":{"crate_id":5,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:49867:4594":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:10403:5757":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"5:5990:5097":{"crate_id":5,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"5:10579:1706":{"crate_id":5,"path":["std","error","Chain"],"kind":"struct"},"5:10553:36153":{"crate_id":5,"path":["std","env","VarError"],"kind":"enum"},"1:21:652":{"crate_id":1,"path":["core","format_args"],"kind":"macro"},"16:6152:5487":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"5:14776:4232":{"crate_id":5,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"5:15240:5333":{"crate_id":5,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"9:1075:5240":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"16:5927:5403":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:13446:7048":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:9849:60685":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"5:15738:2896":{"crate_id":5,"path":["std","pointer"],"kind":"primitive"},"5:14388:114":{"crate_id":5,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"5:9059:7613":{"crate_id":5,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"17:13119:6977":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"5:4346:3053":{"crate_id":5,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"6:4023:8728":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:11231:5730":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:2776:94":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"16:6807:5549":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"9:749:5175":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"1:8474:153":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"9:1020:5239":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:11640:6603":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"16:7295:5505":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:10061:6456":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:11738:6621":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:11822:6649":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:13056:7991":{"crate_id":1,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"1:50039:176":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"5:8691:158":{"crate_id":5,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"6:5185:8959":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"6:3918:8669":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"5:11939:1707":{"crate_id":5,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:47738:82":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:49735:4404":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"6:525:8420":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"5:5627:4872":{"crate_id":5,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"12:1200:5304":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:53096:7854":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:10255:695":{"crate_id":1,"path":["core","hash"],"kind":"module"},"5:13825:4229":{"crate_id":5,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"6:4377:8857":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:49636:4399":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"9:692:5173":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"1:3487:2332":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"16:2968:5659":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"4:7593:3127":{"crate_id":4,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"16:4448:7241":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"5:5683:4876":{"crate_id":5,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:53018:4378":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"5:5561:4889":{"crate_id":5,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:4641:4444":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:11199:6541":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:50888:4368":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:12480:6772":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"16:6691:5547":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:13842:7178":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:4684:3076":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"12:1144:4816":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"13:0:2943":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:46345:7774":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:9250:3274":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:10081:5759":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:8849:5726":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:50753:4379":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"5:2458:7607":{"crate_id":5,"path":["std","env","ArgsOs"],"kind":"struct"},"6:1527:8489":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:3299:3176":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"16:4506:7243":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"6:3892:8649":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"5:13577:4240":{"crate_id":5,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"4:1628:4799":{"crate_id":4,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:12221:6713":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:22409:56082":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:2836:120":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"17:13377:7032":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"5:14037:3048":{"crate_id":5,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"5:7182:7611":{"crate_id":5,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:50962:4360":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"12:1100:4813":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"6:3945:8692":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"16:5330:6435":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:45470:3189":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:11970:6672":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:9659:60681":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:13799:7162":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"5:11830:4231":{"crate_id":5,"path":["std","process","ExitStatus"],"kind":"struct"},"4:8419:3121":{"crate_id":4,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"6:1522:8487":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:10266:5748":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"5:8813:5135":{"crate_id":5,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"1:3282:3172":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"6:4364:8852":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"18:766:6337":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:49289:4571":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:10438:1280":{"crate_id":1,"path":["core","slice"],"kind":"module"},"17:9769:60686":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:10353:5752":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:48949:3852":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:13620:7094":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"6:6812:9281":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:46368:3236":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:12902:4393":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"5:3233:3281":{"crate_id":5,"path":["std","fs","metadata"],"kind":"function"},"1:10239:7727":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"16:2843:5656":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:51055:4337":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:3184:1946":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"5:11465:4948":{"crate_id":5,"path":["std","path","Components"],"kind":"struct"},"17:11254:5728":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"5:12108:4986":{"crate_id":5,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:46172:4656":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:12273:3848":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"4:8111:4793":{"crate_id":4,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:4922:7255":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"16:7264:5503":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"5:9222:4840":{"crate_id":5,"path":["std","std_float","StdFloat"],"kind":"trait"},"16:7786:5498":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"17:13942:7201":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"5:8081:6213":{"crate_id":5,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"16:3772:7233":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:11678:6607":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"5:13714:4228":{"crate_id":5,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"16:7073:5551":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"6:616:8473":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:9799:6445":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:14:2361":{"crate_id":1,"path":["core","write"],"kind":"macro"},"5:2171:4758":{"crate_id":5,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"14:47:7514":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"4:8436:3122":{"crate_id":4,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"12:2005:2563":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"0:0:1585":{"crate_id":0,"path":["bytes"],"kind":"module"},"1:49905:4665":{"crate_id":1,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"1:3422:1593":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:10317:5746":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:9245:5738":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"5:8861:4969":{"crate_id":5,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"17:12632:6804":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"4:3878:4770":{"crate_id":4,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"18:712:3669":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"5:11860:4233":{"crate_id":5,"path":["std","process","ExitCode"],"kind":"struct"},"1:46237:6260":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"5:15752:2908":{"crate_id":5,"path":["std","u8"],"kind":"primitive"},"4:3354:4758":{"crate_id":4,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"5:14371:125":{"crate_id":5,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"1:14010:3090":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"17:13348:7025":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"5:15748:2904":{"crate_id":5,"path":["std","i16"],"kind":"primitive"},"12:949:4977":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:46693:3212":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"16:3091:5719":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:10128:5831":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"5:14789:4985":{"crate_id":5,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"12:1762:6207":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"5:11811:4229":{"crate_id":5,"path":["std","process","CommandArgs"],"kind":"struct"},"1:13851:4605":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"3:0:2940":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"17:10635:6480":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:13540:7077":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:24272:4627":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:11100:5736":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"4:4612:220":{"crate_id":4,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:11082:5734":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:51350:4353":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"16:5941:175":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"6:1717:8610":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:45562:180":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"5:9643:6228":{"crate_id":5,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"16:4477:7242":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:1886:1713":{"crate_id":1,"path":["core","mem"],"kind":"module"},"17:12699:6811":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:49871:4595":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:53195:7861":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"5:10304:6231":{"crate_id":5,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:6051:9183":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:46468:1709":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:50075:4603":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"4:4627:6245":{"crate_id":4,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"5:11260:4886":{"crate_id":5,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:2431:3085":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:10950:6526":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:10129:3320":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"5:15701:10016":{"crate_id":5,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"1:3092:212":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:3718:3082":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"6:6893:9291":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"16:6126:5531":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"4:8317:4767":{"crate_id":4,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"5:4596:2394":{"crate_id":5,"path":["std","io","Write"],"kind":"trait"},"17:13733:7139":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:55848:221":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:46189:4657":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"16:6166:5532":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"12:1180:5303":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:3743:5817":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"6:1554:8500":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"5:13378:7988":{"crate_id":5,"path":["std","sys","unix","os","Env"],"kind":"struct"},"6:4133:8780":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:13760:7151":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:13497:7063":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"16:5632:5388":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"5:5555:4891":{"crate_id":5,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:24238:4626":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"12:937:4976":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"6:4040:8734":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"16:3145:5671":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"5:3251:5053":{"crate_id":5,"path":["std","fs","canonicalize"],"kind":"function"},"5:14971:4917":{"crate_id":5,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:13532:7074":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"6:5359:9050":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:12073:6693":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:8279:147":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:13685:7138":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"5:2397:7604":{"crate_id":5,"path":["std","env","VarsOs"],"kind":"struct"},"16:7024:5704":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"6:6899:9292":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:13735:54709":{"crate_id":1,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"5:3440:3040":{"crate_id":5,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:9592:124":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"1:11037:3857":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"9:963:5237":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"12:0:2948":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"1:31864:4680":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"16:2991:5670":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:3220:3079":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:13589:54662":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"6:4517:8913":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"0:42:1583":{"crate_id":0,"path":["bytes","buf","Buf"],"kind":"trait"},"12:1235:5305":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"16:7174:5554":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:12765:3277":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"16:6636:5504":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:45752:3330":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"4:69:3092":{"crate_id":4,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"5:2433:7605":{"crate_id":5,"path":["std","env","SplitPaths"],"kind":"struct"},"1:3623:3184":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:24578:4634":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:8039:7990":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"5:2188:4760":{"crate_id":5,"path":["std","collections","hash","set","Union"],"kind":"struct"},"5:10957:3031":{"crate_id":5,"path":["std","io","SeekFrom"],"kind":"enum"},"16:7195:5556":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:46406:3238":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:11328:6545":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"5:15706:35631":{"crate_id":5,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:49542:4391":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"4:8133:1707":{"crate_id":4,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:46377:3245":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"16:7406:5491":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"5:11227:5100":{"crate_id":5,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:12712:6812":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:49393:3035":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:48722:4722":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:13938:137":{"crate_id":1,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:11588:6595":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"0:1261:1709":{"crate_id":0,"path":["bytes","buf","Take"],"kind":"struct"},"1:22639:4335":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:9551:5727":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"5:15739:2897":{"crate_id":5,"path":["std","array"],"kind":"primitive"},"16:3939:7235":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"5:11216:5154":{"crate_id":5,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"5:4305:3050":{"crate_id":5,"path":["std","io","stdio","Stdin"],"kind":"struct"},"1:3398:112":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"5:11817:167":{"crate_id":5,"path":["std","process","Output"],"kind":"struct"},"1:50776:4367":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"5:7545:4226":{"crate_id":5,"path":["std","process","ChildStdout"],"kind":"struct"},"17:13590:7088":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"5:11167:5090":{"crate_id":5,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:2829:398":{"crate_id":1,"path":["core","cmp"],"kind":"module"},"1:47360:3854":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:32039:2330":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"4:6634:69":{"crate_id":4,"path":["alloc","sync","Arc"],"kind":"struct"},"1:3411:2623":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:10304:5747":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:10041:6454":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:51016:4352":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"16:2866:5657":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"5:4273:5074":{"crate_id":5,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"4:1669:180":{"crate_id":4,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"5:14952:4911":{"crate_id":5,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"6:4317:8826":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:49343:4574":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"14:11:7514":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"5:4605:10294":{"crate_id":5,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"5:3116:3028":{"crate_id":5,"path":["std","fs","read_to_string"],"kind":"function"},"0:1248:1708":{"crate_id":0,"path":["bytes","buf","Limit"],"kind":"struct"},"1:32103:54639":{"crate_id":1,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"5:13213:5102":{"crate_id":5,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"1:23757:9317":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:48726:3880":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"5:1642:4816":{"crate_id":5,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"16:7571:5484":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"5:5838:5153":{"crate_id":5,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"6:5563:9124":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"4:6746:3020":{"crate_id":4,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"12:1688:5317":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"16:5996:5529":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"5:11945:4998":{"crate_id":5,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:10058:2394":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"5:1507:4976":{"crate_id":5,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"4:6670:4750":{"crate_id":4,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:10367:3991":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"17:13296:7011":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"16:6413:5321":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:10458:6396":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:12442:6767":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:51762:4370":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"9:722:5174":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"5:14565:4233":{"crate_id":5,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"5:4480:3058":{"crate_id":5,"path":["std","io","util","Repeat"],"kind":"struct"},"6:5428:9077":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"4:4427:2563":{"crate_id":4,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"16:7042:5705":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"6:1547:8497":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"5:3617:3043":{"crate_id":5,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"16:7928:4465":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"5:14696:6238":{"crate_id":5,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"6:1729:5101":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:10331:5761":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"5:15130:5088":{"crate_id":5,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"5:2159:1707":{"crate_id":5,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:12582:6787":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:9280:6435":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"16:7514:5507":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"5:7573:4228":{"crate_id":5,"path":["std","process","Command"],"kind":"struct"},"1:51169:4369":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"5:11069:4864":{"crate_id":5,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"1:49438:4580":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"18:667:5861":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:50116:3197":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"5:10996:1588":{"crate_id":5,"path":["std","io","Bytes"],"kind":"struct"},"1:12826:3278":{"crate_id":1,"path":["core","str","pattern"],"kind":"module"},"6:1596:8528":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"5:15749:2905":{"crate_id":5,"path":["std","i32"],"kind":"primitive"},"4:3028:8248":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"12:112:7978":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"5:6839:4851":{"crate_id":5,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"4:1475:4815":{"crate_id":4,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"4:0:262":{"crate_id":4,"path":["alloc"],"kind":"module"},"16:3320:5720":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"5:12548:5044":{"crate_id":5,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"16:6591:5545":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"5:14320:4888":{"crate_id":5,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"6:4262:8797":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:4931:3331":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"16:3218:5664":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"5:15751:2907":{"crate_id":5,"path":["std","i128"],"kind":"primitive"},"1:3321:3177":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"4:375:3094":{"crate_id":4,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:3341:3181":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"5:15745:2901":{"crate_id":5,"path":["std","f32"],"kind":"primitive"},"17:9440:6346":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:10125:175":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"17:13574:7085":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:8348:2276":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"17:9839:5761":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:11809:6645":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"1:52002:4350":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"18:152:7973":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:10887:6518":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:5086:3334":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"4:1602:1707":{"crate_id":4,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"9:809:4945":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"6:5130:8920":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"6:610:8470":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"5:10487:5019":{"crate_id":5,"path":["std","thread","Thread"],"kind":"struct"},"5:9738:6230":{"crate_id":5,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"6:578:8454":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"6:5953:9136":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"16:3172:5662":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"16:547:5394":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:22432:56087":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:3013:4336":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:10448:5781":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:24204:4625":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"12:2039:4757":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"16:6136:5526":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"5:9346:60377":{"crate_id":5,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"4:7355:1707":{"crate_id":4,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:11231:3856":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"5:10936:3059":{"crate_id":5,"path":["std","io","util","Sink"],"kind":"struct"},"9:996:5238":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"5:5860:5155":{"crate_id":5,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:11118:46879":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"4:1224:4806":{"crate_id":4,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"16:5295:45295":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"4:3743:2563":{"crate_id":4,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"4:7194:3123":{"crate_id":4,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:46039:4716":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"6:3881:8641":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:4866:3329":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:49847:4588":{"crate_id":1,"path":["core","str","LinesAnyMap"],"kind":"struct"},"1:47248:3445":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"16:5456:5377":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:11406:6549":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"16:7279:5706":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:46247:7773":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"16:6577:5544":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:49048:3865":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"6:4046:8736":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"6:4459:8890":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:543:8428":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"6:4203:8793":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"5:14405:59151":{"crate_id":5,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"5:10515:35627":{"crate_id":5,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"5:6769:4849":{"crate_id":5,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:9809:60683":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"6:563:8445":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"16:5360:5372":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"17:11750:6622":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"18:620:6324":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:11696:6616":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"6:6124:9206":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:23773:7734":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"16:3338:5407":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"16:4995:7257":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:12845:4389":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:13772:7154":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"6:584:8457":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:12494:6774":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"6:1723:8613":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:22633:4332":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"16:7392:5493":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"8:0:2944":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"10:0:2946":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"5:1428:3854":{"crate_id":5,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"16:5384:5373":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:5502:4440":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"6:6085:9190":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:47300:174":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"5:11313:38188":{"crate_id":5,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:52869:4375":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:2877:170":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:47223:2563":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"16:7467:5489":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:13780:7157":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"6:4193:8792":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"5:8298:4769":{"crate_id":5,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"15:230:5324":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:13394:7035":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:8756:3217":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:12851:4390":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:1540:8495":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:9128:3449":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"6:3997:8718":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:3185:3080":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"6:3990:8714":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:13506:7064":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:50801:4359":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"16:5960:5405":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:9528:1588":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"5:11209:4857":{"crate_id":5,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:47959:2870":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:10057:191":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"5:2765:4893":{"crate_id":5,"path":["std","error","Indented"],"kind":"struct"},"17:299:6350":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:12598:6791":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"16:5753:5396":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"5:6861:4846":{"crate_id":5,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"5:11872:59149":{"crate_id":5,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"4:6393:208":{"crate_id":4,"path":["alloc","string","ToString"],"kind":"trait"},"4:8141:180":{"crate_id":4,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"17:12095:6694":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:3082:145":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"6:1563:8505":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"5:3249:5052":{"crate_id":5,"path":["std","fs","read_link"],"kind":"function"},"6:4272:8804":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:10938:6525":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"5:11475:2563":{"crate_id":5,"path":["std","path","Iter"],"kind":"struct"},"1:45654:185":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"12:840:4762":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:3257:3164":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:6768:3246":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"17:12725:6813":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:11434:6553":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:11932:6661":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:49863:4596":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"17:11628:6600":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:52049:4354":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"5:2582:7608":{"crate_id":5,"path":["std","error","from","StringError"],"kind":"struct"},"16:7205:5557":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:3085:131":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"0:6:1582":{"crate_id":0,"path":["bytes","buf"],"kind":"module"},"17:11947:6665":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"5:5635:4873":{"crate_id":5,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"16:4304:7237":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"6:5241:8983":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"6:5414:9072":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"13:120:45191":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"15:0:2950":{"crate_id":15,"path":["addr2line"],"kind":"module"},"4:7426:6241":{"crate_id":4,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:5978:9154":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:49157:3860":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"5:10929:3057":{"crate_id":5,"path":["std","io","util","Empty"],"kind":"struct"},"6:5347:9045":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:46388:3237":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:13665:7730":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"16:6021:5655":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:48958:3862":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:8749:3077":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"17:9971:60679":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:13554:7079":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:49422:4578":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"16:6424:5540":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"16:2816:5675":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"6:5459:9085":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"4:1923:3121":{"crate_id":4,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"17:12507:6775":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:10236:5725":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"5:1302:139":{"crate_id":5,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"16:2945:5681":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:2140:1029":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"1:46159:4655":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"4:8149:4727":{"crate_id":4,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"6:5167:8946":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:13282:7010":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"5:5284:5088":{"crate_id":5,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"5:3261:5058":{"crate_id":5,"path":["std","fs","read_dir"],"kind":"function"},"1:51122:4381":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"5:14112:5019":{"crate_id":5,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"4:8223:3120":{"crate_id":4,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:2190:3308":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:8275:132":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:12051:6684":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"5:9473:6226":{"crate_id":5,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:24948:4498":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:11779:6633":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"5:14395:1715":{"crate_id":5,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"16:3241:5665":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"16:6238:5490":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:3191:205":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"6:6155:9232":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"4:2537:4811":{"crate_id":4,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"5:2852:166":{"crate_id":5,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"16:4790:7251":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:3428:127":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"4:3313:2563":{"crate_id":4,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:9632:76":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"5:10733:3042":{"crate_id":5,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"4:1461:4814":{"crate_id":4,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:3311:3174":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"6:6185:9249":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"16:6518:5542":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"16:7453:5488":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"16:5488:5381":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"5:10469:5033":{"crate_id":5,"path":["std","thread","ThreadId"],"kind":"struct"},"15:248:5325":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:49058:3866":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"12:784:4801":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"5:14763:4231":{"crate_id":5,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"4:2294:4832":{"crate_id":4,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"6:3862:8631":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:1708:8604":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:48522:7784":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:13318:7015":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"1:49109:3275":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"17:13172:6983":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:0:471":{"crate_id":1,"path":["core"],"kind":"module"},"1:49039:3867":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:12552:6784":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"5:12034:5121":{"crate_id":5,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"1:50993:4348":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"16:4230:7236":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"5:1633:4814":{"crate_id":5,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"4:8088:1707":{"crate_id":4,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"18:782:6325":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"4:1581:2563":{"crate_id":4,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:51074:7797":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:12544:4569":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"12:976:4979":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"5:13730:8244":{"crate_id":5,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"1:51421:4341":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"5:9648:6229":{"crate_id":5,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"17:12307:6728":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"5:894:5012":{"crate_id":5,"path":["std","thread","scoped","Scope"],"kind":"struct"},"4:2202:4763":{"crate_id":4,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"16:5717:5392":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"5:11481:4950":{"crate_id":5,"path":["std","path","Ancestors"],"kind":"struct"},"5:1446:4762":{"crate_id":5,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:3079:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:49447:4581":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:45738:4465":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"17:12568:6785":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:47654:80":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"5:14345:4884":{"crate_id":5,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"14:231:3270":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"16:2733:5410":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"5:7686:4236":{"crate_id":5,"path":["std","process","Termination"],"kind":"trait"},"9:776:5219":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"17:10926:6524":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"5:5281:5087":{"crate_id":5,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"5:10443:5009":{"crate_id":5,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:47231:3854":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"5:10570:7622":{"crate_id":5,"path":["std","env","JoinPathsError"],"kind":"struct"},"4:2184:6243":{"crate_id":4,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"4:1000:2563":{"crate_id":4,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"6:4449:8889":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"4:8364:3268":{"crate_id":4,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:3252:3167":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"5:6465:4902":{"crate_id":5,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:10420:5743":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:9689:60682":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"5:1041:4905":{"crate_id":5,"path":["std","thread","JoinHandle"],"kind":"struct"},"5:2183:4757":{"crate_id":5,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"5:15754:2910":{"crate_id":5,"path":["std","u32"],"kind":"primitive"},"1:5012:3330":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"16:5505:5382":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"4:1647:4801":{"crate_id":4,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:49030:3864":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:12982:6882":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"16:6269:5537":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"4:3284:92":{"crate_id":4,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"5:14552:1583":{"crate_id":5,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"17:9088:46875":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"18:660:5860":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:2543:5793":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:9637:83":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"6:3957:8695":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:12195:6710":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"6:5210:8964":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:51398:4338":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"5:1190:8303":{"crate_id":5,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"16:4704:7248":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:7803:3204":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"17:13746:7145":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"12:160:5306":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:11499:6573":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:2512:5745":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:12685:6808":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"4:6936:4734":{"crate_id":4,"path":["alloc","task","Wake"],"kind":"trait"},"5:3276:1714":{"crate_id":5,"path":["std","io"],"kind":"module"},"1:13539:134":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"6:5400:9070":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"19:0:973":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:7146:5552":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"12:1651:5315":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"5:1152:7598":{"crate_id":5,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"5:11015:4857":{"crate_id":5,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"5:15757:2913":{"crate_id":5,"path":["std","isize"],"kind":"primitive"},"5:7403:115":{"crate_id":5,"path":["std","path","Display"],"kind":"struct"},"5:11978:5000":{"crate_id":5,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"6:6935:9299":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:10906:2563":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:52932:4340":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"16:0:2951":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:49879:4590":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:10623:6479":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:12946:6851":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:11110:3860":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"5:4539:2304":{"crate_id":5,"path":["std","io","Read"],"kind":"trait"},"1:4284:1707":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:11733:3872":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"17:13978:7205":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:11001:6530":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:46336:3233":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"4:6654:4740":{"crate_id":4,"path":["alloc","sync","Weak"],"kind":"struct"},"1:48940:3851":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"4:8286:4656":{"crate_id":4,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"6:4425:8875":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"4:1549:91":{"crate_id":4,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:11482:6568":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:23920:9320":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"4:3023:56711":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"16:5672:5389":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"12:1159:5302":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:3646:3186":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"6:5987:9155":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:11665:6606":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:53076:7852":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"5:14866:4242":{"crate_id":5,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"0:786:1589":{"crate_id":0,"path":["bytes","BytesMut"],"kind":"struct"},"5:10668:4897":{"crate_id":5,"path":["std","fs","Metadata"],"kind":"struct"},"1:46666:3208":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"4:5299:186":{"crate_id":4,"path":["alloc","rc","Rc"],"kind":"struct"},"16:6718:5693":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:51923:4362":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"4:5857:6249":{"crate_id":4,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"0:526:1588":{"crate_id":0,"path":["bytes","Bytes"],"kind":"struct"},"16:3488:5669":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"4:3032:8249":{"crate_id":4,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:13630:173":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"16:5029:7258":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"5:6607:9179":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:22824:4336":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:48512:4945":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"16:7804:5497":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"4:3346:4757":{"crate_id":4,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:2692:560":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"6:6028:9182":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"5:3908:4967":{"crate_id":5,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:3465:3083":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"16:3506:5668":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"4:5817:4730":{"crate_id":4,"path":["alloc","slice","Concat"],"kind":"trait"},"1:8055:3207":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"6:3905:8659":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:46052:4582":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:8929:46871":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"6:4470:8896":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:51683:4382":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"4:3325:4756":{"crate_id":4,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:12521:6778":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"6:4145:8789":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:13402:7037":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:13356:7028":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"5:8276:4945":{"crate_id":5,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"1:22392:56049":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"5:13450:4925":{"crate_id":5,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"1:47368:1707":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"16:7226:5559":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"5:10811:4964":{"crate_id":5,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"18:610:5857":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"16:6219:5535":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"5:8268:5035":{"crate_id":5,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"4:1446:4816":{"crate_id":4,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:23718:7732":{"crate_id":1,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"6:6239:9271":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"5:10816:4965":{"crate_id":5,"path":["std","io","error","Custom"],"kind":"struct"},"12:968:4978":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"6:6910:9296":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"18:0:2953":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:47214:2248":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:13902:187":{"crate_id":1,"path":["core","task","ready","Ready"],"kind":"struct"},"1:3345:3182":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:4095:8763":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"12:877:3121":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"12:1667:5316":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:13627:7096":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:13221:6997":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:10119:3318":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"5:4270:5073":{"crate_id":5,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:23482:4329":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"16:6014:5530":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:3187:203":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"16:5472:5380":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:10827:5821":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"14:194:45219":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:48299:3316":{"crate_id":1,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:46267:3221":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"5:1482:3121":{"crate_id":5,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"18:720:6327":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"16:5273:5414":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"5:3563:3036":{"crate_id":5,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"6:4478:8898":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:2204:4286":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"5:3110:5045":{"crate_id":5,"path":["std","fs","DirEntry"],"kind":"struct"},"6:4511:8911":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:48483:7779":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"6:6887:9290":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:11458:6567":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:46077:4581":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:13331:7020":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:45631:183":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"4:1204:4805":{"crate_id":4,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"4:8176:1707":{"crate_id":4,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:3286:3170":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"5:8362:188":{"crate_id":5,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"6:4387:8860":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:10121:2869":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"5:2723:4892":{"crate_id":5,"path":["std","error","Report"],"kind":"struct"},"5:8951:4932":{"crate_id":5,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:5481:15455":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:32045:3156":{"crate_id":1,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"17:10407:5744":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:47528:85":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:3306:3173":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:13205:6994":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:51223:4376":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:10611:6478":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"16:3429:5412":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"16:5346:5486":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:3189:103":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:3197:3119":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:10717:4336":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"16:5522:5383":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:46120:4714":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:45608:184":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:32051:54640":{"crate_id":1,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"1:24340:4629":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:3278:3168":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"18:820:5849":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"5:9024:4972":{"crate_id":5,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"16:6620:5688":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"5:9595:5081":{"crate_id":5,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"6:4293:8816":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:11026:6532":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:12040:6683":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"16:6491:5541":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:12118:6700":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:13819:7165":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:11203:3855":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:3635:209":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"5:11104:9304":{"crate_id":5,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"1:3972:4431":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"5:15717:59150":{"crate_id":5,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"5:4173:3060":{"crate_id":5,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"18:790:5846":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:10788:6514":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"5:14828:4984":{"crate_id":5,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"6:1736:8616":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"6:4371:8854":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:3274:3165":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"5:8796:3208":{"crate_id":5,"path":["std","sync","once","Once"],"kind":"struct"},"6:6176:9246":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"12:892:5294":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"17:12262:6720":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"6:5407:9071":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"5:10678:4884":{"crate_id":5,"path":["std","fs","OpenOptions"],"kind":"struct"},"16:6208:5534":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"5:7628:4230":{"crate_id":5,"path":["std","process","Stdio"],"kind":"struct"},"18:754:60691":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"16:7477:5509":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:2314:5751":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:46488:3244":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"18:729:60692":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"12:2315:60672":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"5:15092:5087":{"crate_id":5,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:46416:3239":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"5:8376:4997":{"crate_id":5,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"5:1651:4815":{"crate_id":5,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:12618:3873":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:13477:7056":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"4:2246:4808":{"crate_id":4,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"6:3966:8700":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"5:6767:4847":{"crate_id":5,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:53131:7857":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"4:1619:4762":{"crate_id":4,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"12:853:4799":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"17:12287:6722":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"6:5420:9075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:47402:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:49571:4397":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"6:5969:9148":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"5:11890:9307":{"crate_id":5,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"4:8079:3091":{"crate_id":4,"path":["alloc","alloc","Global"],"kind":"struct"},"5:5697:4877":{"crate_id":5,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"5:6695:4887":{"crate_id":5,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"16:2794:5411":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"6:1690:8597":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"5:3953:191":{"crate_id":5,"path":["std","io","error","Result"],"kind":"typedef"},"1:52266:4363":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"6:4101:8766":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:23811:4517":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"6:5221:8972":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:49456:4582":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:12783:6822":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:10149:6446":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"5:9504:8305":{"crate_id":5,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"1:49855:4593":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"5:1459:4799":{"crate_id":5,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:7631:3229":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:12645:6805":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:55861:221":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:12550:6235":{"crate_id":5,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:10200:6461":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"18:885:5854":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"6:4005:8720":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"6:6221:9268":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"16:3118:5672":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:49004:3868":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:13609:7093":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"5:6227:5106":{"crate_id":5,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"18:694:5862":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:2004:3020":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"4:8341:201":{"crate_id":4,"path":["alloc","string","String"],"kind":"struct"},"1:49139:3034":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"17:10543:6469":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"6:4215:8794":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"5:11075:4960":{"crate_id":5,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"6:4227:8795":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:50857:4380":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:7545:3220":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"5:2362:581":{"crate_id":5,"path":["std","env"],"kind":"module"},"1:3652:3188":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"16:4386:7239":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"17:10801:6516":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:3179:196":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"5:5889:5159":{"crate_id":5,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"16:6554:5543":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"0:140:1584":{"crate_id":0,"path":["bytes","buf","BufMut"],"kind":"trait"},"5:15734:2893":{"crate_id":5,"path":["std","never"],"kind":"primitive"},"6:5159:8944":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:9264:6434":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:11304:46880":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:4629:4443":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:10975:6528":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:13520:7071":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"16:6605:5502":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:48475:3994":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"6:4083:8757":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"9:1056:5232":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"12:2009:1707":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:38557:4318":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"16:7549:5496":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"6:4052:8739":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"16:6949:5701":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"12:747:2563":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:49261:3855":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"16:2754:5409":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:10108:106":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"6:3868:8632":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"6:4073:8750":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:13051:7728":{"crate_id":1,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"17:9296:6343":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:3425:126":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"6:6106:9196":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:6852:9282":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"5:10741:1970":{"crate_id":5,"path":["std","io","cursor","Cursor"],"kind":"struct"},"6:1908:41313":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"18:136:7972":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"5:5766:5150":{"crate_id":5,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"1:11217:3859":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"4:8103:3123":{"crate_id":4,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"4:1430:4813":{"crate_id":4,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:8323:116":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:53116:7856":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"6:5469:9087":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:4614:7245":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"5:820:6230":{"crate_id":5,"path":["std","thread","local","os","Key"],"kind":"struct"},"18:837:4389":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"5:15735:2894":{"crate_id":5,"path":["std","char"],"kind":"primitive"},"12:2045:4760":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"6:4325:8830":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:46106:4712":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:4822:4538":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"4:5520:4740":{"crate_id":4,"path":["alloc","rc","Weak"],"kind":"struct"},"16:7823:5499":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"4:4226:6241":{"crate_id":4,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"6:3972:8702":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"5:7151:7611":{"crate_id":5,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:11915:6655":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"6:5998:9160":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:45587:181":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"5:4899:4856":{"crate_id":5,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"12:930:4975":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:13884:7184":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"16:2889:5676":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:47696:87":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"5:6771:4850":{"crate_id":5,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"5:12068:4984":{"crate_id":5,"path":["std","time","Instant"],"kind":"struct"},"6:4410:8868":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:3664:4386":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"5:6603:9175":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"17:9005:46872":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:49748:7787":{"crate_id":1,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"1:55835:221":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:11726:6620":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"4:5399:3020":{"crate_id":4,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"16:5790:5398":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"16:3549:7231":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"16:5580:5386":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:10726:199":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"5:7013:38187":{"crate_id":5,"path":["std","panic","always_abort"],"kind":"function"},"1:22430:56085":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:3327:3178":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:47570:79":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:2484:46962":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"18:866:5853":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:51578:7805":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"9:0:2945":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:4940:4540":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:46684:3058":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"4:7093:6253":{"crate_id":4,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"14:244:7519":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:50084:4604":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:12856:4387":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"5:15753:2909":{"crate_id":5,"path":["std","u16"],"kind":"primitive"},"5:10254:7708":{"crate_id":5,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:12583:4573":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:0:2952":{"crate_id":17,"path":["object"],"kind":"module"},"1:48241:123":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"5:7228:172":{"crate_id":5,"path":["std","path","PathBuf"],"kind":"struct"},"9:234:5197":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"0:374:1710":{"crate_id":0,"path":["bytes","buf","UninitSlice"],"kind":"struct"},"5:4385:3049":{"crate_id":5,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"12:761:3854":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"16:3064:5718":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"5:8578:5116":{"crate_id":5,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"17:9034:46873":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"6:5191:8962":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"5:14937:4910":{"crate_id":5,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:3350:3183":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"5:15755:2911":{"crate_id":5,"path":["std","u64"],"kind":"primitive"},"17:11847:6653":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"16:7342:5520":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"4:3024:8247":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"5:6367:4844":{"crate_id":5,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:10377:5750":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"12:2309:7923":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"5:6107:5105":{"crate_id":5,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:11337:5789":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:5066:3332":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:53210:7862":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"12:396:5308":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"6:6005:9164":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"16:5421:5375":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"16:4417:7240":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"6:6100:9195":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:12756:6819":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"6:161:40010":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"5:12059:4973":{"crate_id":5,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"18:857:5852":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"18:829:5850":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:9719:6443":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"6:4341:8838":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:46099:4580":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"5:6698:4841":{"crate_id":5,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"16:3287:5667":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"5:1518:4977":{"crate_id":5,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:10844:5761":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:12155:6705":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"6:6870:9285":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"16:6768:5697":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:6881:9289":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:49588:4398":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:3554:2396":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:48229:104":{"crate_id":1,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"17:10502:6467":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"6:6864:9284":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"5:15740:2898":{"crate_id":5,"path":["std","slice"],"kind":"primitive"},"16:3365:5408":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:49859:4592":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"5:783:6230":{"crate_id":5,"path":["std","thread","local","fast","Key"],"kind":"struct"},"1:4:958":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"5:12541:124":{"crate_id":5,"path":["std","sys","unix","fs","File"],"kind":"struct"},"1:50021:187":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:23927:4685":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:12327:6729":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:9896:60680":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:10123:2870":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:13154:6978":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:10571:6475":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"16:6366:5322":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"4:8335:9315":{"crate_id":4,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"5:11124:59153":{"crate_id":5,"path":["std","net","parser","AddrKind"],"kind":"enum"},"1:23874:10926":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"12:866:3123":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:13098:6972":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:52727:4371":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"6:1602:8530":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"5:12010:5002":{"crate_id":5,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"16:3714:7232":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:10468:5795":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:10095:5828":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:13370:7030":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"1:45710:3185":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:47444:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:10322:138":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"5:10546:4980":{"crate_id":5,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"1:52616:4351":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:10477:5794":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:46447:3242":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"5:1493:4801":{"crate_id":5,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"16:7185:5555":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"5:12049:4927":{"crate_id":5,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:13163:6982":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"6:5269:8995":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:11794:6639":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:49725:4403":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:46359:3235":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"6:569:8448":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"16:4671:7247":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:3316:3175":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:8954:5792":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"5:12063:4974":{"crate_id":5,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"5:6593:4875":{"crate_id":5,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:53157:7859":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"5:14031:3050":{"crate_id":5,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"1:53180:7860":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"16:6032:5416":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"5:12088:4985":{"crate_id":5,"path":["std","time","SystemTime"],"kind":"struct"},"1:51809:4374":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:46014:4494":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"5:7863:6213":{"crate_id":5,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"16:6744:5695":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"5:7915:5035":{"crate_id":5,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"5:7683:4234":{"crate_id":5,"path":["std","process","exit"],"kind":"function"},"16:7420:5508":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"1:2213:3307":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"12:463:7982":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:13598:7089":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:32004:2622":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"18:169:7976":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"5:11382:4945":{"crate_id":5,"path":["std","path","State"],"kind":"enum"},"1:49207:4568":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"18:744:60689":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:10001:46924":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:2867:163":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"16:5595:5387":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"14:216:10293":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"5:11039:4858":{"crate_id":5,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"5:10717:114":{"crate_id":5,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:11833:6266":{"crate_id":1,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"1:48178:67":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"16:7870:5494":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"6:5274:8996":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:10599:6477":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:10912:6520":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:51319:4349":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"16:3264:5666":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"5:2395:7603":{"crate_id":5,"path":["std","env","Vars"],"kind":"struct"},"6:4331:8832":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"5:11009:3035":{"crate_id":5,"path":["std","io","Lines"],"kind":"struct"},"6:5292:9008":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"5:14340:9310":{"crate_id":5,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"17:13582:7086":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:1236:6355":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"4:4583:6244":{"crate_id":4,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"16:3800:7234":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:47612:86":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:11993:6677":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"5:3529:3041":{"crate_id":5,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"5:11422:4947":{"crate_id":5,"path":["std","path","Component"],"kind":"enum"},"6:4501:8906":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:542:5419":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:49125:1588":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"14:0:2949":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:23740:4521":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"16:4955:7256":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"9:900:8402":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"4:7615:3128":{"crate_id":4,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:23834:7740":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:11604:6596":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"5:9511:6227":{"crate_id":5,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"6:591:8460":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:10106:5829":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"5:1488:4800":{"crate_id":5,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"5:15742:2900":{"crate_id":5,"path":["std","tuple"],"kind":"primitive"},"1:51498:7803":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"5:2456:7606":{"crate_id":5,"path":["std","env","Args"],"kind":"struct"},"12:774:1707":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"12:1118:4814":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"16:7761:5564":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"6:5197:8963":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"5:2027:141":{"crate_id":5,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"12:2025:4758":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:10988:6529":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"6:1617:8542":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:49851:4591":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:24510:4632":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"16:4823:7252":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"4:4499:4781":{"crate_id":4,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"7:0:1449":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:12671:6807":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"17:12275:6721":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"4:912:4790":{"crate_id":4,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"5:1438:1707":{"crate_id":5,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:11277:6542":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"1:3640:133":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:11075:3874":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:50128:3089":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"17:13898:7186":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:9738:640":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"1:27759:4324":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:12297:4692":{"crate_id":1,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:11767:6630":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"5:15746:2902":{"crate_id":5,"path":["std","f64"],"kind":"primitive"},"12:556:139":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"16:7333:5506":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"6:5282:9001":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:12234:6715":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"4:3472:3121":{"crate_id":4,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"5:4344:3052":{"crate_id":5,"path":["std","io","stdio","Stdout"],"kind":"struct"},"5:7815:5034":{"crate_id":5,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"1:49082:3276":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"5:14858:7704":{"crate_id":5,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"6:1760:8625":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"5:10673:5044":{"crate_id":5,"path":["std","fs","ReadDir"],"kind":"struct"},"1:45985:4491":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"16:7119:5417":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"5:7820:8239":{"crate_id":5,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"6:4112:8771":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:23478:4336":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:45717:4426":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"5:5649:4875":{"crate_id":5,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"16:3604:6364":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"5:11845:4232":{"crate_id":5,"path":["std","process","ExitStatusError"],"kind":"struct"},"1:10117:3317":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"5:14358:7703":{"crate_id":5,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"17:11555:6588":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"16:4641:7246":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"16:5707:5390":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"17:9729:60684":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:12795:6829":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"4:772:207":{"crate_id":4,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"5:15485:6240":{"crate_id":5,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:5309:3272":{"crate_id":1,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"5:3108:124":{"crate_id":5,"path":["std","fs","File"],"kind":"struct"},"5:15759:2915":{"crate_id":5,"path":["std","reference"],"kind":"primitive"},"1:48196:70":{"crate_id":1,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:48315:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:53057:4343":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:48931:3853":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"17:13258:7006":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"6:6214:9265":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"6:5255:8994":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:24544:4633":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"16:4535:7244":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"5:2155:2563":{"crate_id":5,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:13488:7060":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:9961:6448":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"6:5228:8974":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"6:6923:9297":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"5:10821:3044":{"crate_id":5,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:24408:4630":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"17:9133:46876":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"4:1637:4800":{"crate_id":4,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"5:11172:5091":{"crate_id":5,"path":["std","net","Shutdown"],"kind":"enum"},"1:10930:3854":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:46154:97":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:53085:7853":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:50824:4347":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:12771:6545":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"16:6569:5690":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"6:4241:8796":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"16:6780:5548":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:12610:6793":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"9:41:5222":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"5:11931:4995":{"crate_id":5,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:4008:6358":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:46317:3231":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:22781:4336":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"6:1700:8603":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:51272:4361":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:3262:3163":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"4:781:105":{"crate_id":4,"path":["alloc","borrow","Cow"],"kind":"enum"},"16:6252:5536":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"6:1630:8549":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:23798:4516":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:10955:3034":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"17:9886:6446":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"5:2565:123":{"crate_id":5,"path":["std","error","Error"],"kind":"trait"},"1:46457:3227":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:23852:10934":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:45797:4531":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"5:14808:9312":{"crate_id":5,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:6399:3224":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"6:5436:9079":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:47377:164":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"9:927:44947":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:14000:7211":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:3076:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"7:38:44843":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:45546:182":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"5:11241:5108":{"crate_id":5,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"1:5109:3333":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:12467:6770":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"4:3359:4759":{"crate_id":4,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:11835:6650":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"4:3935:3121":{"crate_id":4,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"1:10127:3319":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"9:603:10008":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"1:49714:4402":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"5:696:5008":{"crate_id":5,"path":["std","thread","local","LocalKey"],"kind":"struct"},"4:8352:3267":{"crate_id":4,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:47291:3497":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"5:10454:59796":{"crate_id":5,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"1:23890:10935":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:8288:2834":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"17:13041:6934":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"6:4523:8916":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"5:2162:3123":{"crate_id":5,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"6:1676:8586":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:13240:6998":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"5:11868:9306":{"crate_id":5,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"5:13359:7605":{"crate_id":5,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"5:15736:2895":{"crate_id":5,"path":["std","unit"],"kind":"primitive"},"1:22788:32280":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"16:7216:5558":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:13054:6941":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"16:7303:5562":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"12:377:5309":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:53105:7855":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:38494:4237":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"17:12741:6815":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:57131:7872":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:46397:3225":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"15:269:5329":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"16:7158:5553":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"16:2912:5658":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:48263:71":{"crate_id":1,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"16:6731:5694":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:10673:47062":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"12:181:5310":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"4:1678:4803":{"crate_id":4,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"6:670:40341":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:49883:117":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"17:9162:5729":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:48491:3993":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:13912:7193":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"6:5528:9099":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"5:8527:5113":{"crate_id":5,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:8752:3216":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"6:4358:8849":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"5:4307:3051":{"crate_id":5,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"5:4557:3029":{"crate_id":5,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:49189:4567":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:3337:3180":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"12:469:7983":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"17:13986:7208":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"16:5407:5374":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"18:677:138":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:13564:7082":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"6:6636:9278":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"6:4419:8874":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"5:10530:35629":{"crate_id":5,"path":["std","backtrace","RawFrame"],"kind":"enum"},"5:10464:5017":{"crate_id":5,"path":["std","thread","Builder"],"kind":"struct"},"5:14702:6239":{"crate_id":5,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"16:5736:5393":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:607:6353":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"4:8119:56350":{"crate_id":4,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"16:3522:6360":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:51602:7806":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"5:4512:3020":{"crate_id":5,"path":["std","io","Guard"],"kind":"struct"},"1:13841:3086":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"18:811:5848":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"4:909:93":{"crate_id":4,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:57110:7871":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"5:11286:4848":{"crate_id":5,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:12659:6806":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"16:7738:5563":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:9368:6344":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:24476:4238":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"5:2855:165":{"crate_id":5,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"0:1298:1712":{"crate_id":0,"path":["bytes","buf","Writer"],"kind":"struct"},"17:11030:123":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:22364:3669":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:11700:3871":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:3268:3166":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:48880:4562":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:53142:7858":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"0:1255:1711":{"crate_id":0,"path":["bytes","buf","Reader"],"kind":"struct"},"1:50707:7793":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"17:12182:6709":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"5:4614:3030":{"crate_id":5,"path":["std","io","Seek"],"kind":"trait"},"1:51840:4377":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:12168:6487":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"5:11161:5089":{"crate_id":5,"path":["std","net","tcp","Incoming"],"kind":"struct"},"6:4060:8744":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"4:1827:6241":{"crate_id":4,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"16:5433:5376":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:47486:78":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:9600:60687":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"4:3022:3266":{"crate_id":4,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:3294:3171":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"5:1157:35630":{"crate_id":5,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"5:1018:5035":{"crate_id":5,"path":["std","thread","Packet"],"kind":"struct"},"1:46425:3240":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:10529:6468":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:12917:6831":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"12:429:5307":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:45498:3084":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"5:2177:4755":{"crate_id":5,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"5:1530:4979":{"crate_id":5,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"16:6101:5483":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"16:7843:5565":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"18:896:5855":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:9649:6442":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"16:5231:7259":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:49097:4475":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:11714:6617":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"17:13963:7204":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"16:7250:5561":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:45970:4581":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"5:15214:59795":{"crate_id":5,"path":["std","panicking","Hook"],"kind":"enum"},"11:0:2947":{"crate_id":11,"path":["adler"],"kind":"module"},"17:9186:5791":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"11:46:8401":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"1:10998:3873":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"6:624:8478":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:22377:56049":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:11189:3858":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:12343:6734":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:22629:4336":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:50098:154":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:5002:4545":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"5:0:1302":{"crate_id":5,"path":["std"],"kind":"module"},"1:46083:4711":{"crate_id":1,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"5:5406:5095":{"crate_id":5,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"5:15151:5095":{"crate_id":5,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"17:13272:7009":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"5:1415:2563":{"crate_id":5,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"5:14965:4916":{"crate_id":5,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"6:4306:8820":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"0:1242:1707":{"crate_id":0,"path":["bytes","buf","IntoIter"],"kind":"struct"},"5:5876:5158":{"crate_id":5,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"6:6068:9185":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"5:10685:4885":{"crate_id":5,"path":["std","fs","Permissions"],"kind":"struct"},"5:10574:4818":{"crate_id":5,"path":["std","error","private","Internal"],"kind":"struct"},"5:14921:4909":{"crate_id":5,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"6:4255:5107":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:11045:46878":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:7733:4477":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:51546:7804":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"5:5643:4874":{"crate_id":5,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"14:189:7514":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:9210:46877":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:10068:130":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"6:1584:8520":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"5:11042:4859":{"crate_id":5,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"6:5548:9113":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:49413:4577":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:50728:7794":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"12:2013:3123":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:12507:4566":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"16:6964:3445":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"6:5312:9024":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:10962:6527":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"}},"external_crates":{"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":15}