{"root":"0:0:1782","crate_version":"2.0.0-rc.3","includes_private":false,"index":{"0:25:2220":{"id":"0:25:2220","crate_id":0,"name":"IterNames","span":{"filename":"src/traits.rs","begin":[14,4],"end":[14,58]},"visibility":"default","docs":"An iterator over the raw names and bits for enabled flags in an instance of the type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"generic","inner":"Self"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:28:1821":{"id":"0:28:1821","crate_id":0,"name":"bits","span":{"filename":"src/traits.rs","begin":[23,4],"end":[23,33]},"visibility":"default","docs":"Returns the raw value of the flags currently stored.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1761","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:70:656":{"id":"0:70:656","crate_id":0,"name":"fmt","span":{"filename":"src/parser.rs","begin":[22,9],"end":[22,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:69":{"id":"0:69","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[22,9],"end":[22,14]},"visibility":{"restricted":{"parent":"0:5:1762","path":"::parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9006:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:70:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2534:680":{"id":"1:2534:680","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:102":{"id":"0:102","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1760","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u32"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1760","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u8"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2546:127":{"id":"1:2546:127","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"1:39833:3707","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:66:1843":{"id":"0:66:1843","crate_id":0,"name":"ParseError","span":{"filename":"src/parser.rs","begin":[23,0],"end":[23,38]},"visibility":"public","docs":"An error encountered while parsing flags from text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:7","a:1:2673:217-0:66:1843","a:1:8140:3828-0:66:1843","a:1:8139:3829-0:66:1843","a:1:2687:225-0:66:1843","a:1:2737:2493-0:66:1843","b:1:3328-0:66:1843","b:1:2532-0:66:1843","b:1:2543-0:66:1843","b:1:2239-0:66:1843","b:1:2528-0:66:1843","b:1:2236-0:66:1843","b:1:2538-0:66:1843","0:69","0:11"]}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1760","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i32"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3330:1454":{"id":"1:3330:1454","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"1:47073:3152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:24:1795":{"id":"0:24:1795","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[11,4],"end":[11,37]},"visibility":"default","docs":"An iterator over enabled flags in an instance of the type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:36:1868":{"id":"0:36:1868","crate_id":0,"name":"is_all","span":{"filename":"src/traits.rs","begin":[54,4],"end":[54,29]},"visibility":"default","docs":"Returns `true` if all flags are currently set.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:2531:2638":{"id":"1:2531:2638","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2505:132"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:37:1872":{"id":"0:37:1872","crate_id":0,"name":"intersects","span":{"filename":"src/traits.rs","begin":[57,4],"end":[57,46]},"visibility":"default","docs":"Returns `true` if there are flags common to both `self` and `other`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:119":{"id":"0:119","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1760","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i128"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:9:2197":{"id":"0:9:2197","crate_id":0,"name":"invalid_named_flag","span":{"filename":"src/parser.rs","begin":[59,4],"end":[70,5]},"visibility":"public","docs":"A named flag that doesn't correspond to any on the flags type was encountered.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["flag",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9011:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl fmt::Display","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9011:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:2687:225-0:66:1843":{"id":"a:1:2687:225-0:66:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2687:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:94":{"id":"0:94","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1760","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u16"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:110":{"id":"0:110","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1760","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u64"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:29:1855":{"id":"0:29:1855","crate_id":0,"name":"from_bits","span":{"filename":"src/traits.rs","begin":[27,4],"end":[29,20]},"visibility":"default","docs":"Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1761","args":null}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2680:2226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:30:1860":{"id":"0:30:1860","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/traits.rs","begin":[33,4],"end":[33,52]},"visibility":"default","docs":"Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1761","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:42:1937":{"id":"0:42:1937","crate_id":0,"name":"set","span":{"filename":"src/traits.rs","begin":[72,4],"end":[72,48]},"visibility":"default","docs":"Inserts or removes the specified flags depending on the passed value.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}],["value",{"kind":"primitive","inner":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:2541:127":{"id":"1:2541:127","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"1:2512:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1760","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u128"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2236-0:66:1843":{"id":"b:1:2236-0:66:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2680:2226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2230:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2238:2390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:5:1762":{"id":"0:5:1762","crate_id":0,"name":"parser","span":{"filename":"src/parser.rs","begin":[1,0],"end":[111,40]},"visibility":"public","docs":"Parsing flags from text.\n\n`bitflags` defines the following whitespace-insensitive grammar for flags formatted\nas text:\n\n- _Flags:_ (_Flag_)`|`*\n- _Flag:_ _Identifier_ | _HexNumber_\n- _Identifier:_ Any Rust identifier\n- _HexNumber_: `0x`([0-9a-zA-Z])*\n\nAs an example, this is how `Flags::A | Flags::B | 0x0c` can be represented as text:\n\n```text\nA | B | 0x0c\n```","links":{},"attrs":["#![allow(clippy :: let_unit_value)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:66:1843"],"is_stripped":false}},"0:22:1761":{"id":"0:22:1761","crate_id":0,"name":"BitFlags","span":{"filename":"src/traits.rs","begin":[6,0],"end":[73,1]},"visibility":"public","docs":"A trait that is automatically implemented for all bitflags.\n\nIt should not be implemented manually.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:23:2216","0:24:1795","0:25:2220","0:26:1849","0:27:282","0:28:1821","0:29:1855","0:30:1860","0:31:1864","0:32:2078","0:33:781","0:34:2075","0:35:1866","0:36:1868","0:37:1872","0:38:1877","0:39:1879","0:40:1882","0:41:1884","0:42:1937"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ImplementedByBitFlagsMacro","id":"0:43:2214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:11":{"id":"0:11","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[78,0],"end":[108,1]},"visibility":{"restricted":{"parent":"0:5:1762","path":"::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:9011:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:12:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:27:282":{"id":"0:27:282","crate_id":0,"name":"all","span":{"filename":"src/traits.rs","begin":[20,4],"end":[20,21]},"visibility":"default","docs":"Returns the set containing all flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:2542:1441":{"id":"1:2542:1441","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:48878:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"1:2512:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:40:1882":{"id":"0:40:1882","crate_id":0,"name":"remove","span":{"filename":"src/traits.rs","begin":[66,4],"end":[66,38]},"visibility":"default","docs":"Removes the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:35:1866":{"id":"0:35:1866","crate_id":0,"name":"is_empty","span":{"filename":"src/traits.rs","begin":[51,4],"end":[51,31]},"visibility":"default","docs":"Returns `true` if no flags are currently stored.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:41:1884":{"id":"0:41:1884","crate_id":0,"name":"toggle","span":{"filename":"src/traits.rs","begin":[69,4],"end":[69,38]},"visibility":"default","docs":"Toggles the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:1:8140:3828-0:66:1843":{"id":"a:1:8140:3828-0:66:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8140:3828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:1:2538-0:66:1843":{"id":"b:1:2538-0:66:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2512:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2508:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2541:127","1:2542:1441"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:23:2216":{"id":"0:23:2216","crate_id":0,"name":"Bits","span":{"filename":"src/traits.rs","begin":[8,4],"end":[8,20]},"visibility":"default","docs":"The underlying integer type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Bits","id":"0:45:2216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:87":{"id":"0:87","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1760","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i8"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4-0:22:1761":{"id":"0:4-0:22:1761","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[351,0],"end":[351,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"kind":"import","inner":{"source":"traits::BitFlags","name":"BitFlags","id":"0:22:1761","glob":false}},"0:31:1864":{"id":"0:31:1864","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/traits.rs","begin":[37,4],"end":[37,50]},"visibility":"default","docs":"Convert from underlying bit representation, preserving all\nbits (even those not corresponding to a defined flag).","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1761","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:33:781":{"id":"0:33:781","crate_id":0,"name":"iter","span":{"filename":"src/traits.rs","begin":[45,4],"end":[45,33]},"visibility":"default","docs":"Iterate over enabled flag values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1761","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:38:1877":{"id":"0:38:1877","crate_id":0,"name":"contains","span":{"filename":"src/traits.rs","begin":[60,4],"end":[60,44]},"visibility":"default","docs":"Returns `true` if all of the flags in `other` are contained within `self`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:10:2199":{"id":"0:10:2199","crate_id":0,"name":"empty_flag","span":{"filename":"src/parser.rs","begin":[73,4],"end":[75,5]},"visibility":"public","docs":"A hex or named flag wasn't found between separators.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2547:1440":{"id":"1:2547:1440","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:48878:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"1:2512:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:8139:3829-0:66:1843":{"id":"a:1:8139:3829-0:66:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8139:3829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:1:2737:2493-0:66:1843":{"id":"a:1:2737:2493-0:66:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2737:2493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:44:2245":{"id":"0:44:2245","crate_id":0,"name":"Sealed","span":{"filename":"src/traits.rs","begin":[83,0],"end":[83,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:87","0:103","0:102","0:95","0:110","0:119","0:86","0:111","0:94","0:118"]}},"1:2238:2390":{"id":"1:2238:2390","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:12:656":{"id":"0:12:656","crate_id":0,"name":"fmt","span":{"filename":"src/parser.rs","begin":[79,4],"end":[107,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3328-0:66:1843":{"id":"b:1:3328-0:66:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2680:2226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3330:1454"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2239-0:66:1843":{"id":"b:1:2239-0:66:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2680:2226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2233:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2241:9436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:39:1879":{"id":"0:39:1879","crate_id":0,"name":"insert","span":{"filename":"src/traits.rs","begin":[63,4],"end":[63,38]},"visibility":"default","docs":"Inserts the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:95":{"id":"0:95","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1760","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i16"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:50:2259":{"id":"0:50:2259","crate_id":0,"name":"Internal","span":{"filename":"src/traits.rs","begin":[147,4],"end":[147,18]},"visibility":"default","docs":"The type of the internal field on the generated flags type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"b:1:2543-0:66:1843":{"id":"b:1:2543-0:66:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2502:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2512:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2546:127","1:2547:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2528-0:66:1843":{"id":"b:1:2528-0:66:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2505:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2502:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2531:2638"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:32:2078":{"id":"0:32:2078","crate_id":0,"name":"from_name","span":{"filename":"src/traits.rs","begin":[40,4],"end":[42,20]},"visibility":"default","docs":"Get the flag for a particular name.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2680:2226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:1:2673:217-0:66:1843":{"id":"a:1:2673:217-0:66:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2673:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:2241:9436":{"id":"1:2241:9436","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2532-0:66:1843":{"id":"b:1:2532-0:66:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2505:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2534:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:8:2194":{"id":"0:8:2194","crate_id":0,"name":"invalid_hex_flag","span":{"filename":"src/parser.rs","begin":[45,4],"end":[56,5]},"visibility":"public","docs":"An invalid hex flag was encountered.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["flag",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9011:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl fmt::Display","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9011:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:1782":{"id":"0:0:1782","crate_id":0,"name":"bitflags","span":{"filename":"src/lib.rs","begin":[11,0],"end":[1517,1]},"visibility":"public","docs":"A typesafe bitmask flag generator useful for sets of C-style flags.\nIt can be used for creating ergonomic wrappers around C APIs.\n\nThe `bitflags!` macro generates `struct`s that manage a set of flags. The\ntype of those flags must be some primitive integer.\n\n# Examples\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n        const ABC = Self::A.bits() | Self::B.bits() | Self::C.bits();\n    }\n}\n\nfn main() {\n    let e1 = Flags::A | Flags::C;\n    let e2 = Flags::B | Flags::C;\n    assert_eq!((e1 | e2), Flags::ABC);   // union\n    assert_eq!((e1 & e2), Flags::C);     // intersection\n    assert_eq!((e1 - e2), Flags::A);     // set difference\n    assert_eq!(!e2, Flags::A);           // set complement\n}\n```\n\nSee [`example_generated::Flags`](./example_generated/struct.Flags.html) for documentation of code\ngenerated by the above `bitflags!` expansion.\n\n# Visibility\n\nThe `bitflags!` macro supports visibility, just like you'd expect when writing a normal\nRust `struct`:\n\n```\nmod example {\n    use bitflags::bitflags;\n\n    bitflags! {\n        #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n        pub struct Flags1: u32 {\n            const A = 0b00000001;\n        }\n\n        #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n#       pub\n        struct Flags2: u32 {\n            const B = 0b00000010;\n        }\n    }\n}\n\nfn main() {\n    let flag1 = example::Flags1::A;\n    let flag2 = example::Flags2::B; // error: const `B` is private\n}\n```\n\n# Attributes\n\nAttributes can be attached to the generated flags types and their constants as normal.\n\n# Representation\n\nIt's valid to add a `#[repr(C)]` or `#[repr(transparent)]` attribute to a generated flags type.\nThe generated flags type is always guaranteed to be a newtype where its only field has the same\nABI as the underlying integer type.\n\nIn this example, `Flags` has the same ABI as `u32`:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[repr(transparent)]\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n```\n\n# Extending\n\nGenerated flags types belong to you, so you can add trait implementations to them outside\nof what the `bitflags!` macro gives:\n\n```\nuse std::fmt;\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n    }\n}\n\nimpl Flags {\n    pub fn clear(&mut self) {\n        *self.0.bits_mut() = 0;\n    }\n}\n\nfn main() {\n    let mut flags = Flags::A | Flags::B;\n\n    flags.clear();\n    assert!(flags.is_empty());\n\n    assert_eq!(format!(\"{:?}\", Flags::A | Flags::B), \"Flags(A | B)\");\n    assert_eq!(format!(\"{:?}\", Flags::B), \"Flags(B)\");\n}\n```\n\n# What's implemented by `bitflags!`\n\nThe `bitflags!` trait adds some trait implementations and inherent methods\nto generated flags types, but leaves room for you to choose the semantics\nof others.\n\n## Iterators\n\nThe following iterator traits are implemented for generated flags types:\n\n- `Extend`: adds the union of the instances iterated over.\n- `FromIterator`: calculates the union.\n- `IntoIterator`: iterates over set flag values.\n\n## Formatting\n\nThe following formatting traits are implemented for generated flags types:\n\n- `Binary`.\n- `LowerHex` and `UpperHex`.\n- `Octal`.\n\nAlso see the _Debug and Display_ section for details about standard text\nrepresentations for flags types.\n\n## Operators\n\nThe following operator traits are implemented for the generated `struct`s:\n\n- `BitOr` and `BitOrAssign`: union\n- `BitAnd` and `BitAndAssign`: intersection\n- `BitXor` and `BitXorAssign`: toggle\n- `Sub` and `SubAssign`: set difference\n- `Not`: set complement\n\n## Methods\n\nThe following methods are defined for the generated `struct`s:\n\n- `empty`: an empty set of flags\n- `all`: the set of all defined flags\n- `bits`: the raw value of the flags currently stored\n- `from_bits`: convert from underlying bit representation, unless that\n               representation contains bits that do not correspond to a\n               defined flag\n- `from_bits_truncate`: convert from underlying bit representation, dropping\n                        any bits that do not correspond to defined flags\n- `from_bits_retain`: convert from underlying bit representation, keeping\n                         all bits (even those not corresponding to defined\n                         flags)\n- `is_empty`: `true` if no flags are currently stored\n- `is_all`: `true` if currently set flags exactly equal all defined flags\n- `intersects`: `true` if there are flags common to both `self` and `other`\n- `contains`: `true` if all of the flags in `other` are contained within `self`\n- `insert`: inserts the specified flags in-place\n- `remove`: removes the specified flags in-place\n- `toggle`: the specified flags will be inserted if not present, and removed\n            if they are.\n- `set`: inserts or removes the specified flags depending on the passed value\n- `intersection`: returns a new set of flags, containing only the flags present\n                  in both `self` and `other` (the argument to the function).\n- `union`: returns a new set of flags, containing any flags present in\n           either `self` or `other` (the argument to the function).\n- `difference`: returns a new set of flags, containing all flags present in\n                `self` without any of the flags present in `other` (the\n                argument to the function).\n- `symmetric_difference`: returns a new set of flags, containing all flags\n                          present in either `self` or `other` (the argument\n                          to the function), but not both.\n- `complement`: returns a new set of flags, containing all flags which are\n                not set in `self`, but which are allowed for this type.\n\n# What's not implemented by `bitflags!`\n\nSome functionality is not automatically implemented for generated flags types\nby the `bitflags!` macro, even when it reasonably could be. This is so callers\nhave more freedom to decide on the semantics of their flags types.\n\n## `Clone` and `Copy`\n\nGenerated flags types are not automatically copyable, even though they can always\nderive both `Clone` and `Copy`.\n\n## `Default`\n\nThe `Default` trait is not automatically implemented for the generated structs.\n\nIf your default value is equal to `0` (which is the same value as calling `empty()`\non the generated struct), you can simply derive `Default`:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    // Results in default value with bits: 0\n    #[derive(Default, Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\nfn main() {\n    let derived_default: Flags = Default::default();\n    assert_eq!(derived_default.bits(), 0);\n}\n```\n\nIf your default value is not equal to `0` you need to implement `Default` yourself:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\n// explicit `Default` implementation\nimpl Default for Flags {\n    fn default() -> Flags {\n        Flags::A | Flags::C\n    }\n}\n\nfn main() {\n    let implemented_default: Flags = Default::default();\n    assert_eq!(implemented_default, (Flags::A | Flags::C));\n}\n```\n\n## `Debug` and `Display`\n\nThe `Debug` trait can be derived for a reasonable implementation. This library defines a standard\ntext-based representation for flags that generated flags types can use. For details on the exact\ngrammar, see the [`parser`] module.\n\n## `PartialEq` and `PartialOrd`\n\nEquality and ordering can be derived for a reasonable implementation, or implemented manually\nfor different semantics.\n\n# Edge cases\n\n## Zero Flags\n\nFlags with a value equal to zero will have some strange behavior that one should be aware of.\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const NONE = 0b00000000;\n        const SOME = 0b00000001;\n    }\n}\n\nfn main() {\n    let empty = Flags::empty();\n    let none = Flags::NONE;\n    let some = Flags::SOME;\n\n    // Zero flags are treated as always present\n    assert!(empty.contains(Flags::NONE));\n    assert!(none.contains(Flags::NONE));\n    assert!(some.contains(Flags::NONE));\n\n    // Zero flags will be ignored when testing for emptiness\n    assert!(none.is_empty());\n}\n```\n\nUsers should generally avoid defining a flag with a value of zero.\n\n# The `BitFlags` trait\n\nThis library defines a `BitFlags` trait that's implemented by all generated flags types.\nThe trait makes it possible to work with flags types generically:\n\n```\nfn count_unset_flags<F: bitflags::BitFlags>(flags: &F) -> usize {\n    // Find out how many flags there are in total\n    let total = F::all().iter().count();\n\n    // Find out how many flags are set\n    let set = flags.iter().count();\n\n    total - set\n}\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\nassert_eq!(2, count_unset_flags(&Flags::B));\n```","links":{"`parser`":"0:5:1762"},"attrs":["#![no_std]","#![doc(html_root_url = \"https://docs.rs/bitflags/2.0.0-rc.2\")]","#![forbid(unsafe_code)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:5:1762","0:4-0:22:1761","0:56:1782"],"is_stripped":false}},"0:26:1849":{"id":"0:26:1849","crate_id":0,"name":"empty","span":{"filename":"src/traits.rs","begin":[17,4],"end":[17,23]},"visibility":"default","docs":"Returns an empty set of flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:34:2075":{"id":"0:34:2075","crate_id":0,"name":"iter_names","span":{"filename":"src/traits.rs","begin":[48,4],"end":[48,44]},"visibility":"default","docs":"Iterate over the raw names and bits for enabled flag values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterNames","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1761","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:7":{"id":"0:7","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[43,0],"end":[76,1]},"visibility":{"restricted":{"parent":"0:5:1762","path":"::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:8:2194","0:9:2197","0:10:2199"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:111":{"id":"0:111","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1760","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i64"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:49:2026":{"id":"0:49:2026","crate_id":0,"name":"PublicFlags","span":{"filename":"src/traits.rs","begin":[145,0],"end":[148,1]},"visibility":"public","docs":"A trait for referencing the `bitflags`-owned internal type\nwithout exposing it publicly.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:50:2259"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:56:1782":{"id":"0:56:1782","crate_id":0,"name":"bitflags","span":{"filename":"src/lib.rs","begin":[475,0],"end":[546,1]},"visibility":"public","docs":"The macro used to generate the flag structure.\n\nSee the [crate level docs](../bitflags/index.html) for complete documentation.\n\n# Example\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n        const ABC = Self::A.bits() | Self::B.bits() | Self::C.bits();\n    }\n}\n\nlet e1 = Flags::A | Flags::C;\nlet e2 = Flags::B | Flags::C;\nassert_eq!((e1 | e2), Flags::ABC);   // union\nassert_eq!((e1 & e2), Flags::C);     // intersection\nassert_eq!((e1 - e2), Flags::A);     // set difference\nassert_eq!(!e2, Flags::A);           // set complement\n```\n\nThe generated `struct`s can also be extended with type and trait\nimplementations:\n\n```\nuse std::fmt;\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n    }\n}\n\nimpl Flags {\n    pub fn clear(&mut self) {\n        *self.0.bits_mut() = 0;\n    }\n}\n\nlet mut flags = Flags::A | Flags::B;\n\nflags.clear();\nassert!(flags.is_empty());\n\nassert_eq!(format!(\"{:?}\", Flags::A | Flags::B), \"Flags(A | B)\");\nassert_eq!(format!(\"{:?}\", Flags::B), \"Flags(B)\");\n```","links":{},"attrs":["#[macro_export(local_inner_macros)]"],"deprecation":null,"kind":"macro","inner":"macro_rules! bitflags {\n    (\n        $(#[$outer:meta])*\n        $vis:vis struct $BitFlags:ident: $T:ty {\n            $(\n                $(#[$inner:ident $($args:tt)*])*\n                const $Flag:ident = $value:expr;\n            )*\n        }\n\n        $($t:tt)*\n    ) => { ... };\n    () => { ... };\n}"}},"paths":{"1:48937:2331":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:2785:2463":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:47282:3156":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:52428:3331":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:51304:3937":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:48802:3064":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:51737:3325":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:46795:2491":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:52561:3336":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:47827:3033":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:20851:8998":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:4024:3737":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:3506:2892":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"1:51469:3921":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:30015:10607":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:51521:3316":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:49870:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:4001:103":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:22068:175":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:10086:3072":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:21485:3098":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:2593:127":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:59107:1444":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"1:54579:3426":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:59120:1461":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1:21538:3100":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:49051:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:47536:2898":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:54495:3424":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:51457:3918":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:2803:2466":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:59111:631":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:59124:1102":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:8564:79":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:6656:3802":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:53029:3358":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:52813:3351":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:49514:2272":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:48058:3040":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:57585:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:3989:3008":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:47748:3029":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:9025:2599":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:1735:3700":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:20877:9003":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:1634:577":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:22299:167":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:48810:2331":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:1641:2996":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:30179:10651":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:47739:3203":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:47655:3019":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:50980:3281":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:51473:3922":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:48708:3049":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:48734:178":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:20677:2245":{"crate_id":1,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:54831:3440":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:49493:2269":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:51445:3914":{"crate_id":1,"path":["core","str","LinesAnyMap"],"kind":"struct"},"1:50830:3073":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:58933:3449":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:57598:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:49500:2270":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:9975:3069":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:20417:9624":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:53080:3359":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:54541:3425":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:9015:2269":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:53835:3387":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:21757:10548":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:2774:2461":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:2724:3712":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:48720:3052":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:53497:3382":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:11525:3056":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:21612:3103":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:54739:3436":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:48017:3037":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:22101:172":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:53415:3381":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:50876:3277":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:4150:2608":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:7047:3813":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:21591:3101":{"crate_id":1,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:50542:3260":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:2683:223":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:22365:169":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:51695:3321":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:50077:3251":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:21668:3109":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:2779:2460":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:59106:1366":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:46978:198":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:6474:2365":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:29939:3134":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:38660:180":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:47402:3174":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:10013:3070":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:48583:3048":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:3206:2489":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:54644:3429":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:12354:202":{"crate_id":1,"path":["core","task","ready","Ready"],"kind":"struct"},"1:9283:3061":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:21129:9002":{"crate_id":1,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:47489:3184":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:11293:3085":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:47333:3161":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:49766:67":{"crate_id":1,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"1:51708:158":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:7202:156":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:51500:121":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:48946:180":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:59122:775":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:47082:3153":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"1:48024:3210":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:48794:1795":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:50038:3240":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:22830:2992":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:50553:3261":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:52382:3329":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:6563:3816":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:11344:3068":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:9893:3065":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:12188:3094":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:1823:3001":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:51110:3932":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:9499:2911":{"crate_id":1,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:39869:2259":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1:46912:195":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:50712:3274":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:51290:3300":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:12163:189":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:53339:3379":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:4373:2612":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:9514:2916":{"crate_id":1,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:2974:2487":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:22398:166":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:54754:3437":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:47380:3005":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:21134:9025":{"crate_id":1,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:10687:3078":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:9017:2271":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:2338:179":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:21807:3126":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:51132:3286":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:12136:14505":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:47073:3152":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:21644:3104":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:59118:1459":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"1:48819:3227":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:47363:3759":{"crate_id":1,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:7479:3811":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:47678:3199":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:3640:2331":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:49171:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:3932:2890":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:50990:3282":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:52861:3352":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:29973:2994":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:2996:2478":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:2496:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:2992:2477":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:8956:2593":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1:4227:3013":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:47103:3155":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:51533:3950":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:21703:3112":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"0:5:1762":{"crate_id":0,"path":["bitflags","parser"],"kind":"module"},"1:48629:9934":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:9021:191":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:59101:1478":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"1:47636:3195":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:22134:173":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:57624:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:49131:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:51018:3087":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:2508:235":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:54371:3422":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:25640:2993":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:2502:147":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:54675:3432":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:9278:3869":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:51644:208":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:47456:101":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:9701:219":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:50579:3186":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:51253:3089":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:54664:3431":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:11481:1842":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:2811:2467":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:50453:3254":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:2692:2614":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:2152:578":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:4081:3009":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:20449:9834":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:47608:3190":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:46956:199":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:49371:3059":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:39882:3145":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:2816:2211":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:20726:9001":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:3377:3710":{"crate_id":1,"path":["core","any","Provider"],"kind":"trait"},"1:47355:3164":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:11309:3086":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:52336:3327":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:2828:2207":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:47788:3206":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:2681:3711":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:12435:3975":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"0:56:1782":{"crate_id":0,"path":["bitflags","bitflags"],"kind":"macro"},"1:57572:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:49733:67":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:51634:202":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:9159:3060":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:50744:3071":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:52631:3339":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:2460:3487":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:47716:3028":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:47461:3181":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:59103:1028":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"1:2807:2465":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:54716:3435":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"0:66:1843":{"crate_id":0,"path":["bitflags","parser","ParseError"],"kind":"struct"},"3:0:2449":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:47416:3176":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:11540:3925":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:51687:3319":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:52406:3330":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:2858:2210":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:39873:3143":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:52460:3332":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:52959:3355":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:4728:10344":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:7084:133":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:2854:2208":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:51025:3174":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:21819:3525":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:20879:3096":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:50532:3259":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:12115:3972":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:4289:2896":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:52937:3354":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:3167:134":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:48543:152":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:2933:2473":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:48566:3046":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:8711:656":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"1:1917:3002":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:2302:185":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:9936:3068":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:59115:730":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"1:57559:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:21286:3447":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:10155:3075":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:8569:86":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:48649:10601":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:8139:3829":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:53685:3386":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:50067:3247":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:50513:3256":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:50848:3074":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:9482:2910":{"crate_id":1,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:10048:3071":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:50046:3241":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:2937:2474":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:51477:3923":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:49011:91":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:47664:3196":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:3243:2490":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:51325:3307":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"0:0:1782":{"crate_id":0,"path":["bitflags"],"kind":"module"},"1:4344:2897":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:53005:3357":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:47473:10556":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:51034:3005":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:4754:781":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:48921:1795":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:54433:3423":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:3389:3004":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"1:51652:192":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:49784:109":{"crate_id":1,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"1:50696:3080":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:2862:2470":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:2512:234":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:50634:3267":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:49091:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:3179:2486":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:2922:2472":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:52530:3335":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:51315:3303":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:10141:3074":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:57637:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:10654:3077":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:20870:2245":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:2909:116":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:9023:2598":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:49211:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:2940:2475":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:2799:2327":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:47764:3204":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:9013:2270":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:21695:3111":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:57611:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:47276:3005":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:2579:115":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:22266:170":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:20404:3142":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:11545:3924":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:7516:12565":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:50270:3253":{"crate_id":1,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:53651:3385":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:14:2201":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:46896:197":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:51000:3283":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:54655:3430":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:53261:3363":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:12323:2921":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:5494:3022":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:52668:3341":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:50504:3255":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:50289:3063":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:59100:409":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:47386:3760":{"crate_id":1,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:4353:2610":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:52715:3342":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:20720:8999":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:47729:3201":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:51338:3313":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:1749:11254":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:47089:3154":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:47626:3193":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:52761:3349":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:21741:10608":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:3977:3007":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:4222:3012":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:3162:231":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:0:433":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:50614:3265":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:48048:2905":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:7088:149":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:12312:106":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:59119:1460":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"1:50794:3276":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:8966:131":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:2850:2206":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:7051:3812":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:51226:3299":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:52316:3326":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:8955:207":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"1:2499:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:59099:921":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1:3191:14632":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:52512:3334":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:12102:135":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:11534:3926":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:3173:2484":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:21793:3125":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:29979:3135":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:54690:3433":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:48672:3225":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:47778:3031":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:47617:3192":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:50285:10499":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:51358:3090":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:51178:3297":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:47409:3175":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:11270:3084":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:9691:2245":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:48600:3821":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:22233:3130":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:21786:11267":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:47096:2609":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"1:48870:190":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:48785:2218":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:2838:2468":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:9229:140":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:48861:3831":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:48010:3036":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:11591:3934":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:48039:3211":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:47055:2483":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:48878:207":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:0:486":{"crate_id":1,"path":["core"],"kind":"module"},"1:2673:217":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:2750:3635":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:2459:2245":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:53575:3383":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:47566:3186":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:4399:2611":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:9868:3064":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:3326:68":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:8732:12564":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:47319:3160":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:7097:2329":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:49757:130":{"crate_id":1,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"1:46936:196":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:9011:119":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:2867:2471":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:3152:2482":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:7148:2494":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:10169:3076":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:50776:3275":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:2833:2209":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:9006:111":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:50894:3278":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:48971:84":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:47687:3023":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:50592:3263":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:7125:120":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:22332:168":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:59117:1462":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:59112:731":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:51147:3293":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:2737:2493":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:21680:10594":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:47813:3032":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:52591:3337":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:21392:2245":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:21628:9915":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:21720:10617":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:49854:2597":{"crate_id":1,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:50702:3272":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:47799:3209":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:50726:3065":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:2253:105":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:47646:3016":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:22167:174":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:7472:3735":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:53158:3361":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:53127:3360":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:11746:111":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:8737:9931":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:30073:10593":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:39833:3707":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:4299:2609":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:54792:3439":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:11074:3079":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:47022:2480":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:54293:3421":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:46834:2488":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:20718:2245":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:9400:2907":{"crate_id":1,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:47000:200":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:7475:3810":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:50085:3252":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:4108:3011":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:8141:3055":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:51009:3284":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:2795:2464":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:51043:3164":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:4707:3796":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:48033:3038":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:49251:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:48066:3042":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:50670:3268":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:59104:308":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"1:57202:9034":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:59114:729":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"1:3089:2481":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:51725:3324":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:1758:2997":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:59123:1515":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:2233:98":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:52360:3328":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:8140:3828":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:30001:67":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:50055:144":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:47442:3180":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:54769:3438":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:9019:2272":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:54183:3420":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:5882:3024":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:20846:2245":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:47291:3157":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:2680:2226":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:51481:3948":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:20664:9007":{"crate_id":1,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:59110:630":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:4:994":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:49818:71":{"crate_id":1,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:54701:3434":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:9844:1795":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:49291:85":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:2685:108":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:52613:3338":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:59105:1336":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"1:47343:3162":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:29756:3488":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:50684:3271":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:59121:1458":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:20767:3096":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:51161:3296":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:2684:222":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:50522:3258":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:58912:3448":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:6805:3035":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:53385:3380":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:10127:3073":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:2823:2205":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:20638:9006":{"crate_id":1,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:51465:3920":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:2307:124":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:48685:3822":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:20601:9005":{"crate_id":1,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:54635:3428":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:5661:12514":{"crate_id":1,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:50948:3280":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:52490:3333":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:1550:2890":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:223:207":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:59116:726":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"1:59113:728":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:48929:3064":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:59125:13":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"1:2943:2476":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:52983:3356":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:49796:127":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:54041:3419":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:2769:2325":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:5417:3020":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:50030:3238":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:20689:8997":{"crate_id":1,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:54617:3427":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:47595:3189":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:2687:225":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:46881:2479":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:20470:9839":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:22200:171":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:2844:2469":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:51449:3916":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:48852:3229":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:11058:3877":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:4218:204":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:20472:9836":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:50624:3266":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:49751:70":{"crate_id":1,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:53181:3362":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:47303:10618":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:52907:3353":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:22431:3131":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:51461:3919":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:52650:3340":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:6610:11558":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:53621:3384":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:9243:144":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:50605:3264":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:49507:2271":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:50930:3279":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:21298:9629":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:2791:2462":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:11233:3081":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:47586:3188":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:38677:3142":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:2230:97":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:49331:92":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:47423:3761":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:59098:367":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1:47696:3200":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:47707:3027":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:52791:3350":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:2764:2459":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:20451:9838":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:47546:3185":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:20432:9624":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:6865:3739":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:2505:132":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:2344:186":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:21394:9000":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:51453:3917":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:8245:3056":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"}},"external_crates":{"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}