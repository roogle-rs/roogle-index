{"root":"0:0:1785","crate_version":"2.0.2","includes_private":false,"index":{"1:2547:127":{"id":"1:2547:127","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"1:39773:3735","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:40:1885":{"id":"0:40:1885","crate_id":0,"name":"remove","span":{"filename":"src/traits.rs","begin":[66,4],"end":[66,38]},"visibility":"default","docs":"Removes the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:69":{"id":"0:69","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[34,9],"end":[34,14]},"visibility":{"restricted":{"parent":"0:5:1765","path":"::parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9011:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1846","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:70:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:41:1887":{"id":"0:41:1887","crate_id":0,"name":"toggle","span":{"filename":"src/traits.rs","begin":[69,4],"end":[69,38]},"visibility":"default","docs":"Toggles the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:2532:2651":{"id":"1:2532:2651","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2506:132"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":{"restricted":{"parent":"0:13:1763","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2270","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u8"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:102":{"id":"0:102","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":{"restricted":{"parent":"0:13:1763","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2270","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u32"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:44:2270":{"id":"0:44:2270","crate_id":0,"name":"Sealed","span":{"filename":"src/traits.rs","begin":[83,0],"end":[83,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:86","0:126","0:103","0:127","0:94","0:119","0:118","0:87","0:110","0:111","0:102","0:95"]}},"0:56:1785":{"id":"0:56:1785","crate_id":0,"name":"bitflags","span":{"filename":"src/lib.rs","begin":[475,0],"end":[546,1]},"visibility":"public","docs":"The macro used to generate the flag structure.\n\nSee the [crate level docs](../bitflags/index.html) for complete documentation.\n\n# Example\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n        const ABC = Self::A.bits() | Self::B.bits() | Self::C.bits();\n    }\n}\n\nlet e1 = Flags::A | Flags::C;\nlet e2 = Flags::B | Flags::C;\nassert_eq!((e1 | e2), Flags::ABC);   // union\nassert_eq!((e1 & e2), Flags::C);     // intersection\nassert_eq!((e1 - e2), Flags::A);     // set difference\nassert_eq!(!e2, Flags::A);           // set complement\n```\n\nThe generated `struct`s can also be extended with type and trait\nimplementations:\n\n```\nuse std::fmt;\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n    }\n}\n\nimpl Flags {\n    pub fn clear(&mut self) {\n        *self.0.bits_mut() = 0;\n    }\n}\n\nlet mut flags = Flags::A | Flags::B;\n\nflags.clear();\nassert!(flags.is_empty());\n\nassert_eq!(format!(\"{:?}\", Flags::A | Flags::B), \"Flags(A | B)\");\nassert_eq!(format!(\"{:?}\", Flags::B), \"Flags(B)\");\n```","links":{},"attrs":["#[macro_export(local_inner_macros)]"],"deprecation":null,"kind":"macro","inner":"macro_rules! bitflags {\n    (\n        $(#[$outer:meta])*\n        $vis:vis struct $BitFlags:ident: $T:ty {\n            $(\n                $(#[$inner:ident $($args:tt)*])*\n                const $Flag:ident = $value:expr;\n            )*\n        }\n\n        $($t:tt)*\n    ) => { ... };\n    () => { ... };\n}"},"0:8:2219":{"id":"0:8:2219","crate_id":0,"name":"invalid_hex_flag","span":{"filename":"src/parser.rs","begin":[57,4],"end":[68,5]},"visibility":"public","docs":"An invalid hex flag was encountered.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["flag",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9016:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl fmt::Display","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9016:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:42:1940":{"id":"0:42:1940","crate_id":0,"name":"set","span":{"filename":"src/traits.rs","begin":[72,4],"end":[72,48]},"visibility":"default","docs":"Inserts or removes the specified flags depending on the passed value.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}],["value",{"kind":"primitive","inner":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:32:2085":{"id":"0:32:2085","crate_id":0,"name":"from_name","span":{"filename":"src/traits.rs","begin":[40,4],"end":[42,20]},"visibility":"default","docs":"Get the flag for a particular name.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48673:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2681:2251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:25:2245":{"id":"0:25:2245","crate_id":0,"name":"IterNames","span":{"filename":"src/traits.rs","begin":[14,4],"end":[14,58]},"visibility":"default","docs":"An iterator over the raw names and bits for enabled flags in an instance of the type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7207:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"generic","inner":"Self"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"b:1:3330-0:66:1846":{"id":"b:1:3330-0:66:1846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2681:2251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3328:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1846","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3332:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":{"restricted":{"parent":"0:13:1763","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2270","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i32"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2239:2416":{"id":"1:2239:2416","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:119":{"id":"0:119","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":{"restricted":{"parent":"0:13:1763","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2270","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i128"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:0:1785":{"id":"0:0:1785","crate_id":0,"name":"bitflags","span":{"filename":"src/lib.rs","begin":[11,0],"end":[1604,1]},"visibility":"public","docs":"A typesafe bitmask flag generator useful for sets of C-style flags.\nIt can be used for creating ergonomic wrappers around C APIs.\n\nThe `bitflags!` macro generates `struct`s that manage a set of flags. The\ntype of those flags must be some primitive integer.\n\n# Examples\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n        const ABC = Self::A.bits() | Self::B.bits() | Self::C.bits();\n    }\n}\n\nfn main() {\n    let e1 = Flags::A | Flags::C;\n    let e2 = Flags::B | Flags::C;\n    assert_eq!((e1 | e2), Flags::ABC);   // union\n    assert_eq!((e1 & e2), Flags::C);     // intersection\n    assert_eq!((e1 - e2), Flags::A);     // set difference\n    assert_eq!(!e2, Flags::A);           // set complement\n}\n```\n\nSee [`example_generated::Flags`](./example_generated/struct.Flags.html) for documentation of code\ngenerated by the above `bitflags!` expansion.\n\n# Visibility\n\nThe `bitflags!` macro supports visibility, just like you'd expect when writing a normal\nRust `struct`:\n\n```\nmod example {\n    use bitflags::bitflags;\n\n    bitflags! {\n        #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n        pub struct Flags1: u32 {\n            const A = 0b00000001;\n        }\n\n        #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n#       pub\n        struct Flags2: u32 {\n            const B = 0b00000010;\n        }\n    }\n}\n\nfn main() {\n    let flag1 = example::Flags1::A;\n    let flag2 = example::Flags2::B; // error: const `B` is private\n}\n```\n\n# Attributes\n\nAttributes can be attached to the generated flags types and their constants as normal.\n\n# Representation\n\nIt's valid to add a `#[repr(C)]` or `#[repr(transparent)]` attribute to a generated flags type.\nThe generated flags type is always guaranteed to be a newtype where its only field has the same\nABI as the underlying integer type.\n\nIn this example, `Flags` has the same ABI as `u32`:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[repr(transparent)]\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n```\n\n# Extending\n\nGenerated flags types belong to you, so you can add trait implementations to them outside\nof what the `bitflags!` macro gives:\n\n```\nuse std::fmt;\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n    }\n}\n\nimpl Flags {\n    pub fn clear(&mut self) {\n        *self.0.bits_mut() = 0;\n    }\n}\n\nfn main() {\n    let mut flags = Flags::A | Flags::B;\n\n    flags.clear();\n    assert!(flags.is_empty());\n\n    assert_eq!(format!(\"{:?}\", Flags::A | Flags::B), \"Flags(A | B)\");\n    assert_eq!(format!(\"{:?}\", Flags::B), \"Flags(B)\");\n}\n```\n\n# What's implemented by `bitflags!`\n\nThe `bitflags!` macro adds some trait implementations and inherent methods\nto generated flags types, but leaves room for you to choose the semantics\nof others.\n\n## Iterators\n\nThe following iterator traits are implemented for generated flags types:\n\n- `Extend`: adds the union of the instances iterated over.\n- `FromIterator`: calculates the union.\n- `IntoIterator`: iterates over set flag values.\n\n## Formatting\n\nThe following formatting traits are implemented for generated flags types:\n\n- `Binary`.\n- `LowerHex` and `UpperHex`.\n- `Octal`.\n\nAlso see the _Debug and Display_ section for details about standard text\nrepresentations for flags types.\n\n## Operators\n\nThe following operator traits are implemented for the generated `struct`s:\n\n- `BitOr` and `BitOrAssign`: union\n- `BitAnd` and `BitAndAssign`: intersection\n- `BitXor` and `BitXorAssign`: toggle\n- `Sub` and `SubAssign`: set difference\n- `Not`: set complement\n\n## Methods\n\nThe following methods are defined for the generated `struct`s:\n\n- `empty`: an empty set of flags\n- `all`: the set of all defined flags\n- `bits`: the raw value of the flags currently stored\n- `from_bits`: convert from underlying bit representation, unless that\n               representation contains bits that do not correspond to a\n               defined flag\n- `from_bits_truncate`: convert from underlying bit representation, dropping\n                        any bits that do not correspond to defined flags\n- `from_bits_retain`: convert from underlying bit representation, keeping\n                         all bits (even those not corresponding to defined\n                         flags)\n- `is_empty`: `true` if no flags are currently stored\n- `is_all`: `true` if currently set flags exactly equal all defined flags\n- `intersects`: `true` if there are flags common to both `self` and `other`\n- `contains`: `true` if all of the flags in `other` are contained within `self`\n- `insert`: inserts the specified flags in-place\n- `remove`: removes the specified flags in-place\n- `toggle`: the specified flags will be inserted if not present, and removed\n            if they are.\n- `set`: inserts or removes the specified flags depending on the passed value\n- `intersection`: returns a new set of flags, containing only the flags present\n                  in both `self` and `other` (the argument to the function).\n- `union`: returns a new set of flags, containing any flags present in\n           either `self` or `other` (the argument to the function).\n- `difference`: returns a new set of flags, containing all flags present in\n                `self` without any of the flags present in `other` (the\n                argument to the function).\n- `symmetric_difference`: returns a new set of flags, containing all flags\n                          present in either `self` or `other` (the argument\n                          to the function), but not both.\n- `complement`: returns a new set of flags, containing all flags which are\n                not set in `self`, but which are allowed for this type.\n\n# What's not implemented by `bitflags!`\n\nSome functionality is not automatically implemented for generated flags types\nby the `bitflags!` macro, even when it reasonably could be. This is so callers\nhave more freedom to decide on the semantics of their flags types.\n\n## `Clone` and `Copy`\n\nGenerated flags types are not automatically copyable, even though they can always\nderive both `Clone` and `Copy`.\n\n## `Default`\n\nThe `Default` trait is not automatically implemented for the generated structs.\n\nIf your default value is equal to `0` (which is the same value as calling `empty()`\non the generated struct), you can simply derive `Default`:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    // Results in default value with bits: 0\n    #[derive(Default, Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\nfn main() {\n    let derived_default: Flags = Default::default();\n    assert_eq!(derived_default.bits(), 0);\n}\n```\n\nIf your default value is not equal to `0` you need to implement `Default` yourself:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\n// explicit `Default` implementation\nimpl Default for Flags {\n    fn default() -> Flags {\n        Flags::A | Flags::C\n    }\n}\n\nfn main() {\n    let implemented_default: Flags = Default::default();\n    assert_eq!(implemented_default, (Flags::A | Flags::C));\n}\n```\n\n## `Debug` and `Display`\n\nThe `Debug` trait can be derived for a reasonable implementation. This library defines a standard\ntext-based representation for flags that generated flags types can use. For details on the exact\ngrammar, see the [`parser`] module.\n\n## `PartialEq` and `PartialOrd`\n\nEquality and ordering can be derived for a reasonable implementation, or implemented manually\nfor different semantics.\n\n# Edge cases\n\n## Zero Flags\n\nFlags with a value equal to zero will have some strange behavior that one should be aware of.\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const NONE = 0b00000000;\n        const SOME = 0b00000001;\n    }\n}\n\nfn main() {\n    let empty = Flags::empty();\n    let none = Flags::NONE;\n    let some = Flags::SOME;\n\n    // Zero flags are treated as always present\n    assert!(empty.contains(Flags::NONE));\n    assert!(none.contains(Flags::NONE));\n    assert!(some.contains(Flags::NONE));\n\n    // Zero flags will be ignored when testing for emptiness\n    assert!(none.is_empty());\n}\n```\n\nUsers should generally avoid defining a flag with a value of zero.\n\n# The `BitFlags` trait\n\nThis library defines a `BitFlags` trait that's implemented by all generated flags types.\nThe trait makes it possible to work with flags types generically:\n\n```\nfn count_unset_flags<F: bitflags::BitFlags>(flags: &F) -> usize {\n    // Find out how many flags there are in total\n    let total = F::all().iter().count();\n\n    // Find out how many flags are set\n    let set = flags.iter().count();\n\n    total - set\n}\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\nassert_eq!(2, count_unset_flags(&Flags::B));\n```","links":{"`parser`":"0:5:1765"},"attrs":["#![no_std]","#![doc(html_root_url = \"https://docs.rs/bitflags/2.0.2\")]","#![forbid(unsafe_code)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:5:1765","0:4-0:22:1764","0:56:1785"],"is_stripped":false}},"0:49:2031":{"id":"0:49:2031","crate_id":0,"name":"PublicFlags","span":{"filename":"src/traits.rs","begin":[146,0],"end":[149,1]},"visibility":"public","docs":"A trait for referencing the `bitflags`-owned internal type\nwithout exposing it publicly.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:50:2284"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:94":{"id":"0:94","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":{"restricted":{"parent":"0:13:1763","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2270","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u16"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2542:127":{"id":"1:2542:127","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"1:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:110":{"id":"0:110","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":{"restricted":{"parent":"0:13:1763","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2270","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u64"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2529-0:66:1846":{"id":"b:1:2529-0:66:1846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2506:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1846","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2532:2651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:2674:217-0:66:1846":{"id":"a:1:2674:217-0:66:1846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2674:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1846","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:38:1880":{"id":"0:38:1880","crate_id":0,"name":"contains","span":{"filename":"src/traits.rs","begin":[60,4],"end":[60,44]},"visibility":"default","docs":"Returns `true` if all of the flags in `other` are contained within `self`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":{"restricted":{"parent":"0:13:1763","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2270","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u128"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2535:681":{"id":"1:2535:681","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:10:2224":{"id":"0:10:2224","crate_id":0,"name":"empty_flag","span":{"filename":"src/parser.rs","begin":[85,4],"end":[87,5]},"visibility":"public","docs":"A hex or named flag wasn't found between separators.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:11":{"id":"0:11","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[90,0],"end":[120,1]},"visibility":{"restricted":{"parent":"0:5:1765","path":"::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:9016:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1846","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:12:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:27:282":{"id":"0:27:282","crate_id":0,"name":"all","span":{"filename":"src/traits.rs","begin":[20,4],"end":[20,21]},"visibility":"default","docs":"Returns the set containing all flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:1:8144:3856-0:66:1846":{"id":"a:1:8144:3856-0:66:1846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8144:3856","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1846","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4-0:22:1764":{"id":"0:4-0:22:1764","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[351,0],"end":[351,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"kind":"import","inner":{"source":"traits::BitFlags","name":"BitFlags","id":"0:22:1764","glob":false}},"1:2543:1444":{"id":"1:2543:1444","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:48817:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"1:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:66:1846":{"id":"0:66:1846","crate_id":0,"name":"ParseError","span":{"filename":"src/parser.rs","begin":[35,0],"end":[35,38]},"visibility":"public","docs":"An error encountered while parsing flags from text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:7","a:1:2674:217-0:66:1846","a:1:2738:2518-0:66:1846","a:1:8144:3856-0:66:1846","a:1:2688:225-0:66:1846","a:1:8143:3857-0:66:1846","b:1:2529-0:66:1846","b:1:3330-0:66:1846","b:1:2240-0:66:1846","b:1:2544-0:66:1846","b:1:2533-0:66:1846","b:1:2539-0:66:1846","b:1:2237-0:66:1846","0:69","0:11"]}},"0:87":{"id":"0:87","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":{"restricted":{"parent":"0:13:1763","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2270","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i8"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3332:1457":{"id":"1:3332:1457","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"1:47012:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:9:2222":{"id":"0:9:2222","crate_id":0,"name":"invalid_named_flag","span":{"filename":"src/parser.rs","begin":[71,4],"end":[82,5]},"visibility":"public","docs":"A named flag that doesn't correspond to any on the flags type was encountered.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["flag",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9016:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl fmt::Display","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9016:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:12:657":{"id":"0:12:657","crate_id":0,"name":"fmt","span":{"filename":"src/parser.rs","begin":[91,4],"end":[119,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:8970:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:8959:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2240-0:66:1846":{"id":"b:1:2240-0:66:1846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2681:2251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2234:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1846","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2242:9469"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:33:781":{"id":"0:33:781","crate_id":0,"name":"iter","span":{"filename":"src/traits.rs","begin":[45,4],"end":[45,33]},"visibility":"default","docs":"Iterate over enabled flag values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1764","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:36:1871":{"id":"0:36:1871","crate_id":0,"name":"is_all","span":{"filename":"src/traits.rs","begin":[54,4],"end":[54,29]},"visibility":"default","docs":"Returns `true` if all flags are currently set.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:23:2241":{"id":"0:23:2241","crate_id":0,"name":"Bits","span":{"filename":"src/traits.rs","begin":[8,4],"end":[8,20]},"visibility":"default","docs":"The underlying integer type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Bits","id":"0:45:2241","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:28:1824":{"id":"0:28:1824","crate_id":0,"name":"bits","span":{"filename":"src/traits.rs","begin":[23,4],"end":[23,33]},"visibility":"default","docs":"Returns the raw value of the flags currently stored.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1764","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:31:1867":{"id":"0:31:1867","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/traits.rs","begin":[37,4],"end":[37,50]},"visibility":"default","docs":"Convert from underlying bit representation, preserving all\nbits (even those not corresponding to a defined flag).","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1764","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:126":{"id":"0:126","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":{"restricted":{"parent":"0:13:1763","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2270","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"usize"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2237-0:66:1846":{"id":"b:1:2237-0:66:1846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2681:2251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2231:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1846","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2239:2416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:34:2080":{"id":"0:34:2080","crate_id":0,"name":"iter_names","span":{"filename":"src/traits.rs","begin":[48,4],"end":[48,44]},"visibility":"default","docs":"Iterate over the raw names and bits for enabled flag values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterNames","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1764","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:50:2284":{"id":"0:50:2284","crate_id":0,"name":"Internal","span":{"filename":"src/traits.rs","begin":[148,4],"end":[148,18]},"visibility":"default","docs":"The type of the internal field on the generated flags type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"b:1:2533-0:66:1846":{"id":"b:1:2533-0:66:1846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2506:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1846","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2535:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:26:1852":{"id":"0:26:1852","crate_id":0,"name":"empty","span":{"filename":"src/traits.rs","begin":[17,4],"end":[17,23]},"visibility":"default","docs":"Returns an empty set of flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:127":{"id":"0:127","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":{"restricted":{"parent":"0:13:1763","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2270","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"isize"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:95":{"id":"0:95","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":{"restricted":{"parent":"0:13:1763","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2270","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i16"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:39:1882":{"id":"0:39:1882","crate_id":0,"name":"insert","span":{"filename":"src/traits.rs","begin":[63,4],"end":[63,38]},"visibility":"default","docs":"Inserts the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:1:2688:225-0:66:1846":{"id":"a:1:2688:225-0:66:1846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2688:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1846","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:24:1798":{"id":"0:24:1798","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[11,4],"end":[11,37]},"visibility":"default","docs":"An iterator over enabled flags in an instance of the type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7207:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"1:2548:1443":{"id":"1:2548:1443","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:48817:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"1:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:2738:2518-0:66:1846":{"id":"a:1:2738:2518-0:66:1846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2738:2518","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1846","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:37:1875":{"id":"0:37:1875","crate_id":0,"name":"intersects","span":{"filename":"src/traits.rs","begin":[57,4],"end":[57,46]},"visibility":"default","docs":"Returns `true` if there are flags common to both `self` and `other`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:5:1765":{"id":"0:5:1765","crate_id":0,"name":"parser","span":{"filename":"src/parser.rs","begin":[1,0],"end":[123,40]},"visibility":"public","docs":"Parsing flags from text.\n\n`bitflags` defines the following *whitespace-insensitive*, *case-sensitive* grammar for flags formatted\nas text:\n\n- _Flags:_ (_Flag_)`|`*\n- _Flag:_ _Identifier_ | _HexNumber_\n- _Identifier:_ Any Rust identifier\n- _HexNumber_: `0x`([0-9a-fA-F])*\n\nAs an example, this is how `Flags::A | Flags::B | 0x0c` can be represented as text:\n\n```text\nA | B | 0x0c\n```\n\nAlternatively, it could be represented without whitespace:\n\n```text\nA|B|0x0C\n```\n\nNote that identifiers are *case-sensitive*, so the following is *not equivalent*:\n\n```text\na | b | 0x0c\n```","links":{},"attrs":["#![allow(clippy :: let_unit_value)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:66:1846"],"is_stripped":false}},"0:35:1869":{"id":"0:35:1869","crate_id":0,"name":"is_empty","span":{"filename":"src/traits.rs","begin":[51,4],"end":[51,31]},"visibility":"default","docs":"Returns `true` if no flags are currently stored.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:2242:9469":{"id":"1:2242:9469","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:30:1863":{"id":"0:30:1863","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/traits.rs","begin":[33,4],"end":[33,52]},"visibility":"default","docs":"Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1764","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:1:2539-0:66:1846":{"id":"b:1:2539-0:66:1846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2509:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1846","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2542:127","1:2543:1444"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2544-0:66:1846":{"id":"b:1:2544-0:66:1846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1846","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2547:127","1:2548:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:70:657":{"id":"0:70:657","crate_id":0,"name":"fmt","span":{"filename":"src/parser.rs","begin":[34,9],"end":[34,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:8970:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:8959:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:7":{"id":"0:7","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[55,0],"end":[88,1]},"visibility":{"restricted":{"parent":"0:5:1765","path":"::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1846","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:8:2219","0:9:2222","0:10:2224"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:29:1858":{"id":"0:29:1858","crate_id":0,"name":"from_bits","span":{"filename":"src/traits.rs","begin":[27,4],"end":[29,20]},"visibility":"default","docs":"Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1764","args":null}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48673:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2681:2251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:111":{"id":"0:111","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":{"restricted":{"parent":"0:13:1763","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2270","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i64"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:22:1764":{"id":"0:22:1764","crate_id":0,"name":"BitFlags","span":{"filename":"src/traits.rs","begin":[6,0],"end":[73,1]},"visibility":"public","docs":"A trait that is automatically implemented for all bitflags.\n\nIt should not be implemented manually.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:23:2241","0:24:1798","0:25:2245","0:26:1852","0:27:282","0:28:1824","0:29:1858","0:30:1863","0:31:1867","0:32:2085","0:33:781","0:34:2080","0:35:1869","0:36:1871","0:37:1875","0:38:1880","0:39:1882","0:40:1885","0:41:1887","0:42:1940"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ImplementedByBitFlagsMacro","id":"0:43:2239","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:1:8143:3857-0:66:1846":{"id":"a:1:8143:3857-0:66:1846","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8143:3857","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1846","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"paths":{"1:20409:11399":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:8715:657":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"1:9405:2930":{"crate_id":1,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:52614:3368":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:54662:3462":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:20788:9029":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:50640:3299":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:49809:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:53127:3389":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:11539:3954":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:51641:3348":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:46896:199":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:4291:2919":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:30013:10119":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:21657:10203":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:8736:9512":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:2770:2350":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:47242:10138":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:48885:180":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:6565:3844":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:6612:11225":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:50562:3293":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:4756:781":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:49150:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:58491:632":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:50972:3030":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:48758:3254":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:50768:3099":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:2460:2270":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:12120:4003":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:46836:197":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:20575:9037":{"crate_id":1,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:53631:3413":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:49110:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:47668:3228":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:30119:10187":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:2693:2639":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:20816:3123":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:20807:2270":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:51296:3117":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:48522:3073":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:9504:2934":{"crate_id":1,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:51654:158":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:48950:91":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:2500:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:11545:3953":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:47325:3788":{"crate_id":1,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:52306:3355":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:46962:2506":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:20341:3169":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:50918:3308":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:47949:3061":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:52596:3367":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:3508:2915":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"1:0:487":{"crate_id":1,"path":["core"],"kind":"module"},"1:1762:3021":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:3174:2510":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:51471:3978":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:51085:3320":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:2303:185":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"0:5:1765":{"crate_id":0,"path":["bitflags","parser"],"kind":"module"},"1:53104:3388":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:53597:3412":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:9164:3086":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:9016:119":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:4730:14660":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:2863:2496":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:2829:2232":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:52929:3383":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:2910:116":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:9011:111":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:4355:2635":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:22335:166":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:9288:3087":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:47556:3219":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:47221:3183":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:1921:3026":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:21730:3152":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:2254:105":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:47626:3048":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:48910:84":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:51683:3352":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:47381:3207":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:52853:3380":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:10018:3096":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:4:996":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:50634:3107":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:52507:3363":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:3379:3738":{"crate_id":1,"path":["core","any","Provider"],"kind":"trait"},"1:56978:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:49190:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:57017:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:56582:9065":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:47362:3789":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:7480:3838":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:22005:175":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:2834:2234":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:48505:3071":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:9849:1798":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:58498:1462":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"1:47042:3182":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:12317:106":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:52436:3360":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:49985:3268":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:51633:3346":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:21632:3138":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:51164:3326":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:4375:2637":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:51253:3330":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:3328:68":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:11314:3113":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:54563:3454":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:48482:152":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:48624:3850":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:46994:2509":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:51395:3946":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:5884:3049":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:47752:3057":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:2738:2518":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:54317:3449":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:8144:3856":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:50714:3302":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:47594:3044":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:51399:3947":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:47703:3231":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:12328:2944":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:20407:11401":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:47230:3184":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:47035:2634":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"1:49453:2297":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:50682:3097":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:39773:3735":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:12107:135":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:58502:775":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:21422:3125":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:22137:171":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:2944:2502":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:9873:3090":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:4026:3765":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:4301:2634":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:47021:3180":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"1:51411:3950":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:50732:3303":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:21617:10206":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"3:0:2475":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:52559:3365":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:58499:1463":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"1:58493:729":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:49757:71":{"crate_id":1,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:49672:67":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:4709:3824":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:58492:732":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:2156:579":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:51415:3951":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:49070:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:1753:11219":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:10160:3101":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:0:434":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:54685:3463":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:8145:3080":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:22269:168":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:51228:3327":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:54590:3456":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:49432:2294":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:2868:2497":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:50543:3291":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:2765:2485":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:56965:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:4220:204":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:51419:3976":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:20626:9028":{"crate_id":1,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:2859:2235":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:20704:3123":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:47412:10144":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:47963:3237":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:48539:3849":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:2308:124":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:50814:3304":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:48990:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:9696:2270":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:9028:2623":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:7152:2519":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:48659:3077":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:49793:2622":{"crate_id":1,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:50608:3295":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:2231:97":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:51391:3945":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:7091:149":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:11751:111":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:52476:3362":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:51671:3351":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:47302:3787":{"crate_id":1,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:38617:3169":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:7050:3841":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:20655:2270":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:47485:3212":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:49735:127":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:2855:2233":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:50832:3305":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:51242:3965":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:20388:11402":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:25577:3017":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:58480:410":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:2808:2491":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:3991:3033":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:56952:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:11063:3905":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:1638:578":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:54621:3459":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:47475:2921":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:3193:11300":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:2938:2500":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:8970:131":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:2594:127":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:50470:3286":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:39809:2284":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1:3168:134":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:21066:9033":{"crate_id":1,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:1554:2913":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:7054:3840":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:51403:3948":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:20783:2270":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:49994:144":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:3208:2515":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:57004:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:2786:2489":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:50786:3100":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:22104:174":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:50938:3310":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:47575:3222":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:47355:3203":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:9487:2933":{"crate_id":1,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:38600:180":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:2686:108":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:53781:3414":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:58292:3475":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:52807:3379":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:2804:2492":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:2796:2490":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:53567:3411":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:50480:3287":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:2513:234":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:58495:731":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"1:49977:3267":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:9980:3095":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:3245:2516":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:58490:631":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:2234:98":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:2792:2488":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:10692:3104":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:51580:202":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:54700:3464":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:7129:120":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:54610:3458":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:58483:1030":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"1:52951:3384":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:47282:3189":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:51070:3313":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:52406:3359":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:3153:2508":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:50209:3280":{"crate_id":1,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:8143:3857":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:58500:1464":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1:29955:10147":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:11596:3962":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:3391:3029":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"1:58504:1105":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:2725:3740":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:52661:3369":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:11550:3952":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:46876:196":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:49230:85":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:52374:3358":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:2497:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:2839:2494":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:50956:3114":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:7484:3839":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:2817:2236":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:54777:3467":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:52707:3376":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:58484:308":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"1:4401:2636":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:47525:3215":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:21475:3127":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:47978:3238":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:50886:3307":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:11238:3108":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:50552:3292":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:53285:3406":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:3163:231":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:8573:86":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:52282:3354":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:9030:2624":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:58497:1465":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:2997:2504":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:22368:3158":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:53521:3410":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:47319:3030":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:8249:3081":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:47635:3227":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:9706:219":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:20663:9032":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:58485:1339":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"1:58505:13":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"1:1739:3728":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:58487:1447":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"1:48588:10198":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:3979:3032":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:21223:3474":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:7087:133":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:4003:103":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:22236:167":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:22071:173":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:2684:223":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:50517:3213":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:50451:3283":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:10146:3100":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:2580:115":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:47395:101":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:9898:3091":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:48611:3252":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:54379:3450":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:47717:3056":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:52458:3361":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:47534:3216":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:50947:3311":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:2845:2495":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:50963:3201":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:20386:11397":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:53987:3446":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:54441:3451":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:52975:3385":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:29879:3161":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:48647:3074":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:51438:121":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:48673:178":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:2509:235":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:46774:2514":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:47987:2928":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:53073:3387":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:2751:3662":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:47547:3217":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:22203:170":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:48724:2243":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:47272:3188":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:52328:3356":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:2800:2352":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:49270:92":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:47603:3223":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:50572:3294":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:21640:3139":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:12440:4006":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:58479:921":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1:50622:3298":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:9018:2295":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:54715:3465":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:58481:1481":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"1:9283:3897":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:10174:3102":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:50491:3288":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:50442:3282":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"0:56:1785":{"crate_id":0,"path":["bitflags","bitflags"],"kind":"macro"},"1:50928:3309":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:21329:2270":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:51459:3343":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:47348:3202":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:9026:191":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:20814:9034":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:49690:70":{"crate_id":1,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:47294:3191":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:51263:3334":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:11079:3105":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:21331:9031":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"0:0:1785":{"crate_id":0,"path":["bitflags"],"kind":"module"},"1:2682:3739":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:39813:3170":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:14:2226":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:49969:3265":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:49723:109":{"crate_id":1,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"1:7477:3763":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:51407:3949":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:22302:169":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:2851:2231":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:10053:3097":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:47646:3052":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:58486:1369":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:46852:195":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:52352:3357":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:9024:2297":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:48791:3256":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:58496:727":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"1:12193:3121":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:47738:3236":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:21694:10120":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:11486:1845":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:8960:2618":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1:49705:67":{"crate_id":1,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"1:50224:9977":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:4224:3037":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"0:66:1846":{"crate_id":0,"path":["bitflags","parser","ParseError"],"kind":"struct"},"1:48876:2356":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:51598:192":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:54487:3452":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:11275:3111":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:51116:3324":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:53331:3407":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:9234:140":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:49446:2296":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:11298:3112":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:53026:3386":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:20657:9030":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:5419:3045":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:29693:3515":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:12168:189":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:47565:3220":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:47012:3179":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:47505:3213":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:56991:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:49030:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:54581:3455":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:53361:3408":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:47258:3187":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:46735:2517":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:52883:3381":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:2923:2498":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:9020:2294":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:6808:3060":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:47028:3181":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:52759:3378":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:51387:3944":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:4152:2633":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:21549:3130":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:50006:3274":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:22170:3157":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:48860:1798":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:11349:3094":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:58503:1518":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:5663:12681":{"crate_id":1,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:12359:202":{"crate_id":1,"path":["core","task","ready","Ready"],"kind":"struct"},"1:21744:3153":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:3090:2507":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:48868:3090":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:21581:3131":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:10659:3103":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:54738:3466":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:48568:11222":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:29919:3162":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:1645:3020":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:53207:3390":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:2993:2503":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:39822:3172":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:10091:3098":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:46918:198":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:20538:9036":{"crate_id":1,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:50228:3089":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:58501:1461":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:2685:222":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:48809:190":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:54129:3447":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:47997:3065":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:50664:3091":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:4346:2920":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:2775:2487":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:29913:3018":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:2461:3514":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:50868:3306":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:2934:2499":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:2688:225":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:52905:3382":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:1827:3025":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:21235:11021":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:54601:3457":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:58313:3476":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:20601:9038":{"crate_id":1,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:2824:2230":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:52737:3377":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:7207:156":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:22767:3016":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:9519:2939":{"crate_id":1,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:3934:2913":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:20614:2270":{"crate_id":1,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:48005:3067":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:47215:3030":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:47687:3054":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:47956:3062":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:47972:3063":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:12141:13193":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:49696:130":{"crate_id":1,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"1:54525:3453":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:47727:3233":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:21565:12881":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:21071:9056":{"crate_id":1,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:21605:3136":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:49439:2295":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:29941:67":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:4229:3038":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:51590:208":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:2339:179":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:51048:3960":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:48733:1798":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:2345:186":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:54239:3448":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:52262:3353":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:48741:3090":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:47585:3041":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:47428:3211":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:2506:132":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:46821:2505":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:47655:3053":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:46940:200":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:2780:2486":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:50024:3279":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:47766:3058":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:2681:2251":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:56939:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:2941:2501":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:50981:3191":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:50016:3278":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:48800:3859":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:2975:2513":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:54647:3461":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:50650:3301":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:3180:2512":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:223:207":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:20354:11024":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:52577:3366":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:7521:9513":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:50391:3281":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:10132:3099":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:2674:217":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:51383:3942":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"1:50460:3285":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:4110:3036":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:2812:2493":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:21756:3552":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:50530:3290":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:11530:3081":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:2503:147":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:5496:3047":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:53443:3409":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:47617:3226":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:4083:3034":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:54636:3460":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:48817:207":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:47400:3208":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:58494:730":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"1:47341:3201":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:9941:3094":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:8959:207":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"1:51276:3340":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:6659:3830":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:51191:3116":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:48749:2356":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:6868:3767":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:51099:3323":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:49310:3084":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:22038:172":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:21723:15393":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:21528:3128":{"crate_id":1,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:47678:3230":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:9248:144":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:7100:2354":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:6476:2391":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:8741:12899":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:9022:2296":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:3642:2356":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:21678:10217":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:8568:79":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:20369:11024":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:52537:3364":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:58478:367":{"crate_id":1,"path":["core","bool"],"kind":"primitive"}},"external_crates":{"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}