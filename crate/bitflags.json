{"root":"0:0:1779","crate_version":"2.0.0-rc.3","includes_private":false,"index":{"0:30:1857":{"id":"0:30:1857","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/traits.rs","begin":[33,4],"end":[33,52]},"visibility":"default","docs":"Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1758","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:50:2256":{"id":"0:50:2256","crate_id":0,"name":"Internal","span":{"filename":"src/traits.rs","begin":[147,4],"end":[147,18]},"visibility":"default","docs":"The type of the internal field on the generated flags type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:10:2196":{"id":"0:10:2196","crate_id":0,"name":"empty_flag","span":{"filename":"src/parser.rs","begin":[73,4],"end":[75,5]},"visibility":"public","docs":"A hex or named flag wasn't found between separators.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:41:1881":{"id":"0:41:1881","crate_id":0,"name":"toggle","span":{"filename":"src/traits.rs","begin":[69,4],"end":[69,38]},"visibility":"default","docs":"Toggles the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:38:1874":{"id":"0:38:1874","crate_id":0,"name":"contains","span":{"filename":"src/traits.rs","begin":[60,4],"end":[60,44]},"visibility":"default","docs":"Returns `true` if all of the flags in `other` are contained within `self`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:44:2242":{"id":"0:44:2242","crate_id":0,"name":"Sealed","span":{"filename":"src/traits.rs","begin":[83,0],"end":[83,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:103","0:94","0:102","0:95","0:118","0:87","0:111","0:86","0:119","0:110"]}},"b:1:2237-0:66:1840":{"id":"b:1:2237-0:66:1840","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2658:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2231:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2239:9405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:2651:217-0:66:1840":{"id":"a:1:2651:217-0:66:1840","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:1:7787:3794-0:66:1840":{"id":"a:1:7787:3794-0:66:1840","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:7787:3794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:1:2516-0:66:1840":{"id":"b:1:2516-0:66:1840","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2486:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2519:127","1:2520:1438"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:2236:2387":{"id":"1:2236:2387","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:70:656":{"id":"0:70:656","crate_id":0,"name":"fmt","span":{"filename":"src/parser.rs","begin":[22,9],"end":[22,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:8609:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:8598:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:119":{"id":"0:119","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1757","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i128"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:37:1869":{"id":"0:37:1869","crate_id":0,"name":"intersects","span":{"filename":"src/traits.rs","begin":[57,4],"end":[57,46]},"visibility":"default","docs":"Returns `true` if there are flags common to both `self` and `other`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:11":{"id":"0:11","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[78,0],"end":[108,1]},"visibility":{"restricted":{"parent":"0:5:1759","path":"::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:12:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1757","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u8"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:27:282":{"id":"0:27:282","crate_id":0,"name":"all","span":{"filename":"src/traits.rs","begin":[20,4],"end":[20,21]},"visibility":"default","docs":"Returns the set containing all flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:8:2191":{"id":"0:8:2191","crate_id":0,"name":"invalid_hex_flag","span":{"filename":"src/parser.rs","begin":[45,4],"end":[56,5]},"visibility":"public","docs":"An invalid hex flag was encountered.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["flag",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl fmt::Display","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:31:1861":{"id":"0:31:1861","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/traits.rs","begin":[37,4],"end":[37,50]},"visibility":"default","docs":"Convert from underlying bit representation, preserving all\nbits (even those not corresponding to a defined flag).","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1758","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:5:1759":{"id":"0:5:1759","crate_id":0,"name":"parser","span":{"filename":"src/parser.rs","begin":[1,0],"end":[111,40]},"visibility":"public","docs":"Parsing flags from text.\n\n`bitflags` defines the following whitespace-insensitive grammar for flags formatted\nas text:\n\n- _Flags:_ (_Flag_)`|`*\n- _Flag:_ _Identifier_ | _HexNumber_\n- _Identifier:_ Any Rust identifier\n- _HexNumber_: `0x`([0-9a-zA-Z])*\n\nAs an example, this is how `Flags::A | Flags::B | 0x0c` can be represented as text:\n\n```text\nA | B | 0x0c\n```","links":{},"attrs":["#![allow(clippy :: let_unit_value)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:66:1840"],"is_stripped":false}},"0:94":{"id":"0:94","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1757","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u16"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2525:1437":{"id":"1:2525:1437","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:48268:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"1:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:66:1840":{"id":"0:66:1840","crate_id":0,"name":"ParseError","span":{"filename":"src/parser.rs","begin":[23,0],"end":[23,38]},"visibility":"public","docs":"An error encountered while parsing flags from text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:7","a:1:2665:225-0:66:1840","a:1:2715:2489-0:66:1840","a:1:7787:3794-0:66:1840","a:1:7786:3795-0:66:1840","a:1:2651:217-0:66:1840","b:1:2516-0:66:1840","b:1:2521-0:66:1840","b:1:3306-0:66:1840","b:1:2510-0:66:1840","b:1:2506-0:66:1840","b:1:2234-0:66:1840","b:1:2237-0:66:1840","0:11","0:69"]}},"0:4-0:22:1758":{"id":"0:4-0:22:1758","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[351,0],"end":[351,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"kind":"import","inner":{"source":"traits::BitFlags","name":"BitFlags","id":"0:22:1758","glob":false}},"0:24:1792":{"id":"0:24:1792","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[11,4],"end":[11,37]},"visibility":"default","docs":"An iterator over enabled flags in an instance of the type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7197:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"1:2239:9405":{"id":"1:2239:9405","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3306-0:66:1840":{"id":"b:1:3306-0:66:1840","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2658:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3304:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3308:1451"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:26:1846":{"id":"0:26:1846","crate_id":0,"name":"empty","span":{"filename":"src/traits.rs","begin":[17,4],"end":[17,23]},"visibility":"default","docs":"Returns an empty set of flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:39:1876":{"id":"0:39:1876","crate_id":0,"name":"insert","span":{"filename":"src/traits.rs","begin":[63,4],"end":[63,38]},"visibility":"default","docs":"Inserts the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:2520:1438":{"id":"1:2520:1438","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:48268:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"1:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:102":{"id":"0:102","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1757","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u32"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:2715:2489-0:66:1840":{"id":"a:1:2715:2489-0:66:1840","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2715:2489","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:36:1865":{"id":"0:36:1865","crate_id":0,"name":"is_all","span":{"filename":"src/traits.rs","begin":[54,4],"end":[54,29]},"visibility":"default","docs":"Returns `true` if all flags are currently set.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:29:1852":{"id":"0:29:1852","crate_id":0,"name":"from_bits","span":{"filename":"src/traits.rs","begin":[27,4],"end":[29,20]},"visibility":"default","docs":"Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1758","args":null}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48124:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2658:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:69":{"id":"0:69","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[22,9],"end":[22,14]},"visibility":{"restricted":{"parent":"0:5:1759","path":"::parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:8649:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:70:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:56:1779":{"id":"0:56:1779","crate_id":0,"name":"bitflags","span":{"filename":"src/lib.rs","begin":[475,0],"end":[546,1]},"visibility":"public","docs":"The macro used to generate the flag structure.\n\nSee the [crate level docs](../bitflags/index.html) for complete documentation.\n\n# Example\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n        const ABC = Self::A.bits() | Self::B.bits() | Self::C.bits();\n    }\n}\n\nlet e1 = Flags::A | Flags::C;\nlet e2 = Flags::B | Flags::C;\nassert_eq!((e1 | e2), Flags::ABC);   // union\nassert_eq!((e1 & e2), Flags::C);     // intersection\nassert_eq!((e1 - e2), Flags::A);     // set difference\nassert_eq!(!e2, Flags::A);           // set complement\n```\n\nThe generated `struct`s can also be extended with type and trait\nimplementations:\n\n```\nuse std::fmt;\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n    }\n}\n\nimpl Flags {\n    pub fn clear(&mut self) {\n        *self.0.bits_mut() = 0;\n    }\n}\n\nlet mut flags = Flags::A | Flags::B;\n\nflags.clear();\nassert!(flags.is_empty());\n\nassert_eq!(format!(\"{:?}\", Flags::A | Flags::B), \"Flags(A | B)\");\nassert_eq!(format!(\"{:?}\", Flags::B), \"Flags(B)\");\n```","links":{},"attrs":["#[macro_export(local_inner_macros)]"],"deprecation":null,"kind":"macro","inner":"macro_rules! bitflags {\n    (\n        $(#[$outer:meta])*\n        $vis:vis struct $BitFlags:ident: $T:ty {\n            $(\n                $(#[$inner:ident $($args:tt)*])*\n                const $Flag:ident = $value:expr;\n            )*\n        }\n\n        $($t:tt)*\n    ) => { ... };\n    () => { ... };\n}"},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1757","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i32"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:32:2075":{"id":"0:32:2075","crate_id":0,"name":"from_name","span":{"filename":"src/traits.rs","begin":[40,4],"end":[42,20]},"visibility":"default","docs":"Get the flag for a particular name.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48124:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2658:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:42:1934":{"id":"0:42:1934","crate_id":0,"name":"set","span":{"filename":"src/traits.rs","begin":[72,4],"end":[72,48]},"visibility":"default","docs":"Inserts or removes the specified flags depending on the passed value.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}],["value",{"kind":"primitive","inner":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:1:2665:225-0:66:1840":{"id":"a:1:2665:225-0:66:1840","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:0:1779":{"id":"0:0:1779","crate_id":0,"name":"bitflags","span":{"filename":"src/lib.rs","begin":[11,0],"end":[1517,1]},"visibility":"public","docs":"A typesafe bitmask flag generator useful for sets of C-style flags.\nIt can be used for creating ergonomic wrappers around C APIs.\n\nThe `bitflags!` macro generates `struct`s that manage a set of flags. The\ntype of those flags must be some primitive integer.\n\n# Examples\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n        const ABC = Self::A.bits() | Self::B.bits() | Self::C.bits();\n    }\n}\n\nfn main() {\n    let e1 = Flags::A | Flags::C;\n    let e2 = Flags::B | Flags::C;\n    assert_eq!((e1 | e2), Flags::ABC);   // union\n    assert_eq!((e1 & e2), Flags::C);     // intersection\n    assert_eq!((e1 - e2), Flags::A);     // set difference\n    assert_eq!(!e2, Flags::A);           // set complement\n}\n```\n\nSee [`example_generated::Flags`](./example_generated/struct.Flags.html) for documentation of code\ngenerated by the above `bitflags!` expansion.\n\n# Visibility\n\nThe `bitflags!` macro supports visibility, just like you'd expect when writing a normal\nRust `struct`:\n\n```\nmod example {\n    use bitflags::bitflags;\n\n    bitflags! {\n        #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n        pub struct Flags1: u32 {\n            const A = 0b00000001;\n        }\n\n        #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n#       pub\n        struct Flags2: u32 {\n            const B = 0b00000010;\n        }\n    }\n}\n\nfn main() {\n    let flag1 = example::Flags1::A;\n    let flag2 = example::Flags2::B; // error: const `B` is private\n}\n```\n\n# Attributes\n\nAttributes can be attached to the generated flags types and their constants as normal.\n\n# Representation\n\nIt's valid to add a `#[repr(C)]` or `#[repr(transparent)]` attribute to a generated flags type.\nThe generated flags type is always guaranteed to be a newtype where its only field has the same\nABI as the underlying integer type.\n\nIn this example, `Flags` has the same ABI as `u32`:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[repr(transparent)]\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n```\n\n# Extending\n\nGenerated flags types belong to you, so you can add trait implementations to them outside\nof what the `bitflags!` macro gives:\n\n```\nuse std::fmt;\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n    }\n}\n\nimpl Flags {\n    pub fn clear(&mut self) {\n        *self.0.bits_mut() = 0;\n    }\n}\n\nfn main() {\n    let mut flags = Flags::A | Flags::B;\n\n    flags.clear();\n    assert!(flags.is_empty());\n\n    assert_eq!(format!(\"{:?}\", Flags::A | Flags::B), \"Flags(A | B)\");\n    assert_eq!(format!(\"{:?}\", Flags::B), \"Flags(B)\");\n}\n```\n\n# What's implemented by `bitflags!`\n\nThe `bitflags!` trait adds some trait implementations and inherent methods\nto generated flags types, but leaves room for you to choose the semantics\nof others.\n\n## Iterators\n\nThe following iterator traits are implemented for generated flags types:\n\n- `Extend`: adds the union of the instances iterated over.\n- `FromIterator`: calculates the union.\n- `IntoIterator`: iterates over set flag values.\n\n## Formatting\n\nThe following formatting traits are implemented for generated flags types:\n\n- `Binary`.\n- `LowerHex` and `UpperHex`.\n- `Octal`.\n\nAlso see the _Debug and Display_ section for details about standard text\nrepresentations for flags types.\n\n## Operators\n\nThe following operator traits are implemented for the generated `struct`s:\n\n- `BitOr` and `BitOrAssign`: union\n- `BitAnd` and `BitAndAssign`: intersection\n- `BitXor` and `BitXorAssign`: toggle\n- `Sub` and `SubAssign`: set difference\n- `Not`: set complement\n\n## Methods\n\nThe following methods are defined for the generated `struct`s:\n\n- `empty`: an empty set of flags\n- `all`: the set of all defined flags\n- `bits`: the raw value of the flags currently stored\n- `from_bits`: convert from underlying bit representation, unless that\n               representation contains bits that do not correspond to a\n               defined flag\n- `from_bits_truncate`: convert from underlying bit representation, dropping\n                        any bits that do not correspond to defined flags\n- `from_bits_retain`: convert from underlying bit representation, keeping\n                         all bits (even those not corresponding to defined\n                         flags)\n- `is_empty`: `true` if no flags are currently stored\n- `is_all`: `true` if currently set flags exactly equal all defined flags\n- `intersects`: `true` if there are flags common to both `self` and `other`\n- `contains`: `true` if all of the flags in `other` are contained within `self`\n- `insert`: inserts the specified flags in-place\n- `remove`: removes the specified flags in-place\n- `toggle`: the specified flags will be inserted if not present, and removed\n            if they are.\n- `set`: inserts or removes the specified flags depending on the passed value\n- `intersection`: returns a new set of flags, containing only the flags present\n                  in both `self` and `other` (the argument to the function).\n- `union`: returns a new set of flags, containing any flags present in\n           either `self` or `other` (the argument to the function).\n- `difference`: returns a new set of flags, containing all flags present in\n                `self` without any of the flags present in `other` (the\n                argument to the function).\n- `symmetric_difference`: returns a new set of flags, containing all flags\n                          present in either `self` or `other` (the argument\n                          to the function), but not both.\n- `complement`: returns a new set of flags, containing all flags which are\n                not set in `self`, but which are allowed for this type.\n\n# What's not implemented by `bitflags!`\n\nSome functionality is not automatically implemented for generated flags types\nby the `bitflags!` macro, even when it reasonably could be. This is so callers\nhave more freedom to decide on the semantics of their flags types.\n\n## `Clone` and `Copy`\n\nGenerated flags types are not automatically copyable, even though they can always\nderive both `Clone` and `Copy`.\n\n## `Default`\n\nThe `Default` trait is not automatically implemented for the generated structs.\n\nIf your default value is equal to `0` (which is the same value as calling `empty()`\non the generated struct), you can simply derive `Default`:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    // Results in default value with bits: 0\n    #[derive(Default, Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\nfn main() {\n    let derived_default: Flags = Default::default();\n    assert_eq!(derived_default.bits(), 0);\n}\n```\n\nIf your default value is not equal to `0` you need to implement `Default` yourself:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\n// explicit `Default` implementation\nimpl Default for Flags {\n    fn default() -> Flags {\n        Flags::A | Flags::C\n    }\n}\n\nfn main() {\n    let implemented_default: Flags = Default::default();\n    assert_eq!(implemented_default, (Flags::A | Flags::C));\n}\n```\n\n## `Debug` and `Display`\n\nThe `Debug` trait can be derived for a reasonable implementation. This library defines a standard\ntext-based representation for flags that generated flags types can use. For details on the exact\ngrammar, see the [`parser`] module.\n\n## `PartialEq` and `PartialOrd`\n\nEquality and ordering can be derived for a reasonable implementation, or implemented manually\nfor different semantics.\n\n# Edge cases\n\n## Zero Flags\n\nFlags with a value equal to zero will have some strange behavior that one should be aware of.\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const NONE = 0b00000000;\n        const SOME = 0b00000001;\n    }\n}\n\nfn main() {\n    let empty = Flags::empty();\n    let none = Flags::NONE;\n    let some = Flags::SOME;\n\n    // Zero flags are treated as always present\n    assert!(empty.contains(Flags::NONE));\n    assert!(none.contains(Flags::NONE));\n    assert!(some.contains(Flags::NONE));\n\n    // Zero flags will be ignored when testing for emptiness\n    assert!(none.is_empty());\n}\n```\n\nUsers should generally avoid defining a flag with a value of zero.\n\n# The `BitFlags` trait\n\nThis library defines a `BitFlags` trait that's implemented by all generated flags types.\nThe trait makes it possible to work with flags types generically:\n\n```\nfn count_unset_flags<F: bitflags::BitFlags>(flags: &F) -> usize {\n    // Find out how many flags there are in total\n    let total = F::all().iter().count();\n\n    // Find out how many flags are set\n    let set = flags.iter().count();\n\n    total - set\n}\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\nassert_eq!(2, count_unset_flags(&Flags::B));\n```","links":{"`parser`":"0:5:1759"},"attrs":["#![no_std]","#![doc(html_root_url = \"https://docs.rs/bitflags/2.0.0-rc.2\")]","#![forbid(unsafe_code)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:5:1759","0:4-0:22:1758","0:56:1779"],"is_stripped":false}},"b:1:2234-0:66:1840":{"id":"b:1:2234-0:66:1840","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2658:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2228:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2236:2387"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:111":{"id":"0:111","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1757","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i64"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2509:2634":{"id":"1:2509:2634","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2483:132"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:22:1758":{"id":"0:22:1758","crate_id":0,"name":"BitFlags","span":{"filename":"src/traits.rs","begin":[6,0],"end":[73,1]},"visibility":"public","docs":"A trait that is automatically implemented for all bitflags.\n\nIt should not be implemented manually.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:23:2213","0:24:1792","0:25:2217","0:26:1846","0:27:282","0:28:1818","0:29:1852","0:30:1857","0:31:1861","0:32:2075","0:33:780","0:34:2072","0:35:1863","0:36:1865","0:37:1869","0:38:1874","0:39:1876","0:40:1879","0:41:1881","0:42:1934"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ImplementedByBitFlagsMacro","id":"0:43:2211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:34:2072":{"id":"0:34:2072","crate_id":0,"name":"iter_names","span":{"filename":"src/traits.rs","begin":[48,4],"end":[48,44]},"visibility":"default","docs":"Iterate over the raw names and bits for enabled flag values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterNames","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1758","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:87":{"id":"0:87","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1757","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i8"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3308:1451":{"id":"1:3308:1451","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"1:46616:3137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2519:127":{"id":"1:2519:127","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"1:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"b:1:2510-0:66:1840":{"id":"b:1:2510-0:66:1840","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2512:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:7":{"id":"0:7","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[43,0],"end":[76,1]},"visibility":{"restricted":{"parent":"0:5:1759","path":"::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:8:2191","0:9:2194","0:10:2196"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:49:2023":{"id":"0:49:2023","crate_id":0,"name":"PublicFlags","span":{"filename":"src/traits.rs","begin":[145,0],"end":[148,1]},"visibility":"public","docs":"A trait for referencing the `bitflags`-owned internal type\nwithout exposing it publicly.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:50:2256"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:25:2217":{"id":"0:25:2217","crate_id":0,"name":"IterNames","span":{"filename":"src/traits.rs","begin":[14,4],"end":[14,58]},"visibility":"default","docs":"An iterator over the raw names and bits for enabled flags in an instance of the type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7197:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"generic","inner":"Self"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:110":{"id":"0:110","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1757","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u64"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:9:2194":{"id":"0:9:2194","crate_id":0,"name":"invalid_named_flag","span":{"filename":"src/parser.rs","begin":[59,4],"end":[70,5]},"visibility":"public","docs":"A named flag that doesn't correspond to any on the flags type was encountered.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["flag",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl fmt::Display","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:7786:3795-0:66:1840":{"id":"a:1:7786:3795-0:66:1840","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:7786:3795","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:2524:127":{"id":"1:2524:127","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"1:39376:3677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:12:656":{"id":"0:12:656","crate_id":0,"name":"fmt","span":{"filename":"src/parser.rs","begin":[79,4],"end":[107,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:8609:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:8598:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1757","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u128"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2506-0:66:1840":{"id":"b:1:2506-0:66:1840","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2509:2634"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:95":{"id":"0:95","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1757","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i16"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:28:1818":{"id":"0:28:1818","crate_id":0,"name":"bits","span":{"filename":"src/traits.rs","begin":[23,4],"end":[23,33]},"visibility":"default","docs":"Returns the raw value of the flags currently stored.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1758","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:35:1863":{"id":"0:35:1863","crate_id":0,"name":"is_empty","span":{"filename":"src/traits.rs","begin":[51,4],"end":[51,31]},"visibility":"default","docs":"Returns `true` if no flags are currently stored.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:23:2213":{"id":"0:23:2213","crate_id":0,"name":"Bits","span":{"filename":"src/traits.rs","begin":[8,4],"end":[8,20]},"visibility":"default","docs":"The underlying integer type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Bits","id":"0:45:2213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"1:2512:680":{"id":"1:2512:680","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:33:780":{"id":"0:33:780","crate_id":0,"name":"iter","span":{"filename":"src/traits.rs","begin":[45,4],"end":[45,33]},"visibility":"default","docs":"Iterate over enabled flag values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1758","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:1:2521-0:66:1840":{"id":"b:1:2521-0:66:1840","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2524:127","1:2525:1437"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:40:1879":{"id":"0:40:1879","crate_id":0,"name":"remove","span":{"filename":"src/traits.rs","begin":[66,4],"end":[66,38]},"visibility":"default","docs":"Removes the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"paths":{"1:46863:3141":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:20365:8965":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:53561:3391":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:54170:3410":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:56963:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:5412:3016":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:58485:1441":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"0:66:1840":{"crate_id":0,"path":["bitflags","parser","ParseError"],"kind":"struct"},"1:46990:3160":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:2228:97":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:48242:3200":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:50878:121":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:48399:91":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:20117:12288":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:53919:3396":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:47127:3170":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:58499:1455":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:9541:3050":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:21348:3097":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:3221:2486":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:21452:3111":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:9142:2907":{"crate_id":1,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:51030:192":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:47345:3189":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:9349:219":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:49998:3236":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:1548:2886":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:11182:3892":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:9125:2906":{"crate_id":1,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:29626:3120":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:2490:234":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:47394:3028":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:21746:172":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:49926:3231":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:48741:3044":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:49154:109":{"crate_id":1,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"1:51012:202":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:5656:13516":{"crate_id":1,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:50416:3001":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:47023:3165":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:46684:3140":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:2571:127":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:9775:3058":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:46377:2484":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:54033:3401":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:5489:3018":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:52639:3334":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:51086:158":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:50716:3284":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:47259:3184":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:4348:2606":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:22475:2988":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:50835:3884":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:3355:3680":{"crate_id":1,"path":["core","any","Provider"],"kind":"trait"},"1:2974:2474":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"0:5:1759":{"crate_id":0,"path":["bitflags","parser"],"kind":"module"},"1:4284:2892":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:21289:3089":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:4217:3008":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:4:993":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:11129:1839":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:2150:578":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:50382:3254":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:47329:3025":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:53811:3394":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:20774:8968":{"crate_id":1,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:12083:3941":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:50258:3248":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:21944:167":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:52191:3322":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:20491:2242":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:57015:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:50631:3074":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:4749:780":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:50078:3065":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:9789:3059":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:46598:2479":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:47639:3036":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:7046:3783":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:50843:3886":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:49963:3171":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:47117:2894":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:51969:3308":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:48475:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:6860:3710":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:7079:133":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:50682:3903":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:2322:186":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:48327:2328":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:2715:2489":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:2816:2464":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:8666:2594":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:58311:3420":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:49166:127":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:8211:79":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:50604:3270":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:51939:3307":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:49655:10416":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:2280:185":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:21257:3088":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:54209:3411":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:21386:10138":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:20515:2242":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:2437:2242":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:54147:3409":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:52536:3332":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:50084:3243":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:47320:3188":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:58491:727":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:50126:3056":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:47620:3196":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:58290:3419":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:51115:3296":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:4213:204":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:29720:10153":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:46983:3159":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:223:207":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:58503:13":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"1:46616:3137":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:48260:190":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:22076:3116":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:2918:2471":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:2316:179":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:52559:3333":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:21878:3115":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"0:0:1779":{"crate_id":0,"path":["bitflags"],"kind":"module"},"1:21812:174":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:50372:3253":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:1747:10616":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:10918:3069":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:8354:656":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"1:49659:3048":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:52009:3310":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:2651:217":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:11960:106":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:2670:2610":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:9696:3056":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:58497:1457":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"1:6800:3031":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:49447:3222":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:2921:2472":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:46872:3142":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:2251:105":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:50008:3237":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:21431:10587":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:11239:3900":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:20522:8969":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:3304:68":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:4394:2607":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:6605:12516":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:50400:3072":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:7143:2490":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:3169:10633":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:21402:10120":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:21365:10130":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:22010:169":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:6469:2362":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:47268:3019":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:50839:3885":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:56580:9000":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:46639:2605":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"1:47147:3171":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:8609:131":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:47380:3194":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:58488:630":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:29826:10119":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:47310:3186":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:6558:3787":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:58500:774":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:47004:3732":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:2822:2465":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:58484:1363":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:20283:8972":{"crate_id":1,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:20412:3081":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:47037:101":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:2665:225":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:58481:1027":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"1:47198:3177":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:47605:3195":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:50851:3888":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:50831:3883":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:9339:2242":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:20779:8991":{"crate_id":1,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:52999:3355":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:46625:3138":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"1:9661:3055":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:58490:730":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:56976:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"3:0:2445":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:49188:71":{"crate_id":1,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:20322:2242":{"crate_id":1,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:53873:3395":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:21340:3096":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:10992:3053":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:2952:2483":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:48589:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:58482:308":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"1:53029:3356":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:58493:729":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"1:2480:147":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:51694:3297":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:2742:2455":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:47217:3180":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:29586:3119":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:52028:3311":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:29620:2990":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:2781:2462":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:20062:11837":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:58492:728":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"1:54022:3400":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:8380:11233":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:53213:3358":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:29401:3459":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:58496:1456":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"1:47359:3027":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:11811:189":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:2777:2324":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:2483:132":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:48551:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:2659:3681":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:21845:171":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:53419:3390":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:2836:2207":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:50899:3287":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:58495:1459":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:49103:67":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:48336:180":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:54079:3405":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:2811:2206":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:21039:8966":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:52337:3326":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:48884:2269":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:2477:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:3484:2888":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"1:54042:3402":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:50827:3882":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:53995:3398":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:9157:2912":{"crate_id":1,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:51838:3303":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:8886:144":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:8872:140":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:9734:3057":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:10941:3070":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:2557:115":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:21438:3110":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:56989:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:8598:207":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"1:3140:231":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:52763:3351":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:2806:2204":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:7788:3040":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:50425:3149":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:11188:3891":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:10722:3064":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:58498:1458":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1:48863:2266":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:49989:3235":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:52093:3313":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:11394:111":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:50407:3159":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:51714:3298":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:21273:10606":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:54132:3408":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:5877:3020":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:46479:196":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:58479:1475":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"1:2757:2456":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:7197:156":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:20094:12286":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:48870:2267":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:50158:3246":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:8668:2595":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:49416:3212":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:47288:3023":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:50312:3250":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:50855:3889":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:2845:2467":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:48513:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:47591:3032":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:51868:3304":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:46936:3149":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:53957:3397":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:7042:3784":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:4339:2893":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:2752:2457":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:20246:8971":{"crate_id":1,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:49224:2593":{"crate_id":1,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:4294:2605":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:49408:3211":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:52285:3324":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:48319:3049":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:2900:2468":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:38220:3127":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:51806:3302":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:4019:3708":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:50823:3880":{"crate_id":1,"path":["core","str","LinesAnyMap"],"kind":"struct"},"1:11763:3938":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:46521:198":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:46338:2487":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:21464:3496":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:4723:11681":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:2801:2202":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:58494:725":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"1:50176:3247":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:47227:3012":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:11750:135":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:48627:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:46439:197":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:46424:2475":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:51073:3292":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:3184:2485":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:58489:631":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:50911:3916":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:51022:208":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:48703:92":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:9043:2903":{"crate_id":1,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:51760:3300":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:8375:14957":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:52139:3320":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:1756:2993":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:52239:3323":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:47245:3181":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:22043:166":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:49906:3229":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:52383:3328":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:50391:3255":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:46967:3731":{"crate_id":1,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:51908:3306":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:4076:3005":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:46914:3146":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:20363:2242":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:2970:2473":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:4145:2604":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:3130:2478":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:21779:173":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:49640:3224":{"crate_id":1,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:48192:3049":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:21911:170":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:49240:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:46632:3139":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:3635:2328":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:2728:3606":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:21037:2242":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:7120:120":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:14:2198":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:53063:3357":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:46997:3161":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:29648:67":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:9584:3053":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:47167:3173":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:2663:108":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:49897:3227":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:21325:10144":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:20049:3127":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:50018:3238":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:39416:3128":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:2769:2458":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:7892:3041":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:47042:3166":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:57002:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:47598:3033":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:7787:3794":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:51991:3309":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:52717:3350":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:50736:3075":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:8662:2269":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:11173:3041":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:12002:202":{"crate_id":1,"path":["core","task","ready","Ready"],"kind":"struct"},"1:46565:2476":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:48268:207":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:46499:199":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:29662:10155":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:3145:134":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:47297:3024":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:58478:409":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:3972:3003":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:48311:1792":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:50330:3251":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:52169:3321":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:49837:3225":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:50703:3278":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:20496:8964":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:4103:3007":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:10881:3066":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:58501:1512":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:49400:3209":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:51103:3295":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:4368:2608":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:50094:3245":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:1821:2997":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:47236:3015":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:10957:3071":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:2231:98":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:11193:3890":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:2702:3682":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:4222:3009":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:50052:3239":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:52407:3329":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:56937:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:50510:3257":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:50066:3242":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:9623:3054":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:8664:191":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:52505:3331":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:49136:67":{"crate_id":1,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"1:10335:3063":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:1632:577":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:54094:3406":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:3996:103":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:49437:3218":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:47176:3174":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:49888:3226":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:2840:2466":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:2747:2322":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:20943:11834":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:21183:3085":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:8660:2268":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:0:433":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:50539:3267":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:51738:3299":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:21313:3094":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:49127:130":{"crate_id":1,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"1:2658:2223":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:47408:3029":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:2474:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:47054:10145":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:51890:3305":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:46543:200":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:1733:3672":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:8654:119":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:2285:124":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:47629:2901":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:47647:3038":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:50525:3264":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:46455:195":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:20931:3418":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:20115:12290":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:7467:3706":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:47070:3169":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:38203:180":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:49976:3234":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:9803:3060":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:50859:3914":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:46884:10154":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:9516:3049":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:3157:2482":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:2773:2460":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:50488:3898":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:2911:2469":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:50230:3059":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:2832:2205":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:54013:3399":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:50847:3887":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:48361:84":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:20077:11837":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:2887:116":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:46961:3001":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:6651:3773":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:48200:2328":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:7474:3782":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:39412:2256":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1:52953:3354":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:50668:3271":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:52361:3327":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:49937:3232":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:48184:1792":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:48124:178":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:50276:3249":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:25285:2989":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:21977:168":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:9492:1792":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:52046:3312":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:8216:86":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"0:56:1779":{"crate_id":0,"path":["bitflags","bitflags"],"kind":"macro"},"1:48175:2215":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:0:486":{"crate_id":1,"path":["core"],"kind":"module"},"1:50556:3268":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:58502:1101":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:56950:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:3984:3004":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:52315:3325":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:8926:3046":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:2763:2459":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:11836:3079":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:20371:8967":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:2789:2463":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:46924:3147":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:7786:3795":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:49121:70":{"crate_id":1,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:54117:3407":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:21713:175":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:48665:85":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:52793:3352":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:20334:8963":{"crate_id":1,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:3151:2480":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:54053:3403":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:7470:3781":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:47369:3191":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:53671:3392":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:21130:3083":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:20524:3081":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:2828:2203":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:8649:111":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:39425:3130":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:2785:2461":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:10706:3843":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:50212:3058":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:47189:3175":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:2794:2208":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:20096:12291":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:2486:235":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:50362:3252":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:7092:2326":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:2662:222":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:50693:3274":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:48209:3198":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:47614:3034":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:50108:3050":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:8921:3835":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:53749:3393":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:8656:2267":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:10302:3062":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:46944:3730":{"crate_id":1,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:3067:2477":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:8658:2266":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:4702:3767":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:49425:144":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:52875:3353":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:2915:2470":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:3367:3000":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"1:48437:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:3927:2886":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:2661:223":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:46857:3001":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:11971:2917":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:58476:367":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1:54068:3404":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:51065:3290":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:11784:13673":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:47277:3185":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:48877:2268":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:2438:3458":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:39376:3677":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:52458:3330":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:58477:920":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1:8599:2589":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1:1639:2992":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:51784:3301":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:7083:149":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:58483:1333":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"1:20309:8973":{"crate_id":1,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:9817:3061":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:1915:2998":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:21236:3086":{"crate_id":1,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:48251:3797":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:49455:3223":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:49916:3230":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:46900:3145":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:8802:3045":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:47207:3178":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"}},"external_crates":{"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}