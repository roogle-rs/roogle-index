{"root":"0:0:1768","crate_version":"2.0.0-rc.2","includes_private":false,"index":{"1:2519:127":{"id":"1:2519:127","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"1:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:27:282":{"id":"0:27:282","crate_id":0,"name":"all","span":{"filename":"src/traits.rs","begin":[20,4],"end":[20,21]},"visibility":"default","docs":"Returns the set containing all flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:38:1863":{"id":"0:38:1863","crate_id":0,"name":"contains","span":{"filename":"src/traits.rs","begin":[60,4],"end":[60,44]},"visibility":"default","docs":"Returns `true` if all of the flags in `other` are contained within `self`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:66:1829":{"id":"0:66:1829","crate_id":0,"name":"ParseError","span":{"filename":"src/parser.rs","begin":[21,0],"end":[21,38]},"visibility":"public","docs":"An error encountered while parsing flags from text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:7","a:1:2715:2476-0:66:1829","a:1:2665:225-0:66:1829","a:1:2651:217-0:66:1829","a:1:7786:3781-0:66:1829","a:1:7787:3780-0:66:1829","b:1:3306-0:66:1829","b:1:2506-0:66:1829","b:1:2510-0:66:1829","b:1:2521-0:66:1829","b:1:2516-0:66:1829","b:1:2234-0:66:1829","b:1:2237-0:66:1829","0:11","0:69"]}},"0:40:1868":{"id":"0:40:1868","crate_id":0,"name":"remove","span":{"filename":"src/traits.rs","begin":[66,4],"end":[66,38]},"visibility":"default","docs":"Removes the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:111":{"id":"0:111","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1757","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i64"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2239:9391":{"id":"1:2239:9391","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:49:2012":{"id":"0:49:2012","crate_id":0,"name":"PublicFlags","span":{"filename":"src/traits.rs","begin":[145,0],"end":[148,1]},"visibility":"public","docs":"A trait for referencing the `bitflags`-owned internal type\nwithout exposing it publicly.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:50:2243"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1757","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u128"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:37:1858":{"id":"0:37:1858","crate_id":0,"name":"intersects","span":{"filename":"src/traits.rs","begin":[57,4],"end":[57,46]},"visibility":"default","docs":"Returns `true` if there are flags common to both `self` and `other`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:1:7787:3780-0:66:1829":{"id":"a:1:7787:3780-0:66:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:7787:3780","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:110":{"id":"0:110","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1757","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u64"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1757","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u8"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:34:2061":{"id":"0:34:2061","crate_id":0,"name":"iter_names","span":{"filename":"src/traits.rs","begin":[48,4],"end":[48,44]},"visibility":"default","docs":"Iterate over the raw names and bits for enabled flag values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterNames","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1758","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:1:2237-0:66:1829":{"id":"b:1:2237-0:66:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2658:2210","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2231:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2239:9391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2234-0:66:1829":{"id":"b:1:2234-0:66:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2658:2210","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2228:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2236:2374"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:2509:2621":{"id":"1:2509:2621","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2483:132"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:87":{"id":"0:87","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1757","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i8"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:39:1865":{"id":"0:39:1865","crate_id":0,"name":"insert","span":{"filename":"src/traits.rs","begin":[63,4],"end":[63,38]},"visibility":"default","docs":"Inserts the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:1:2506-0:66:1829":{"id":"b:1:2506-0:66:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2509:2621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:23:2200":{"id":"0:23:2200","crate_id":0,"name":"Bits","span":{"filename":"src/traits.rs","begin":[8,4],"end":[8,20]},"visibility":"default","docs":"The underlying integer type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Bits","id":"0:45:2200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:9:2181":{"id":"0:9:2181","crate_id":0,"name":"invalid_named_flag","span":{"filename":"src/parser.rs","begin":[56,4],"end":[67,5]},"visibility":"public","docs":"A named flag that doesn't correspond to any on the flags type was encountered.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["flag",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl fmt::Display","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:95":{"id":"0:95","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1757","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i16"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:26:1835":{"id":"0:26:1835","crate_id":0,"name":"empty","span":{"filename":"src/traits.rs","begin":[17,4],"end":[17,23]},"visibility":"default","docs":"Returns an empty set of flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:7":{"id":"0:7","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[40,0],"end":[73,1]},"visibility":{"restricted":{"parent":"0:5:1759","path":"::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:8:2178","0:9:2181","0:10:2183"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:3306-0:66:1829":{"id":"b:1:3306-0:66:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2658:2210","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3304:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3308:1451"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:2715:2476-0:66:1829":{"id":"a:1:2715:2476-0:66:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2715:2476","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:70:656":{"id":"0:70:656","crate_id":0,"name":"fmt","span":{"filename":"src/parser.rs","begin":[20,9],"end":[20,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:8609:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:8598:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:44:2229":{"id":"0:44:2229","crate_id":0,"name":"Sealed","span":{"filename":"src/traits.rs","begin":[83,0],"end":[83,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:111","0:86","0:102","0:103","0:119","0:118","0:94","0:95","0:110","0:87"]}},"0:33:780":{"id":"0:33:780","crate_id":0,"name":"iter","span":{"filename":"src/traits.rs","begin":[45,4],"end":[45,33]},"visibility":"default","docs":"Iterate over enabled flag values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1758","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:1:2521-0:66:1829":{"id":"b:1:2521-0:66:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2524:127","1:2525:1437"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1757","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i32"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:119":{"id":"0:119","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1757","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i128"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2516-0:66:1829":{"id":"b:1:2516-0:66:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2486:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2519:127","1:2520:1438"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:2520:1438":{"id":"1:2520:1438","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:48269:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"1:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:2665:225-0:66:1829":{"id":"a:1:2665:225-0:66:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:102":{"id":"0:102","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1757","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u32"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:42:1923":{"id":"0:42:1923","crate_id":0,"name":"set","span":{"filename":"src/traits.rs","begin":[72,4],"end":[72,48]},"visibility":"default","docs":"Inserts or removes the specified flags depending on the passed value.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}],["value",{"kind":"primitive","inner":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:94":{"id":"0:94","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1757","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u16"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:31:1850":{"id":"0:31:1850","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/traits.rs","begin":[37,4],"end":[37,50]},"visibility":"default","docs":"Convert from underlying bit representation, preserving all\nbits (even those not corresponding to a defined flag).","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1758","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:69":{"id":"0:69","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[20,9],"end":[20,14]},"visibility":{"restricted":{"parent":"0:5:1759","path":"::parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:8649:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:70:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:12:656":{"id":"0:12:656","crate_id":0,"name":"fmt","span":{"filename":"src/parser.rs","begin":[76,4],"end":[104,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:8609:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:8598:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:30:1846":{"id":"0:30:1846","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/traits.rs","begin":[33,4],"end":[33,52]},"visibility":"default","docs":"Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1758","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:10:2183":{"id":"0:10:2183","crate_id":0,"name":"empty_flag","span":{"filename":"src/parser.rs","begin":[70,4],"end":[72,5]},"visibility":"public","docs":"A hex or named flag wasn't found between separators.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:41:1870":{"id":"0:41:1870","crate_id":0,"name":"toggle","span":{"filename":"src/traits.rs","begin":[69,4],"end":[69,38]},"visibility":"default","docs":"Toggles the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:0:1768":{"id":"0:0:1768","crate_id":0,"name":"bitflags","span":{"filename":"src/lib.rs","begin":[11,0],"end":[1521,1]},"visibility":"public","docs":"A typesafe bitmask flag generator useful for sets of C-style flags.\nIt can be used for creating ergonomic wrappers around C APIs.\n\nThe `bitflags!` macro generates `struct`s that manage a set of flags. The\ntype of those flags must be some primitive integer.\n\n# Examples\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n        const ABC = Self::A.bits() | Self::B.bits() | Self::C.bits();\n    }\n}\n\nfn main() {\n    let e1 = Flags::A | Flags::C;\n    let e2 = Flags::B | Flags::C;\n    assert_eq!((e1 | e2), Flags::ABC);   // union\n    assert_eq!((e1 & e2), Flags::C);     // intersection\n    assert_eq!((e1 - e2), Flags::A);     // set difference\n    assert_eq!(!e2, Flags::A);           // set complement\n}\n```\n\nSee [`example_generated::Flags`](./example_generated/struct.Flags.html) for documentation of code\ngenerated by the above `bitflags!` expansion.\n\n# Visibility\n\nThe `bitflags!` macro supports visibility, just like you'd expect when writing a normal\nRust `struct`:\n\n```\nmod example {\n    use bitflags::bitflags;\n\n    bitflags! {\n        #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n        pub struct Flags1: u32 {\n            const A = 0b00000001;\n        }\n\n        #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n#       pub\n        struct Flags2: u32 {\n            const B = 0b00000010;\n        }\n    }\n}\n\nfn main() {\n    let flag1 = example::Flags1::A;\n    let flag2 = example::Flags2::B; // error: const `B` is private\n}\n```\n\n# Attributes\n\nAttributes can be attached to the generated flags types and their constants as normal.\n\n# Representation\n\nIt's valid to add a `#[repr(C)]` or `#[repr(transparent)]` attribute to a generated flags type.\nThe generated flags type is always guaranteed to be a newtype where its only field has the same\nABI as the underlying integer type.\n\nIn this example, `Flags` has the same ABI as `u32`:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[repr(transparent)]\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n```\n\n# Extending\n\nGenerated flags types belong to you, so you can add trait implementations to them outside\nof what the `bitflags!` macro gives:\n\n```\nuse std::fmt;\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n    }\n}\n\nimpl Flags {\n    pub fn clear(&mut self) {\n        *self.0.bits_mut() = 0;\n    }\n}\n\nfn main() {\n    let mut flags = Flags::A | Flags::B;\n\n    flags.clear();\n    assert!(flags.is_empty());\n\n    assert_eq!(format!(\"{:?}\", Flags::A | Flags::B), \"Flags(A | B)\");\n    assert_eq!(format!(\"{:?}\", Flags::B), \"Flags(B)\");\n}\n```\n\n# What's implemented by `bitflags!`\n\nThe `bitflags!` trait adds some trait implementations and inherent methods\nto generated flags types, but leaves room for you to choose the semantics\nof others.\n\n## Iterators\n\nThe following iterator traits are implemented for generated flags types:\n\n- `Extend`: adds the union of the instances iterated over.\n- `FromIterator`: calculates the union.\n- `IntoIterator`: iterates over set flag values.\n\n## Formatting\n\nThe following formatting traits are implemented for generated flags types:\n\n- `Binary`.\n- `LowerHex` and `UpperHex`.\n- `Octal`.\n\nAlso see the _Debug and Display_ section for details about standard text\nrepresentations for flags types.\n\n## Operators\n\nThe following operator traits are implemented for the generated `struct`s:\n\n- `BitOr` and `BitOrAssign`: union\n- `BitAnd` and `BitAndAssign`: intersection\n- `BitXor` and `BitXorAssign`: toggle\n- `Sub` and `SubAssign`: set difference\n- `Not`: set complement\n\n## Methods\n\nThe following methods are defined for the generated `struct`s:\n\n- `empty`: an empty set of flags\n- `all`: the set of all defined flags\n- `bits`: the raw value of the flags currently stored\n- `from_bits`: convert from underlying bit representation, unless that\n               representation contains bits that do not correspond to a\n               defined flag\n- `from_bits_truncate`: convert from underlying bit representation, dropping\n                        any bits that do not correspond to defined flags\n- `from_bits_retain`: convert from underlying bit representation, keeping\n                         all bits (even those not corresponding to defined\n                         flags)\n- `is_empty`: `true` if no flags are currently stored\n- `is_all`: `true` if currently set flags exactly equal all defined flags\n- `intersects`: `true` if there are flags common to both `self` and `other`\n- `contains`: `true` if all of the flags in `other` are contained within `self`\n- `insert`: inserts the specified flags in-place\n- `remove`: removes the specified flags in-place\n- `toggle`: the specified flags will be inserted if not present, and removed\n            if they are.\n- `set`: inserts or removes the specified flags depending on the passed value\n- `intersection`: returns a new set of flags, containing only the flags present\n                  in both `self` and `other` (the argument to the function).\n- `union`: returns a new set of flags, containing any flags present in\n           either `self` or `other` (the argument to the function).\n- `difference`: returns a new set of flags, containing all flags present in\n                `self` without any of the flags present in `other` (the\n                argument to the function).\n- `symmetric_difference`: returns a new set of flags, containing all flags\n                          present in either `self` or `other` (the argument\n                          to the function), but not both.\n- `complement`: returns a new set of flags, containing all flags which are\n                not set in `self`, but which are allowed for this type.\n\n# What's not implemented by `bitflags!`\n\nSome functionality is not automatically implemented for generated flags types\nby the `bitflags!` macro, even when it reasonably could be. This is so callers\nhave more freedom to decide on the semantics of their flags types.\n\n## `Clone` and `Copy`\n\nGenerated flags types are not automatically copyable, even though they can always\nderive both `Clone` and `Copy`.\n\n## `Default`\n\nThe `Default` trait is not automatically implemented for the generated structs.\n\nIf your default value is equal to `0` (which is the same value as calling `empty()`\non the generated struct), you can simply derive `Default`:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    // Results in default value with bits: 0\n    #[derive(Default, Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\nfn main() {\n    let derived_default: Flags = Default::default();\n    assert_eq!(derived_default.bits(), 0);\n}\n```\n\nIf your default value is not equal to `0` you need to implement `Default` yourself:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\n// explicit `Default` implementation\nimpl Default for Flags {\n    fn default() -> Flags {\n        Flags::A | Flags::C\n    }\n}\n\nfn main() {\n    let implemented_default: Flags = Default::default();\n    assert_eq!(implemented_default, (Flags::A | Flags::C));\n}\n```\n\n## `Debug` and `Display`\n\nThe `Debug` trait can be derived for a reasonable implementation. This library defines a standard\ntext-based representation for flags that generated flags types can use. For details on the exact\ngrammar, see the [`parser`] module.\n\n## `PartialEq` and `PartialOrd`\n\nEquality and ordering can be derived for a reasonable implementation, or implemented manually\nfor different semantics.\n\n# Edge cases\n\n## Zero Flags\n\nFlags with a value equal to zero will have some strange behavior that one should be aware of.\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const NONE = 0b00000000;\n        const SOME = 0b00000001;\n    }\n}\n\nfn main() {\n    let empty = Flags::empty();\n    let none = Flags::NONE;\n    let some = Flags::SOME;\n\n    // Zero flags are treated as always present\n    assert!(empty.contains(Flags::NONE));\n    assert!(none.contains(Flags::NONE));\n    assert!(some.contains(Flags::NONE));\n\n    // Zero flags will be ignored when testing for emptiness\n    assert!(none.is_empty());\n}\n```\n\nUsers should generally avoid defining a flag with a value of zero.\n\n# The `BitFlags` trait\n\nThis library defines a `BitFlags` trait that's implemented by all generated flags types.\nThe trait makes it possible to work with flags types generically:\n\n```\nfn count_unset_flags<F: bitflags::BitFlags>(flags: &F) -> usize {\n    // Find out how many flags there are in total\n    let total = F::all().iter().count();\n\n    // Find out how many flags are set\n    let set = flags.iter().count();\n\n    total - set\n}\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\nassert_eq!(2, count_unset_flags(&Flags::B));\n```","links":{"`parser`":"0:5:1759"},"attrs":["#![no_std]","#![doc(html_root_url = \"https://docs.rs/bitflags/2.0.0-rc.2\")]","#![forbid(unsafe_code)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:5:1759","0:4","0:56:1768"],"is_stripped":false}},"1:2524:127":{"id":"1:2524:127","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"1:39377:3663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:36:1854":{"id":"0:36:1854","crate_id":0,"name":"is_all","span":{"filename":"src/traits.rs","begin":[54,4],"end":[54,29]},"visibility":"default","docs":"Returns `true` if all flags are currently set.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:5:1759":{"id":"0:5:1759","crate_id":0,"name":"parser","span":{"filename":"src/parser.rs","begin":[1,0],"end":[108,40]},"visibility":"public","docs":"Parsing flags from text.\n\n`bitflags` defines the following whitespace-insensitive grammar for flags formatted\nas text:\n\n- _Flags:_ (_Flag_)`|`*\n- _Flag:_ _Identifier_ | _HexNumber_\n- _Identifier:_ Any Rust identifier\n- _HexNumber_: `0x`([0-9a-zA-Z])*\n\nAs an example, this is how `Flags::A | Flags::B | 0x0c` can be represented as text:\n\n```text\nA | B | 0x0c\n```","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:66:1829"],"is_stripped":false}},"1:3308:1451":{"id":"1:3308:1451","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"1:46617:3123","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:11":{"id":"0:11","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[75,0],"end":[105,1]},"visibility":{"restricted":{"parent":"0:5:1759","path":"::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:12:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:28:1807":{"id":"0:28:1807","crate_id":0,"name":"bits","span":{"filename":"src/traits.rs","begin":[23,4],"end":[23,33]},"visibility":"default","docs":"Returns the raw value of the flags currently stored.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1758","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:29:1841":{"id":"0:29:1841","crate_id":0,"name":"from_bits","span":{"filename":"src/traits.rs","begin":[27,4],"end":[29,20]},"visibility":"default","docs":"Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1758","args":null}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2658:2210","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:1:2510-0:66:1829":{"id":"b:1:2510-0:66:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2512:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:2512:680":{"id":"1:2512:680","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:32:2064":{"id":"0:32:2064","crate_id":0,"name":"from_name","span":{"filename":"src/traits.rs","begin":[40,4],"end":[42,20]},"visibility":"default","docs":"Get the flag for a particular name.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2658:2210","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:22:1758":{"id":"0:22:1758","crate_id":0,"name":"BitFlags","span":{"filename":"src/traits.rs","begin":[6,0],"end":[73,1]},"visibility":"public","docs":"A trait that is automatically implemented for all bitflags.\n\nIt should not be implemented manually.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:23:2200","0:24:1781","0:25:2204","0:26:1835","0:27:282","0:28:1807","0:29:1841","0:30:1846","0:31:1850","0:32:2064","0:33:780","0:34:2061","0:35:1852","0:36:1854","0:37:1858","0:38:1863","0:39:1865","0:40:1868","0:41:1870","0:42:1923"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ImplementedByBitFlagsMacro","id":"0:43:2198","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:2236:2374":{"id":"1:2236:2374","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4":{"id":"0:4","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[351,0],"end":[351,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"kind":"import","inner":{"source":"traits::BitFlags","name":"BitFlags","id":"0:22:1758","glob":false}},"a:1:2651:217-0:66:1829":{"id":"a:1:2651:217-0:66:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:2525:1437":{"id":"1:2525:1437","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:48269:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"1:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:7786:3781-0:66:1829":{"id":"a:1:7786:3781-0:66:1829","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:7786:3781","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:35:1852":{"id":"0:35:1852","crate_id":0,"name":"is_empty","span":{"filename":"src/traits.rs","begin":[51,4],"end":[51,31]},"visibility":"default","docs":"Returns `true` if no flags are currently stored.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:8:2178":{"id":"0:8:2178","crate_id":0,"name":"invalid_hex_flag","span":{"filename":"src/parser.rs","begin":[42,4],"end":[53,5]},"visibility":"public","docs":"An invalid hex flag was encountered.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["flag",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl fmt::Display","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:50:2243":{"id":"0:50:2243","crate_id":0,"name":"Internal","span":{"filename":"src/traits.rs","begin":[147,4],"end":[147,18]},"visibility":"default","docs":"The type of the internal field on the generated flags type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:56:1768":{"id":"0:56:1768","crate_id":0,"name":"bitflags","span":{"filename":"src/lib.rs","begin":[479,0],"end":[550,1]},"visibility":"public","docs":"The macro used to generate the flag structure.\n\nSee the [crate level docs](../bitflags/index.html) for complete documentation.\n\n# Example\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n        const ABC = Self::A.bits() | Self::B.bits() | Self::C.bits();\n    }\n}\n\nfn main() {\n    let e1 = Flags::A | Flags::C;\n    let e2 = Flags::B | Flags::C;\n    assert_eq!((e1 | e2), Flags::ABC);   // union\n    assert_eq!((e1 & e2), Flags::C);     // intersection\n    assert_eq!((e1 - e2), Flags::A);     // set difference\n    assert_eq!(!e2, Flags::A);           // set complement\n}\n```\n\nThe generated `struct`s can also be extended with type and trait\nimplementations:\n\n```\nuse std::fmt;\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n    }\n}\n\nimpl Flags {\n    pub fn clear(&mut self) {\n        *self.0.bits_mut() = 0;\n    }\n}\n\nfn main() {\n    let mut flags = Flags::A | Flags::B;\n\n    flags.clear();\n    assert!(flags.is_empty());\n\n    assert_eq!(format!(\"{:?}\", Flags::A | Flags::B), \"Flags(A | B)\");\n    assert_eq!(format!(\"{:?}\", Flags::B), \"Flags(B)\");\n}\n```","links":{},"attrs":["#[macro_export(local_inner_macros)]"],"deprecation":null,"kind":"macro","inner":"macro_rules! bitflags {\n    (\n        $(#[$outer:meta])*\n        $vis:vis struct $BitFlags:ident: $T:ty {\n            $(\n                $(#[$inner:ident $($args:tt)*])*\n                const $Flag:ident = $value:expr;\n            )*\n        }\n\n        $($t:tt)*\n    ) => { ... };\n    () => { ... };\n}"},"0:24:1781":{"id":"0:24:1781","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[11,4],"end":[11,37]},"visibility":"default","docs":"An iterator over enabled flags in an instance of the type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7197:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:25:2204":{"id":"0:25:2204","crate_id":0,"name":"IterNames","span":{"filename":"src/traits.rs","begin":[14,4],"end":[14,58]},"visibility":"default","docs":"An iterator over the raw names and bits for enabled flags in an instance of the type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7197:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"generic","inner":"Self"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"paths":{"1:11961:106":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:50009:3223":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:50828:3868":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:54133:3394":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:47260:3170":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:8375:14946":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:46937:3135":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:22476:2974":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:54210:3397":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:8886:144":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:50392:3241":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:21879:3101":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:11183:3878":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:50095:3231":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:1915:2984":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:10303:3048":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:46456:195":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:4348:2593":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:47289:3009":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:58482:1027":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"1:8211:79":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:11785:12336":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:46566:2463":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:25286:2975":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:2757:2443":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:10336:3049":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:52384:3314":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:2816:2451":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:47640:3022":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:58291:3405":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:58504:13":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"1:52362:3313":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:47395:3014":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:49990:3221":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:51909:3292":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:7788:3026":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:47118:2880":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:47269:3005":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:29827:9830":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:54095:3392":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:2789:2450":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:2702:3668":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:54069:3390":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:21341:3082":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:8654:119":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:58480:1475":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"1:9043:2889":{"crate_id":1,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:58485:1363":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:29649:67":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:47199:3163":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:10723:3050":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:21184:3071":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:47409:3015":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:48878:2255":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:56977:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:54080:3391":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:2228:97":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:53920:3382":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:3140:231":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:46915:3132":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:47177:3160":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:50848:3873":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:52876:3339":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:9350:219":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:8664:191":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:9585:3039":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:54043:3388":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:7786:3781":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:58497:1456":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"1:2316:179":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:29663:9858":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:54054:3389":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:51023:208":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:46617:3123":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:49241:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:46599:2466":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:50832:3869":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:48552:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:50844:3872":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:5412:3002":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:14:2185":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:50694:3260":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:11751:135":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:50540:3253":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:51104:3281":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:7892:3027":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:1548:2872":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:21912:170":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:46544:200":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:7046:3769":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:47311:3172":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:22077:3102":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:49456:3209":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:10707:3829":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:3996:103":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:2832:2192":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:4368:2595":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:48210:3184":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:29402:3445":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:9493:1781":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:47346:3175":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:2571:127":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:10958:3057":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:47190:3161":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:21038:2229":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:2887:116":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:50277:3235":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:29627:3106":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:3151:2467":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:51970:3294":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:57016:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:21978:168":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:8649:111":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:2665:225":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:46873:3128":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:47024:3151":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:8609:131":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:51074:3278":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:2280:185":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:4394:2594":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:9542:3036":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:5877:3006":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:0:433":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:49409:3197":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:8658:2253":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:3157:2469":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:58491:730":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:8802:3031":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:47621:3182":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:52537:3318":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:21040:8952":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:3367:2986":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"1:48125:178":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:50313:3236":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:3304:68":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:49128:130":{"crate_id":1,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"1:54171:3396":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:48704:92":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:2836:2194":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:50912:3902":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:52316:3311":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:50085:3229":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:21945:167":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:47071:3155":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:3067:2464":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:50704:3264":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:52794:3338":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:5489:3004":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:48261:190":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:4103:2993":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:48871:2254":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:48185:1781":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:10919:3055":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:3130:2465":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:51013:202":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:49927:3217":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:49438:3204":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:20335:8949":{"crate_id":1,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:8216:86":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"3:0:2432":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:2285:124":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:58489:630":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:50363:3238":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:11189:3877":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:20097:9881":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:58501:774":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:2915:2457":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:52029:3297":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:47381:3180":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:39426:3116":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:50856:3875":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:52640:3320":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:51992:3295":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:47128:3156":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:2970:2460":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:53562:3377":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:20497:8950":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:1632:577":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:49641:3210":{"crate_id":1,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:48590:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:50109:3036":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:58483:308":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"1:2251:105":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:49907:3215":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:3184:2472":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:9662:3041":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:50489:3884":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:8598:207":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"1:50259:3234":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:3145:134":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:21403:9835":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:4294:2592":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:7787:3780":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:50177:3233":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:58490:631":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:8354:656":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"1:7083:149":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:52954:3340":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:6800:3017":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:58484:1333":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"1:20516:2229":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:47148:3157":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:21846:171":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:49660:3034":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:3972:2989":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:48864:2253":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:48176:2202":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:47370:3177":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:51739:3285":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:4723:11974":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:2785:2448":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:2490:234":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:2763:2446":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:10942:3056":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:21314:3080":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:58500:1455":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:2822:2452":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:49225:2580":{"crate_id":1,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:6469:2349":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:53214:3344":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:48252:3783":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:49417:3198":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:2781:2449":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:8656:2254":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:2322:186":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:8926:3032":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:46968:3717":{"crate_id":1,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:58498:1457":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"1:50213:3044":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:49917:3216":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:9517:3035":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:58493:728":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"1:51087:158":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:52140:3306":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:20118:9882":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:39413:2243":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1:4213:204":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:46640:2592":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"1:49999:3222":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:47648:3024":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:4019:3694":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:52338:3312":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:49401:3195":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:46339:2474":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:21387:9797":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:52560:3319":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:50683:3889":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:48514:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:47360:3013":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:8380:11460":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:2845:2454":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:7467:3692":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:2437:2229":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:51785:3287":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:1639:2978":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:39417:3114":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:46984:3145":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:46945:3716":{"crate_id":1,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:9776:3044":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:20780:8977":{"crate_id":1,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:47218:3166":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:58499:1458":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1:52408:3315":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:20932:3404":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:47278:3171":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:2952:2470":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:47592:3018":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:2150:578":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:47330:3011":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:38221:3113":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:46626:3124":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"1:58492:727":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:2773:2447":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:12084:3927":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:2742:2442":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:46998:3147":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:46425:2462":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:51031:192":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:57003:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:48201:2315":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:10993:3039":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:4749:780":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:50019:3224":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:21258:3074":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:6605:12607":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:50383:3240":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:50331:3237":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"0:56:1768":{"crate_id":0,"path":["bitflags","bitflags"],"kind":"macro"},"1:7474:3768":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:51891:3291":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:50824:3866":{"crate_id":1,"path":["core","str","LinesAnyMap"],"kind":"struct"},"1:48742:3030":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:3927:2872":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:20247:8957":{"crate_id":1,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:51839:3289":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:21237:3072":{"crate_id":1,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:53874:3381":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:2486:235":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:47630:2887":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:2483:132":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:52047:3298":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:20323:2229":{"crate_id":1,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:46864:3127":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:50426:3135":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:51066:3276":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:50840:3871":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:2661:223":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:11764:3924":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:3169:15251":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:52506:3317":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:50231:3045":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:58486:1441":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"1:4284:2878":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:9697:3042":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:2474:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:20095:9879":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:54023:3386":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:51695:3283":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:52094:3299":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:9804:3046":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:50373:3239":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:20413:3067":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:2777:2311":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:51116:3282":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:58494:729":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"1:58312:3406":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:51807:3288":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:46633:3125":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:1821:2983":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:2840:2453":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:7470:3767":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:50053:3225":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:58477:367":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1:50511:3243":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:49898:3213":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:51869:3290":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:49104:67":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:3221:2473":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:49938:3218":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:20525:3067":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:47298:3010":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:7079:133":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:2715:2476":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:2918:2458":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:46378:2471":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:50526:3250":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:48320:3035":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:48193:3035":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:4076:2991":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:54014:3385":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:48666:85":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:50159:3232":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:20492:2229":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:2828:2190":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:50605:3256":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:49656:10376":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:4339:2879":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:3355:3666":{"crate_id":1,"path":["core","any","Provider"],"kind":"trait"},"1:39377:3663":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:29587:3105":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:21465:3482":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:21432:10834":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:20063:10667":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:56581:8986":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:50557:3254":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:58502:1512":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:7197:156":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:50900:3273":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:50127:3042":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:11194:3876":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:47208:3164":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:6651:3759":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:47615:3020":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:47005:3718":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:8921:3821":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:52240:3309":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:51940:3293":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:29621:2976":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:50417:2987":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:3484:2874":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"1:2801:2189":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:2811:2193":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:46925:3133":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:49964:3157":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:4217:2994":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:2900:2455":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:1747:10839":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:56951:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:20364:2229":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:8599:2576":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1:58478:920":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1:46685:3126":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:48400:91":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:47237:3001":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:7143:2477":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:47606:3181":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:53958:3383":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:9126:2892":{"crate_id":1,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:47228:2998":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:2747:2309":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:53000:3341":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:6558:3773":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:7092:2313":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:58495:725":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"1:20366:8951":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:4222:2995":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:49838:3211":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:48362:84":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:52286:3310":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:46440:197":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:11812:189":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:48438:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:20944:10671":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:2658:2210":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:21747:172":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:9340:2229":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:49167:127":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:9143:2893":{"crate_id":1,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:20775:8954":{"crate_id":1,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:20078:10667":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:2806:2191":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:51761:3286":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:9735:3043":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:22044:166":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:48885:2256":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:56938:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:50737:3061":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:2974:2461":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:49137:67":{"crate_id":1,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"1:20116:9884":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:52170:3307":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:48476:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:2662:222":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:2728:3592":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:46885:9842":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:20284:8958":{"crate_id":1,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:12003:202":{"crate_id":1,"path":["core","task","ready","Ready"],"kind":"struct"},"1:50836:3870":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:8662:2256":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:11837:3065":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:6860:3696":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:54034:3387":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:50079:3051":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:50408:3145":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:21714:175":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:21290:3075":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:53672:3378":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:21366:9839":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:50401:3058":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:47168:3159":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:20050:3113":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:58479:409":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:5656:13491":{"crate_id":1,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:46480:196":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:9624:3040":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:50860:3900":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:2794:2195":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:4702:3753":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:11240:3886":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:2231:98":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:20372:8953":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"0:66:1829":{"crate_id":0,"path":["bitflags","parser","ParseError"],"kind":"struct"},"1:46500:199":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:52010:3296":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:2769:2445":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:52718:3336":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:2911:2456":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:49155:109":{"crate_id":1,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"1:0:486":{"crate_id":1,"path":["core"],"kind":"module"},"1:2670:2597":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:46858:2987":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:4145:2591":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:11174:3027":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:29721:9778":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:21813:174":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:8872:140":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:21439:3096":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:52764:3337":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:47043:3152":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:52192:3308":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:22011:169":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:8660:2255":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:50717:3270":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:10882:3052":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:53812:3380":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:46991:3146":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"0:0:1768":{"crate_id":0,"path":["bitflags"],"kind":"module"},"1:54118:3393":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:47038:101":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:50669:3257":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:49122:70":{"crate_id":1,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:38204:180":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:48628:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:58503:1101":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:2557:115":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:2663:108":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:9790:3045":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:49189:71":{"crate_id":1,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:52459:3316":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:48243:3186":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:50852:3874":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:21453:3097":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:21780:173":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:53064:3343":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:49448:3208":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:3635:2315":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:53750:3379":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:8668:2582":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:21274:10829":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:47246:3167":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:49889:3212":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:20523:8955":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:53030:3342":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:53996:3384":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:49426:144":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:2477:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:48328:2315":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:8666:2581":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:9158:2898":{"crate_id":1,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:21131:3069":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:50067:3228":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:48269:207":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:53420:3376":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:2921:2459":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:20310:8959":{"crate_id":1,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:47321:3174":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"0:5:1759":{"crate_id":0,"path":["bitflags","parser"],"kind":"module"},"1:21326:9831":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:11395:111":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:58496:1459":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:2651:217":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:3984:2990":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:11972:2903":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:50632:3060":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:2438:3444":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:48312:1781":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:47055:9794":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:11130:1828":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:46962:2987":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:50879:121":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:2752:2444":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:223:207":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:54148:3395":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:4:993":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:46901:3131":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:1756:2979":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:7120:120":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:9818:3047":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:48337:180":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:7042:3770":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:2659:3667":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:46522:198":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:56964:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:21349:3083":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:51715:3284":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:56990:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:49977:3220":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:1733:3658":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:2480:147":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:47599:3019":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"}},"external_crates":{"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}