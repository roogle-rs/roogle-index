{"root":"0:0:1766","crate_version":"2.0.0-rc.2","includes_private":false,"index":{"0:32:2062":{"id":"0:32:2062","crate_id":0,"name":"from_name","span":{"filename":"src/traits.rs","begin":[40,4],"end":[42,20]},"visibility":"default","docs":"Get the flag for a particular name.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48078:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2666:2208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:29:1839":{"id":"0:29:1839","crate_id":0,"name":"from_bits","span":{"filename":"src/traits.rs","begin":[27,4],"end":[29,20]},"visibility":"default","docs":"Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1756","args":null}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48078:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2666:2208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:12:656":{"id":"0:12:656","crate_id":0,"name":"fmt","span":{"filename":"src/parser.rs","begin":[76,4],"end":[104,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:8562:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:8551:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:2659:217-0:66:1827":{"id":"a:1:2659:217-0:66:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2659:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:40:1866":{"id":"0:40:1866","crate_id":0,"name":"remove","span":{"filename":"src/traits.rs","begin":[66,4],"end":[66,38]},"visibility":"default","docs":"Removes the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:31:1848":{"id":"0:31:1848","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/traits.rs","begin":[37,4],"end":[37,50]},"visibility":"default","docs":"Convert from underlying bit representation, preserving all\nbits (even those not corresponding to a defined flag).","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1756","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:9:2179":{"id":"0:9:2179","crate_id":0,"name":"invalid_named_flag","span":{"filename":"src/parser.rs","begin":[56,4],"end":[67,5]},"visibility":"public","docs":"A named flag that doesn't correspond to any on the flags type was encountered.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["flag",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:8607:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl fmt::Display","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:8607:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:95":{"id":"0:95","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1755","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i16"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1755","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u128"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:36:1852":{"id":"0:36:1852","crate_id":0,"name":"is_all","span":{"filename":"src/traits.rs","begin":[54,4],"end":[54,29]},"visibility":"default","docs":"Returns `true` if all flags are currently set.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:1:2241-0:66:1827":{"id":"b:1:2241-0:66:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2666:2208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2243:9379"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:44:2227":{"id":"0:44:2227","crate_id":0,"name":"Sealed","span":{"filename":"src/traits.rs","begin":[83,0],"end":[83,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:86","0:87","0:94","0:95","0:102","0:103","0:110","0:111","0:118","0:119"]}},"0:34:2059":{"id":"0:34:2059","crate_id":0,"name":"iter_names","span":{"filename":"src/traits.rs","begin":[48,4],"end":[48,44]},"visibility":"default","docs":"Iterate over the raw names and bits for enabled flag values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterNames","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1756","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:119":{"id":"0:119","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1755","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i128"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2510-0:66:1827":{"id":"b:1:2510-0:66:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2487:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2484:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2513:2619"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2238-0:66:1827":{"id":"b:1:2238-0:66:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2666:2208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2240:2372"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:66:1827":{"id":"0:66:1827","crate_id":0,"name":"ParseError","span":{"filename":"src/parser.rs","begin":[21,0],"end":[21,38]},"visibility":"public","docs":"An error encountered while parsing flags from text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:7","a:1:7740:3231-0:66:1827","a:1:2659:217-0:66:1827","a:1:2723:2474-0:66:1827","a:1:2673:225-0:66:1827","a:1:7739:3232-0:66:1827","b:1:2514-0:66:1827","b:1:3311-0:66:1827","b:1:2520-0:66:1827","b:1:2525-0:66:1827","b:1:2241-0:66:1827","b:1:2510-0:66:1827","b:1:2238-0:66:1827","0:69","0:11"]}},"1:2523:127":{"id":"1:2523:127","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"1:2494:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:56:1766":{"id":"0:56:1766","crate_id":0,"name":"bitflags","span":{"filename":"src/lib.rs","begin":[479,0],"end":[550,1]},"visibility":"public","docs":"The macro used to generate the flag structure.\n\nSee the [crate level docs](../bitflags/index.html) for complete documentation.\n\n# Example\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n        const ABC = Self::A.bits() | Self::B.bits() | Self::C.bits();\n    }\n}\n\nfn main() {\n    let e1 = Flags::A | Flags::C;\n    let e2 = Flags::B | Flags::C;\n    assert_eq!((e1 | e2), Flags::ABC);   // union\n    assert_eq!((e1 & e2), Flags::C);     // intersection\n    assert_eq!((e1 - e2), Flags::A);     // set difference\n    assert_eq!(!e2, Flags::A);           // set complement\n}\n```\n\nThe generated `struct`s can also be extended with type and trait\nimplementations:\n\n```\nuse std::fmt;\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n    }\n}\n\nimpl Flags {\n    pub fn clear(&mut self) {\n        *self.0.bits_mut() = 0;\n    }\n}\n\nfn main() {\n    let mut flags = Flags::A | Flags::B;\n\n    flags.clear();\n    assert!(flags.is_empty());\n\n    assert_eq!(format!(\"{:?}\", Flags::A | Flags::B), \"Flags(A | B)\");\n    assert_eq!(format!(\"{:?}\", Flags::B), \"Flags(B)\");\n}\n```","links":{},"attrs":["#[macro_export(local_inner_macros)]"],"deprecation":null,"kind":"macro","inner":"macro_rules! bitflags {\n    (\n        $(#[$outer:meta])*\n        $vis:vis struct $BitFlags:ident: $T:ty {\n            $(\n                $(#[$inner:ident $($args:tt)*])*\n                const $Flag:ident = $value:expr;\n            )*\n        }\n\n        $($t:tt)*\n    ) => { ... };\n    () => { ... };\n}"},"1:3313:1448":{"id":"1:3313:1448","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"1:46570:3058","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2513:2619":{"id":"1:2513:2619","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2487:132"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:23:2198":{"id":"0:23:2198","crate_id":0,"name":"Bits","span":{"filename":"src/traits.rs","begin":[8,4],"end":[8,20]},"visibility":"default","docs":"The underlying integer type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Bits","id":"0:45:2198","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"b:1:2525-0:66:1827":{"id":"b:1:2525-0:66:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2484:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2494:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2528:127","1:2529:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:50:2241":{"id":"0:50:2241","crate_id":0,"name":"Internal","span":{"filename":"src/traits.rs","begin":[147,4],"end":[147,18]},"visibility":"default","docs":"The type of the internal field on the generated flags type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:70:656":{"id":"0:70:656","crate_id":0,"name":"fmt","span":{"filename":"src/parser.rs","begin":[20,9],"end":[20,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:8562:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:8551:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:27:282":{"id":"0:27:282","crate_id":0,"name":"all","span":{"filename":"src/traits.rs","begin":[20,4],"end":[20,21]},"visibility":"default","docs":"Returns the set containing all flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:0:1766":{"id":"0:0:1766","crate_id":0,"name":"bitflags","span":{"filename":"src/lib.rs","begin":[11,0],"end":[1521,1]},"visibility":"public","docs":"A typesafe bitmask flag generator useful for sets of C-style flags.\nIt can be used for creating ergonomic wrappers around C APIs.\n\nThe `bitflags!` macro generates `struct`s that manage a set of flags. The\ntype of those flags must be some primitive integer.\n\n# Examples\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n        const ABC = Self::A.bits() | Self::B.bits() | Self::C.bits();\n    }\n}\n\nfn main() {\n    let e1 = Flags::A | Flags::C;\n    let e2 = Flags::B | Flags::C;\n    assert_eq!((e1 | e2), Flags::ABC);   // union\n    assert_eq!((e1 & e2), Flags::C);     // intersection\n    assert_eq!((e1 - e2), Flags::A);     // set difference\n    assert_eq!(!e2, Flags::A);           // set complement\n}\n```\n\nSee [`example_generated::Flags`](./example_generated/struct.Flags.html) for documentation of code\ngenerated by the above `bitflags!` expansion.\n\n# Visibility\n\nThe `bitflags!` macro supports visibility, just like you'd expect when writing a normal\nRust `struct`:\n\n```\nmod example {\n    use bitflags::bitflags;\n\n    bitflags! {\n        #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n        pub struct Flags1: u32 {\n            const A = 0b00000001;\n        }\n\n        #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n#       pub\n        struct Flags2: u32 {\n            const B = 0b00000010;\n        }\n    }\n}\n\nfn main() {\n    let flag1 = example::Flags1::A;\n    let flag2 = example::Flags2::B; // error: const `B` is private\n}\n```\n\n# Attributes\n\nAttributes can be attached to the generated flags types and their constants as normal.\n\n# Representation\n\nIt's valid to add a `#[repr(C)]` or `#[repr(transparent)]` attribute to a generated flags type.\nThe generated flags type is always guaranteed to be a newtype where its only field has the same\nABI as the underlying integer type.\n\nIn this example, `Flags` has the same ABI as `u32`:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[repr(transparent)]\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n```\n\n# Extending\n\nGenerated flags types belong to you, so you can add trait implementations to them outside\nof what the `bitflags!` macro gives:\n\n```\nuse std::fmt;\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n    }\n}\n\nimpl Flags {\n    pub fn clear(&mut self) {\n        *self.0.bits_mut() = 0;\n    }\n}\n\nfn main() {\n    let mut flags = Flags::A | Flags::B;\n\n    flags.clear();\n    assert!(flags.is_empty());\n\n    assert_eq!(format!(\"{:?}\", Flags::A | Flags::B), \"Flags(A | B)\");\n    assert_eq!(format!(\"{:?}\", Flags::B), \"Flags(B)\");\n}\n```\n\n# What's implemented by `bitflags!`\n\nThe `bitflags!` trait adds some trait implementations and inherent methods\nto generated flags types, but leaves room for you to choose the semantics\nof others.\n\n## Iterators\n\nThe following iterator traits are implemented for generated flags types:\n\n- `Extend`: adds the union of the instances iterated over.\n- `FromIterator`: calculates the union.\n- `IntoIterator`: iterates over set flag values.\n\n## Formatting\n\nThe following formatting traits are implemented for generated flags types:\n\n- `Binary`.\n- `LowerHex` and `UpperHex`.\n- `Octal`.\n\nAlso see the _Debug and Display_ section for details about standard text\nrepresentations for flags types.\n\n## Operators\n\nThe following operator traits are implemented for the generated `struct`s:\n\n- `BitOr` and `BitOrAssign`: union\n- `BitAnd` and `BitAndAssign`: intersection\n- `BitXor` and `BitXorAssign`: toggle\n- `Sub` and `SubAssign`: set difference\n- `Not`: set complement\n\n## Methods\n\nThe following methods are defined for the generated `struct`s:\n\n- `empty`: an empty set of flags\n- `all`: the set of all defined flags\n- `bits`: the raw value of the flags currently stored\n- `from_bits`: convert from underlying bit representation, unless that\n               representation contains bits that do not correspond to a\n               defined flag\n- `from_bits_truncate`: convert from underlying bit representation, dropping\n                        any bits that do not correspond to defined flags\n- `from_bits_retain`: convert from underlying bit representation, keeping\n                         all bits (even those not corresponding to defined\n                         flags)\n- `is_empty`: `true` if no flags are currently stored\n- `is_all`: `true` if currently set flags exactly equal all defined flags\n- `intersects`: `true` if there are flags common to both `self` and `other`\n- `contains`: `true` if all of the flags in `other` are contained within `self`\n- `insert`: inserts the specified flags in-place\n- `remove`: removes the specified flags in-place\n- `toggle`: the specified flags will be inserted if not present, and removed\n            if they are.\n- `set`: inserts or removes the specified flags depending on the passed value\n- `intersection`: returns a new set of flags, containing only the flags present\n                  in both `self` and `other` (the argument to the function).\n- `union`: returns a new set of flags, containing any flags present in\n           either `self` or `other` (the argument to the function).\n- `difference`: returns a new set of flags, containing all flags present in\n                `self` without any of the flags present in `other` (the\n                argument to the function).\n- `symmetric_difference`: returns a new set of flags, containing all flags\n                          present in either `self` or `other` (the argument\n                          to the function), but not both.\n- `complement`: returns a new set of flags, containing all flags which are\n                not set in `self`, but which are allowed for this type.\n\n# What's not implemented by `bitflags!`\n\nSome functionality is not automatically implemented for generated flags types\nby the `bitflags!` macro, even when it reasonably could be. This is so callers\nhave more freedom to decide on the semantics of their flags types.\n\n## `Clone` and `Copy`\n\nGenerated flags types are not automatically copyable, even though they can always\nderive both `Clone` and `Copy`.\n\n## `Default`\n\nThe `Default` trait is not automatically implemented for the generated structs.\n\nIf your default value is equal to `0` (which is the same value as calling `empty()`\non the generated struct), you can simply derive `Default`:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    // Results in default value with bits: 0\n    #[derive(Default, Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\nfn main() {\n    let derived_default: Flags = Default::default();\n    assert_eq!(derived_default.bits(), 0);\n}\n```\n\nIf your default value is not equal to `0` you need to implement `Default` yourself:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\n// explicit `Default` implementation\nimpl Default for Flags {\n    fn default() -> Flags {\n        Flags::A | Flags::C\n    }\n}\n\nfn main() {\n    let implemented_default: Flags = Default::default();\n    assert_eq!(implemented_default, (Flags::A | Flags::C));\n}\n```\n\n## `Debug` and `Display`\n\nThe `Debug` trait can be derived for a reasonable implementation. This library defines a standard\ntext-based representation for flags that generated flags types can use. For details on the exact\ngrammar, see the [`parser`] module.\n\n## `PartialEq` and `PartialOrd`\n\nEquality and ordering can be derived for a reasonable implementation, or implemented manually\nfor different semantics.\n\n# Edge cases\n\n## Zero Flags\n\nFlags with a value equal to zero will have some strange behavior that one should be aware of.\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const NONE = 0b00000000;\n        const SOME = 0b00000001;\n    }\n}\n\nfn main() {\n    let empty = Flags::empty();\n    let none = Flags::NONE;\n    let some = Flags::SOME;\n\n    // Zero flags are treated as always present\n    assert!(empty.contains(Flags::NONE));\n    assert!(none.contains(Flags::NONE));\n    assert!(some.contains(Flags::NONE));\n\n    // Zero flags will be ignored when testing for emptiness\n    assert!(none.is_empty());\n}\n```\n\nUsers should generally avoid defining a flag with a value of zero.\n\n# The `BitFlags` trait\n\nThis library defines a `BitFlags` trait that's implemented by all generated flags types.\nThe trait makes it possible to work with flags types generically:\n\n```\nfn count_unset_flags<F: bitflags::BitFlags>(flags: &F) -> usize {\n    // Find out how many flags there are in total\n    let total = F::all().iter().count();\n\n    // Find out how many flags are set\n    let set = flags.iter().count();\n\n    total - set\n}\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\nassert_eq!(2, count_unset_flags(&Flags::B));\n```","links":{"`parser`":"0:5:1757"},"attrs":["#![no_std]","#![doc(html_root_url = \"https://docs.rs/bitflags/2.0.0-rc.2\")]","#![forbid(unsafe_code)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:5:1757","0:4","0:56:1766"],"is_stripped":false}},"1:2243:9379":{"id":"1:2243:9379","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:110":{"id":"0:110","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1755","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u64"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:35:1850":{"id":"0:35:1850","crate_id":0,"name":"is_empty","span":{"filename":"src/traits.rs","begin":[51,4],"end":[51,31]},"visibility":"default","docs":"Returns `true` if no flags are currently stored.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:1:2723:2474-0:66:1827":{"id":"a:1:2723:2474-0:66:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2723:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:38:1861":{"id":"0:38:1861","crate_id":0,"name":"contains","span":{"filename":"src/traits.rs","begin":[60,4],"end":[60,44]},"visibility":"default","docs":"Returns `true` if all of the flags in `other` are contained within `self`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:2240:2372":{"id":"1:2240:2372","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:94":{"id":"0:94","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1755","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u16"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:28:1805":{"id":"0:28:1805","crate_id":0,"name":"bits","span":{"filename":"src/traits.rs","begin":[23,4],"end":[23,33]},"visibility":"default","docs":"Returns the raw value of the flags currently stored.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1756","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:1:7739:3232-0:66:1827":{"id":"a:1:7739:3232-0:66:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:7739:3232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:7":{"id":"0:7","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[40,0],"end":[73,1]},"visibility":{"restricted":{"parent":"0:5:1757","path":"::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:8:2176","0:9:2179","0:10:2181"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:102":{"id":"0:102","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1755","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u32"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1755","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u8"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:26:1833":{"id":"0:26:1833","crate_id":0,"name":"empty","span":{"filename":"src/traits.rs","begin":[17,4],"end":[17,23]},"visibility":"default","docs":"Returns an empty set of flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:2529:1434":{"id":"1:2529:1434","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:48222:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"1:2494:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:24:1779":{"id":"0:24:1779","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[11,4],"end":[11,37]},"visibility":"default","docs":"An iterator over enabled flags in an instance of the type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7155:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"a:1:2673:225-0:66:1827":{"id":"a:1:2673:225-0:66:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2673:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:87":{"id":"0:87","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1755","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i8"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:3311-0:66:1827":{"id":"b:1:3311-0:66:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2666:2208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3309:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3313:1448"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:30:1844":{"id":"0:30:1844","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/traits.rs","begin":[33,4],"end":[33,52]},"visibility":"default","docs":"Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1756","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1755","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i32"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2520-0:66:1827":{"id":"b:1:2520-0:66:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2494:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2490:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2523:127","1:2524:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:10:2181":{"id":"0:10:2181","crate_id":0,"name":"empty_flag","span":{"filename":"src/parser.rs","begin":[70,4],"end":[72,5]},"visibility":"public","docs":"A hex or named flag wasn't found between separators.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:7740:3231-0:66:1827":{"id":"a:1:7740:3231-0:66:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:7740:3231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:69":{"id":"0:69","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[20,9],"end":[20,14]},"visibility":{"restricted":{"parent":"0:5:1757","path":"::parser"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:8602:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:70:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:33:780":{"id":"0:33:780","crate_id":0,"name":"iter","span":{"filename":"src/traits.rs","begin":[45,4],"end":[45,33]},"visibility":"default","docs":"Iterate over enabled flag values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1756","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:22:1756":{"id":"0:22:1756","crate_id":0,"name":"BitFlags","span":{"filename":"src/traits.rs","begin":[6,0],"end":[73,1]},"visibility":"public","docs":"A trait that is automatically implemented for all bitflags.\n\nIt should not be implemented manually.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:23:2198","0:24:1779","0:25:2202","0:26:1833","0:27:282","0:28:1805","0:29:1839","0:30:1844","0:31:1848","0:32:2062","0:33:780","0:34:2059","0:35:1850","0:36:1852","0:37:1856","0:38:1861","0:39:1863","0:40:1866","0:41:1868","0:42:1921"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ImplementedByBitFlagsMacro","id":"0:43:2196","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:2528:127":{"id":"1:2528:127","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"1:39330:3052","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:37:1856":{"id":"0:37:1856","crate_id":0,"name":"intersects","span":{"filename":"src/traits.rs","begin":[57,4],"end":[57,46]},"visibility":"default","docs":"Returns `true` if there are flags common to both `self` and `other`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:41:1868":{"id":"0:41:1868","crate_id":0,"name":"toggle","span":{"filename":"src/traits.rs","begin":[69,4],"end":[69,38]},"visibility":"default","docs":"Toggles the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:2516:680":{"id":"1:2516:680","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:42:1921":{"id":"0:42:1921","crate_id":0,"name":"set","span":{"filename":"src/traits.rs","begin":[72,4],"end":[72,48]},"visibility":"default","docs":"Inserts or removes the specified flags depending on the passed value.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}],["value",{"kind":"primitive","inner":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:111":{"id":"0:111","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:13:1755","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i64"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2524:1435":{"id":"1:2524:1435","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:48222:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"1:2494:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:8:2176":{"id":"0:8:2176","crate_id":0,"name":"invalid_hex_flag","span":{"filename":"src/parser.rs","begin":[42,4],"end":[53,5]},"visibility":"public","docs":"An invalid hex flag was encountered.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["flag",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:8607:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl fmt::Display","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:8607:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2514-0:66:1827":{"id":"b:1:2514-0:66:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2487:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2516:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:49:2010":{"id":"0:49:2010","crate_id":0,"name":"PublicFlags","span":{"filename":"src/traits.rs","begin":[145,0],"end":[148,1]},"visibility":"public","docs":"A trait for referencing the `bitflags`-owned internal type\nwithout exposing it publicly.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:50:2241"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:39:1863":{"id":"0:39:1863","crate_id":0,"name":"insert","span":{"filename":"src/traits.rs","begin":[63,4],"end":[63,38]},"visibility":"default","docs":"Inserts the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:25:2202":{"id":"0:25:2202","crate_id":0,"name":"IterNames","span":{"filename":"src/traits.rs","begin":[14,4],"end":[14,58]},"visibility":"default","docs":"An iterator over the raw names and bits for enabled flags in an instance of the type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7155:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"generic","inner":"Self"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:4":{"id":"0:4","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[351,0],"end":[351,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"kind":"import","inner":{"source":"traits::BitFlags","name":"BitFlags","id":"0:22:1756","glob":false}},"0:5:1757":{"id":"0:5:1757","crate_id":0,"name":"parser","span":{"filename":"src/parser.rs","begin":[1,0],"end":[108,40]},"visibility":"public","docs":"Parsing flags from text.\n\n`bitflags` defines the following whitespace-insensitive grammar for flags formatted\nas text:\n\n- _Flags:_ (_Flag_)`|`*\n- _Flag:_ _Identifier_ | _HexNumber_\n- _Identifier:_ Any Rust identifier\n- _HexNumber_: `0x`([0-9a-zA-Z])*\n\nAs an example, this is how `Flags::A | Flags::B | 0x0c` can be represented as text:\n\n```text\nA | B | 0x0c\n```","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:66:1827"],"is_stripped":false}},"0:11":{"id":"0:11","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[75,0],"end":[105,1]},"visibility":{"restricted":{"parent":"0:5:1757","path":"::parser"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:8607:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:66:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:12:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"paths":{"1:10835:3405":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:3946:8913":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:4721:780":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:3958:8914":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:50789:3377":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:58422:367":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1:51660:9068":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:20733:8513":{"crate_id":1,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:51032:158":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:21356:9673":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:52709:8553":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:2575:127":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:49391:9030":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:21211:8948":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:47213:3208":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:8619:2579":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:46944:3121":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:21267:2855":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:49409:9035":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:49354:3276":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:49194:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:8333:13576":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:51684:8558":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:49120:127":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:48205:3234":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:8607:119":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:11142:3346":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:46878:3128":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:2736:2993":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:10289:3334":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:9072:8825":{"crate_id":1,"path":["core","slice","sort","insert_head","InsertionHole"],"kind":"struct"},"1:47545:3176":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:46497:200":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:8611:2251":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:50012:3386":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:58424:409":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:50040:3388":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:48129:2200":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:47601:3187":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:6818:3091":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:3153:134":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:48196:3229":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:11136:3345":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:58443:1454":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"1:7037:133":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:6515:3201":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:56922:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:11790:3439":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:11956:202":{"crate_id":1,"path":["core","task","ready","Ready"],"kind":"struct"},"1:2723:2474":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:49370:3275":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:2848:2451":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:21319:9771":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:52115:8552":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:3898:3080":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:3159:2465":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:58449:13":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"1:20991:2227":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:54116:8480":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:20469:2227":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:9743:3317":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:56948:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:21227:12823":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:29780:9757":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:53819:8519":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:50371:3117":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:2561:115":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:50222:3399":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:47593:3185":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:3372:3056":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"1:3993:3088":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:47552:8925":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:58430:1360":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:2284:185":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:2289:124":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:6562:9957":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:52975:8536":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:47130:3202":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:20069:14419":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:48222:207":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:21418:2860":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:3226:2471":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:49401:9034":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:46890:3117":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:49922:3331":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:20476:8491":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:20200:8493":{"crate_id":1,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"0:66:1827":{"crate_id":0,"path":["bitflags","parser","ParseError"],"kind":"struct"},"1:8825:140":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:21190:8946":{"crate_id":1,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:46838:9758":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:2789:2447":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:50781:3375":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:2484:147":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:9688:3324":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:8617:191":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:46638:3074":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:2836:2188":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:1825:3044":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:47190:3206":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:49872:3326":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:20993:8487":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:9086:8826":{"crate_id":1,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:49883:3332":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:51854:9069":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:46854:3125":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:20237:8494":{"crate_id":1,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:5623:11207":{"crate_id":1,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:53959:8469":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:11127:3343":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:47024:3168":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:4368:2592":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:58442:1453":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"1:56896:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:52404:9078":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:47081:3165":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:46331:2469":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:50346:3400":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:47334:3216":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:52039:8483":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:50649:3361":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:48657:92":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:58428:308":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"1:58440:725":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"1:2671:108":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:48429:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:47222:3209":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:54078:8478":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:51992:9071":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:9294:2227":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:8552:2574":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1:2802:2193":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:21832:2857":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:2666:2208":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:7425:3086":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:49108:109":{"crate_id":1,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"1:7432:3189":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:0:486":{"crate_id":1,"path":["core"],"kind":"module"},"1:2154:578":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:47299:3214":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:46991:101":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:2678:2595":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:51885:8539":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:4191:3092":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:4258:3098":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:53988:8472":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:1552:3080":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:46977:3124":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:10911:3406":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:21667:175":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:53159:8542":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:47143:3194":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:12037:3447":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:48138:1779":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:8996:3287":{"crate_id":1,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"1:50824:121":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:11765:189":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:50485:3354":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:29540:3008":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:48695:3271":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:49843:3314":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:39366:2241":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1:47242:3210":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:9495:3319":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:51019:3442":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:53617:8550":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:10676:3312":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:58423:920":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1:52185:8540":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:47071:3164":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:2781:2445":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:50797:3379":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:50777:3374":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:2494:234":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:58435:631":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:52899:8529":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:20319:8486":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:38174:3048":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:58446:774":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:56935:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:58427:1025":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"1:51730:8538":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:2487:132":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:2929:2457":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:58257:9135":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:46586:8986":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:46519:2461":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:51955:9070":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:1636:577":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:2960:2468":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:2908:2453":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:49964:3329":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:54063:8477":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:1751:12819":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:9650:3323":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:50628:3359":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:47121:3193":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:21243:8949":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:20016:14474":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:53009:8518":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:48831:2253":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:25239:2854":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:58448:1099":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:20263:8495":{"crate_id":1,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:58431:1438":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"1:56961:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:50550:3356":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:51915:8527":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:2895:116":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:4187:204":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:3148:231":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:50471:3351":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:51752:8526":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:9119:8832":{"crate_id":1,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:52663:8549":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:51640:9067":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:7004:3190":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:1919:3045":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:50104:3395":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:2326:186":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:49609:9633":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:46579:8985":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"1:48146:3083":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:2771:2444":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:51049:3449":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:1643:2879":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:2824:2449":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:21733:173":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:2830:2450":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:46898:3118":{"crate_id":1,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:21799:171":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:5456:3196":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:8879:3274":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:2982:2459":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:48353:91":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:48391:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:2670:222":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:52945:8533":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:58445:1452":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:50614:3358":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:3360:3057":{"crate_id":1,"path":["core","any","Provider"],"kind":"trait"},"1:52283:8535":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:50502:3355":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:2320:179":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:47199:9007":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:2809:2187":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:54093:8479":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:20478:8489":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:56883:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:47283:3213":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:2478:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:58438:728":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"1:21084:8943":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:50976:192":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:49081:130":{"crate_id":1,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"1:50122:3394":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:2755:2307":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:54155:8481":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:21340:9672":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:50769:3371":{"crate_id":1,"path":["core","str","LinesAnyMap"],"kind":"struct"},"1:47568:3179":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:52505:9081":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:8609:2252":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:51974:8516":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:58444:1455":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1:46996:3169":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:46409:195":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:48824:2252":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:2669:223":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:2978:2458":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"2:223:207":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:47181:3205":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:49142:71":{"crate_id":1,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:50456:3348":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:48281:2313":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:50845:3415":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:2853:2452":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:9104:8827":{"crate_id":1,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:50158:3321":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:50639:3360":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:47251:3197":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:49954:3328":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:14:2183":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:52451:9079":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:4:991":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:8839:144":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:51814:8547":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:46915:3084":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:48154:2313":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:49613:3339":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:8169:86":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:11348:111":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:54014:8474":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:46593:2590":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"1:50204:3398":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:21279:9778":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:8562:131":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:6758:3175":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:5844:3220":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:11083:1826":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:47171:3204":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:4695:15336":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:46453:199":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:54025:8475":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:46817:3089":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:4342:2593":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:7428:3082":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:49862:3325":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:52739:8556":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:58437:727":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:52231:8528":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:47152:3195":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:2765:2441":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:46378:2460":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:2923:2455":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:2844:2192":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:21964:169":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:2232:97":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:21865:170":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:4268:2590":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:2840:2190":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:47161:3203":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:3075:2462":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:7739:3232":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:46937:3120":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:20445:2227":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:3309:68":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:47274:3212":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:20366:8489":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:2667:3059":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:22429:2853":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:46951:3122":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:49362:9024":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:3138:2463":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:52353:8521":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:48838:2254":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:48214:190":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:49379:144":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:11925:3443":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:50857:3416":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:49057:67":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:48273:3083":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:2235:98":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:2797:2448":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:53968:8470":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:3606:2313":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:8613:2253":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:29355:2834":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:51706:8546":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:2255:105":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:20325:8488":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:8551:207":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"1:50805:3413":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:9729:3321":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:58439:729":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"1:50434:3344":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:50773:3373":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:20071:14417":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:49090:67":{"crate_id":1,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"1:1737:3042":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:29616:9708":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:2673:225":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"0:0:1766":{"crate_id":0,"path":["bitflags"],"kind":"module"},"1:46826:3126":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:20031:14474":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:11704:135":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:2710:3060":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:46868:3127":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:49178:2578":{"crate_id":1,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:47313:3215":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:8307:656":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"1:46921:3119":{"crate_id":1,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:8164:79":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:53695:8534":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:6429:2347":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:4077:3102":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:53979:8471":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:47231:3219":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:21294:8955":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:58429:1330":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"1:46475:198":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:20276:2227":{"crate_id":1,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:2441:2227":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:49852:3315":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:2926:2456":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:4313:3099":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:53757:8554":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:50328:3392":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:48619:85":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:0:433":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:8615:2254":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:52261:8532":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:29674:9765":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:20885:3313":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:50682:3382":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:52482:9080":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:52085:8548":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:29574:3009":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:50176:3317":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:4674:3163":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:8755:8931":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:11147:3347":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:47559:3177":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"3:0:2430":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:7041:149":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:10660:3310":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:21385:12821":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:53507:8530":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:49075:70":{"crate_id":1,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:47574:3181":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:21898:167":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:52329:8520":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:7741:3230":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:2919:2454":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:20003:3048":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"0:56:1766":{"crate_id":0,"path":["bitflags","bitflags"],"kind":"macro"},"1:20897:14478":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:56909:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:50785:3376":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:1760:3041":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:54040:8476":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:10946:3335":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:4322:2591":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:21997:166":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:46292:2472":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:21406:2856":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:11738:10033":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:10256:3333":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:48581:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:50793:3378":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:58434:630":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:49909:3192":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:47008:9773":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:7101:2475":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:20288:8484":{"crate_id":1,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:58447:1509":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:39370:3055":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:47264:3211":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:11717:3438":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:50662:3381":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:50024:3390":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:53999:8473":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:9304:219":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:53941:8522":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:51061:3446":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:48265:1779":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:7050:2311":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:50030:3389":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:50258:3396":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:4050:3101":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:2750:2440":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:49834:3316":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:48315:84":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:50072:3323":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:49998:3387":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:8621:2580":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:53865:8537":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:51011:3441":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:58441:1456":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:47323:3199":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:20048:14416":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:9446:1779":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:4196:3093":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:47362:3218":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:46552:2464":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:2819:2191":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:46958:3123":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:6609:3173":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:4119:2589":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:46811:3084":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:8602:111":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:3189:2470":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:49594:3304":{"crate_id":1,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:52307:8517":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:21931:168":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:3970:103":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:50801:3380":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:9577:3320":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:48078:178":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:8874:3273":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:7845:3343":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:22030:2858":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:21766:174":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:48163:3228":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:20317:2227":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:48543:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:2793:2446":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:50337:3401":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:2442:2833":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:11193:3350":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:21700:172":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:49944:3330":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:52821:8541":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:53365:8561":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:29602:67":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:20728:8490":{"crate_id":1,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:2814:2189":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:48817:2251":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:3165:2467":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:50054:3319":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:52137:8555":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:49783:9036":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:58425:1472":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"1:8328:13221":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:7078:120":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:9615:3336":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:2659:217":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:39330:3052":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:21302:8956":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:38157:180":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:51784:8559":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:20050:14414":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:9757:3322":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:2777:2443":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:48505:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:58236:9134":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:50362:3084":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:9470:3083":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:7740:3231":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:2481:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:39379:3061":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:50353:3120":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:5379:3207":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:50577:3357":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:9538:3335":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:49935:3327":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:2760:2442":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:3174:14504":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:46433:196":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:10872:3407":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:48290:180":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:29580:3010":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:50276:3397":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"0:5:1757":{"crate_id":0,"path":["bitflags","parser"],"kind":"module"},"1:46393:197":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:7000:3191":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:47583:3183":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:2490:235":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:11914:106":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:48467:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:50318:3393":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:9771:3318":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:52585:8560":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:47348:3217":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:50308:3391":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:21392:2859":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:2785:2309":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:7155:156":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:46570:3058":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:47101:3192":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:50958:202":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:53903:8557":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:58436:730":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:50968:208":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:51836:8551":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:20450:8485":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:51937:8531":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:56526:8562":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:10895:3404":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:21137:8945":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"}},"external_crates":{"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}