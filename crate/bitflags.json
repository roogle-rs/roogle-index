{"root":"0:0:1760","crate_version":"2.0.0-rc.1","includes_private":false,"index":{"0:24:2016":{"id":"0:24:2016","crate_id":0,"name":"from_name","span":{"filename":"src/traits.rs","begin":[40,4],"end":[42,20]},"visibility":"default","docs":"Get the flag for a particular name.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2670:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:28:1834":{"id":"0:28:1834","crate_id":0,"name":"is_all","span":{"filename":"src/traits.rs","begin":[54,4],"end":[54,29]},"visibility":"default","docs":"Returns `true` if all flags are currently set.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:80":{"id":"0:80","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1750","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u32"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:42:2168":{"id":"0:42:2168","crate_id":0,"name":"Internal","span":{"filename":"src/traits.rs","begin":[147,4],"end":[147,18]},"visibility":"default","docs":"The type of the internal field on the generated flags type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:32:1848":{"id":"0:32:1848","crate_id":0,"name":"remove","span":{"filename":"src/traits.rs","begin":[66,4],"end":[66,38]},"visibility":"default","docs":"Removes the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:20:1799":{"id":"0:20:1799","crate_id":0,"name":"bits","span":{"filename":"src/traits.rs","begin":[23,4],"end":[23,33]},"visibility":"default","docs":"Returns the raw value of the flags currently stored.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:14:1751","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:72":{"id":"0:72","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1750","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u16"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:96":{"id":"0:96","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1750","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u128"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:18:1815":{"id":"0:18:1815","crate_id":0,"name":"empty","span":{"filename":"src/traits.rs","begin":[17,4],"end":[17,23]},"visibility":"default","docs":"Returns an empty set of flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:21:1821":{"id":"0:21:1821","crate_id":0,"name":"from_bits","span":{"filename":"src/traits.rs","begin":[27,4],"end":[29,20]},"visibility":"default","docs":"Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:14:1751","args":null}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2670:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1750","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i128"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:34:1903":{"id":"0:34:1903","crate_id":0,"name":"set","span":{"filename":"src/traits.rs","begin":[72,4],"end":[72,48]},"visibility":"default","docs":"Inserts or removes the specified flags depending on the passed value.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}],["value",{"kind":"primitive","inner":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:26:2013":{"id":"0:26:2013","crate_id":0,"name":"iter_names","span":{"filename":"src/traits.rs","begin":[48,4],"end":[48,44]},"visibility":"default","docs":"Iterate over the raw names and bits for enabled flag values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterNames","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:14:1751","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:64":{"id":"0:64","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1750","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u8"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1750","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i32"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:23:1830":{"id":"0:23:1830","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/traits.rs","begin":[37,4],"end":[37,50]},"visibility":"default","docs":"Convert from underlying bit representation, preserving all\nbits (even those not corresponding to a defined flag).","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:14:1751","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:41:1964":{"id":"0:41:1964","crate_id":0,"name":"PublicFlags","span":{"filename":"src/traits.rs","begin":[145,0],"end":[148,1]},"visibility":"public","docs":"A trait for referencing the `bitflags`-owned internal type\nwithout exposing it publicly.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:42:2168"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:33:1850":{"id":"0:33:1850","crate_id":0,"name":"toggle","span":{"filename":"src/traits.rs","begin":[69,4],"end":[69,38]},"visibility":"default","docs":"Toggles the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1750","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u64"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:15:2125":{"id":"0:15:2125","crate_id":0,"name":"Bits","span":{"filename":"src/traits.rs","begin":[8,4],"end":[8,20]},"visibility":"default","docs":"The underlying integer type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Bits","id":"0:37:2125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:31:1845":{"id":"0:31:1845","crate_id":0,"name":"insert","span":{"filename":"src/traits.rs","begin":[63,4],"end":[63,38]},"visibility":"default","docs":"Inserts the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:36:2154":{"id":"0:36:2154","crate_id":0,"name":"Sealed","span":{"filename":"src/traits.rs","begin":[83,0],"end":[83,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:64","0:65","0:72","0:73","0:80","0:81","0:88","0:89","0:96","0:97"]}},"0:14:1751":{"id":"0:14:1751","crate_id":0,"name":"BitFlags","span":{"filename":"src/traits.rs","begin":[6,0],"end":[73,1]},"visibility":"public","docs":"A trait that is automatically implemented for all bitflags.\n\nIt should not be implemented manually.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:15:2125","0:16:1773","0:17:2129","0:18:1815","0:19:282","0:20:1799","0:21:1821","0:22:1826","0:23:1830","0:24:2016","0:25:780","0:26:2013","0:27:1832","0:28:1834","0:29:1838","0:30:1843","0:31:1845","0:32:1848","0:33:1850","0:34:1903"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ImplementedByBitFlagsMacro","id":"0:35:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:89":{"id":"0:89","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1750","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i64"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4":{"id":"0:4","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[345,0],"end":[345,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"kind":"import","inner":{"source":"traits::BitFlags","name":"BitFlags","id":"0:14:1751","glob":false}},"0:17:2129":{"id":"0:17:2129","crate_id":0,"name":"IterNames","span":{"filename":"src/traits.rs","begin":[14,4],"end":[14,58]},"visibility":"default","docs":"An iterator over the raw names and bits for enabled flags in an instance of the type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7163:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"generic","inner":"Self"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:16:1773":{"id":"0:16:1773","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[11,4],"end":[11,37]},"visibility":"default","docs":"An iterator over enabled flags in an instance of the type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7163:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:27:1832":{"id":"0:27:1832","crate_id":0,"name":"is_empty","span":{"filename":"src/traits.rs","begin":[51,4],"end":[51,31]},"visibility":"default","docs":"Returns `true` if no flags are currently stored.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:19:282":{"id":"0:19:282","crate_id":0,"name":"all","span":{"filename":"src/traits.rs","begin":[20,4],"end":[20,21]},"visibility":"default","docs":"Returns the set containing all flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:29:1838":{"id":"0:29:1838","crate_id":0,"name":"intersects","span":{"filename":"src/traits.rs","begin":[57,4],"end":[57,46]},"visibility":"default","docs":"Returns `true` if there are flags common to both `self` and `other`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:65":{"id":"0:65","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1750","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i8"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:22:1826":{"id":"0:22:1826","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/traits.rs","begin":[33,4],"end":[33,52]},"visibility":"default","docs":"Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:14:1751","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:48:1760":{"id":"0:48:1760","crate_id":0,"name":"bitflags","span":{"filename":"src/lib.rs","begin":[472,0],"end":[543,1]},"visibility":"public","docs":"The macro used to generate the flag structure.\n\nSee the [crate level docs](../bitflags/index.html) for complete documentation.\n\n# Example\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n        const ABC = Self::A.bits() | Self::B.bits() | Self::C.bits();\n    }\n}\n\nfn main() {\n    let e1 = Flags::A | Flags::C;\n    let e2 = Flags::B | Flags::C;\n    assert_eq!((e1 | e2), Flags::ABC);   // union\n    assert_eq!((e1 & e2), Flags::C);     // intersection\n    assert_eq!((e1 - e2), Flags::A);     // set difference\n    assert_eq!(!e2, Flags::A);           // set complement\n}\n```\n\nThe generated `struct`s can also be extended with type and trait\nimplementations:\n\n```\nuse std::fmt;\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n    }\n}\n\nimpl Flags {\n    pub fn clear(&mut self) {\n        *self.0.bits_mut() = 0;\n    }\n}\n\nfn main() {\n    let mut flags = Flags::A | Flags::B;\n\n    flags.clear();\n    assert!(flags.is_empty());\n\n    assert_eq!(format!(\"{:?}\", Flags::A | Flags::B), \"Flags(A | B)\");\n    assert_eq!(format!(\"{:?}\", Flags::B), \"Flags(B)\");\n}\n```","links":{},"attrs":["#[macro_export(local_inner_macros)]"],"deprecation":null,"kind":"macro","inner":"macro_rules! bitflags {\n    (\n        $(#[$outer:meta])*\n        $vis:vis struct $BitFlags:ident: $T:ty {\n            $(\n                $(#[$inner:ident $($args:tt)*])*\n                const $Flag:ident = $value:expr;\n            )*\n        }\n\n        $($t:tt)*\n    ) => { ... };\n    () => { ... };\n}"},"0:25:780":{"id":"0:25:780","crate_id":0,"name":"iter","span":{"filename":"src/traits.rs","begin":[45,4],"end":[45,33]},"visibility":"default","docs":"Iterate over enabled flag values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:14:1751","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:30:1843":{"id":"0:30:1843","crate_id":0,"name":"contains","span":{"filename":"src/traits.rs","begin":[60,4],"end":[60,44]},"visibility":"default","docs":"Returns `true` all of the flags in `other` are contained within `self`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:0:1760":{"id":"0:0:1760","crate_id":0,"name":"bitflags","span":{"filename":"src/lib.rs","begin":[11,0],"end":[1430,1]},"visibility":"public","docs":"A typesafe bitmask flag generator useful for sets of C-style flags.\nIt can be used for creating ergonomic wrappers around C APIs.\n\nThe `bitflags!` macro generates `struct`s that manage a set of flags. The\ntype of those flags must be some primitive integer.\n\n# Examples\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n        const ABC = Self::A.bits() | Self::B.bits() | Self::C.bits();\n    }\n}\n\nfn main() {\n    let e1 = Flags::A | Flags::C;\n    let e2 = Flags::B | Flags::C;\n    assert_eq!((e1 | e2), Flags::ABC);   // union\n    assert_eq!((e1 & e2), Flags::C);     // intersection\n    assert_eq!((e1 - e2), Flags::A);     // set difference\n    assert_eq!(!e2, Flags::A);           // set complement\n}\n```\n\nSee [`example_generated::Flags`](./example_generated/struct.Flags.html) for documentation of code\ngenerated by the above `bitflags!` expansion.\n\n# Visibility\n\nThe `bitflags!` macro supports visibility, just like you'd expect when writing a normal\nRust `struct`:\n\n```\nmod example {\n    use bitflags::bitflags;\n\n    bitflags! {\n        #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n        pub struct Flags1: u32 {\n            const A = 0b00000001;\n        }\n\n        #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n#       pub\n        struct Flags2: u32 {\n            const B = 0b00000010;\n        }\n    }\n}\n\nfn main() {\n    let flag1 = example::Flags1::A;\n    let flag2 = example::Flags2::B; // error: const `B` is private\n}\n```\n\n# Attributes\n\nAttributes can be attached to the generated flags types and their constants as normal.\n\n# Representation\n\nIt's valid to add a `#[repr(C)]` or `#[repr(transparent)]` attribute to a generated flags type.\nThe generated flags type is always guaranteed to be a newtype where its only field has the same\nABI as the underlying integer type.\n\nIn this example, `Flags` has the same ABI as `u32`:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[repr(transparent)]\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n```\n\n# Extending\n\nGenerated flags types belong to you, so you can add trait implementations to them outside\nof what the `bitflags!` macro gives:\n\n```\nuse std::fmt;\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n    }\n}\n\nimpl Flags {\n    pub fn clear(&mut self) {\n        *self.0.bits_mut() = 0;\n    }\n}\n\nfn main() {\n    let mut flags = Flags::A | Flags::B;\n\n    flags.clear();\n    assert!(flags.is_empty());\n\n    assert_eq!(format!(\"{:?}\", Flags::A | Flags::B), \"Flags(A | B)\");\n    assert_eq!(format!(\"{:?}\", Flags::B), \"Flags(B)\");\n}\n```\n\n# What's implemented by `bitflags!`\n\nThe `bitflags!` trait adds some trait implementations and inherent methods\nto generated flags types, but leaves room for you to choose the semantics\nof others.\n\n## Iterators\n\nThe following iterator traits are implemented for generated flags types:\n\n- `Extend`: adds the union of the instances iterated over.\n- `FromIterator`: calculates the union.\n- `IntoIterator`: iterates over set flag values.\n\n## Formatting\n\nThe following formatting traits are implemented for generated flags types:\n\n- `Binary`.\n- `LowerHex` and `UpperHex`.\n- `Octal`.\n\n## Operators\n\nThe following operator traits are implemented for the generated `struct`s:\n\n- `BitOr` and `BitOrAssign`: union\n- `BitAnd` and `BitAndAssign`: intersection\n- `BitXor` and `BitXorAssign`: toggle\n- `Sub` and `SubAssign`: set difference\n- `Not`: set complement\n\n## Methods\n\nThe following methods are defined for the generated `struct`s:\n\n- `empty`: an empty set of flags\n- `all`: the set of all defined flags\n- `bits`: the raw value of the flags currently stored\n- `from_bits`: convert from underlying bit representation, unless that\n               representation contains bits that do not correspond to a\n               defined flag\n- `from_bits_truncate`: convert from underlying bit representation, dropping\n                        any bits that do not correspond to defined flags\n- `from_bits_retain`: convert from underlying bit representation, keeping\n                         all bits (even those not corresponding to defined\n                         flags)\n- `is_empty`: `true` if no flags are currently stored\n- `is_all`: `true` if currently set flags exactly equal all defined flags\n- `intersects`: `true` if there are flags common to both `self` and `other`\n- `contains`: `true` if all of the flags in `other` are contained within `self`\n- `insert`: inserts the specified flags in-place\n- `remove`: removes the specified flags in-place\n- `toggle`: the specified flags will be inserted if not present, and removed\n            if they are.\n- `set`: inserts or removes the specified flags depending on the passed value\n- `intersection`: returns a new set of flags, containing only the flags present\n                  in both `self` and `other` (the argument to the function).\n- `union`: returns a new set of flags, containing any flags present in\n           either `self` or `other` (the argument to the function).\n- `difference`: returns a new set of flags, containing all flags present in\n                `self` without any of the flags present in `other` (the\n                argument to the function).\n- `symmetric_difference`: returns a new set of flags, containing all flags\n                          present in either `self` or `other` (the argument\n                          to the function), but not both.\n- `complement`: returns a new set of flags, containing all flags which are\n                not set in `self`, but which are allowed for this type.\n\n# What's not implemented by `bitflags!`\n\nSome functionality is not automatically implemented for generated flags types\nby the `bitflags!` macro, even when it reasonably could be. This is so callers\nhave more freedom to decide on the semantics of their flags types.\n\n## `Clone` and `Copy`\n\nGenerated flags types are not automatically copyable, even though they can always\nderive both `Clone` and `Copy`.\n\n## `Default`\n\nThe `Default` trait is not automatically implemented for the generated structs.\n\nIf your default value is equal to `0` (which is the same value as calling `empty()`\non the generated struct), you can simply derive `Default`:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    // Results in default value with bits: 0\n    #[derive(Default, Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\nfn main() {\n    let derived_default: Flags = Default::default();\n    assert_eq!(derived_default.bits(), 0);\n}\n```\n\nIf your default value is not equal to `0` you need to implement `Default` yourself:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\n// explicit `Default` implementation\nimpl Default for Flags {\n    fn default() -> Flags {\n        Flags::A | Flags::C\n    }\n}\n\nfn main() {\n    let implemented_default: Flags = Default::default();\n    assert_eq!(implemented_default, (Flags::A | Flags::C));\n}\n```\n\n## `Debug` and `Display`\n\nThe `Debug` trait can be derived for a reasonable implementation.\n\n## `PartialEq` and `PartialOrd`\n\nEquality and ordering can be derived for a reasonable implementation, or implemented manually\nfor different semantics.\n\n# Edge cases\n\n## Zero Flags\n\nFlags with a value equal to zero will have some strange behavior that one should be aware of.\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const NONE = 0b00000000;\n        const SOME = 0b00000001;\n    }\n}\n\nfn main() {\n    let empty = Flags::empty();\n    let none = Flags::NONE;\n    let some = Flags::SOME;\n\n    // Zero flags are treated as always present\n    assert!(empty.contains(Flags::NONE));\n    assert!(none.contains(Flags::NONE));\n    assert!(some.contains(Flags::NONE));\n\n    // Zero flags will be ignored when testing for emptiness\n    assert!(none.is_empty());\n}\n```\n\nUsers should generally avoid defining a flag with a value of zero.\n\n# The `BitFlags` trait\n\nThis library defines a `BitFlags` trait that's implemented by all generated flags types.\nThe trait makes it possible to work with flags types generically:\n\n```\nfn count_unset_flags<F: bitflags::BitFlags>(flags: &F) -> usize {\n    // Find out how many flags there are in total\n    let total = F::all().iter().count();\n\n    // Find out how many flags are set\n    let set = flags.iter().count();\n\n    total - set\n}\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\nassert_eq!(2, count_unset_flags(&Flags::B));\n```","links":{},"attrs":["#![no_std]","#![doc(html_root_url = \"https://docs.rs/bitflags/2.0.0-rc.1\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:4","0:48:1760"],"is_stripped":false}},"0:73":{"id":"0:73","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1750","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i16"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"paths":{"1:48305:5971":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:46891:11437":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:1760:3611":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:8882:14219":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:25263:2916":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:4196:3432":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:54243:20969":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:2848:2119":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:50403:11427":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:2290:124":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:2844:2117":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:50671:14997":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:51064:158":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:48313:2241":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:47185:4410":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:7008:4399":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:58567:725":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"1:10919:14950":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:4347:3283":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:46974:11432":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:20493:2154":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:50990:202":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:7058:2239":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:52082:22520":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:7747:7179":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:46316:2394":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:46981:11433":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:46834:10954":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:2813:2114":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:2482:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:50360:14936":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:47019:11550":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:3314:68":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:2797:2368":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:21823:171":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:53102:22545":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:58569:1453":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"1:7433:4394":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:39390:2168":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1:9585:8818":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:57075:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:3157:134":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:49107:70":{"crate_id":1,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:4726:780":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:2912:2375":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:14:2257":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:2488:147":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:47391:4425":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:46521:200":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:49113:130":{"crate_id":1,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"1:52456:22532":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:50825:14918":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:48423:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:9312:219":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:6437:2266":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:29564:3300":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"0:0:1760":{"crate_id":0,"path":["bitflags"],"kind":"module"},"1:1751:9144":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:58568:1456":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:11725:13171":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:49641:14898":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:9546:8833":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:58557:1360":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:46661:10903":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:50694:14925":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:21235:2945":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:58574:1509":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:54086:20958":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:47014:101":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:20072:31160":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:47577:4382":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:7748:7178":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:58552:1472":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"1:51857:22511":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:11201:14987":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:11746:31203":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:46840:11054":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:2232:97":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:51008:192":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:50856:121":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:53634:22549":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:57049:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:8619:2178":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:29804:30156":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:46433:195":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:6826:3431":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:3152:231":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:20074:31165":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:50236:14942":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:47591:4383":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:21108:2928":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:50154:14938":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:50829:14919":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:9765:8820":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:9751:8815":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:46477:199":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:48110:178":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:48246:190":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:11922:106":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:46543:2383":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:39394:9502":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:50833:14920":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:21955:168":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:57023:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:58572:1452":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:4273:3439":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:11964:202":{"crate_id":1,"path":["core","task","ready","Ready"],"kind":"struct"},"1:47350:4406":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:2923:2376":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:29379:2710":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:49954:8829":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:7440:4397":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:3611:2241":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:2840:2115":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:53992:22554":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:50582:14993":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:46938:10954":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:47237:4415":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:54106:20960":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:3963:10960":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:20469:2154":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:7163:156":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:47145:4401":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:49986:8826":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:47376:4424":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:21790:174":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:53822:22551":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:4327:3441":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:53492:22548":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:7049:149":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:8763:30643":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:47266:4417":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:47308:4420":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:52042:22518":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:46609:30645":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:52242:22525":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:50813:14915":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:20390:29452":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:3142:2385":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:21430:2918":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:9302:2154":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:9478:5971":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:52388:22529":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:49089:67":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:29698:30155":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:2727:2396":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:49967:8825":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:47104:11546":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:3951:10959":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:47205:4412":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:21267:2978":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:1825:3444":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:8629:6112":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:52212:22524":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:57010:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:9454:1773":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:50086:8817":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:8610:111":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:8341:14145":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:21015:2154":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:2579:127":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:8625:191":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:21889:170":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:21416:2921":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:39354:3168":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:47340:4422":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:52609:22536":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:4:991":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:3194:2392":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:223:207":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:50805:14913":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:0:486":{"crate_id":1,"path":["core"],"kind":"module"},"1:20502:29452":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:53946:22553":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:1643:3297":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:49433:30625":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:53744:22550":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:20921:31068":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:0:433":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:8623:2181":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:11712:135":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:52264:22526":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:52410:22530":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:51941:22514":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:50681:14998":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:21291:2917":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:2818:2116":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:48178:5971":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:50503:14988":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:50609:14994":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:20300:2154":{"crate_id":1,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:58551:409":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:58558:1438":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"1:10903:14948":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:52012:22517":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:10954:8833":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:2764:2364":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:20349:29451":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:58550:920":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1:46921:11428":{"crate_id":1,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:21343:3017":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:52480:22533":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:50821:14917":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:6617:4379":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:48254:207":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:11150:14923":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:47195:4411":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:20040:31070":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:8627:2952":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:47031:11640":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:54068:22556":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:51963:22515":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:48228:7176":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:21251:31029":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:20287:29458":{"crate_id":1,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:46967:11431":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:2964:2390":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:2927:2377":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:21442:2922":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:50290:14940":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:2801:2370":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:49402:14221":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:2769:2363":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:29604:3301":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:47246:4416":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:11135:14921":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:11798:13172":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:50394:10954":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:9112:30586":{"crate_id":1,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:46944:11429":{"crate_id":1,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:48537:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:20500:29454":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:2673:223":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:48856:2179":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:2759:2235":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:5852:4427":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:46616:3439":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"1:50714:14926":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:49884:8813":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:52064:22519":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:50369:14945":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:47154:4409":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:20093:31162":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:49941:4400":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:58564:727":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:54141:20963":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:53286:22547":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:7749:7177":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:8621:2180":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:58555:308":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"1:3163:2387":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:51081:15686":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:50466:14984":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:58554:1025":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"1:53026:22543":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:54126:20962":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:51879:22512":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:4192:204":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:47600:4385":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:3079:2384":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:1552:10909":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:54190:20966":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:47275:4404":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:50104:8821":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:47094:11545":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:47124:4400":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:21303:2941":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:52632:22537":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:58576:13":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"1:10297:8832":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:5464:4375":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:10668:8808":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:9779:8816":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:48195:7171":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:48499:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:11091:2914":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:58563:730":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:58575:1099":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:3975:103":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:47633:4393":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:8336:14144":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:8570:131":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:20055:31070":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:29640:30154":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:54282:20970":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:48297:1773":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:47625:4391":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:39403:3278":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:21017:29450":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:50801:14912":{"crate_id":1,"path":["core","str","LinesAnyMap"],"kind":"struct"},"1:2485:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:4679:11544":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:21214:2989":{"crate_id":1,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:57036:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:3231:2393":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:2671:3274":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:51043:15520":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:20757:29476":{"crate_id":1,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:58571:1455":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1:51767:22507":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:2857:2374":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:50837:15431":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:2670:2135":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:9080:30584":{"crate_id":1,"path":["core","slice","sort","insert_head","InsertionHole"],"kind":"struct"},"1:2255:105":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:52712:22538":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:4201:3433":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:54220:20968":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:4124:3429":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:4263:3438":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:12045:15684":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:57088:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:50488:14985":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:7086:120":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:51000:208":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:20752:29453":{"crate_id":1,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:47214:4413":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:48170:1773":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:58565:728":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"1:46417:197":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:52312:22527":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:8847:144":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:22453:2915":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:8833:140":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:6570:12157":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:20095:31164":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:50350:14937":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:2828:2371":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:52434:22531":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:46849:11436":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:21326:3016":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:52531:22534":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:8177:86":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:50308:14941":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:8617:2179":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:4055:3445":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:54095:20959":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:2982:2380":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:3903:10909":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:49815:14561":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:49894:8823":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:47167:4402":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:49140:109":{"crate_id":1,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"1:57062:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:20343:29449":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:51051:15521":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:2806:2120":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:48186:2241":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:2789:2237":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:49645:8838":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:47255:4426":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:49152:127":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:5387:4414":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:11144:14924":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:7436:4396":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:54115:20961":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:50062:14933":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:47289:4418":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:52948:22542":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:20261:29457":{"crate_id":1,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:4700:30738":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:48237:12865":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:10684:8810":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:2494:235":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:51811:22509":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:52101:22521":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:12087:3817":{"crate_id":1,"path":["core","const_closure","ConstFnMutClosure"],"kind":"struct"},"1:21988:169":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:1737:3612":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:52790:22539":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:2491:132":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:38181:180":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:20027:3816":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:22021:166":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:2834:2372":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:58561:630":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:48461:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:47047:11549":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:51911:22513":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:53072:22544":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:21161:2931":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:49394:30651":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:3365:7149":{"crate_id":1,"path":["core","any","Provider"],"kind":"trait"},"1:50817:14916":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:2986:2381":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:2823:2118":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:52358:22528":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:49915:8830":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:54205:20967":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:50030:14931":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:50877:15433":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:54030:22555":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:20909:8811":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:2675:108":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:46457:196":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:52166:22523":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:5631:12124":{"crate_id":1,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:48863:2180":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:11356:111":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:50517:14991":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:8560:6107":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1:11773:189":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:9127:30161":{"crate_id":1,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:20474:29448":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:11155:14922":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"0:48:1760":{"crate_id":0,"path":["bitflags","bitflags"],"kind":"macro"},"1:58556:1330":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"1:48849:2178":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:50660:14996":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:46913:11427":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:52866:22541":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:2740:3280":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:47223:12122":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:51093:15683":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:47606:4387":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:4082:3446":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:21856:2919":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:3179:10493":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:47000:11434":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:7109:2397":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:8615:119":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:4373:3442":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:49174:71":{"crate_id":1,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:2674:222":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:2321:179":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:29598:3020":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:52119:22522":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:2775:2366":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:58573:774":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:51833:22510":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:2327:186":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:49976:8828":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:22054:2920":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:20312:29447":{"crate_id":1,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:54167:20965":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:46960:11430":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:21757:173":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:47325:4421":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:2154:578":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:21318:2996":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:50534:14992":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:21922:167":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:21380:3019":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:49626:14523":{"crate_id":1,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:53884:22552":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:2933:2379":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:48870:2181":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:48689:92":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:3377:7153":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"1:9004:14507":{"crate_id":1,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"1:58384:30644":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:48161:2127":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:48651:85":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:58363:30652":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:20224:29456":{"crate_id":1,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:47299:4419":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:8887:14220":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:2793:2369":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:49210:6111":{"crate_id":1,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:3998:11051":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:50044:14930":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:49875:8812":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:48385:91":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:49996:8827":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:49423:30616":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:58549:367":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1:9737:8819":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:2682:3275":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:9658:8821":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:50340:14935":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:46593:7147":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:49386:14222":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:46901:11438":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:2899:116":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:49904:8824":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:50889:15434":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:4318:3440":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:21409:3018":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:48322:180":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"3:0:2352":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:1636:577":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:47176:4403":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:49122:67":{"crate_id":1,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"1:58570:1454":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"1:48727:3452":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:21364:3008":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:50254:14943":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:49441:30605":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:47615:4389":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:2852:2373":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:6766:3171":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:1919:3614":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:3169:2389":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:29626:67":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:2445:2154":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:2677:225":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:50056:14934":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:9623:8834":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:2565:115":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:46602:30622":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"1:46861:11491":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:21724:172":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:53136:22546":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:2754:2362":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:47584:11857":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:51981:22516":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:2235:98":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:7853:14921":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:20341:2154":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:49411:144":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:38198:3816":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:52578:22535":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:2781:2365":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:50378:14944":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:2498:234":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:46355:2391":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:7045:133":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:11933:15518":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:10880:14951":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:50385:11430":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:2285:185":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:46877:11435":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:9696:8822":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:50809:14914":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:48347:84":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:47361:4423":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:46575:2386":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:9503:8817":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:50646:14995":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:2930:2378":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:10264:8831":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:58566:729":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"1:49866:8814":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:48613:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:50136:14939":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:10843:14949":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:49226:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:48575:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:54152:20964":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:2663:217":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:51787:22508":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:6523:4408":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:52836:22540":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:50072:14932":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:7012:4398":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:21691:175":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:50190:8819":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:56653:29485":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:2446:2709":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:2785:2367":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:46402:2382":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:46499:198":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:58562:631":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:8172:79":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:9094:30589":{"crate_id":1,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:50208:8815":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"}},"external_crates":{"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}